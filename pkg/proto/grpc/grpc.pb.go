// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/grpc.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	grpc/grpc.proto

It has these top-level messages:
	EmptyRequest
	EmptyResponse
	PaymentCreateRequest
	PaymentCreateResponse
	PaymentFormJsonDataRequest
	PaymentFormJsonDataProject
	PaymentFormJsonDataResponse
	PaymentNotifyRequest
	PaymentNotifyResponse
	ConvertRateRequest
	ConvertRateResponse
	OnboardingBanking
	OnboardingRequest
	FindByIdRequest
	MerchantListingRequest
	Merchants
	MerchantChangeStatusRequest
	NotificationRequest
	Notifications
	ListingNotificationRequest
	ListingMerchantPaymentMethod
	GetMerchantPaymentMethodRequest
	ListMerchantPaymentMethodsRequest
	MerchantPaymentMethodRequest
	MerchantPaymentMethodResponse
	MerchantGetMerchantResponse
	GetNotificationRequest
	CreateRefundRequest
	CreateRefundResponse
	ListRefundsRequest
	ListRefundsResponse
	GetRefundRequest
	CallbackRequest
	PaymentFormDataChangedRequest
	PaymentFormUserChangeLangRequest
	PaymentFormUserChangePaymentAccountRequest
	UserIpData
	PaymentFormDataChangeResponseItem
	PaymentFormDataChangeResponse
	ProcessBillingAddressRequest
	ProcessBillingAddressResponseItem
	ProcessBillingAddressResponse
	GetMerchantByRequest
	ChangeMerchantAgreementTypeRequest
	ChangeMerchantAgreementTypeResponse
	Product
	ProductPrice
	ListProductsRequest
	ListProductsResponse
	RequestProduct
	I18NTextSearchable
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import billing "github.com/paysuper/paysuper-billing-server/pkg/proto/billing"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EmptyRequest struct {
}

func (m *EmptyRequest) Reset()                    { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string            { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()               {}
func (*EmptyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type EmptyResponse struct {
}

func (m *EmptyResponse) Reset()                    { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string            { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()               {}
func (*EmptyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PaymentCreateRequest struct {
	Data map[string]string `protobuf:"bytes,1,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PaymentCreateRequest) Reset()                    { *m = PaymentCreateRequest{} }
func (m *PaymentCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*PaymentCreateRequest) ProtoMessage()               {}
func (*PaymentCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PaymentCreateRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type PaymentCreateResponse struct {
	Status      int32  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	RedirectUrl string `protobuf:"bytes,2,opt,name=redirect_url,json=redirectUrl" json:"redirect_url,omitempty"`
	Error       string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *PaymentCreateResponse) Reset()                    { *m = PaymentCreateResponse{} }
func (m *PaymentCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*PaymentCreateResponse) ProtoMessage()               {}
func (*PaymentCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PaymentCreateResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PaymentCreateResponse) GetRedirectUrl() string {
	if m != nil {
		return m.RedirectUrl
	}
	return ""
}

func (m *PaymentCreateResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type PaymentFormJsonDataRequest struct {
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	Scheme  string `protobuf:"bytes,2,opt,name=scheme" json:"scheme,omitempty"`
	Host    string `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	Locale  string `protobuf:"bytes,4,opt,name=locale" json:"locale,omitempty"`
	Ip      string `protobuf:"bytes,5,opt,name=ip" json:"ip,omitempty"`
}

func (m *PaymentFormJsonDataRequest) Reset()                    { *m = PaymentFormJsonDataRequest{} }
func (m *PaymentFormJsonDataRequest) String() string            { return proto.CompactTextString(m) }
func (*PaymentFormJsonDataRequest) ProtoMessage()               {}
func (*PaymentFormJsonDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PaymentFormJsonDataRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type PaymentFormJsonDataProject struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// @inject_tag: json:"url_success,omitempty"
	UrlSuccess string `protobuf:"bytes,2,opt,name=url_success,json=urlSuccess" json:"url_success,omitempty"`
	// @inject_tag: json:"url_fail,omitempty"
	UrlFail string `protobuf:"bytes,3,opt,name=url_fail,json=urlFail" json:"url_fail,omitempty"`
}

func (m *PaymentFormJsonDataProject) Reset()                    { *m = PaymentFormJsonDataProject{} }
func (m *PaymentFormJsonDataProject) String() string            { return proto.CompactTextString(m) }
func (*PaymentFormJsonDataProject) ProtoMessage()               {}
func (*PaymentFormJsonDataProject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PaymentFormJsonDataProject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentFormJsonDataProject) GetUrlSuccess() string {
	if m != nil {
		return m.UrlSuccess
	}
	return ""
}

func (m *PaymentFormJsonDataProject) GetUrlFail() string {
	if m != nil {
		return m.UrlFail
	}
	return ""
}

type PaymentFormJsonDataResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// @inject_tag: json:"account,omitempty"
	Account string `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	// @inject_tag: json:"has_vat"
	HasVat bool `protobuf:"varint,3,opt,name=has_vat,json=hasVat" json:"has_vat"`
	// @inject_tag: json:"vat"
	Vat                   float32                             `protobuf:"fixed32,4,opt,name=vat" json:"vat"`
	Amount                float64                             `protobuf:"fixed64,5,opt,name=amount" json:"amount,omitempty"`
	TotalAmount           float64                             `protobuf:"fixed64,6,opt,name=total_amount,json=totalAmount" json:"total_amount,omitempty"`
	Currency              string                              `protobuf:"bytes,7,opt,name=currency" json:"currency,omitempty"`
	Project               *PaymentFormJsonDataProject         `protobuf:"bytes,8,opt,name=project" json:"project,omitempty"`
	PaymentMethods        []*billing.PaymentFormPaymentMethod `protobuf:"bytes,9,rep,name=payment_methods,json=paymentMethods" json:"payment_methods,omitempty"`
	InlineFormRedirectUrl string                              `protobuf:"bytes,10,opt,name=inline_form_redirect_url,json=inlineFormRedirectUrl" json:"inline_form_redirect_url,omitempty"`
	Token                 string                              `protobuf:"bytes,11,opt,name=token" json:"token,omitempty"`
	// @inject_tag: json:"user_address_data_required"
	UserAddressDataRequired bool `protobuf:"varint,12,opt,name=user_address_data_required,json=userAddressDataRequired" json:"user_address_data_required"`
}

func (m *PaymentFormJsonDataResponse) Reset()                    { *m = PaymentFormJsonDataResponse{} }
func (m *PaymentFormJsonDataResponse) String() string            { return proto.CompactTextString(m) }
func (*PaymentFormJsonDataResponse) ProtoMessage()               {}
func (*PaymentFormJsonDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PaymentFormJsonDataResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentFormJsonDataResponse) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *PaymentFormJsonDataResponse) GetHasVat() bool {
	if m != nil {
		return m.HasVat
	}
	return false
}

func (m *PaymentFormJsonDataResponse) GetVat() float32 {
	if m != nil {
		return m.Vat
	}
	return 0
}

func (m *PaymentFormJsonDataResponse) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PaymentFormJsonDataResponse) GetTotalAmount() float64 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

func (m *PaymentFormJsonDataResponse) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *PaymentFormJsonDataResponse) GetProject() *PaymentFormJsonDataProject {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *PaymentFormJsonDataResponse) GetPaymentMethods() []*billing.PaymentFormPaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

func (m *PaymentFormJsonDataResponse) GetInlineFormRedirectUrl() string {
	if m != nil {
		return m.InlineFormRedirectUrl
	}
	return ""
}

func (m *PaymentFormJsonDataResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PaymentFormJsonDataResponse) GetUserAddressDataRequired() bool {
	if m != nil {
		return m.UserAddressDataRequired
	}
	return false
}

type PaymentNotifyRequest struct {
	OrderId   string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	Request   []byte `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
}

func (m *PaymentNotifyRequest) Reset()                    { *m = PaymentNotifyRequest{} }
func (m *PaymentNotifyRequest) String() string            { return proto.CompactTextString(m) }
func (*PaymentNotifyRequest) ProtoMessage()               {}
func (*PaymentNotifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PaymentNotifyRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PaymentNotifyRequest) GetRequest() []byte {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *PaymentNotifyRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type PaymentNotifyResponse struct {
	Status int32  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *PaymentNotifyResponse) Reset()                    { *m = PaymentNotifyResponse{} }
func (m *PaymentNotifyResponse) String() string            { return proto.CompactTextString(m) }
func (*PaymentNotifyResponse) ProtoMessage()               {}
func (*PaymentNotifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PaymentNotifyResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PaymentNotifyResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ConvertRateRequest struct {
	From int32 `protobuf:"varint,1,opt,name=from" json:"from,omitempty"`
	To   int32 `protobuf:"varint,2,opt,name=to" json:"to,omitempty"`
}

func (m *ConvertRateRequest) Reset()                    { *m = ConvertRateRequest{} }
func (m *ConvertRateRequest) String() string            { return proto.CompactTextString(m) }
func (*ConvertRateRequest) ProtoMessage()               {}
func (*ConvertRateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ConvertRateRequest) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *ConvertRateRequest) GetTo() int32 {
	if m != nil {
		return m.To
	}
	return 0
}

type ConvertRateResponse struct {
	Rate float64 `protobuf:"fixed64,1,opt,name=rate" json:"rate,omitempty"`
}

func (m *ConvertRateResponse) Reset()                    { *m = ConvertRateResponse{} }
func (m *ConvertRateResponse) String() string            { return proto.CompactTextString(m) }
func (*ConvertRateResponse) ProtoMessage()               {}
func (*ConvertRateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ConvertRateResponse) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type OnboardingBanking struct {
	// @inject_tag: validate:"omitempty,len=3"
	Currency      string `protobuf:"bytes,1,opt,name=currency" json:"currency,omitempty" validate:"omitempty,len=3"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Address       string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	AccountNumber string `protobuf:"bytes,4,opt,name=account_number,json=accountNumber" json:"account_number,omitempty"`
	Swift         string `protobuf:"bytes,5,opt,name=swift" json:"swift,omitempty"`
	Details       string `protobuf:"bytes,6,opt,name=details" json:"details,omitempty"`
}

func (m *OnboardingBanking) Reset()                    { *m = OnboardingBanking{} }
func (m *OnboardingBanking) String() string            { return proto.CompactTextString(m) }
func (*OnboardingBanking) ProtoMessage()               {}
func (*OnboardingBanking) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *OnboardingBanking) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OnboardingBanking) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OnboardingBanking) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *OnboardingBanking) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *OnboardingBanking) GetSwift() string {
	if m != nil {
		return m.Swift
	}
	return ""
}

func (m *OnboardingBanking) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

type OnboardingRequest struct {
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: validate:"required"
	User            *billing.MerchantUser `protobuf:"bytes,2,opt,name=user" json:"user,omitempty" validate:"required"`
	Name            string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	AlternativeName string                `protobuf:"bytes,4,opt,name=alternative_name,json=alternativeName" json:"alternative_name,omitempty"`
	Website         string                `protobuf:"bytes,5,opt,name=website" json:"website,omitempty"`
	// @inject_tag: validate:"omitempty,len=2"
	Country            string `protobuf:"bytes,6,opt,name=country" json:"country,omitempty" validate:"omitempty,len=2"`
	State              string `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Zip                string `protobuf:"bytes,8,opt,name=zip" json:"zip,omitempty"`
	City               string `protobuf:"bytes,9,opt,name=city" json:"city,omitempty"`
	Address            string `protobuf:"bytes,10,opt,name=address" json:"address,omitempty"`
	AddressAdditional  string `protobuf:"bytes,11,opt,name=address_additional,json=addressAdditional" json:"address_additional,omitempty"`
	RegistrationNumber string `protobuf:"bytes,12,opt,name=registration_number,json=registrationNumber" json:"registration_number,omitempty"`
	TaxId              string `protobuf:"bytes,13,opt,name=tax_id,json=taxId" json:"tax_id,omitempty"`
	// @inject_tag: validate:"required"
	Contacts *billing.MerchantContact `protobuf:"bytes,14,opt,name=contacts" json:"contacts,omitempty" validate:"required"`
	// @inject_tag: validate:"required"
	Banking *OnboardingBanking `protobuf:"bytes,15,opt,name=banking" json:"banking,omitempty" validate:"required"`
}

func (m *OnboardingRequest) Reset()                    { *m = OnboardingRequest{} }
func (m *OnboardingRequest) String() string            { return proto.CompactTextString(m) }
func (*OnboardingRequest) ProtoMessage()               {}
func (*OnboardingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *OnboardingRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OnboardingRequest) GetUser() *billing.MerchantUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *OnboardingRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OnboardingRequest) GetAlternativeName() string {
	if m != nil {
		return m.AlternativeName
	}
	return ""
}

func (m *OnboardingRequest) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *OnboardingRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *OnboardingRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *OnboardingRequest) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *OnboardingRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *OnboardingRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *OnboardingRequest) GetAddressAdditional() string {
	if m != nil {
		return m.AddressAdditional
	}
	return ""
}

func (m *OnboardingRequest) GetRegistrationNumber() string {
	if m != nil {
		return m.RegistrationNumber
	}
	return ""
}

func (m *OnboardingRequest) GetTaxId() string {
	if m != nil {
		return m.TaxId
	}
	return ""
}

func (m *OnboardingRequest) GetContacts() *billing.MerchantContact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *OnboardingRequest) GetBanking() *OnboardingBanking {
	if m != nil {
		return m.Banking
	}
	return nil
}

type FindByIdRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *FindByIdRequest) Reset()                    { *m = FindByIdRequest{} }
func (m *FindByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FindByIdRequest) ProtoMessage()               {}
func (*FindByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *FindByIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MerchantListingRequest struct {
	Name               string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	IsSigned           int32    `protobuf:"varint,2,opt,name=is_signed,json=isSigned" json:"is_signed,omitempty"`
	LastPayoutDateFrom int64    `protobuf:"varint,3,opt,name=last_payout_date_from,json=lastPayoutDateFrom" json:"last_payout_date_from,omitempty"`
	LastPayoutDateTo   int64    `protobuf:"varint,4,opt,name=last_payout_date_to,json=lastPayoutDateTo" json:"last_payout_date_to,omitempty"`
	LastPayoutAmount   float64  `protobuf:"fixed64,5,opt,name=last_payout_amount,json=lastPayoutAmount" json:"last_payout_amount,omitempty"`
	Sort               []string `protobuf:"bytes,6,rep,name=sort" json:"sort,omitempty"`
	Limit              int32    `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	Offset             int32    `protobuf:"varint,8,opt,name=offset" json:"offset,omitempty"`
	QuickSearch        string   `protobuf:"bytes,9,opt,name=quick_search,json=quickSearch" json:"quick_search,omitempty"`
}

func (m *MerchantListingRequest) Reset()                    { *m = MerchantListingRequest{} }
func (m *MerchantListingRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantListingRequest) ProtoMessage()               {}
func (*MerchantListingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *MerchantListingRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantListingRequest) GetIsSigned() int32 {
	if m != nil {
		return m.IsSigned
	}
	return 0
}

func (m *MerchantListingRequest) GetLastPayoutDateFrom() int64 {
	if m != nil {
		return m.LastPayoutDateFrom
	}
	return 0
}

func (m *MerchantListingRequest) GetLastPayoutDateTo() int64 {
	if m != nil {
		return m.LastPayoutDateTo
	}
	return 0
}

func (m *MerchantListingRequest) GetLastPayoutAmount() float64 {
	if m != nil {
		return m.LastPayoutAmount
	}
	return 0
}

func (m *MerchantListingRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *MerchantListingRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *MerchantListingRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *MerchantListingRequest) GetQuickSearch() string {
	if m != nil {
		return m.QuickSearch
	}
	return ""
}

type Merchants struct {
	Merchants []*billing.Merchant `protobuf:"bytes,1,rep,name=merchants" json:"merchants,omitempty"`
}

func (m *Merchants) Reset()                    { *m = Merchants{} }
func (m *Merchants) String() string            { return proto.CompactTextString(m) }
func (*Merchants) ProtoMessage()               {}
func (*Merchants) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Merchants) GetMerchants() []*billing.Merchant {
	if m != nil {
		return m.Merchants
	}
	return nil
}

type MerchantChangeStatusRequest struct {
	// @inject_tag: validate:"required,hexadecimal"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// @inject_tag: validate:"required,numeric"
	Status  int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty" validate:"required,numeric"`
	Message string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
}

func (m *MerchantChangeStatusRequest) Reset()                    { *m = MerchantChangeStatusRequest{} }
func (m *MerchantChangeStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantChangeStatusRequest) ProtoMessage()               {}
func (*MerchantChangeStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *MerchantChangeStatusRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *MerchantChangeStatusRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *MerchantChangeStatusRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MerchantChangeStatusRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type NotificationRequest struct {
	// @inject_tag: validate:"required,hexadecimal"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// @inject_tag: validate:"required"
	Title string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty" validate:"required"`
	// @inject_tag: validate:"required"
	Message string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty" validate:"required"`
}

func (m *NotificationRequest) Reset()                    { *m = NotificationRequest{} }
func (m *NotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*NotificationRequest) ProtoMessage()               {}
func (*NotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *NotificationRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *NotificationRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *NotificationRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NotificationRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Notifications struct {
	Notifications []*billing.Notification `protobuf:"bytes,1,rep,name=notifications" json:"notifications,omitempty"`
}

func (m *Notifications) Reset()                    { *m = Notifications{} }
func (m *Notifications) String() string            { return proto.CompactTextString(m) }
func (*Notifications) ProtoMessage()               {}
func (*Notifications) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Notifications) GetNotifications() []*billing.Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

type ListingNotificationRequest struct {
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Limit      int32  `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	Offset     int32  `protobuf:"varint,8,opt,name=offset" json:"offset,omitempty"`
}

func (m *ListingNotificationRequest) Reset()                    { *m = ListingNotificationRequest{} }
func (m *ListingNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*ListingNotificationRequest) ProtoMessage()               {}
func (*ListingNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ListingNotificationRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ListingNotificationRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ListingNotificationRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListingNotificationRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ListingMerchantPaymentMethod struct {
	PaymentMethods []*billing.MerchantPaymentMethod `protobuf:"bytes,1,rep,name=payment_methods,json=paymentMethods" json:"payment_methods,omitempty"`
}

func (m *ListingMerchantPaymentMethod) Reset()                    { *m = ListingMerchantPaymentMethod{} }
func (m *ListingMerchantPaymentMethod) String() string            { return proto.CompactTextString(m) }
func (*ListingMerchantPaymentMethod) ProtoMessage()               {}
func (*ListingMerchantPaymentMethod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ListingMerchantPaymentMethod) GetPaymentMethods() []*billing.MerchantPaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

type GetMerchantPaymentMethodRequest struct {
	// @inject_tag: query:"merchant_id", validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" query:"merchant_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"payment_method_id", validate:"required,hexadecimal,len=24"
	PaymentMethodId string `protobuf:"bytes,2,opt,name=payment_method_id,json=paymentMethodId" json:"payment_method_id,omitempty" query:"payment_method_id" validate:"required,hexadecimal,len=24"`
}

func (m *GetMerchantPaymentMethodRequest) Reset()         { *m = GetMerchantPaymentMethodRequest{} }
func (m *GetMerchantPaymentMethodRequest) String() string { return proto.CompactTextString(m) }
func (*GetMerchantPaymentMethodRequest) ProtoMessage()    {}
func (*GetMerchantPaymentMethodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{21}
}

func (m *GetMerchantPaymentMethodRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetMerchantPaymentMethodRequest) GetPaymentMethodId() string {
	if m != nil {
		return m.PaymentMethodId
	}
	return ""
}

type ListMerchantPaymentMethodsRequest struct {
	// @inject_tag: query:"merchant_id", validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" query:"merchant_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"payment_method_name"
	PaymentMethodName string `protobuf:"bytes,2,opt,name=payment_method_name,json=paymentMethodName" json:"payment_method_name,omitempty" query:"payment_method_name"`
}

func (m *ListMerchantPaymentMethodsRequest) Reset()         { *m = ListMerchantPaymentMethodsRequest{} }
func (m *ListMerchantPaymentMethodsRequest) String() string { return proto.CompactTextString(m) }
func (*ListMerchantPaymentMethodsRequest) ProtoMessage()    {}
func (*ListMerchantPaymentMethodsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22}
}

func (m *ListMerchantPaymentMethodsRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ListMerchantPaymentMethodsRequest) GetPaymentMethodName() string {
	if m != nil {
		return m.PaymentMethodName
	}
	return ""
}

type MerchantPaymentMethodRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,dive"
	PaymentMethod *billing.MerchantPaymentMethodIdentification `protobuf:"bytes,3,opt,name=payment_method,json=paymentMethod" json:"payment_method,omitempty" validate:"required,dive"`
	// @inject_tag: validate:"required,dive"
	Commission *billing.MerchantPaymentMethodCommissions `protobuf:"bytes,4,opt,name=commission" json:"commission,omitempty" validate:"required,dive"`
	// @inject_tag: validate:"required,dive"
	Integration *billing.MerchantPaymentMethodIntegration `protobuf:"bytes,5,opt,name=integration" json:"integration,omitempty" validate:"required,dive"`
	// @inject_tag: validate:"required"
	IsActive bool `protobuf:"varint,6,opt,name=is_active,json=isActive" json:"is_active,omitempty" validate:"required"`
}

func (m *MerchantPaymentMethodRequest) Reset()                    { *m = MerchantPaymentMethodRequest{} }
func (m *MerchantPaymentMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodRequest) ProtoMessage()               {}
func (*MerchantPaymentMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *MerchantPaymentMethodRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *MerchantPaymentMethodRequest) GetPaymentMethod() *billing.MerchantPaymentMethodIdentification {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *MerchantPaymentMethodRequest) GetCommission() *billing.MerchantPaymentMethodCommissions {
	if m != nil {
		return m.Commission
	}
	return nil
}

func (m *MerchantPaymentMethodRequest) GetIntegration() *billing.MerchantPaymentMethodIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

func (m *MerchantPaymentMethodRequest) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type MerchantPaymentMethodResponse struct {
	Status  int32                          `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message string                         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.MerchantPaymentMethod `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *MerchantPaymentMethodResponse) Reset()                    { *m = MerchantPaymentMethodResponse{} }
func (m *MerchantPaymentMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodResponse) ProtoMessage()               {}
func (*MerchantPaymentMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *MerchantPaymentMethodResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MerchantPaymentMethodResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MerchantPaymentMethodResponse) GetItem() *billing.MerchantPaymentMethod {
	if m != nil {
		return m.Item
	}
	return nil
}

type MerchantGetMerchantResponse struct {
	Status  int32             `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Merchant `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *MerchantGetMerchantResponse) Reset()                    { *m = MerchantGetMerchantResponse{} }
func (m *MerchantGetMerchantResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantGetMerchantResponse) ProtoMessage()               {}
func (*MerchantGetMerchantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *MerchantGetMerchantResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MerchantGetMerchantResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MerchantGetMerchantResponse) GetItem() *billing.Merchant {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetNotificationRequest struct {
	MerchantId     string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty"`
	NotificationId string `protobuf:"bytes,2,opt,name=notification_id,json=notificationId" json:"notification_id,omitempty"`
}

func (m *GetNotificationRequest) Reset()                    { *m = GetNotificationRequest{} }
func (m *GetNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetNotificationRequest) ProtoMessage()               {}
func (*GetNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *GetNotificationRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetNotificationRequest) GetNotificationId() string {
	if m != nil {
		return m.NotificationId
	}
	return ""
}

type CreateRefundRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,numeric,gt=0"
	Amount    float64 `protobuf:"fixed64,2,opt,name=amount" json:"amount,omitempty" validate:"required,numeric,gt=0"`
	CreatorId string  `protobuf:"bytes,3,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	Reason    string  `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
}

func (m *CreateRefundRequest) Reset()                    { *m = CreateRefundRequest{} }
func (m *CreateRefundRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRefundRequest) ProtoMessage()               {}
func (*CreateRefundRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *CreateRefundRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *CreateRefundRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreateRefundRequest) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

func (m *CreateRefundRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type CreateRefundResponse struct {
	Status  int32           `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Refund `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *CreateRefundResponse) Reset()                    { *m = CreateRefundResponse{} }
func (m *CreateRefundResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateRefundResponse) ProtoMessage()               {}
func (*CreateRefundResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *CreateRefundResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CreateRefundResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateRefundResponse) GetItem() *billing.Refund {
	if m != nil {
		return m.Item
	}
	return nil
}

type ListRefundsRequest struct {
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	Limit   int32  `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	Offset  int32  `protobuf:"varint,8,opt,name=offset" json:"offset,omitempty"`
}

func (m *ListRefundsRequest) Reset()                    { *m = ListRefundsRequest{} }
func (m *ListRefundsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRefundsRequest) ProtoMessage()               {}
func (*ListRefundsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *ListRefundsRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ListRefundsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRefundsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ListRefundsResponse struct {
	Count int32             `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Items []*billing.Refund `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *ListRefundsResponse) Reset()                    { *m = ListRefundsResponse{} }
func (m *ListRefundsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListRefundsResponse) ProtoMessage()               {}
func (*ListRefundsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ListRefundsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListRefundsResponse) GetItems() []*billing.Refund {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetRefundRequest struct {
	OrderId  string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	RefundId string `protobuf:"bytes,2,opt,name=refund_id,json=refundId" json:"refund_id,omitempty"`
}

func (m *GetRefundRequest) Reset()                    { *m = GetRefundRequest{} }
func (m *GetRefundRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRefundRequest) ProtoMessage()               {}
func (*GetRefundRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *GetRefundRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *GetRefundRequest) GetRefundId() string {
	if m != nil {
		return m.RefundId
	}
	return ""
}

type CallbackRequest struct {
	Handler   string `protobuf:"bytes,1,opt,name=handler" json:"handler,omitempty"`
	Body      []byte `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
}

func (m *CallbackRequest) Reset()                    { *m = CallbackRequest{} }
func (m *CallbackRequest) String() string            { return proto.CompactTextString(m) }
func (*CallbackRequest) ProtoMessage()               {}
func (*CallbackRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *CallbackRequest) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

func (m *CallbackRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *CallbackRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type PaymentFormDataChangedRequest struct {
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	Lang    string `protobuf:"bytes,2,opt,name=lang" json:"lang,omitempty"`
	Account string `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
}

func (m *PaymentFormDataChangedRequest) Reset()                    { *m = PaymentFormDataChangedRequest{} }
func (m *PaymentFormDataChangedRequest) String() string            { return proto.CompactTextString(m) }
func (*PaymentFormDataChangedRequest) ProtoMessage()               {}
func (*PaymentFormDataChangedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *PaymentFormDataChangedRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PaymentFormDataChangedRequest) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *PaymentFormDataChangedRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

type PaymentFormUserChangeLangRequest struct {
	// @inject_tag: validate:"required,uuid"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid"`
	// @inject_tag: validate:"required,len=2"
	Lang string `protobuf:"bytes,2,opt,name=lang" json:"lang,omitempty" validate:"required,len=2"`
}

func (m *PaymentFormUserChangeLangRequest) Reset()         { *m = PaymentFormUserChangeLangRequest{} }
func (m *PaymentFormUserChangeLangRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentFormUserChangeLangRequest) ProtoMessage()    {}
func (*PaymentFormUserChangeLangRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{34}
}

func (m *PaymentFormUserChangeLangRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PaymentFormUserChangeLangRequest) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

type PaymentFormUserChangePaymentAccountRequest struct {
	// @inject_tag: validate:"required,uuid"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MethodId string `protobuf:"bytes,2,opt,name=method_id,json=methodId" json:"method_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required"
	Account string `protobuf:"bytes,3,opt,name=account" json:"account,omitempty" validate:"required"`
}

func (m *PaymentFormUserChangePaymentAccountRequest) Reset() {
	*m = PaymentFormUserChangePaymentAccountRequest{}
}
func (m *PaymentFormUserChangePaymentAccountRequest) String() string {
	return proto.CompactTextString(m)
}
func (*PaymentFormUserChangePaymentAccountRequest) ProtoMessage() {}
func (*PaymentFormUserChangePaymentAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{35}
}

func (m *PaymentFormUserChangePaymentAccountRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PaymentFormUserChangePaymentAccountRequest) GetMethodId() string {
	if m != nil {
		return m.MethodId
	}
	return ""
}

func (m *PaymentFormUserChangePaymentAccountRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

type UserIpData struct {
	// @inject_tag: json:"country"
	Country string `protobuf:"bytes,1,opt,name=country" json:"country"`
	// @inject_tag: json:"city"
	City string `protobuf:"bytes,2,opt,name=city" json:"city"`
	// @inject_tag: json:"zip"
	Zip string `protobuf:"bytes,3,opt,name=zip" json:"zip"`
}

func (m *UserIpData) Reset()                    { *m = UserIpData{} }
func (m *UserIpData) String() string            { return proto.CompactTextString(m) }
func (*UserIpData) ProtoMessage()               {}
func (*UserIpData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *UserIpData) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *UserIpData) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *UserIpData) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

type PaymentFormDataChangeResponseItem struct {
	// @inject_tag: json:"user_address_data_required"
	UserAddressDataRequired bool        `protobuf:"varint,1,opt,name=user_address_data_required,json=userAddressDataRequired" json:"user_address_data_required"`
	UserIpData              *UserIpData `protobuf:"bytes,2,opt,name=user_ip_data,json=userIpData" json:"user_ip_data,omitempty"`
}

func (m *PaymentFormDataChangeResponseItem) Reset()         { *m = PaymentFormDataChangeResponseItem{} }
func (m *PaymentFormDataChangeResponseItem) String() string { return proto.CompactTextString(m) }
func (*PaymentFormDataChangeResponseItem) ProtoMessage()    {}
func (*PaymentFormDataChangeResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{37}
}

func (m *PaymentFormDataChangeResponseItem) GetUserAddressDataRequired() bool {
	if m != nil {
		return m.UserAddressDataRequired
	}
	return false
}

func (m *PaymentFormDataChangeResponseItem) GetUserIpData() *UserIpData {
	if m != nil {
		return m.UserIpData
	}
	return nil
}

type PaymentFormDataChangeResponse struct {
	Status  int32                              `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message string                             `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *PaymentFormDataChangeResponseItem `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *PaymentFormDataChangeResponse) Reset()                    { *m = PaymentFormDataChangeResponse{} }
func (m *PaymentFormDataChangeResponse) String() string            { return proto.CompactTextString(m) }
func (*PaymentFormDataChangeResponse) ProtoMessage()               {}
func (*PaymentFormDataChangeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *PaymentFormDataChangeResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PaymentFormDataChangeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PaymentFormDataChangeResponse) GetItem() *PaymentFormDataChangeResponseItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type ProcessBillingAddressRequest struct {
	// @inject_tag: validate:"required,uuid"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid"`
	// @inject_tag: validate:"required,len=2"
	Country string `protobuf:"bytes,2,opt,name=country" json:"country,omitempty" validate:"required,len=2"`
	// @inject_tag: validate:"required"
	City string `protobuf:"bytes,3,opt,name=city" json:"city,omitempty" validate:"required"`
	// @inject_tag: validate:"required"
	Zip string `protobuf:"bytes,4,opt,name=zip" json:"zip,omitempty" validate:"required"`
}

func (m *ProcessBillingAddressRequest) Reset()                    { *m = ProcessBillingAddressRequest{} }
func (m *ProcessBillingAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*ProcessBillingAddressRequest) ProtoMessage()               {}
func (*ProcessBillingAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *ProcessBillingAddressRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ProcessBillingAddressRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *ProcessBillingAddressRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *ProcessBillingAddressRequest) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

type ProcessBillingAddressResponseItem struct {
	// @inject_tag: json:"has_vat"
	HasVat bool `protobuf:"varint,2,opt,name=has_vat,json=hasVat" json:"has_vat"`
	// @inject_tag: json:"vat"
	Vat float32 `protobuf:"fixed32,3,opt,name=vat" json:"vat"`
	// @inject_tag: json:"amount"
	Amount float32 `protobuf:"fixed32,4,opt,name=amount" json:"amount"`
	// @inject_tag: json:"total_amount"
	TotalAmount float32 `protobuf:"fixed32,5,opt,name=total_amount,json=totalAmount" json:"total_amount"`
}

func (m *ProcessBillingAddressResponseItem) Reset()         { *m = ProcessBillingAddressResponseItem{} }
func (m *ProcessBillingAddressResponseItem) String() string { return proto.CompactTextString(m) }
func (*ProcessBillingAddressResponseItem) ProtoMessage()    {}
func (*ProcessBillingAddressResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{40}
}

func (m *ProcessBillingAddressResponseItem) GetHasVat() bool {
	if m != nil {
		return m.HasVat
	}
	return false
}

func (m *ProcessBillingAddressResponseItem) GetVat() float32 {
	if m != nil {
		return m.Vat
	}
	return 0
}

func (m *ProcessBillingAddressResponseItem) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ProcessBillingAddressResponseItem) GetTotalAmount() float32 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

type ProcessBillingAddressResponse struct {
	Status  int32                              `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message string                             `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *ProcessBillingAddressResponseItem `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *ProcessBillingAddressResponse) Reset()                    { *m = ProcessBillingAddressResponse{} }
func (m *ProcessBillingAddressResponse) String() string            { return proto.CompactTextString(m) }
func (*ProcessBillingAddressResponse) ProtoMessage()               {}
func (*ProcessBillingAddressResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *ProcessBillingAddressResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ProcessBillingAddressResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ProcessBillingAddressResponse) GetItem() *ProcessBillingAddressResponseItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetMerchantByRequest struct {
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetMerchantByRequest) Reset()                    { *m = GetMerchantByRequest{} }
func (m *GetMerchantByRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantByRequest) ProtoMessage()               {}
func (*GetMerchantByRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *GetMerchantByRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetMerchantByRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ChangeMerchantAgreementTypeRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,numeric,oneof=1 2"
	AgreementType int32 `protobuf:"varint,2,opt,name=agreement_type,json=agreementType" json:"agreement_type,omitempty" validate:"required,numeric,oneof=1 2"`
}

func (m *ChangeMerchantAgreementTypeRequest) Reset()         { *m = ChangeMerchantAgreementTypeRequest{} }
func (m *ChangeMerchantAgreementTypeRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeMerchantAgreementTypeRequest) ProtoMessage()    {}
func (*ChangeMerchantAgreementTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{43}
}

func (m *ChangeMerchantAgreementTypeRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ChangeMerchantAgreementTypeRequest) GetAgreementType() int32 {
	if m != nil {
		return m.AgreementType
	}
	return 0
}

type ChangeMerchantAgreementTypeResponse struct {
	Status  int32             `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Merchant `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *ChangeMerchantAgreementTypeResponse) Reset()         { *m = ChangeMerchantAgreementTypeResponse{} }
func (m *ChangeMerchantAgreementTypeResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeMerchantAgreementTypeResponse) ProtoMessage()    {}
func (*ChangeMerchantAgreementTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{44}
}

func (m *ChangeMerchantAgreementTypeResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ChangeMerchantAgreementTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ChangeMerchantAgreementTypeResponse) GetItem() *billing.Merchant {
	if m != nil {
		return m.Item
	}
	return nil
}

type Product struct {
	// @inject_tag: validate:"omitempty,hexadecimal,len=24" json:"id" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id" validate:"omitempty,hexadecimal,len=24" bson:"_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"-" bson:"merchant_id"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"-" validate:"required,hexadecimal,len=24" bson:"merchant_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"project_id" bson:"project_id"
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId" json:"project_id" validate:"required,hexadecimal,len=24" bson:"project_id"`
	// @inject_tag: validate:"required" json:"object"
	Object string `protobuf:"bytes,4,opt,name=object" json:"object" validate:"required"`
	// @inject_tag: validate:"required" json:"type"
	Type string `protobuf:"bytes,5,opt,name=type" json:"type" validate:"required"`
	// @inject_tag: validate:"required" json:"sku" bson:"sku"
	Sku string `protobuf:"bytes,6,opt,name=sku" json:"sku" validate:"required" bson:"sku"`
	// @inject_tag: validate:"required" json:"name"
	Name map[string]string `protobuf:"bytes,7,rep,name=name" json:"name" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validate:"required"`
	// @inject_tag: validate:"required,alpha,len=3" json:"default_currency"
	DefaultCurrency string `protobuf:"bytes,8,opt,name=default_currency,json=defaultCurrency" json:"default_currency" validate:"required,alpha,len=3"`
	// @inject_tag: validate:"required" json:"enabled"
	Enabled bool `protobuf:"varint,9,opt,name=enabled" json:"enabled" validate:"required"`
	// @inject_tag: validate:"required,min=1,dive" json:"prices"
	Prices []*ProductPrice `protobuf:"bytes,10,rep,name=prices" json:"prices" validate:"required,min=1,dive"`
	// @inject_tag: validate:"required" json:"description"
	Description map[string]string `protobuf:"bytes,11,rep,name=description" json:"description" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validate:"required"`
	// @inject_tag: validate:"omitempty" json:"long_description"
	LongDescription map[string]string `protobuf:"bytes,12,rep,name=long_description,json=longDescription" json:"long_description" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validate:"omitempty"`
	// @inject_tag: json:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt" json:"created_at"`
	// @inject_tag: json:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt" json:"updated_at"`
	// @inject_tag: validate:"dive,omitempty,uri" json:"images"
	Images []string `protobuf:"bytes,15,rep,name=images" json:"images" validate:"dive,omitempty,uri"`
	// @inject_tag: validate:"omitempty,url" json:"url"
	Url string `protobuf:"bytes,16,opt,name=url" json:"url" validate:"omitempty,url"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,17,rep,name=metadata" json:"metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// @inject_tag: json:"-" bson:"deleted"
	Deleted bool `protobuf:"varint,18,opt,name=deleted" json:"-" bson:"deleted"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *Product) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *Product) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *Product) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Product) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *Product) GetName() map[string]string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Product) GetDefaultCurrency() string {
	if m != nil {
		return m.DefaultCurrency
	}
	return ""
}

func (m *Product) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Product) GetPrices() []*ProductPrice {
	if m != nil {
		return m.Prices
	}
	return nil
}

func (m *Product) GetDescription() map[string]string {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Product) GetLongDescription() map[string]string {
	if m != nil {
		return m.LongDescription
	}
	return nil
}

func (m *Product) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Product) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Product) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Product) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Product) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Product) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

type ProductPrice struct {
	// @inject_tag: validate:"required,numeric,gt=0" json:"amount"
	Amount float32 `protobuf:"fixed32,1,opt,name=amount" json:"amount" validate:"required,numeric,gt=0"`
	// @inject_tag: validate:"required,alpha,len=3" json:"currency"
	Currency string `protobuf:"bytes,2,opt,name=currency" json:"currency" validate:"required,alpha,len=3"`
}

func (m *ProductPrice) Reset()                    { *m = ProductPrice{} }
func (m *ProductPrice) String() string            { return proto.CompactTextString(m) }
func (*ProductPrice) ProtoMessage()               {}
func (*ProductPrice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *ProductPrice) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ProductPrice) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type ListProductsRequest struct {
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name" json:"name"`
	// @inject_tag: json:"sku"
	Sku string `protobuf:"bytes,2,opt,name=sku" json:"sku"`
	// @inject_tag: validate:"required,numeric,gt=0" json:"limit"
	Limit int32 `protobuf:"varint,3,opt,name=limit" json:"limit" validate:"required,numeric,gt=0"`
	// @inject_tag: validate:"omitempty,numeric,gte=0" json:"offset"
	Offset int32 `protobuf:"varint,4,opt,name=offset" json:"offset" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"merchant_id" bson:"merchant_id"
	MerchantId string `protobuf:"bytes,5,opt,name=merchant_id,json=merchantId" json:"merchant_id" validate:"required,hexadecimal,len=24" bson:"merchant_id"`
	// @inject_tag: validate:"omitempty,hexadecimal,len=24" json:"project_id" bson:"project_id"
	ProjectId string `protobuf:"bytes,6,opt,name=project_id,json=projectId" json:"project_id" validate:"omitempty,hexadecimal,len=24" bson:"project_id"`
}

func (m *ListProductsRequest) Reset()                    { *m = ListProductsRequest{} }
func (m *ListProductsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListProductsRequest) ProtoMessage()               {}
func (*ListProductsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *ListProductsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListProductsRequest) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *ListProductsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListProductsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListProductsRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ListProductsRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type ListProductsResponse struct {
	// @inject_tag: json:"limit"
	Limit int32 `protobuf:"varint,1,opt,name=limit" json:"limit"`
	// @inject_tag: json:"offset"
	Offset int32 `protobuf:"varint,2,opt,name=offset" json:"offset"`
	// @inject_tag: json:"total"
	Total int32 `protobuf:"varint,3,opt,name=total" json:"total"`
	// @inject_tag: json:"products"
	Products []*Product `protobuf:"bytes,5,rep,name=products" json:"products"`
}

func (m *ListProductsResponse) Reset()                    { *m = ListProductsResponse{} }
func (m *ListProductsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListProductsResponse) ProtoMessage()               {}
func (*ListProductsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *ListProductsResponse) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListProductsResponse) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListProductsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListProductsResponse) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type RequestProduct struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"hexadecimal,len=24" json:"merchant_id" bson:"merchant_id"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id" validate:"hexadecimal,len=24" bson:"merchant_id"`
}

func (m *RequestProduct) Reset()                    { *m = RequestProduct{} }
func (m *RequestProduct) String() string            { return proto.CompactTextString(m) }
func (*RequestProduct) ProtoMessage()               {}
func (*RequestProduct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *RequestProduct) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RequestProduct) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type I18NTextSearchable struct {
	// @inject_tag: validate:"required,alpha,len=2" json:"lang"
	Lang string `protobuf:"bytes,1,opt,name=lang" json:"lang" validate:"required,alpha,len=2"`
	// @inject_tag: validate:"required" json:"value"
	Value string `protobuf:"bytes,2,opt,name=value" json:"value" validate:"required"`
}

func (m *I18NTextSearchable) Reset()                    { *m = I18NTextSearchable{} }
func (m *I18NTextSearchable) String() string            { return proto.CompactTextString(m) }
func (*I18NTextSearchable) ProtoMessage()               {}
func (*I18NTextSearchable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *I18NTextSearchable) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *I18NTextSearchable) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyRequest)(nil), "grpc.EmptyRequest")
	proto.RegisterType((*EmptyResponse)(nil), "grpc.EmptyResponse")
	proto.RegisterType((*PaymentCreateRequest)(nil), "grpc.PaymentCreateRequest")
	proto.RegisterType((*PaymentCreateResponse)(nil), "grpc.PaymentCreateResponse")
	proto.RegisterType((*PaymentFormJsonDataRequest)(nil), "grpc.PaymentFormJsonDataRequest")
	proto.RegisterType((*PaymentFormJsonDataProject)(nil), "grpc.PaymentFormJsonDataProject")
	proto.RegisterType((*PaymentFormJsonDataResponse)(nil), "grpc.PaymentFormJsonDataResponse")
	proto.RegisterType((*PaymentNotifyRequest)(nil), "grpc.PaymentNotifyRequest")
	proto.RegisterType((*PaymentNotifyResponse)(nil), "grpc.PaymentNotifyResponse")
	proto.RegisterType((*ConvertRateRequest)(nil), "grpc.ConvertRateRequest")
	proto.RegisterType((*ConvertRateResponse)(nil), "grpc.ConvertRateResponse")
	proto.RegisterType((*OnboardingBanking)(nil), "grpc.OnboardingBanking")
	proto.RegisterType((*OnboardingRequest)(nil), "grpc.OnboardingRequest")
	proto.RegisterType((*FindByIdRequest)(nil), "grpc.FindByIdRequest")
	proto.RegisterType((*MerchantListingRequest)(nil), "grpc.MerchantListingRequest")
	proto.RegisterType((*Merchants)(nil), "grpc.Merchants")
	proto.RegisterType((*MerchantChangeStatusRequest)(nil), "grpc.MerchantChangeStatusRequest")
	proto.RegisterType((*NotificationRequest)(nil), "grpc.NotificationRequest")
	proto.RegisterType((*Notifications)(nil), "grpc.Notifications")
	proto.RegisterType((*ListingNotificationRequest)(nil), "grpc.ListingNotificationRequest")
	proto.RegisterType((*ListingMerchantPaymentMethod)(nil), "grpc.ListingMerchantPaymentMethod")
	proto.RegisterType((*GetMerchantPaymentMethodRequest)(nil), "grpc.GetMerchantPaymentMethodRequest")
	proto.RegisterType((*ListMerchantPaymentMethodsRequest)(nil), "grpc.ListMerchantPaymentMethodsRequest")
	proto.RegisterType((*MerchantPaymentMethodRequest)(nil), "grpc.MerchantPaymentMethodRequest")
	proto.RegisterType((*MerchantPaymentMethodResponse)(nil), "grpc.MerchantPaymentMethodResponse")
	proto.RegisterType((*MerchantGetMerchantResponse)(nil), "grpc.MerchantGetMerchantResponse")
	proto.RegisterType((*GetNotificationRequest)(nil), "grpc.GetNotificationRequest")
	proto.RegisterType((*CreateRefundRequest)(nil), "grpc.CreateRefundRequest")
	proto.RegisterType((*CreateRefundResponse)(nil), "grpc.CreateRefundResponse")
	proto.RegisterType((*ListRefundsRequest)(nil), "grpc.ListRefundsRequest")
	proto.RegisterType((*ListRefundsResponse)(nil), "grpc.ListRefundsResponse")
	proto.RegisterType((*GetRefundRequest)(nil), "grpc.GetRefundRequest")
	proto.RegisterType((*CallbackRequest)(nil), "grpc.CallbackRequest")
	proto.RegisterType((*PaymentFormDataChangedRequest)(nil), "grpc.PaymentFormDataChangedRequest")
	proto.RegisterType((*PaymentFormUserChangeLangRequest)(nil), "grpc.PaymentFormUserChangeLangRequest")
	proto.RegisterType((*PaymentFormUserChangePaymentAccountRequest)(nil), "grpc.PaymentFormUserChangePaymentAccountRequest")
	proto.RegisterType((*UserIpData)(nil), "grpc.UserIpData")
	proto.RegisterType((*PaymentFormDataChangeResponseItem)(nil), "grpc.PaymentFormDataChangeResponseItem")
	proto.RegisterType((*PaymentFormDataChangeResponse)(nil), "grpc.PaymentFormDataChangeResponse")
	proto.RegisterType((*ProcessBillingAddressRequest)(nil), "grpc.ProcessBillingAddressRequest")
	proto.RegisterType((*ProcessBillingAddressResponseItem)(nil), "grpc.ProcessBillingAddressResponseItem")
	proto.RegisterType((*ProcessBillingAddressResponse)(nil), "grpc.ProcessBillingAddressResponse")
	proto.RegisterType((*GetMerchantByRequest)(nil), "grpc.GetMerchantByRequest")
	proto.RegisterType((*ChangeMerchantAgreementTypeRequest)(nil), "grpc.ChangeMerchantAgreementTypeRequest")
	proto.RegisterType((*ChangeMerchantAgreementTypeResponse)(nil), "grpc.ChangeMerchantAgreementTypeResponse")
	proto.RegisterType((*Product)(nil), "grpc.Product")
	proto.RegisterType((*ProductPrice)(nil), "grpc.ProductPrice")
	proto.RegisterType((*ListProductsRequest)(nil), "grpc.ListProductsRequest")
	proto.RegisterType((*ListProductsResponse)(nil), "grpc.ListProductsResponse")
	proto.RegisterType((*RequestProduct)(nil), "grpc.RequestProduct")
	proto.RegisterType((*I18NTextSearchable)(nil), "grpc.I18NTextSearchable")
}

func init() { proto.RegisterFile("grpc/grpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2944 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x1a, 0x4d, 0x73, 0x1b, 0xb7,
	0x55, 0x24, 0x25, 0x51, 0x7c, 0x94, 0x48, 0x09, 0x92, 0xec, 0x0d, 0x65, 0xd7, 0xf6, 0xa6, 0x6e,
	0xec, 0x34, 0x96, 0x1a, 0x25, 0x33, 0x76, 0xec, 0x4c, 0x26, 0x92, 0x1c, 0xab, 0x4a, 0x65, 0x5b,
	0x59, 0x39, 0x3d, 0x74, 0x26, 0xc3, 0x01, 0x77, 0x21, 0x6a, 0xab, 0xe5, 0x2e, 0x03, 0x60, 0x15,
	0xb3, 0x9d, 0x49, 0x2f, 0xed, 0x21, 0xd3, 0x99, 0x9e, 0xfa, 0x27, 0x7a, 0x6e, 0xcf, 0xbd, 0xf5,
	0xd0, 0x1f, 0xd1, 0xdf, 0xd1, 0x6b, 0x07, 0x5f, 0xcb, 0x05, 0xb9, 0xa2, 0x28, 0x3b, 0xbd, 0x48,
	0xfb, 0x80, 0x87, 0x87, 0xf7, 0x8d, 0x87, 0x07, 0x42, 0xb3, 0x4b, 0xfb, 0xfe, 0x96, 0xf8, 0xb3,
	0xd9, 0xa7, 0x09, 0x4f, 0xd0, 0xac, 0xf8, 0x6e, 0xdd, 0xea, 0x26, 0x49, 0x37, 0x22, 0x5b, 0x72,
	0xac, 0x93, 0x9e, 0x6c, 0xf1, 0xb0, 0x47, 0x18, 0xc7, 0xbd, 0xbe, 0x42, 0x6b, 0xad, 0x77, 0xc2,
	0x28, 0x0a, 0xe3, 0xee, 0x96, 0xfe, 0xaf, 0x86, 0xdd, 0x06, 0x2c, 0x7e, 0xd1, 0xeb, 0xf3, 0x81,
	0x47, 0xbe, 0x4d, 0x09, 0xe3, 0x6e, 0x13, 0x96, 0x34, 0xcc, 0xfa, 0x49, 0xcc, 0x88, 0xfb, 0x43,
	0x09, 0xd6, 0x8e, 0xf0, 0xa0, 0x47, 0x62, 0xbe, 0x47, 0x09, 0xe6, 0x44, 0x63, 0xa2, 0x47, 0x30,
	0x1b, 0x60, 0x8e, 0x9d, 0xd2, 0xed, 0xca, 0xbd, 0xfa, 0xf6, 0x4f, 0x37, 0x25, 0x4b, 0x45, 0x98,
	0x9b, 0x4f, 0x31, 0xc7, 0x5f, 0xc4, 0x9c, 0x0e, 0x3c, 0xb9, 0xa2, 0xf5, 0x10, 0x6a, 0xd9, 0x10,
	0x5a, 0x86, 0xca, 0x19, 0x19, 0x38, 0xa5, 0xdb, 0xa5, 0x7b, 0x35, 0x4f, 0x7c, 0xa2, 0x35, 0x98,
	0x3b, 0xc7, 0x51, 0x4a, 0x9c, 0xb2, 0x1c, 0x53, 0xc0, 0xe3, 0xf2, 0xa3, 0x92, 0x7b, 0x0a, 0xeb,
	0x23, 0x1b, 0x28, 0x26, 0xd1, 0x35, 0x98, 0x67, 0x1c, 0xf3, 0x94, 0x49, 0x3a, 0x73, 0x9e, 0x86,
	0xd0, 0x1d, 0x58, 0xa4, 0x24, 0x08, 0x29, 0xf1, 0x79, 0x3b, 0xa5, 0x91, 0xa6, 0x58, 0x37, 0x63,
	0x5f, 0xd3, 0x48, 0xec, 0x46, 0x28, 0x4d, 0xa8, 0x53, 0x51, 0xbb, 0x49, 0xc0, 0xfd, 0x73, 0x09,
	0x5a, 0x7a, 0xab, 0x67, 0x09, 0xed, 0x7d, 0xc9, 0x92, 0x58, 0xb0, 0x6c, 0x64, 0x7f, 0x07, 0x16,
	0x12, 0x1a, 0x10, 0xda, 0x0e, 0x03, 0xcd, 0x79, 0x55, 0xc2, 0x07, 0x81, 0x64, 0xc5, 0x3f, 0x25,
	0x3d, 0xc3, 0xbe, 0x86, 0x10, 0x82, 0xd9, 0xd3, 0x84, 0x71, 0xbd, 0x8d, 0xfc, 0x16, 0xb8, 0x51,
	0xe2, 0xe3, 0x88, 0x38, 0xb3, 0x0a, 0x57, 0x41, 0xa8, 0x01, 0xe5, 0xb0, 0xef, 0xcc, 0xc9, 0xb1,
	0x72, 0xd8, 0x77, 0xa3, 0x42, 0x66, 0x8e, 0x68, 0xf2, 0x5b, 0xe2, 0x73, 0x41, 0x39, 0xc6, 0x3d,
	0xa2, 0x19, 0x91, 0xdf, 0xe8, 0x16, 0xd4, 0x53, 0x1a, 0xb5, 0x59, 0xea, 0xfb, 0x84, 0x31, 0xcd,
	0x0a, 0xa4, 0x34, 0x3a, 0x56, 0x23, 0x42, 0x02, 0x81, 0x70, 0x82, 0xc3, 0x48, 0xb3, 0x54, 0x4d,
	0x69, 0xf4, 0x0c, 0x87, 0x91, 0xfb, 0x9f, 0x0a, 0x6c, 0x14, 0xca, 0xae, 0x95, 0x2d, 0xb8, 0x33,
	0x62, 0x97, 0xc3, 0x00, 0x39, 0x50, 0xc5, 0xbe, 0x9f, 0xa4, 0x31, 0xd7, 0xfb, 0x18, 0x10, 0x5d,
	0x87, 0xea, 0x29, 0x66, 0xed, 0x73, 0xac, 0xc4, 0x5e, 0xf0, 0xe6, 0x4f, 0x31, 0xfb, 0x35, 0xe6,
	0xc2, 0xe8, 0x62, 0x50, 0x48, 0x5d, 0xf6, 0xc4, 0xa7, 0x50, 0x05, 0xee, 0x49, 0x1a, 0x42, 0xec,
	0x92, 0xa7, 0x21, 0x61, 0x41, 0x9e, 0x70, 0x1c, 0xb5, 0xf5, 0xec, 0xbc, 0x9c, 0xad, 0xcb, 0xb1,
	0x1d, 0x85, 0xd2, 0x82, 0x05, 0x3f, 0xa5, 0x94, 0xc4, 0xfe, 0xc0, 0xa9, 0x4a, 0x06, 0x32, 0x18,
	0x3d, 0x86, 0x6a, 0x5f, 0xa9, 0xc9, 0x59, 0xb8, 0x5d, 0xba, 0x57, 0xdf, 0xbe, 0x6d, 0xf9, 0x69,
	0x81, 0x3a, 0x3d, 0xb3, 0x00, 0x7d, 0x09, 0xcd, 0xbe, 0x42, 0x6b, 0xf7, 0x08, 0x3f, 0x4d, 0x02,
	0xe6, 0xd4, 0xa4, 0xaf, 0xdf, 0xd9, 0x34, 0x31, 0x94, 0x23, 0xa3, 0x3f, 0x9f, 0x4b, 0x4c, 0xaf,
	0xd1, 0xcf, 0x83, 0x0c, 0x3d, 0x04, 0x27, 0x8c, 0xa3, 0x30, 0x26, 0xed, 0x93, 0x84, 0xf6, 0xda,
	0x96, 0x53, 0x82, 0xe4, 0x79, 0x5d, 0xcd, 0x0b, 0x52, 0x9e, 0xed, 0x9e, 0x3c, 0x39, 0x23, 0xb1,
	0x53, 0x57, 0xee, 0x29, 0x01, 0xf4, 0x04, 0x5a, 0x29, 0x23, 0xb4, 0x8d, 0x83, 0x80, 0x12, 0xc6,
	0xda, 0x22, 0xac, 0xda, 0x94, 0x7c, 0x9b, 0x86, 0x94, 0x04, 0xce, 0xa2, 0xd4, 0xf5, 0x75, 0x81,
	0xb1, 0xa3, 0x10, 0x8c, 0xef, 0x8a, 0x69, 0x37, 0xcc, 0x02, 0xfa, 0x45, 0xc2, 0xc3, 0x93, 0xc1,
	0x14, 0x4e, 0xed, 0x40, 0x95, 0x2a, 0x2c, 0x69, 0xe2, 0x45, 0xcf, 0x80, 0xe8, 0x06, 0xd4, 0x58,
	0xd8, 0x8d, 0x31, 0x4f, 0x29, 0xd1, 0x8e, 0x34, 0x1c, 0x70, 0xbf, 0xc8, 0x02, 0xd6, 0x6c, 0x75,
	0x49, 0xc0, 0x66, 0xd1, 0x58, 0xce, 0x47, 0xe3, 0x23, 0x40, 0x7b, 0x49, 0x7c, 0x4e, 0x28, 0xf7,
	0x72, 0x09, 0x08, 0xc1, 0xec, 0x09, 0x4d, 0x7a, 0x9a, 0x82, 0xfc, 0x16, 0xbe, 0xc9, 0x13, 0xb9,
	0x78, 0xce, 0x2b, 0xf3, 0xc4, 0xbd, 0x0f, 0xab, 0xd6, 0x4a, 0xbd, 0x3d, 0x82, 0x59, 0x8a, 0xb9,
	0x0a, 0x99, 0x92, 0x27, 0xbf, 0xdd, 0x7f, 0x94, 0x60, 0xe5, 0x65, 0xdc, 0x49, 0x30, 0x0d, 0xc2,
	0xb8, 0xbb, 0x8b, 0xe3, 0xb3, 0x30, 0xee, 0x5a, 0xce, 0x55, 0x1a, 0x71, 0x2e, 0x13, 0x78, 0xe5,
	0x5c, 0xe0, 0x89, 0x60, 0x50, 0x3a, 0x37, 0x61, 0xa5, 0x41, 0x74, 0x17, 0x1a, 0x3a, 0x2e, 0xda,
	0x71, 0xda, 0xeb, 0x10, 0xaa, 0x83, 0x7e, 0x49, 0x8f, 0xbe, 0x90, 0x83, 0x42, 0x03, 0xec, 0xbb,
	0xf0, 0x84, 0xeb, 0xf0, 0x57, 0x80, 0x20, 0x1b, 0x10, 0x8e, 0xc3, 0x88, 0xc9, 0x08, 0xa8, 0x79,
	0x06, 0x74, 0xff, 0x5b, 0xc9, 0xb3, 0x6d, 0x74, 0x33, 0x1a, 0xa3, 0xf7, 0x61, 0x56, 0xb8, 0x83,
	0x64, 0xb5, 0xbe, 0xbd, 0x9e, 0x39, 0xf0, 0x73, 0x42, 0xfd, 0x53, 0x1c, 0xf3, 0xaf, 0x19, 0xa1,
	0x9e, 0x44, 0xc9, 0xa4, 0xaa, 0xe4, 0xa4, 0xba, 0x0f, 0xcb, 0x38, 0xe2, 0x84, 0xc6, 0x98, 0x87,
	0xe7, 0xa4, 0x2d, 0xe7, 0x15, 0xf7, 0xcd, 0xdc, 0xf8, 0x0b, 0xad, 0x80, 0xef, 0x48, 0x87, 0x85,
	0x9c, 0x68, 0x09, 0x0c, 0x28, 0x66, 0xa4, 0xa0, 0x74, 0x60, 0x64, 0xd0, 0xa0, 0x94, 0x99, 0x0b,
	0x7b, 0x54, 0xb5, 0xcc, 0x02, 0x10, 0x49, 0xe2, 0x77, 0x61, 0x5f, 0xc6, 0x6d, 0xcd, 0x13, 0x9f,
	0x82, 0x35, 0x3f, 0xe4, 0x03, 0xa7, 0xa6, 0x58, 0x13, 0xdf, 0x79, 0x85, 0x83, 0xad, 0xf0, 0x07,
	0x80, 0x4c, 0x7c, 0xe0, 0x20, 0x08, 0x79, 0x98, 0xc4, 0x38, 0xd2, 0x71, 0xb4, 0xa2, 0x67, 0x76,
	0xb2, 0x09, 0xb4, 0x05, 0xab, 0x94, 0x74, 0x43, 0xc6, 0x29, 0x16, 0x23, 0xc6, 0x48, 0x8b, 0x12,
	0x1f, 0xe5, 0xa7, 0xb4, 0xa5, 0xd6, 0x61, 0x9e, 0xe3, 0xd7, 0x22, 0x5a, 0x96, 0x74, 0x6c, 0xe2,
	0xd7, 0x07, 0x01, 0xfa, 0x18, 0x16, 0xfc, 0x24, 0xe6, 0xd8, 0xe7, 0xcc, 0x69, 0x48, 0x75, 0x3b,
	0x63, 0xea, 0xde, 0x53, 0x08, 0x5e, 0x86, 0x89, 0x3e, 0x84, 0x6a, 0x47, 0xb9, 0x9c, 0xd3, 0x94,
	0x8b, 0xae, 0xab, 0x44, 0x35, 0xe6, 0x91, 0x9e, 0xc1, 0x73, 0xef, 0x40, 0xf3, 0x59, 0x18, 0x07,
	0xbb, 0x83, 0x83, 0xe0, 0x02, 0xb3, 0xbb, 0xff, 0x2c, 0xc3, 0x35, 0xb3, 0xe7, 0x61, 0xc8, 0x78,
	0xce, 0x43, 0x8a, 0x4e, 0x8d, 0x0d, 0xa8, 0x85, 0xac, 0x2d, 0xc2, 0x97, 0x04, 0x3a, 0x88, 0x16,
	0x42, 0x76, 0x2c, 0x61, 0xf4, 0x21, 0xac, 0x47, 0x98, 0xf1, 0x76, 0x1f, 0x0f, 0x92, 0x94, 0x8b,
	0x94, 0x43, 0xda, 0x32, 0xfe, 0x84, 0xa3, 0x54, 0x3c, 0x24, 0x26, 0x8f, 0xe4, 0xdc, 0x53, 0xcc,
	0xc9, 0x33, 0x11, 0x8d, 0x0f, 0x60, 0x75, 0x6c, 0x09, 0x4f, 0xa4, 0xe7, 0x54, 0xbc, 0x65, 0x7b,
	0xc1, 0xab, 0x04, 0x7d, 0x00, 0x28, 0x8f, 0x6e, 0x9d, 0x07, 0x39, 0x6c, 0x9d, 0xf6, 0x11, 0xcc,
	0xb2, 0x84, 0x8a, 0x13, 0xa1, 0x22, 0x04, 0x10, 0xdf, 0xc2, 0x91, 0xa2, 0xb0, 0x17, 0x72, 0xe9,
	0x48, 0x73, 0x9e, 0x02, 0x44, 0xb2, 0x49, 0x4e, 0x4e, 0x18, 0x51, 0x67, 0xc0, 0x9c, 0xa7, 0x21,
	0x71, 0xb6, 0x7c, 0x9b, 0x86, 0xfe, 0x59, 0x9b, 0x11, 0x4c, 0xfd, 0x53, 0xed, 0x56, 0x75, 0x39,
	0x76, 0x2c, 0x87, 0xdc, 0x4f, 0xa1, 0x66, 0xf4, 0xc7, 0xd0, 0x16, 0xd4, 0x7a, 0x06, 0xd0, 0x65,
	0xcf, 0xca, 0x98, 0x69, 0xbd, 0x21, 0x8e, 0xa8, 0x9d, 0x36, 0x32, 0x93, 0x9f, 0xe2, 0xb8, 0x4b,
	0x8e, 0x65, 0x9a, 0x33, 0x36, 0xb8, 0x05, 0x75, 0x83, 0x3c, 0x4c, 0xba, 0x60, 0x86, 0x0e, 0x02,
	0x71, 0x80, 0xca, 0x3c, 0x1f, 0x06, 0xa6, 0x9a, 0x10, 0xa0, 0xae, 0x32, 0x54, 0xfe, 0xac, 0x58,
	0xf9, 0xd3, 0x81, 0x6a, 0x8f, 0x30, 0x86, 0xbb, 0x26, 0x3e, 0x0d, 0xe8, 0xfe, 0x01, 0x56, 0x65,
	0x0e, 0x0e, 0x7d, 0xe9, 0xc3, 0x6f, 0xcf, 0x82, 0x38, 0x99, 0x42, 0x1e, 0x99, 0x44, 0xa1, 0x80,
	0x09, 0x0c, 0x1c, 0xc2, 0x52, 0x9e, 0x01, 0x86, 0x9e, 0xc0, 0x52, 0x9c, 0x1f, 0xd0, 0x2a, 0x1d,
	0x26, 0x27, 0x8b, 0x5f, 0x1b, 0xd7, 0xfd, 0x63, 0x09, 0x5a, 0xda, 0xa3, 0x7f, 0x74, 0xb1, 0xa6,
	0x77, 0x21, 0xb7, 0x0b, 0x37, 0x34, 0x17, 0xc6, 0xce, 0x56, 0x1d, 0x80, 0xf6, 0xc7, 0x6b, 0x08,
	0x25, 0xe5, 0x4f, 0xc6, 0x1c, 0x67, 0x62, 0x01, 0xe1, 0xc6, 0x70, 0x6b, 0x9f, 0xf0, 0x62, 0xdc,
	0x69, 0x65, 0x7e, 0x1f, 0x56, 0x6c, 0x66, 0x86, 0xd2, 0x37, 0xad, 0xed, 0x0e, 0x02, 0x97, 0xc3,
	0x1d, 0x21, 0x58, 0xe1, 0x86, 0xd3, 0xfb, 0xef, 0x26, 0xac, 0x8e, 0xec, 0x98, 0x3b, 0x30, 0x57,
	0xac, 0x3d, 0xc5, 0xe1, 0xe1, 0xfe, 0xbb, 0x0c, 0x37, 0xae, 0x22, 0x63, 0x79, 0x6c, 0xc7, 0x63,
	0x68, 0xd8, 0x3b, 0x4a, 0xf7, 0xac, 0x6f, 0x7f, 0x30, 0x59, 0xdf, 0x07, 0x01, 0x89, 0xf3, 0xce,
	0x66, 0xb1, 0x86, 0x0e, 0x00, 0xfc, 0xa4, 0xd7, 0x0b, 0x19, 0x0b, 0x93, 0x58, 0xfa, 0x75, 0x7d,
	0xfb, 0xfe, 0x64, 0x82, 0x7b, 0x19, 0x3e, 0xf3, 0x72, 0x8b, 0xd1, 0xaf, 0xa0, 0x1e, 0xc6, 0x9c,
	0x74, 0xd5, 0x49, 0x22, 0x93, 0xdb, 0xa5, 0xb4, 0x0e, 0x86, 0x0b, 0xbc, 0xfc, 0x6a, 0x9d, 0xaf,
	0xb1, 0x2f, 0x0e, 0x5f, 0x79, 0xa6, 0x2e, 0x88, 0x7c, 0xbd, 0x23, 0x61, 0xf7, 0x4f, 0x25, 0xb8,
	0x79, 0x81, 0x2e, 0x2f, 0x29, 0xc2, 0x72, 0x31, 0x5c, 0xb6, 0x62, 0x18, 0x6d, 0xc3, 0x6c, 0xc8,
	0x49, 0x4f, 0xeb, 0xf4, 0x32, 0x1f, 0x96, 0xb8, 0xee, 0xf9, 0x30, 0x07, 0xe6, 0x3c, 0xf8, 0x2d,
	0x98, 0xb8, 0x6b, 0x31, 0x51, 0x90, 0x81, 0xd5, 0xbe, 0x1d, 0xb8, 0xb6, 0x4f, 0xf8, 0x1b, 0x25,
	0x87, 0xf7, 0xa0, 0x99, 0xcf, 0x36, 0x43, 0x4f, 0x6b, 0xe4, 0x87, 0x0f, 0x02, 0x91, 0x54, 0xcd,
	0x4d, 0xf4, 0x24, 0x8d, 0x83, 0xe9, 0xae, 0x87, 0xfa, 0x5c, 0x2b, 0x5b, 0xf7, 0x9c, 0x9b, 0x00,
	0xbe, 0xa0, 0x94, 0xc8, 0x45, 0xba, 0x90, 0xd6, 0x23, 0x6a, 0x19, 0x25, 0x98, 0x69, 0xef, 0xab,
	0x79, 0x1a, 0x72, 0x7b, 0xb0, 0x66, 0x33, 0xf0, 0xc6, 0x5a, 0x7d, 0xd7, 0xd2, 0x6a, 0x33, 0xd3,
	0xaa, 0x26, 0xac, 0x74, 0xfa, 0x0d, 0x20, 0x91, 0x15, 0xd4, 0x18, 0x9b, 0x42, 0xdc, 0xab, 0x65,
	0x53, 0x0f, 0x56, 0x2d, 0xf2, 0x5a, 0x98, 0x35, 0x98, 0x53, 0xd7, 0x4b, 0x25, 0x8b, 0x02, 0xd0,
	0x5d, 0x98, 0x13, 0x3c, 0x89, 0xcb, 0x6d, 0xa5, 0x88, 0x63, 0x35, 0xeb, 0x7e, 0x09, 0xcb, 0xfb,
	0x84, 0x4f, 0x6d, 0x9f, 0x0d, 0xa8, 0x51, 0x89, 0x3b, 0x34, 0xfa, 0x82, 0x1a, 0x38, 0x08, 0xdc,
	0x6f, 0xa0, 0xb9, 0x87, 0xa3, 0xa8, 0x83, 0xfd, 0x33, 0x43, 0xca, 0x11, 0x57, 0xdc, 0x38, 0x88,
	0x08, 0x35, 0x94, 0x34, 0x28, 0xea, 0x93, 0x4e, 0x12, 0x0c, 0xf4, 0x85, 0x49, 0x7e, 0x5f, 0x72,
	0x5b, 0x3a, 0x85, 0x9b, 0xb9, 0x0b, 0xa5, 0xb8, 0xb3, 0xa9, 0xa2, 0x61, 0x1a, 0xbe, 0x11, 0xcc,
	0x46, 0x38, 0xee, 0x9a, 0xbb, 0x88, 0xf8, 0xce, 0x5f, 0xcc, 0x2b, 0xd6, 0xc5, 0xdc, 0xfd, 0x0a,
	0x6e, 0xe7, 0x76, 0x12, 0xc5, 0xbf, 0xda, 0xe9, 0x10, 0x0f, 0x0b, 0xc4, 0xab, 0x6d, 0xe6, 0x7e,
	0x0f, 0xef, 0x17, 0x92, 0xd4, 0x83, 0x3b, 0x6a, 0xe7, 0xe9, 0x2c, 0x30, 0x7a, 0x3a, 0x2d, 0xf4,
	0x74, 0x92, 0x9e, 0x20, 0xd2, 0x21, 0x80, 0xd8, 0xf4, 0xa0, 0x2f, 0xf4, 0x96, 0xbf, 0x6b, 0x94,
	0xec, 0xbb, 0x86, 0xb9, 0x43, 0x94, 0x73, 0x77, 0x08, 0x7d, 0xd3, 0xa8, 0x64, 0x37, 0x0d, 0xf7,
	0xaf, 0x25, 0xb8, 0x53, 0x68, 0x0b, 0xe3, 0x94, 0x07, 0x9c, 0xf4, 0x2e, 0xb9, 0x86, 0x97, 0x26,
	0x5e, 0xc3, 0xd1, 0x36, 0x2c, 0xaa, 0x0a, 0xa4, 0x2f, 0xd7, 0xe9, 0xab, 0xd9, 0xb2, 0x2a, 0xfb,
	0x87, 0xa2, 0x78, 0x90, 0x66, 0xdf, 0xee, 0x5f, 0x4a, 0x17, 0xb8, 0xc8, 0x5b, 0x04, 0xfe, 0x13,
	0x2b, 0xf0, 0xdf, 0x1b, 0xeb, 0x8f, 0x14, 0xcb, 0xae, 0x13, 0xc2, 0x00, 0x6e, 0x1c, 0xd1, 0xc4,
	0x27, 0x8c, 0xed, 0xaa, 0xe8, 0xd3, 0x92, 0x4e, 0xd7, 0x53, 0x30, 0x26, 0x2a, 0x17, 0x9b, 0xa8,
	0x32, 0x6e, 0xa2, 0xd9, 0xa1, 0x89, 0x7e, 0x10, 0x26, 0x2a, 0xde, 0x3b, 0x67, 0xa2, 0x5c, 0x0b,
	0xaa, 0x5c, 0xd4, 0x82, 0xaa, 0x14, 0xb5, 0xa0, 0x54, 0x5f, 0xea, 0xa2, 0x16, 0xd4, 0x9c, 0x9c,
	0xcd, 0xb7, 0xa0, 0x94, 0x5d, 0x26, 0xf1, 0xf2, 0xa3, 0xd9, 0xe5, 0x32, 0x81, 0xb5, 0x5d, 0x8e,
	0x60, 0x2d, 0x77, 0xd8, 0xee, 0x0e, 0xde, 0xba, 0x2e, 0x76, 0x23, 0x70, 0x95, 0x17, 0x18, 0xa2,
	0x3b, 0x5d, 0x4a, 0x88, 0x70, 0x92, 0x57, 0x83, 0x3e, 0x99, 0x9a, 0xfe, 0x5d, 0x68, 0x60, 0xb3,
	0xb0, 0xcd, 0x07, 0x7d, 0xa2, 0xef, 0x99, 0x4b, 0x38, 0x4f, 0xce, 0xfd, 0x1e, 0xde, 0x9d, 0xb8,
	0xdb, 0xff, 0xbb, 0x78, 0xf8, 0x7b, 0x15, 0xaa, 0x47, 0x34, 0x09, 0x52, 0x7f, 0xbc, 0x97, 0x72,
	0x69, 0x0d, 0x7a, 0x13, 0x40, 0xf7, 0x10, 0x73, 0x67, 0xb9, 0x1e, 0x51, 0x67, 0x79, 0xd2, 0x91,
	0x2d, 0x49, 0x7d, 0x96, 0x2b, 0x48, 0xb8, 0xbd, 0x54, 0x88, 0x6a, 0x9b, 0xc8, 0x6f, 0xe1, 0xa5,
	0xec, 0x2c, 0xd5, 0xfd, 0x12, 0xf1, 0x89, 0x7e, 0xae, 0xef, 0xed, 0x55, 0x79, 0xea, 0x5d, 0xcf,
	0xdc, 0x42, 0xb0, 0xba, 0x29, 0x8a, 0x68, 0xdd, 0x69, 0x37, 0x7d, 0x9b, 0x80, 0x9c, 0xe0, 0x34,
	0xe2, 0xed, 0xac, 0x8b, 0xa5, 0xfa, 0x29, 0x4d, 0x3d, 0xbe, 0x67, 0x9a, 0x59, 0x0e, 0x54, 0x49,
	0x8c, 0x3b, 0x11, 0x09, 0xe4, 0x3d, 0x78, 0xc1, 0x33, 0x20, 0x7a, 0x1f, 0xe6, 0xfb, 0x34, 0xf4,
	0x09, 0x73, 0x40, 0xee, 0x89, 0xac, 0x3d, 0x8f, 0xc4, 0x94, 0xa7, 0x31, 0xd0, 0xe7, 0x50, 0x0f,
	0x08, 0xf3, 0x69, 0xd8, 0x97, 0xe5, 0x6d, 0x5d, 0xdf, 0x75, 0x2c, 0x26, 0x9f, 0x0e, 0x11, 0x14,
	0xaf, 0xf9, 0x25, 0xe8, 0x39, 0x2c, 0x47, 0x49, 0xdc, 0x6d, 0xe7, 0xc9, 0x2c, 0x4a, 0x32, 0xae,
	0x4d, 0xe6, 0x30, 0x89, 0xbb, 0x63, 0xa4, 0x9a, 0x91, 0x3d, 0x8a, 0x3e, 0xd1, 0x75, 0x15, 0x09,
	0xda, 0x98, 0xcb, 0x46, 0x4d, 0x7d, 0xbb, 0xb5, 0xa9, 0x1e, 0x4b, 0x36, 0xcd, 0x63, 0xc9, 0xe6,
	0x2b, 0xf3, 0x58, 0xa2, 0x6b, 0x2e, 0x12, 0xec, 0x70, 0xb1, 0x34, 0xed, 0x07, 0x66, 0x69, 0xe3,
	0xf2, 0xa5, 0x1a, 0x7b, 0x47, 0xa6, 0x92, 0xb0, 0x87, 0xbb, 0x84, 0x39, 0x4d, 0xd9, 0x9d, 0xd0,
	0x90, 0x30, 0x67, 0x4a, 0x23, 0x67, 0x59, 0x99, 0x33, 0xa5, 0x11, 0x7a, 0x08, 0xe2, 0x70, 0xc3,
	0xf2, 0x04, 0x58, 0x91, 0x62, 0x6e, 0xd8, 0x62, 0x3e, 0xd7, 0xb3, 0x4a, 0xbe, 0x0c, 0x59, 0x75,
	0x04, 0x23, 0xc2, 0x49, 0xe0, 0x20, 0x65, 0x2f, 0x0d, 0xb6, 0x1e, 0x42, 0x2d, 0xf3, 0x83, 0xab,
	0x3c, 0xaf, 0xb4, 0x3e, 0x83, 0xe5, 0x51, 0x85, 0x5e, 0x69, 0xfd, 0x2e, 0xac, 0x15, 0x19, 0xe5,
	0x4a, 0x34, 0x9e, 0xc0, 0x92, 0x25, 0xf1, 0x95, 0xde, 0x87, 0x76, 0x61, 0x31, 0xef, 0x95, 0xb9,
	0x8c, 0x5e, 0xb2, 0x32, 0x7a, 0xbe, 0xa9, 0x5b, 0xb6, 0x9b, 0xba, 0xee, 0xdf, 0x4a, 0xaa, 0x08,
	0xd5, 0x84, 0xd8, 0xa4, 0x7e, 0x99, 0x8e, 0xce, 0xf2, 0x30, 0x3a, 0xb3, 0x7a, 0xb7, 0x52, 0x5c,
	0xef, 0xce, 0x5a, 0x0d, 0xa8, 0x91, 0x4c, 0x32, 0x77, 0x49, 0x26, 0x99, 0x1f, 0xc9, 0x24, 0xe2,
	0x8a, 0xb7, 0x66, 0xf3, 0x3a, 0xac, 0x98, 0x15, 0x1b, 0xa5, 0x62, 0x36, 0xca, 0x16, 0x1b, 0xf2,
	0x8d, 0x81, 0xe3, 0xc8, 0x30, 0x2d, 0x01, 0x74, 0x1f, 0x16, 0xfa, 0x9a, 0xae, 0x33, 0x27, 0x3d,
	0x73, 0xc9, 0xf2, 0x4c, 0x2f, 0x9b, 0x76, 0x77, 0xa0, 0xa1, 0xd5, 0xf4, 0xa6, 0x39, 0xd3, 0xfd,
	0x0c, 0xd0, 0xc1, 0x87, 0x8f, 0x5e, 0xbc, 0x22, 0xaf, 0xb9, 0x6a, 0xbd, 0x89, 0xdc, 0x93, 0x15,
	0x9a, 0xa5, 0x5c, 0x55, 0x5b, 0x68, 0xfe, 0xed, 0x7f, 0xad, 0x42, 0x43, 0x9f, 0x8a, 0xc7, 0x84,
	0x9e, 0x0b, 0xeb, 0xef, 0x01, 0x7a, 0x29, 0x6a, 0x0d, 0x75, 0x41, 0xd2, 0x27, 0x27, 0xda, 0xc8,
	0x52, 0x7e, 0x6e, 0x52, 0x73, 0xdf, 0x6a, 0xd8, 0x93, 0xee, 0x0c, 0xf2, 0x2f, 0x7a, 0x7a, 0x93,
	0xc4, 0x2e, 0x7e, 0x4d, 0x32, 0x14, 0xef, 0x4c, 0xc0, 0xd0, 0x2f, 0xac, 0x33, 0xe8, 0xab, 0x91,
	0x27, 0x56, 0x43, 0xbe, 0x75, 0xf1, 0xa3, 0x6a, 0x6b, 0xa3, 0x70, 0x2e, 0x23, 0x79, 0x0c, 0xd7,
	0xcc, 0x94, 0xbe, 0xb1, 0x14, 0x13, 0xb5, 0x9e, 0x80, 0x46, 0x88, 0xda, 0x6f, 0x36, 0xee, 0x0c,
	0xfa, 0x04, 0x16, 0x3d, 0xd2, 0x49, 0xc3, 0x28, 0xd8, 0xc3, 0xfe, 0x29, 0x41, 0xfa, 0x24, 0xc8,
	0x3f, 0x20, 0xb7, 0x56, 0xad, 0xb1, 0x6c, 0xe9, 0xc7, 0x50, 0xff, 0x5a, 0xa6, 0x47, 0xa9, 0x58,
	0x34, 0xa2, 0xe8, 0x8b, 0x56, 0x3d, 0x86, 0x86, 0x5a, 0x65, 0x8e, 0x67, 0x34, 0x7e, 0x62, 0x5f,
	0xb4, 0x76, 0x1f, 0x1a, 0xfb, 0x84, 0xe7, 0x5e, 0x7f, 0x90, 0xa3, 0x10, 0xc7, 0x9f, 0x92, 0x5a,
	0xef, 0x14, 0xcc, 0x64, 0x84, 0x8e, 0x60, 0xc9, 0xaa, 0xa5, 0x8c, 0x06, 0x8b, 0x0a, 0x2c, 0x63,
	0xef, 0x09, 0x1d, 0x0f, 0x77, 0x06, 0x7d, 0x0e, 0x4b, 0xf9, 0xe6, 0x1a, 0x43, 0x37, 0xec, 0x55,
	0x76, 0xab, 0xbe, 0xd5, 0xb4, 0x67, 0x99, 0x3b, 0x83, 0x3e, 0x83, 0x86, 0x5d, 0x1f, 0xa1, 0xb1,
	0xf7, 0x02, 0xb3, 0x7a, 0x5c, 0x63, 0xee, 0x0c, 0x7a, 0x01, 0x6b, 0xf6, 0xfa, 0x63, 0xfd, 0x60,
	0x6e, 0x6f, 0x55, 0xd0, 0xb4, 0x2e, 0xa6, 0xc7, 0x61, 0x63, 0x42, 0xbd, 0x86, 0xee, 0x69, 0xfd,
	0x5e, 0x5a, 0x40, 0xb6, 0xee, 0x4f, 0x81, 0x99, 0xe9, 0xf1, 0x97, 0x80, 0x94, 0xe3, 0xe7, 0xbb,
	0x3c, 0x48, 0x1b, 0xb3, 0xa0, 0xf3, 0xd3, 0x2a, 0xee, 0x2d, 0x4b, 0x4a, 0xcd, 0x91, 0x66, 0x91,
	0xb1, 0x49, 0x71, 0x0f, 0xe9, 0x62, 0x4a, 0x87, 0xb0, 0x22, 0xcc, 0x67, 0xb7, 0xba, 0x75, 0x9e,
	0xb8, 0xb8, 0x61, 0x6d, 0x9c, 0xd8, 0x5a, 0xe6, 0xce, 0xa0, 0x97, 0x70, 0xed, 0x39, 0xa6, 0x67,
	0xf9, 0xe1, 0x1d, 0xe6, 0x11, 0x1c, 0xbc, 0x29, 0x7b, 0x67, 0xaa, 0x6d, 0x5e, 0xdc, 0xd7, 0x45,
	0xef, 0x0d, 0xf9, 0x9c, 0xd8, 0xf9, 0x6d, 0xb9, 0x96, 0x40, 0x85, 0xb8, 0x32, 0x79, 0x3a, 0x17,
	0x35, 0xad, 0xd1, 0xdd, 0xb1, 0x20, 0x2a, 0x6a, 0xf8, 0xb6, 0x2e, 0xe9, 0x31, 0xba, 0x33, 0xe8,
	0x74, 0xd4, 0xf5, 0xec, 0x7d, 0x5c, 0xdb, 0xa3, 0x0b, 0x37, 0x79, 0x77, 0x22, 0x4e, 0x2e, 0xa3,
	0x2c, 0xe6, 0x9b, 0x6d, 0xc6, 0xd1, 0x0a, 0x3a, 0x80, 0xad, 0x56, 0xd1, 0x54, 0x46, 0xe8, 0x29,
	0xd4, 0x73, 0x7d, 0x2e, 0x93, 0x97, 0xc6, 0x3b, 0x6b, 0x26, 0x2f, 0x15, 0x34, 0xc5, 0xdc, 0x19,
	0xb4, 0x03, 0xb5, 0xac, 0xb3, 0x85, 0xae, 0x65, 0xea, 0xbc, 0x0a, 0x23, 0xcf, 0x61, 0x5d, 0x1f,
	0x0b, 0x6a, 0xca, 0x9c, 0x15, 0x68, 0x5d, 0x2f, 0xb3, 0xbb, 0x5d, 0x97, 0x9d, 0x0f, 0x67, 0xd6,
	0x61, 0x79, 0x88, 0xe3, 0x6e, 0x8a, 0xbb, 0x44, 0x37, 0xb1, 0xd0, 0xcf, 0xc6, 0x8e, 0xc2, 0xc2,
	0xc6, 0x93, 0xb1, 0xc6, 0xc4, 0x16, 0x84, 0x3b, 0x83, 0x7e, 0x6f, 0xf5, 0xb0, 0xec, 0x36, 0x93,
	0xd9, 0xf2, 0x17, 0x13, 0xb6, 0x2c, 0x6c, 0x4c, 0x4d, 0xbb, 0x79, 0x27, 0x53, 0x9c, 0x7d, 0x15,
	0x47, 0xee, 0xc4, 0x7b, 0xba, 0xbd, 0xc7, 0xa4, 0xbb, 0xbc, 0x3b, 0x83, 0x1e, 0xc2, 0xba, 0x32,
	0xdb, 0x4b, 0xaa, 0x0e, 0x41, 0x53, 0x5c, 0xd9, 0x75, 0x58, 0xcb, 0x06, 0x95, 0x9f, 0xe6, 0xab,
	0x42, 0x94, 0xf3, 0xa2, 0x91, 0xaa, 0xd6, 0xb8, 0x47, 0x51, 0x11, 0xe9, 0xce, 0xa0, 0x8f, 0x00,
	0xf6, 0x49, 0x56, 0xd3, 0xad, 0x29, 0x5c, 0xbb, 0xd2, 0x1b, 0xdf, 0xfd, 0x53, 0x58, 0x7a, 0x2a,
	0x6f, 0x22, 0x93, 0xd7, 0x15, 0x9f, 0xda, 0xbb, 0x9f, 0xfe, 0xe6, 0x71, 0x37, 0xe4, 0xa7, 0x69,
	0x67, 0xd3, 0x4f, 0x7a, 0x5b, 0x7d, 0x3c, 0x60, 0x69, 0x9f, 0xd0, 0xec, 0xe3, 0x81, 0xce, 0x06,
	0x0f, 0x18, 0xa1, 0xe7, 0x62, 0xfc, 0xac, 0xab, 0x7e, 0xf2, 0x26, 0x7f, 0x11, 0xd7, 0x99, 0x97,
	0xdf, 0x1f, 0xfd, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x86, 0x37, 0x21, 0x25, 0x27, 0x00, 0x00,
}
