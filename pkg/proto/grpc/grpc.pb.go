// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/grpc.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	grpc/grpc.proto

It has these top-level messages:
	EmptyRequest
	EmptyResponse
	EmptyResponseWithStatus
	CheckSkuAndKeyProjectRequest
	ChangeCodeInOrderRequest
	ChangeCodeInOrderResponse
	GetPlatformKeyCountResponse
	KeyForOrderRequest
	GetKeyForOrderRequestResponse
	PlatformKeyReserveResponse
	PlatformKeyReserveRequest
	PlatformKeysFileResponse
	PlatformKeysFileRequest
	GetPlatformKeyCountRequest
	RemovePlatformRequest
	KeyProductResponse
	CreateOrUpdateKeyProductRequest
	UnPublishKeyProductRequest
	PublishKeyProductRequest
	ListPlatformsRequest
	ListPlatformsResponse
	ListKeyProductsResponse
	ListKeyProductsRequest
	PaymentCreateRequest
	PaymentCreateResponse
	PaymentFormJsonDataRequest
	PaymentFormJsonDataProject
	PaymentFormJsonData
	PaymentFormJsonDataResponse
	PaymentNotifyRequest
	PaymentNotifyResponse
	OnboardingRequest
	FindByIdRequest
	MerchantListingRequest
	MerchantListingResponse
	MerchantChangeStatusRequest
	NotificationRequest
	Notifications
	ListingNotificationRequest
	ListingMerchantPaymentMethod
	GetMerchantPaymentMethodRequest
	GetMerchantPaymentMethodResponse
	ListMerchantPaymentMethodsRequest
	MerchantPaymentMethodRequest
	MerchantPaymentMethodResponse
	GetMerchantResponse
	GetNotificationRequest
	CreateRefundRequest
	CreateRefundResponse
	ListRefundsRequest
	ListRefundsResponse
	GetRefundRequest
	CallbackRequest
	PaymentFormDataChangedRequest
	PaymentFormUserChangePlatformRequest
	PaymentFormUserChangeLangRequest
	PaymentFormUserChangePaymentAccountRequest
	PaymentFormDataChangeResponse
	ProcessBillingAddressRequest
	ProcessBillingAddressResponseItem
	ProcessBillingAddressResponse
	GetMerchantByRequest
	ChangeMerchantDataRequest
	ChangeMerchantDataResponse
	ChangeMerchantResponse
	ChangeMerchantStatusResponse
	CreateNotificationResponse
	OrderCreateProcessResponse
	SetMerchantS3AgreementRequest
	KeyProductInfo
	PlatformPriceInfo
	ProductPriceInfo
	KeyProduct
	PlatformPrice
	Platform
	Product
	ListProductsRequest
	GetProductsForOrderRequest
	GetKeyProductInfoRequest
	GetKeyProductInfoResponse
	GetKeyProductsForOrderRequest
	ListProductsResponse
	RequestProduct
	RequestKeyProductMerchant
	RequestKeyProduct
	I18NTextSearchable
	ChangeProjectResponse
	GetProjectRequest
	ListProjectsRequest
	ListProjectsResponse
	TokenRequest
	TokenResponse
	CheckProjectRequestSignatureRequest
	CheckProjectRequestSignatureResponse
	ListOrdersRequest
	GetOrderRequest
	IsOrderCanBePayingRequest
	IsOrderCanBePayingResponse
	SetUserNotifyRequest
	NotifyUserSales
	NotifyUserNewRegion
	GetPaymentMethodSettingsRequest
	GetPaymentMethodSettingsResponse
	ChangePaymentMethodRequest
	ChangePaymentMethodParamsRequest
	ChangePaymentMethodResponse
	ChangePaymentMethodParamsResponse
	FindByZipCodeRequest
	FindByZipCodeResponse
	ResponseError
	ResponseErrorMessage
	CreateAccountingEntryRequest
	CreateAccountingEntryResponse
	CreateRoyaltyReportRequest
	ListRoyaltyReportsRequest
	RoyaltyReportsPaginate
	ListRoyaltyReportsResponse
	ListRoyaltyReportOrdersRequest
	ChangeRoyaltyReportCorrection
	GetRoyaltyReportRequest
	GetRoyaltyReportResponse
	ChangeRoyaltyReportRequest
	MerchantReviewRoyaltyReportRequest
	PaymentChannelCostSystemListResponse
	PaymentChannelCostSystemResponse
	PaymentChannelCostMerchantListResponse
	PaymentChannelCostMerchantResponse
	MoneyBackCostSystemListResponse
	MoneyBackCostSystemResponse
	MoneyBackCostMerchantListResponse
	MoneyBackCostMerchantResponse
	PriceGroupByCountryRequest
	PriceGroupCurrenciesResponse
	PriceGroupRegions
	PriceGroupRegion
	PriceGroupByRegionRequest
	RecommendedPriceRequest
	RecommendedPriceResponse
	RecommendedPriceTableRequest
	RecommendedPriceTableResponse
	ProductPricesResponse
	UpdateProductPricesRequest
	UserProfilePersonal
	UserProfileHelp
	UserProfileCompanyMonetization
	UserProfileCompanyPlatforms
	UserProfileCompany
	UserProfileEmail
	UserProfile
	CommonUserProfileRequest
	CommonUserProfileResponse
	CommonUserProfile
	GetUserProfileRequest
	GetUserProfileResponse
	PageReview
	CreatePageReviewRequest
	ConfirmUserEmailRequest
	ConfirmUserEmailResponse
	VatTransactionsRequest
	TransactionsPaginate
	TransactionsResponse
	VatReportsRequest
	VatReportsPaginate
	VatReportsResponse
	ProcessVatReportsRequest
	UpdateVatReportStatusRequest
	GetMerchantOnboardingCompleteDataResponseItem
	GetMerchantOnboardingCompleteDataResponse
	GetMerchantTariffRatesRequest
	GetMerchantTariffRatesResponseItems
	GetMerchantTariffRatesResponse
	SetMerchantTariffRatesRequest
	ListOrdersPublicResponseItem
	ListOrdersPrivateResponseItem
	ListOrdersPublicResponse
	ListOrdersPrivateResponse
	ListOrdersResponseItem
	ListOrdersResponse
	GetOrderPublicResponse
	GetOrderPrivateResponse
	GetDashboardMainRequest
	GetDashboardMainResponse
	GetDashboardBaseReportRequest
	GetDashboardBaseReportResponse
	GetDashboardRevenueDynamicsReportResponse
	DashboardAmountItemWithChart
	DashboardChartItemFloat
	DashboardMainReportTotalTransactions
	DashboardMainReport
	DashboardRevenueDynamicReport
	DashboardRevenueDynamicReportItem
	DashboardRevenueByCountryReportTop
	DashboardRevenueByCountryReportChartItem
	DashboardRevenueByCountryReport
	DashboardSalesTodayReportTop
	DashboardChartItemInt
	DashboardSalesTodayReport
	DashboardSourcesReport
	DashboardBaseReports
	CreatePayoutDocumentRequest
	PayoutDocumentResponse
	CreatePayoutDocumentResponse
	UpdatePayoutDocumentRequest
	GetPayoutDocumentRequest
	GetPayoutDocumentsRequest
	PayoutDocumentsPaginate
	GetPayoutDocumentsResponse
	UpdatePayoutDocumentSignaturesRequest
	GetMerchantBalanceRequest
	GetMerchantBalanceResponse
	PayoutDocumentPdfUploadedRequest
	PayoutDocumentPdfUploadedResponse
	OrderReceiptRequest
	OrderReceiptResponse
	GetProductResponse
	GetPriceGroupByRegionResponse
	GetPriceGroupByRegionRequest
	ChangeMerchantManualPayoutsRequest
	ChangeMerchantManualPayoutsResponse
	GetPaylinksRequest
	PaylinksPaginate
	GetPaylinksResponse
	PaylinkRequestById
	PaylinkRequest
	GetPaylinkResponse
	GetPaylinkURLRequest
	GetPaylinkUrlResponse
	GetPaylinkStatCommonRequest
	GetPaylinkTransactionsRequest
	GetPaylinkStatCommonResponse
	GetPaylinkStatCommonGroupResponse
	RoyaltyReportPdfUploadedRequest
	RoyaltyReportPdfUploadedResponse
	DeleteSavedCardRequest
	GetOperatingCompaniesListResponse
	GetPaymentMinLimitsSystemResponse
	SetMerchantOperatingCompanyRequest
	SetMerchantOperatingCompanyResponse
	GetOperatingCompanyRequest
	GetOperatingCompanyResponse
	OrderReCreateProcessRequest
	GetMerchantUsersRequest
	GetMerchantUsersResponse
	InviteUserMerchantRequest
	InviteUserMerchantResponse
	InviteUserAdminRequest
	InviteUserAdminResponse
	ResendInviteMerchantRequest
	ResendInviteAdminRequest
	GetMerchantUserRequest
	GetMerchantUserResponse
	GetAdminUserRequest
	GetAdminUserResponse
	CheckInviteTokenRequest
	CheckInviteTokenResponse
	AcceptInviteRequest
	AcceptInviteResponse
	GetAdminUsersResponse
	GetMerchantsForUserRequest
	GetMerchantsForUserResponse
	MerchantForUserInfo
	ChangeRoleForMerchantUserRequest
	ChangeRoleForAdminUserRequest
	GetRoleListRequest
	GetRoleListResponse
	AdminRoleRequest
	MerchantRoleRequest
	Permission
	UserRoleResponse
	GetCountriesListForOrderRequest
	GetCountriesListForOrderResponse
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import billing "github.com/paysuper/paysuper-billing-server/pkg/proto/billing"
import paylink "github.com/paysuper/paysuper-billing-server/pkg/proto/paylink"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EmptyRequest struct {
}

func (m *EmptyRequest) Reset()                    { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string            { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()               {}
func (*EmptyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type EmptyResponse struct {
}

func (m *EmptyResponse) Reset()                    { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string            { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()               {}
func (*EmptyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type EmptyResponseWithStatus struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *EmptyResponseWithStatus) Reset()                    { *m = EmptyResponseWithStatus{} }
func (m *EmptyResponseWithStatus) String() string            { return proto.CompactTextString(m) }
func (*EmptyResponseWithStatus) ProtoMessage()               {}
func (*EmptyResponseWithStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EmptyResponseWithStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *EmptyResponseWithStatus) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type CheckSkuAndKeyProjectRequest struct {
	// @inject_tag: validate:"required,max=255"
	Sku string `protobuf:"bytes,1,opt,name=sku" json:"sku,omitempty" validate:"required,max=255"`
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"project_id"
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty" validate:"required,hexadecimal,len=24" param:"project_id"`
}

func (m *CheckSkuAndKeyProjectRequest) Reset()                    { *m = CheckSkuAndKeyProjectRequest{} }
func (m *CheckSkuAndKeyProjectRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckSkuAndKeyProjectRequest) ProtoMessage()               {}
func (*CheckSkuAndKeyProjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CheckSkuAndKeyProjectRequest) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *CheckSkuAndKeyProjectRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type ChangeCodeInOrderRequest struct {
	// @inject_tag: validate:"required"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	KeyProductId string `protobuf:"bytes,2,opt,name=key_product_id,json=keyProductId" json:"key_product_id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *ChangeCodeInOrderRequest) Reset()                    { *m = ChangeCodeInOrderRequest{} }
func (m *ChangeCodeInOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeCodeInOrderRequest) ProtoMessage()               {}
func (*ChangeCodeInOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ChangeCodeInOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ChangeCodeInOrderRequest) GetKeyProductId() string {
	if m != nil {
		return m.KeyProductId
	}
	return ""
}

type ChangeCodeInOrderResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Order   *billing.Order        `protobuf:"bytes,3,opt,name=order" json:"order,omitempty"`
}

func (m *ChangeCodeInOrderResponse) Reset()                    { *m = ChangeCodeInOrderResponse{} }
func (m *ChangeCodeInOrderResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangeCodeInOrderResponse) ProtoMessage()               {}
func (*ChangeCodeInOrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ChangeCodeInOrderResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ChangeCodeInOrderResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ChangeCodeInOrderResponse) GetOrder() *billing.Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type GetPlatformKeyCountResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,3,opt,name=count" json:"count"`
}

func (m *GetPlatformKeyCountResponse) Reset()                    { *m = GetPlatformKeyCountResponse{} }
func (m *GetPlatformKeyCountResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPlatformKeyCountResponse) ProtoMessage()               {}
func (*GetPlatformKeyCountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetPlatformKeyCountResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetPlatformKeyCountResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetPlatformKeyCountResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type KeyForOrderRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId" json:"key_id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *KeyForOrderRequest) Reset()                    { *m = KeyForOrderRequest{} }
func (m *KeyForOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*KeyForOrderRequest) ProtoMessage()               {}
func (*KeyForOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *KeyForOrderRequest) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

type GetKeyForOrderRequestResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"key"
	Key *billing.Key `protobuf:"bytes,3,opt,name=key" json:"key"`
}

func (m *GetKeyForOrderRequestResponse) Reset()                    { *m = GetKeyForOrderRequestResponse{} }
func (m *GetKeyForOrderRequestResponse) String() string            { return proto.CompactTextString(m) }
func (*GetKeyForOrderRequestResponse) ProtoMessage()               {}
func (*GetKeyForOrderRequestResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetKeyForOrderRequestResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetKeyForOrderRequestResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetKeyForOrderRequestResponse) GetKey() *billing.Key {
	if m != nil {
		return m.Key
	}
	return nil
}

type PlatformKeyReserveResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"key_id"
	KeyId string `protobuf:"bytes,3,opt,name=key_id,json=keyId" json:"key_id"`
}

func (m *PlatformKeyReserveResponse) Reset()                    { *m = PlatformKeyReserveResponse{} }
func (m *PlatformKeyReserveResponse) String() string            { return proto.CompactTextString(m) }
func (*PlatformKeyReserveResponse) ProtoMessage()               {}
func (*PlatformKeyReserveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PlatformKeyReserveResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PlatformKeyReserveResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PlatformKeyReserveResponse) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

type PlatformKeyReserveRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	KeyProductId string `protobuf:"bytes,2,opt,name=key_product_id,json=keyProductId" json:"key_product_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,3,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"hexadecimal,len=24"`
	// @inject_tag: validate:"required,max=255"
	PlatformId string `protobuf:"bytes,4,opt,name=platform_id,json=platformId" json:"platform_id,omitempty" validate:"required,max=255"`
	// @inject_tag: validate:"required"
	Ttl int32 `protobuf:"varint,5,opt,name=ttl" json:"ttl,omitempty" validate:"required"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	OrderId string `protobuf:"bytes,6,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *PlatformKeyReserveRequest) Reset()                    { *m = PlatformKeyReserveRequest{} }
func (m *PlatformKeyReserveRequest) String() string            { return proto.CompactTextString(m) }
func (*PlatformKeyReserveRequest) ProtoMessage()               {}
func (*PlatformKeyReserveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *PlatformKeyReserveRequest) GetKeyProductId() string {
	if m != nil {
		return m.KeyProductId
	}
	return ""
}

func (m *PlatformKeyReserveRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *PlatformKeyReserveRequest) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *PlatformKeyReserveRequest) GetTtl() int32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *PlatformKeyReserveRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type PlatformKeysFileResponse struct {
	Status        int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message       *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	KeysProcessed int32                 `protobuf:"varint,3,opt,name=keys_processed,json=keysProcessed" json:"keys_processed,omitempty"`
	TotalCount    int32                 `protobuf:"varint,4,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *PlatformKeysFileResponse) Reset()                    { *m = PlatformKeysFileResponse{} }
func (m *PlatformKeysFileResponse) String() string            { return proto.CompactTextString(m) }
func (*PlatformKeysFileResponse) ProtoMessage()               {}
func (*PlatformKeysFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *PlatformKeysFileResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PlatformKeysFileResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PlatformKeysFileResponse) GetKeysProcessed() int32 {
	if m != nil {
		return m.KeysProcessed
	}
	return 0
}

func (m *PlatformKeysFileResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type PlatformKeysFileRequest struct {
	// @inject_tag: validate:"required,max=10485760"
	File []byte `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty" validate:"required,max=10485760"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	KeyProductId string `protobuf:"bytes,2,opt,name=key_product_id,json=keyProductId" json:"key_product_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"hexadecimal,len=24" json:"merchant_id"
	MerchantId string `protobuf:"bytes,3,opt,name=merchant_id,json=merchantId" json:"merchant_id" validate:"hexadecimal,len=24"`
	// @inject_tag: validate:"required,max=255"
	PlatformId string `protobuf:"bytes,4,opt,name=platform_id,json=platformId" json:"platform_id,omitempty" validate:"required,max=255"`
}

func (m *PlatformKeysFileRequest) Reset()                    { *m = PlatformKeysFileRequest{} }
func (m *PlatformKeysFileRequest) String() string            { return proto.CompactTextString(m) }
func (*PlatformKeysFileRequest) ProtoMessage()               {}
func (*PlatformKeysFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *PlatformKeysFileRequest) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *PlatformKeysFileRequest) GetKeyProductId() string {
	if m != nil {
		return m.KeyProductId
	}
	return ""
}

func (m *PlatformKeysFileRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *PlatformKeysFileRequest) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

type GetPlatformKeyCountRequest struct {
	// @inject_tag: query:"key_product_id" validate:"required,hexadecimal,len=24"
	KeyProductId string `protobuf:"bytes,1,opt,name=key_product_id,json=keyProductId" json:"key_product_id,omitempty" query:"key_product_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"hexadecimal,len=24"`
	// @inject_tag: query:"platform_id" validate:"required,max=255"
	PlatformId string `protobuf:"bytes,3,opt,name=platform_id,json=platformId" json:"platform_id,omitempty" query:"platform_id" validate:"required,max=255"`
}

func (m *GetPlatformKeyCountRequest) Reset()                    { *m = GetPlatformKeyCountRequest{} }
func (m *GetPlatformKeyCountRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPlatformKeyCountRequest) ProtoMessage()               {}
func (*GetPlatformKeyCountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GetPlatformKeyCountRequest) GetKeyProductId() string {
	if m != nil {
		return m.KeyProductId
	}
	return ""
}

func (m *GetPlatformKeyCountRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetPlatformKeyCountRequest) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

type RemovePlatformRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	KeyProductId string `protobuf:"bytes,1,opt,name=key_product_id,json=keyProductId" json:"key_product_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"hexadecimal,len=24" json:"merchant_id"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id" validate:"hexadecimal,len=24"`
	// @inject_tag: validate:"required,max=255"
	PlatformId string `protobuf:"bytes,3,opt,name=platform_id,json=platformId" json:"platform_id,omitempty" validate:"required,max=255"`
}

func (m *RemovePlatformRequest) Reset()                    { *m = RemovePlatformRequest{} }
func (m *RemovePlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*RemovePlatformRequest) ProtoMessage()               {}
func (*RemovePlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RemovePlatformRequest) GetKeyProductId() string {
	if m != nil {
		return m.KeyProductId
	}
	return ""
}

func (m *RemovePlatformRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *RemovePlatformRequest) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

type KeyProductResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"product"
	Product *KeyProduct `protobuf:"bytes,3,opt,name=product" json:"product"`
}

func (m *KeyProductResponse) Reset()                    { *m = KeyProductResponse{} }
func (m *KeyProductResponse) String() string            { return proto.CompactTextString(m) }
func (*KeyProductResponse) ProtoMessage()               {}
func (*KeyProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *KeyProductResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *KeyProductResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *KeyProductResponse) GetProduct() *KeyProduct {
	if m != nil {
		return m.Product
	}
	return nil
}

type CreateOrUpdateKeyProductRequest struct {
	// @inject_tag: validate:"required,min=1"
	Name map[string]string `protobuf:"bytes,1,rep,name=name" json:"name,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validate:"required,min=1"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,min=1"
	Description map[string]string `protobuf:"bytes,3,rep,name=description" json:"description,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validate:"required,min=1"`
	// @inject_tag: json:"long_description"
	LongDescription map[string]string `protobuf:"bytes,4,rep,name=long_description,json=longDescription" json:"long_description" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// @inject_tag: validate:"required,max=255"
	Sku string `protobuf:"bytes,5,opt,name=sku" json:"sku,omitempty" validate:"required,max=255"`
	// @inject_tag: json:"cover"
	Cover *billing.ImageCollection `protobuf:"bytes,6,opt,name=cover" json:"cover"`
	// @inject_tag: validate:"omitempty,url" json:"url"
	Url string `protobuf:"bytes,7,opt,name=url" json:"url" validate:"omitempty,url"`
	// @inject_tag: validate:"required,alpha,len=3" json:"default_currency"
	DefaultCurrency string `protobuf:"bytes,8,opt,name=default_currency,json=defaultCurrency" json:"default_currency" validate:"required,alpha,len=3"`
	// @inject_tag: validate:"hexadecimal,len=24" json:"merchant_id"
	MerchantId string `protobuf:"bytes,9,opt,name=merchant_id,json=merchantId" json:"merchant_id" validate:"hexadecimal,len=24"`
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,10,opt,name=id" json:"id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"object" validate:"required"
	Object string `protobuf:"bytes,11,opt,name=object" json:"object" validate:"required"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,12,rep,name=metadata" json:"metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// @inject_tag: validate:"dive" json:"platforms"
	Platforms []*PlatformPrice `protobuf:"bytes,13,rep,name=platforms" json:"platforms" validate:"dive"`
	// @inject_tag: json:"pricing" validate:"required,oneof=currency manual steam default"
	Pricing string `protobuf:"bytes,14,opt,name=pricing" json:"pricing" validate:"required,oneof=currency manual steam default"`
}

func (m *CreateOrUpdateKeyProductRequest) Reset()         { *m = CreateOrUpdateKeyProductRequest{} }
func (m *CreateOrUpdateKeyProductRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrUpdateKeyProductRequest) ProtoMessage()    {}
func (*CreateOrUpdateKeyProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16}
}

func (m *CreateOrUpdateKeyProductRequest) GetName() map[string]string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateOrUpdateKeyProductRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *CreateOrUpdateKeyProductRequest) GetDescription() map[string]string {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CreateOrUpdateKeyProductRequest) GetLongDescription() map[string]string {
	if m != nil {
		return m.LongDescription
	}
	return nil
}

func (m *CreateOrUpdateKeyProductRequest) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *CreateOrUpdateKeyProductRequest) GetCover() *billing.ImageCollection {
	if m != nil {
		return m.Cover
	}
	return nil
}

func (m *CreateOrUpdateKeyProductRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CreateOrUpdateKeyProductRequest) GetDefaultCurrency() string {
	if m != nil {
		return m.DefaultCurrency
	}
	return ""
}

func (m *CreateOrUpdateKeyProductRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *CreateOrUpdateKeyProductRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateOrUpdateKeyProductRequest) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *CreateOrUpdateKeyProductRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *CreateOrUpdateKeyProductRequest) GetPlatforms() []*PlatformPrice {
	if m != nil {
		return m.Platforms
	}
	return nil
}

func (m *CreateOrUpdateKeyProductRequest) GetPricing() string {
	if m != nil {
		return m.Pricing
	}
	return ""
}

type UnPublishKeyProductRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	KeyProductId string `protobuf:"bytes,1,opt,name=key_product_id,json=keyProductId" json:"key_product_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required"`
}

func (m *UnPublishKeyProductRequest) Reset()                    { *m = UnPublishKeyProductRequest{} }
func (m *UnPublishKeyProductRequest) String() string            { return proto.CompactTextString(m) }
func (*UnPublishKeyProductRequest) ProtoMessage()               {}
func (*UnPublishKeyProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *UnPublishKeyProductRequest) GetKeyProductId() string {
	if m != nil {
		return m.KeyProductId
	}
	return ""
}

func (m *UnPublishKeyProductRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type PublishKeyProductRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	KeyProductId string `protobuf:"bytes,1,opt,name=key_product_id,json=keyProductId" json:"key_product_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"hexadecimal,len=24"`
}

func (m *PublishKeyProductRequest) Reset()                    { *m = PublishKeyProductRequest{} }
func (m *PublishKeyProductRequest) String() string            { return proto.CompactTextString(m) }
func (*PublishKeyProductRequest) ProtoMessage()               {}
func (*PublishKeyProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *PublishKeyProductRequest) GetKeyProductId() string {
	if m != nil {
		return m.KeyProductId
	}
	return ""
}

func (m *PublishKeyProductRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type ListPlatformsRequest struct {
	// @inject_tag: query:"limit" validate:"required,numeric,gt=0"
	Limit int32 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"required,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int32 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
}

func (m *ListPlatformsRequest) Reset()                    { *m = ListPlatformsRequest{} }
func (m *ListPlatformsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListPlatformsRequest) ProtoMessage()               {}
func (*ListPlatformsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ListPlatformsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListPlatformsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ListPlatformsResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"limit"
	Limit int32 `protobuf:"varint,3,opt,name=limit" json:"limit"`
	// @inject_tag: json:"offset"
	Offset int32 `protobuf:"varint,4,opt,name=offset" json:"offset"`
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,5,opt,name=count" json:"count"`
	// @inject_tag: json:"platforms"
	Platforms []*Platform `protobuf:"bytes,6,rep,name=platforms" json:"platforms"`
}

func (m *ListPlatformsResponse) Reset()                    { *m = ListPlatformsResponse{} }
func (m *ListPlatformsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListPlatformsResponse) ProtoMessage()               {}
func (*ListPlatformsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ListPlatformsResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ListPlatformsResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ListPlatformsResponse) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListPlatformsResponse) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListPlatformsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListPlatformsResponse) GetPlatforms() []*Platform {
	if m != nil {
		return m.Platforms
	}
	return nil
}

type ListKeyProductsResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"limit"
	Limit int64 `protobuf:"varint,3,opt,name=limit" json:"limit"`
	// @inject_tag: json:"offset"
	Offset int64 `protobuf:"varint,4,opt,name=offset" json:"offset"`
	// @inject_tag: json:"count"
	Count int64 `protobuf:"varint,5,opt,name=count" json:"count"`
	// @inject_tag: json:"products"
	Products []*KeyProduct `protobuf:"bytes,6,rep,name=products" json:"products"`
}

func (m *ListKeyProductsResponse) Reset()                    { *m = ListKeyProductsResponse{} }
func (m *ListKeyProductsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListKeyProductsResponse) ProtoMessage()               {}
func (*ListKeyProductsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ListKeyProductsResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ListKeyProductsResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ListKeyProductsResponse) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListKeyProductsResponse) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListKeyProductsResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListKeyProductsResponse) GetProducts() []*KeyProduct {
	if m != nil {
		return m.Products
	}
	return nil
}

type ListKeyProductsRequest struct {
	// @inject_tag: query:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=name" json:"name" query:"name"`
	// @inject_tag: query:"sku" json:"sku"
	Sku string `protobuf:"bytes,2,opt,name=sku" json:"sku" query:"sku"`
	// @inject_tag: query:"limit" validate:"required,numeric,gt=0" json:"limit"
	Limit int64 `protobuf:"varint,3,opt,name=limit" json:"limit" query:"limit" validate:"required,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0" json:"offset"
	Offset int64 `protobuf:"varint,4,opt,name=offset" json:"offset" query:"offset" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,5,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"project_id" validate:"omitempty,hexadecimal,len=24"
	ProjectId string `protobuf:"bytes,6,opt,name=project_id,json=projectId" json:"project_id,omitempty" query:"project_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: query:"enabled" validate:"omitempty,oneof=true false"
	Enabled string `protobuf:"bytes,7,opt,name=enabled" json:"enabled,omitempty" query:"enabled" validate:"omitempty,oneof=true false"`
}

func (m *ListKeyProductsRequest) Reset()                    { *m = ListKeyProductsRequest{} }
func (m *ListKeyProductsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListKeyProductsRequest) ProtoMessage()               {}
func (*ListKeyProductsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ListKeyProductsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListKeyProductsRequest) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *ListKeyProductsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListKeyProductsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListKeyProductsRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ListKeyProductsRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *ListKeyProductsRequest) GetEnabled() string {
	if m != nil {
		return m.Enabled
	}
	return ""
}

type PaymentCreateRequest struct {
	Data           map[string]string `protobuf:"bytes,1,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Ip             string            `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	AcceptLanguage string            `protobuf:"bytes,4,opt,name=accept_language,json=acceptLanguage" json:"accept_language,omitempty"`
	UserAgent      string            `protobuf:"bytes,5,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
}

func (m *PaymentCreateRequest) Reset()                    { *m = PaymentCreateRequest{} }
func (m *PaymentCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*PaymentCreateRequest) ProtoMessage()               {}
func (*PaymentCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *PaymentCreateRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PaymentCreateRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *PaymentCreateRequest) GetAcceptLanguage() string {
	if m != nil {
		return m.AcceptLanguage
	}
	return ""
}

func (m *PaymentCreateRequest) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

type PaymentCreateResponse struct {
	Status       int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message      *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	RedirectUrl  string                `protobuf:"bytes,3,opt,name=redirect_url,json=redirectUrl" json:"redirect_url,omitempty"`
	NeedRedirect bool                  `protobuf:"varint,4,opt,name=need_redirect,json=needRedirect" json:"need_redirect,omitempty"`
}

func (m *PaymentCreateResponse) Reset()                    { *m = PaymentCreateResponse{} }
func (m *PaymentCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*PaymentCreateResponse) ProtoMessage()               {}
func (*PaymentCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *PaymentCreateResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PaymentCreateResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PaymentCreateResponse) GetRedirectUrl() string {
	if m != nil {
		return m.RedirectUrl
	}
	return ""
}

func (m *PaymentCreateResponse) GetNeedRedirect() bool {
	if m != nil {
		return m.NeedRedirect
	}
	return false
}

type PaymentFormJsonDataRequest struct {
	// @inject_tag: validate:"required,uuid" param:"order_id"
	OrderId             string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid" param:"order_id"`
	Scheme              string `protobuf:"bytes,2,opt,name=scheme" json:"scheme,omitempty"`
	Host                string `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	Locale              string `protobuf:"bytes,4,opt,name=locale" json:"locale,omitempty"`
	Ip                  string `protobuf:"bytes,5,opt,name=ip" json:"ip,omitempty"`
	UserAgent           string `protobuf:"bytes,6,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	Cookie              string `protobuf:"bytes,7,opt,name=cookie" json:"cookie,omitempty"`
	Referer             string `protobuf:"bytes,8,opt,name=referer" json:"referer,omitempty"`
	IsEmbedded          bool   `protobuf:"varint,9,opt,name=is_embedded,json=isEmbedded" json:"is_embedded,omitempty"`
	IssuerReference     string `protobuf:"bytes,10,opt,name=issuer_reference,json=issuerReference" json:"issuer_reference,omitempty"`
	IssuerReferenceType string `protobuf:"bytes,11,opt,name=issuer_reference_type,json=issuerReferenceType" json:"issuer_reference_type,omitempty"`
	UtmSource           string `protobuf:"bytes,12,opt,name=utm_source,json=utmSource" json:"utm_source,omitempty"`
	UtmMedium           string `protobuf:"bytes,13,opt,name=utm_medium,json=utmMedium" json:"utm_medium,omitempty"`
	UtmCampaign         string `protobuf:"bytes,14,opt,name=utm_campaign,json=utmCampaign" json:"utm_campaign,omitempty"`
}

func (m *PaymentFormJsonDataRequest) Reset()                    { *m = PaymentFormJsonDataRequest{} }
func (m *PaymentFormJsonDataRequest) String() string            { return proto.CompactTextString(m) }
func (*PaymentFormJsonDataRequest) ProtoMessage()               {}
func (*PaymentFormJsonDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *PaymentFormJsonDataRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetReferer() string {
	if m != nil {
		return m.Referer
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetIsEmbedded() bool {
	if m != nil {
		return m.IsEmbedded
	}
	return false
}

func (m *PaymentFormJsonDataRequest) GetIssuerReference() string {
	if m != nil {
		return m.IssuerReference
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetIssuerReferenceType() string {
	if m != nil {
		return m.IssuerReferenceType
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetUtmSource() string {
	if m != nil {
		return m.UtmSource
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetUtmMedium() string {
	if m != nil {
		return m.UtmMedium
	}
	return ""
}

func (m *PaymentFormJsonDataRequest) GetUtmCampaign() string {
	if m != nil {
		return m.UtmCampaign
	}
	return ""
}

type PaymentFormJsonDataProject struct {
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name" json:"name"`
	// @inject_tag: json:"url_success"
	UrlSuccess string `protobuf:"bytes,2,opt,name=url_success,json=urlSuccess" json:"url_success"`
	// @inject_tag: json:"url_fail"
	UrlFail string `protobuf:"bytes,3,opt,name=url_fail,json=urlFail" json:"url_fail"`
	// @inject_tag: json:"id"
	Id string `protobuf:"bytes,4,opt,name=id" json:"id"`
}

func (m *PaymentFormJsonDataProject) Reset()                    { *m = PaymentFormJsonDataProject{} }
func (m *PaymentFormJsonDataProject) String() string            { return proto.CompactTextString(m) }
func (*PaymentFormJsonDataProject) ProtoMessage()               {}
func (*PaymentFormJsonDataProject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *PaymentFormJsonDataProject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentFormJsonDataProject) GetUrlSuccess() string {
	if m != nil {
		return m.UrlSuccess
	}
	return ""
}

func (m *PaymentFormJsonDataProject) GetUrlFail() string {
	if m != nil {
		return m.UrlFail
	}
	return ""
}

func (m *PaymentFormJsonDataProject) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PaymentFormJsonData struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// @inject_tag: json:"account,omitempty"
	Account string `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	// @inject_tag: json:"has_vat"
	HasVat bool `protobuf:"varint,3,opt,name=has_vat,json=hasVat" json:"has_vat"`
	// @inject_tag: json:"vat"
	Vat            float64                             `protobuf:"fixed64,4,opt,name=vat" json:"vat"`
	Amount         float64                             `protobuf:"fixed64,5,opt,name=amount" json:"amount,omitempty"`
	TotalAmount    float64                             `protobuf:"fixed64,6,opt,name=total_amount,json=totalAmount" json:"total_amount,omitempty"`
	Currency       string                              `protobuf:"bytes,7,opt,name=currency" json:"currency,omitempty"`
	Project        *PaymentFormJsonDataProject         `protobuf:"bytes,8,opt,name=project" json:"project,omitempty"`
	PaymentMethods []*billing.PaymentFormPaymentMethod `protobuf:"bytes,9,rep,name=payment_methods,json=paymentMethods" json:"payment_methods,omitempty"`
	Token          string                              `protobuf:"bytes,11,opt,name=token" json:"token,omitempty"`
	// @inject_tag: json:"user_address_data_required"
	UserAddressDataRequired bool `protobuf:"varint,12,opt,name=user_address_data_required,json=userAddressDataRequired" json:"user_address_data_required"`
	// @inject_tag: json:"user_ip_data"
	UserIpData *billing.UserIpData `protobuf:"bytes,13,opt,name=user_ip_data,json=userIpData" json:"user_ip_data"`
	// @inject_tag: json:"items" validate="omitempty,gte=1,dive"
	Items []*billing.OrderItem `protobuf:"bytes,14,rep,name=items" json:"items"`
	// @inject_tag: json:"email"
	Email string `protobuf:"bytes,16,opt,name=email" json:"email"`
	// @inject_tag: json:"description"
	Description string `protobuf:"bytes,17,opt,name=description" json:"description"`
	// @inject_tag: json:"country_payments_allowed"
	CountryPaymentsAllowed bool `protobuf:"varint,18,opt,name=country_payments_allowed,json=countryPaymentsAllowed" json:"country_payments_allowed"`
	// @inject_tag: json:"country_change_allowed"
	CountryChangeAllowed bool `protobuf:"varint,19,opt,name=country_change_allowed,json=countryChangeAllowed" json:"country_change_allowed"`
	// @inject_tag: json:"platforms"
	Platforms []*Platform `protobuf:"bytes,20,rep,name=platforms" json:"platforms"`
	// @inject_tag: json:"lang"
	Lang string `protobuf:"bytes,21,opt,name=lang" json:"lang"`
	// @inject_tag: json:"is_already_processed"
	IsAlreadyProcessed bool `protobuf:"varint,22,opt,name=is_already_processed,json=isAlreadyProcessed" json:"is_already_processed"`
	// @inject_tag: json:"receipt_url"
	ReceiptUrl string `protobuf:"bytes,23,opt,name=receipt_url,json=receiptUrl" json:"receipt_url"`
	// @inject_tag: json:"type"
	Type string `protobuf:"bytes,24,opt,name=type" json:"type"`
	// @inject_tag: json:"charge_currency"
	ChargeCurrency string `protobuf:"bytes,25,opt,name=charge_currency,json=chargeCurrency" json:"charge_currency"`
	// @inject_tag: json:"charge_amount"
	ChargeAmount float64 `protobuf:"fixed64,26,opt,name=charge_amount,json=chargeAmount" json:"charge_amount"`
	// @inject_tag: json:"vat_in_charge_currency"
	VatInChargeCurrency float64 `protobuf:"fixed64,27,opt,name=vat_in_charge_currency,json=vatInChargeCurrency" json:"vat_in_charge_currency"`
	// @inject_tag: json:"vat_rate"
	VatRate float64 `protobuf:"fixed64,28,opt,name=vat_rate,json=vatRate" json:"vat_rate"`
	// @inject_tag: json:"vat_payer"
	VatPayer string `protobuf:"bytes,29,opt,name=vat_payer,json=vatPayer" json:"vat_payer"`
	// @inject_tag: json:"is_production"
	IsProduction bool `protobuf:"varint,30,opt,name=is_production,json=isProduction" json:"is_production"`
}

func (m *PaymentFormJsonData) Reset()                    { *m = PaymentFormJsonData{} }
func (m *PaymentFormJsonData) String() string            { return proto.CompactTextString(m) }
func (*PaymentFormJsonData) ProtoMessage()               {}
func (*PaymentFormJsonData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *PaymentFormJsonData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentFormJsonData) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *PaymentFormJsonData) GetHasVat() bool {
	if m != nil {
		return m.HasVat
	}
	return false
}

func (m *PaymentFormJsonData) GetVat() float64 {
	if m != nil {
		return m.Vat
	}
	return 0
}

func (m *PaymentFormJsonData) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PaymentFormJsonData) GetTotalAmount() float64 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

func (m *PaymentFormJsonData) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *PaymentFormJsonData) GetProject() *PaymentFormJsonDataProject {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *PaymentFormJsonData) GetPaymentMethods() []*billing.PaymentFormPaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

func (m *PaymentFormJsonData) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *PaymentFormJsonData) GetUserAddressDataRequired() bool {
	if m != nil {
		return m.UserAddressDataRequired
	}
	return false
}

func (m *PaymentFormJsonData) GetUserIpData() *billing.UserIpData {
	if m != nil {
		return m.UserIpData
	}
	return nil
}

func (m *PaymentFormJsonData) GetItems() []*billing.OrderItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *PaymentFormJsonData) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *PaymentFormJsonData) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PaymentFormJsonData) GetCountryPaymentsAllowed() bool {
	if m != nil {
		return m.CountryPaymentsAllowed
	}
	return false
}

func (m *PaymentFormJsonData) GetCountryChangeAllowed() bool {
	if m != nil {
		return m.CountryChangeAllowed
	}
	return false
}

func (m *PaymentFormJsonData) GetPlatforms() []*Platform {
	if m != nil {
		return m.Platforms
	}
	return nil
}

func (m *PaymentFormJsonData) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *PaymentFormJsonData) GetIsAlreadyProcessed() bool {
	if m != nil {
		return m.IsAlreadyProcessed
	}
	return false
}

func (m *PaymentFormJsonData) GetReceiptUrl() string {
	if m != nil {
		return m.ReceiptUrl
	}
	return ""
}

func (m *PaymentFormJsonData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PaymentFormJsonData) GetChargeCurrency() string {
	if m != nil {
		return m.ChargeCurrency
	}
	return ""
}

func (m *PaymentFormJsonData) GetChargeAmount() float64 {
	if m != nil {
		return m.ChargeAmount
	}
	return 0
}

func (m *PaymentFormJsonData) GetVatInChargeCurrency() float64 {
	if m != nil {
		return m.VatInChargeCurrency
	}
	return 0
}

func (m *PaymentFormJsonData) GetVatRate() float64 {
	if m != nil {
		return m.VatRate
	}
	return 0
}

func (m *PaymentFormJsonData) GetVatPayer() string {
	if m != nil {
		return m.VatPayer
	}
	return ""
}

func (m *PaymentFormJsonData) GetIsProduction() bool {
	if m != nil {
		return m.IsProduction
	}
	return false
}

type PaymentFormJsonDataResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"item"
	Item *PaymentFormJsonData `protobuf:"bytes,3,opt,name=item" json:"item"`
	// @inject_tag: json:"-"
	Cookie string `protobuf:"bytes,4,opt,name=cookie" json:"-"`
}

func (m *PaymentFormJsonDataResponse) Reset()                    { *m = PaymentFormJsonDataResponse{} }
func (m *PaymentFormJsonDataResponse) String() string            { return proto.CompactTextString(m) }
func (*PaymentFormJsonDataResponse) ProtoMessage()               {}
func (*PaymentFormJsonDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *PaymentFormJsonDataResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PaymentFormJsonDataResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PaymentFormJsonDataResponse) GetItem() *PaymentFormJsonData {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *PaymentFormJsonDataResponse) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

type PaymentNotifyRequest struct {
	OrderId   string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	Request   []byte `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
}

func (m *PaymentNotifyRequest) Reset()                    { *m = PaymentNotifyRequest{} }
func (m *PaymentNotifyRequest) String() string            { return proto.CompactTextString(m) }
func (*PaymentNotifyRequest) ProtoMessage()               {}
func (*PaymentNotifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *PaymentNotifyRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PaymentNotifyRequest) GetRequest() []byte {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *PaymentNotifyRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type PaymentNotifyResponse struct {
	Status int32  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *PaymentNotifyResponse) Reset()                    { *m = PaymentNotifyResponse{} }
func (m *PaymentNotifyResponse) String() string            { return proto.CompactTextString(m) }
func (*PaymentNotifyResponse) ProtoMessage()               {}
func (*PaymentNotifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *PaymentNotifyResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PaymentNotifyResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type OnboardingRequest struct {
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: validate:"required"
	User     *billing.MerchantUser        `protobuf:"bytes,2,opt,name=user" json:"user,omitempty" validate:"required"`
	Company  *billing.MerchantCompanyInfo `protobuf:"bytes,3,opt,name=company" json:"company,omitempty"`
	Contacts *billing.MerchantContact     `protobuf:"bytes,14,opt,name=contacts" json:"contacts,omitempty"`
	Banking  *billing.MerchantBanking     `protobuf:"bytes,15,opt,name=banking" json:"banking,omitempty"`
}

func (m *OnboardingRequest) Reset()                    { *m = OnboardingRequest{} }
func (m *OnboardingRequest) String() string            { return proto.CompactTextString(m) }
func (*OnboardingRequest) ProtoMessage()               {}
func (*OnboardingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *OnboardingRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OnboardingRequest) GetUser() *billing.MerchantUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *OnboardingRequest) GetCompany() *billing.MerchantCompanyInfo {
	if m != nil {
		return m.Company
	}
	return nil
}

func (m *OnboardingRequest) GetContacts() *billing.MerchantContact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *OnboardingRequest) GetBanking() *billing.MerchantBanking {
	if m != nil {
		return m.Banking
	}
	return nil
}

type FindByIdRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *FindByIdRequest) Reset()                    { *m = FindByIdRequest{} }
func (m *FindByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FindByIdRequest) ProtoMessage()               {}
func (*FindByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *FindByIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MerchantListingRequest struct {
	// @inject_tag: query:"name"
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty" query:"name"`
	IsSigned int32  `protobuf:"varint,2,opt,name=is_signed,json=isSigned" json:"is_signed,omitempty"`
	// @inject_tag: query:"last_payout_date_from" validate:"omitempty,numeric,gt=0"
	LastPayoutDateFrom int64 `protobuf:"varint,3,opt,name=last_payout_date_from,json=lastPayoutDateFrom" json:"last_payout_date_from,omitempty" query:"last_payout_date_from" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"last_payout_date_to" validate:"omitempty,numeric,gt=0"
	LastPayoutDateTo int64 `protobuf:"varint,4,opt,name=last_payout_date_to,json=lastPayoutDateTo" json:"last_payout_date_to,omitempty" query:"last_payout_date_to" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"last_payout_amount" validate:"omitempty,numeric"
	LastPayoutAmount float64 `protobuf:"fixed64,5,opt,name=last_payout_amount,json=lastPayoutAmount" json:"last_payout_amount,omitempty" query:"last_payout_amount" validate:"omitempty,numeric"`
	// @inject_tag: query:"sort[]"
	Sort []string `protobuf:"bytes,6,rep,name=sort" json:"sort,omitempty" query:"sort[]"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0"
	Limit int64 `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,8,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: query:"quick_search"
	QuickSearch string `protobuf:"bytes,9,opt,name=quick_search,json=quickSearch" json:"quick_search,omitempty" query:"quick_search"`
	// @inject_tag: query:"status[]"
	Statuses []int32 `protobuf:"varint,10,rep,packed,name=statuses" json:"statuses,omitempty" query:"status[]"`
	// @inject_tag: query:"registration_date_from" validate:"omitempty,numeric,gt=0"
	RegistrationDateFrom int64 `protobuf:"varint,11,opt,name=registration_date_from,json=registrationDateFrom" json:"registration_date_from,omitempty" query:"registration_date_from" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"registration_date_to" validate:"omitempty,numeric,gt=0"
	RegistrationDateTo int64 `protobuf:"varint,12,opt,name=registration_date_to,json=registrationDateTo" json:"registration_date_to,omitempty" query:"registration_date_to" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"received_date_from" validate:"omitempty,numeric,gt=0"
	ReceivedDateFrom int64 `protobuf:"varint,13,opt,name=received_date_from,json=receivedDateFrom" json:"received_date_from,omitempty" query:"received_date_from" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"received_date_to" validate:"omitempty,numeric,gt=0"
	ReceivedDateTo int64 `protobuf:"varint,14,opt,name=received_date_to,json=receivedDateTo" json:"received_date_to,omitempty" query:"received_date_to" validate:"omitempty,numeric,gt=0"`
}

func (m *MerchantListingRequest) Reset()                    { *m = MerchantListingRequest{} }
func (m *MerchantListingRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantListingRequest) ProtoMessage()               {}
func (*MerchantListingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *MerchantListingRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantListingRequest) GetIsSigned() int32 {
	if m != nil {
		return m.IsSigned
	}
	return 0
}

func (m *MerchantListingRequest) GetLastPayoutDateFrom() int64 {
	if m != nil {
		return m.LastPayoutDateFrom
	}
	return 0
}

func (m *MerchantListingRequest) GetLastPayoutDateTo() int64 {
	if m != nil {
		return m.LastPayoutDateTo
	}
	return 0
}

func (m *MerchantListingRequest) GetLastPayoutAmount() float64 {
	if m != nil {
		return m.LastPayoutAmount
	}
	return 0
}

func (m *MerchantListingRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *MerchantListingRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *MerchantListingRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *MerchantListingRequest) GetQuickSearch() string {
	if m != nil {
		return m.QuickSearch
	}
	return ""
}

func (m *MerchantListingRequest) GetStatuses() []int32 {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func (m *MerchantListingRequest) GetRegistrationDateFrom() int64 {
	if m != nil {
		return m.RegistrationDateFrom
	}
	return 0
}

func (m *MerchantListingRequest) GetRegistrationDateTo() int64 {
	if m != nil {
		return m.RegistrationDateTo
	}
	return 0
}

func (m *MerchantListingRequest) GetReceivedDateFrom() int64 {
	if m != nil {
		return m.ReceivedDateFrom
	}
	return 0
}

func (m *MerchantListingRequest) GetReceivedDateTo() int64 {
	if m != nil {
		return m.ReceivedDateTo
	}
	return 0
}

type MerchantListingResponse struct {
	// @inject_tag: json:"count"
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*billing.Merchant `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *MerchantListingResponse) Reset()                    { *m = MerchantListingResponse{} }
func (m *MerchantListingResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantListingResponse) ProtoMessage()               {}
func (*MerchantListingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *MerchantListingResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *MerchantListingResponse) GetItems() []*billing.Merchant {
	if m != nil {
		return m.Items
	}
	return nil
}

type MerchantChangeStatusRequest struct {
	// @inject_tag: validate:"required,hexadecimal"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// @inject_tag: validate:"omitempty,numeric,oneof=5 6"
	Status  int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty" validate:"omitempty,numeric,oneof=5 6"`
	Message string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
}

func (m *MerchantChangeStatusRequest) Reset()                    { *m = MerchantChangeStatusRequest{} }
func (m *MerchantChangeStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantChangeStatusRequest) ProtoMessage()               {}
func (*MerchantChangeStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *MerchantChangeStatusRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *MerchantChangeStatusRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *MerchantChangeStatusRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MerchantChangeStatusRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type NotificationRequest struct {
	// @inject_tag: validate:"required,hexadecimal"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// @inject_tag: validate:"required"
	Title string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty" validate:"required"`
	// @inject_tag: validate:"required"
	Message string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty" validate:"required"`
}

func (m *NotificationRequest) Reset()                    { *m = NotificationRequest{} }
func (m *NotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*NotificationRequest) ProtoMessage()               {}
func (*NotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *NotificationRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *NotificationRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *NotificationRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NotificationRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Notifications struct {
	// @inject_tag: json:"count"
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*billing.Notification `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *Notifications) Reset()                    { *m = Notifications{} }
func (m *Notifications) String() string            { return proto.CompactTextString(m) }
func (*Notifications) ProtoMessage()               {}
func (*Notifications) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *Notifications) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Notifications) GetItems() []*billing.Notification {
	if m != nil {
		return m.Items
	}
	return nil
}

type ListingNotificationRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"user" validate:"omitempty,hexadecimal,len=24"
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty" query:"user" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: validate:"omitempty,numeric,oneof=1 2"
	IsSystem int32 `protobuf:"varint,3,opt,name=is_system,json=isSystem" json:"is_system,omitempty" validate:"omitempty,numeric,oneof=1 2"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0"
	Limit int64 `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: query:"sort[]"
	Sort []string `protobuf:"bytes,6,rep,name=sort" json:"sort,omitempty" query:"sort[]"`
}

func (m *ListingNotificationRequest) Reset()                    { *m = ListingNotificationRequest{} }
func (m *ListingNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*ListingNotificationRequest) ProtoMessage()               {}
func (*ListingNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *ListingNotificationRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ListingNotificationRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ListingNotificationRequest) GetIsSystem() int32 {
	if m != nil {
		return m.IsSystem
	}
	return 0
}

func (m *ListingNotificationRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListingNotificationRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListingNotificationRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

type ListingMerchantPaymentMethod struct {
	PaymentMethods []*billing.MerchantPaymentMethod `protobuf:"bytes,1,rep,name=payment_methods,json=paymentMethods" json:"payment_methods,omitempty"`
}

func (m *ListingMerchantPaymentMethod) Reset()                    { *m = ListingMerchantPaymentMethod{} }
func (m *ListingMerchantPaymentMethod) String() string            { return proto.CompactTextString(m) }
func (*ListingMerchantPaymentMethod) ProtoMessage()               {}
func (*ListingMerchantPaymentMethod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *ListingMerchantPaymentMethod) GetPaymentMethods() []*billing.MerchantPaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

type GetMerchantPaymentMethodRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"payment_method_id", validate:"required,hexadecimal,len=24"
	PaymentMethodId string `protobuf:"bytes,2,opt,name=payment_method_id,json=paymentMethodId" json:"payment_method_id,omitempty" query:"payment_method_id" validate:"required,hexadecimal,len=24"`
}

func (m *GetMerchantPaymentMethodRequest) Reset()         { *m = GetMerchantPaymentMethodRequest{} }
func (m *GetMerchantPaymentMethodRequest) String() string { return proto.CompactTextString(m) }
func (*GetMerchantPaymentMethodRequest) ProtoMessage()    {}
func (*GetMerchantPaymentMethodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{40}
}

func (m *GetMerchantPaymentMethodRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetMerchantPaymentMethodRequest) GetPaymentMethodId() string {
	if m != nil {
		return m.PaymentMethodId
	}
	return ""
}

type GetMerchantPaymentMethodResponse struct {
	Status  int32                          `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.MerchantPaymentMethod `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetMerchantPaymentMethodResponse) Reset()         { *m = GetMerchantPaymentMethodResponse{} }
func (m *GetMerchantPaymentMethodResponse) String() string { return proto.CompactTextString(m) }
func (*GetMerchantPaymentMethodResponse) ProtoMessage()    {}
func (*GetMerchantPaymentMethodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{41}
}

func (m *GetMerchantPaymentMethodResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetMerchantPaymentMethodResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetMerchantPaymentMethodResponse) GetItem() *billing.MerchantPaymentMethod {
	if m != nil {
		return m.Item
	}
	return nil
}

type ListMerchantPaymentMethodsRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"method_name"
	PaymentMethodName string `protobuf:"bytes,2,opt,name=payment_method_name,json=paymentMethodName" json:"payment_method_name,omitempty" query:"method_name"`
	// @inject_tag: query:"sort[]"
	Sort []string `protobuf:"bytes,3,rep,name=sort" json:"sort,omitempty" query:"sort[]"`
}

func (m *ListMerchantPaymentMethodsRequest) Reset()         { *m = ListMerchantPaymentMethodsRequest{} }
func (m *ListMerchantPaymentMethodsRequest) String() string { return proto.CompactTextString(m) }
func (*ListMerchantPaymentMethodsRequest) ProtoMessage()    {}
func (*ListMerchantPaymentMethodsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{42}
}

func (m *ListMerchantPaymentMethodsRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ListMerchantPaymentMethodsRequest) GetPaymentMethodName() string {
	if m != nil {
		return m.PaymentMethodName
	}
	return ""
}

func (m *ListMerchantPaymentMethodsRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

type MerchantPaymentMethodRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,dive"
	PaymentMethod *billing.MerchantPaymentMethodIdentification `protobuf:"bytes,3,opt,name=payment_method,json=paymentMethod" json:"payment_method,omitempty" validate:"required,dive"`
	// @inject_tag: validate:"required,dive"
	Commission *billing.MerchantPaymentMethodCommissions `protobuf:"bytes,4,opt,name=commission" json:"commission,omitempty" validate:"required,dive"`
	// @inject_tag: validate:"required,dive"
	Integration *billing.MerchantPaymentMethodIntegration `protobuf:"bytes,5,opt,name=integration" json:"integration,omitempty" validate:"required,dive"`
	// @inject_tag: validate:"required"
	IsActive bool `protobuf:"varint,6,opt,name=is_active,json=isActive" json:"is_active,omitempty" validate:"required"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	UserId string `protobuf:"bytes,7,opt,name=user_id,json=userId" json:"user_id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *MerchantPaymentMethodRequest) Reset()                    { *m = MerchantPaymentMethodRequest{} }
func (m *MerchantPaymentMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodRequest) ProtoMessage()               {}
func (*MerchantPaymentMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *MerchantPaymentMethodRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *MerchantPaymentMethodRequest) GetPaymentMethod() *billing.MerchantPaymentMethodIdentification {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *MerchantPaymentMethodRequest) GetCommission() *billing.MerchantPaymentMethodCommissions {
	if m != nil {
		return m.Commission
	}
	return nil
}

func (m *MerchantPaymentMethodRequest) GetIntegration() *billing.MerchantPaymentMethodIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

func (m *MerchantPaymentMethodRequest) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *MerchantPaymentMethodRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type MerchantPaymentMethodResponse struct {
	Status  int32                          `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.MerchantPaymentMethod `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *MerchantPaymentMethodResponse) Reset()                    { *m = MerchantPaymentMethodResponse{} }
func (m *MerchantPaymentMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodResponse) ProtoMessage()               {}
func (*MerchantPaymentMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *MerchantPaymentMethodResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MerchantPaymentMethodResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *MerchantPaymentMethodResponse) GetItem() *billing.MerchantPaymentMethod {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetMerchantResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Merchant     `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetMerchantResponse) Reset()                    { *m = GetMerchantResponse{} }
func (m *GetMerchantResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantResponse) ProtoMessage()               {}
func (*GetMerchantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *GetMerchantResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetMerchantResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetMerchantResponse) GetItem() *billing.Merchant {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetNotificationRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"merchant_id"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24" param:"merchant_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"notification_id"
	NotificationId string `protobuf:"bytes,2,opt,name=notification_id,json=notificationId" json:"notification_id,omitempty" validate:"required,hexadecimal,len=24" param:"notification_id"`
}

func (m *GetNotificationRequest) Reset()                    { *m = GetNotificationRequest{} }
func (m *GetNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetNotificationRequest) ProtoMessage()               {}
func (*GetNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *GetNotificationRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetNotificationRequest) GetNotificationId() string {
	if m != nil {
		return m.NotificationId
	}
	return ""
}

type CreateRefundRequest struct {
	// @inject_tag: validate:"required,uuid"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid"`
	// @inject_tag: validate:"required,numeric,gt=0"
	Amount       float64 `protobuf:"fixed64,2,opt,name=amount" json:"amount,omitempty" validate:"required,numeric,gt=0"`
	CreatorId    string  `protobuf:"bytes,3,opt,name=creator_id,json=creatorId" json:"creator_id,omitempty"`
	Reason       string  `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
	IsChargeback bool    `protobuf:"varint,5,opt,name=is_chargeback,json=isChargeback" json:"is_chargeback,omitempty"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,6,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *CreateRefundRequest) Reset()                    { *m = CreateRefundRequest{} }
func (m *CreateRefundRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRefundRequest) ProtoMessage()               {}
func (*CreateRefundRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *CreateRefundRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *CreateRefundRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreateRefundRequest) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

func (m *CreateRefundRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *CreateRefundRequest) GetIsChargeback() bool {
	if m != nil {
		return m.IsChargeback
	}
	return false
}

func (m *CreateRefundRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type CreateRefundResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Refund       `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *CreateRefundResponse) Reset()                    { *m = CreateRefundResponse{} }
func (m *CreateRefundResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateRefundResponse) ProtoMessage()               {}
func (*CreateRefundResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *CreateRefundResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CreateRefundResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *CreateRefundResponse) GetItem() *billing.Refund {
	if m != nil {
		return m.Item
	}
	return nil
}

type ListRefundsRequest struct {
	// @inject_tag: validate:"required,uuid" param:"order_id"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid" param:"order_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0"
	Limit int64 `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,8,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
}

func (m *ListRefundsRequest) Reset()                    { *m = ListRefundsRequest{} }
func (m *ListRefundsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRefundsRequest) ProtoMessage()               {}
func (*ListRefundsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *ListRefundsRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ListRefundsRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ListRefundsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRefundsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ListRefundsResponse struct {
	// @inject_tag: json:"count"
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*billing.Refund `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *ListRefundsResponse) Reset()                    { *m = ListRefundsResponse{} }
func (m *ListRefundsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListRefundsResponse) ProtoMessage()               {}
func (*ListRefundsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *ListRefundsResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListRefundsResponse) GetItems() []*billing.Refund {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetRefundRequest struct {
	// @inject_tag: validate:"required,uuid" param:"order_id"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid" param:"order_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"refund_id"
	RefundId string `protobuf:"bytes,2,opt,name=refund_id,json=refundId" json:"refund_id,omitempty" validate:"required,hexadecimal,len=24" param:"refund_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,3,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *GetRefundRequest) Reset()                    { *m = GetRefundRequest{} }
func (m *GetRefundRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRefundRequest) ProtoMessage()               {}
func (*GetRefundRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *GetRefundRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *GetRefundRequest) GetRefundId() string {
	if m != nil {
		return m.RefundId
	}
	return ""
}

func (m *GetRefundRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type CallbackRequest struct {
	Handler   string `protobuf:"bytes,1,opt,name=handler" json:"handler,omitempty"`
	Body      []byte `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
}

func (m *CallbackRequest) Reset()                    { *m = CallbackRequest{} }
func (m *CallbackRequest) String() string            { return proto.CompactTextString(m) }
func (*CallbackRequest) ProtoMessage()               {}
func (*CallbackRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *CallbackRequest) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

func (m *CallbackRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *CallbackRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type PaymentFormDataChangedRequest struct {
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	Lang    string `protobuf:"bytes,2,opt,name=lang" json:"lang,omitempty"`
	Account string `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
}

func (m *PaymentFormDataChangedRequest) Reset()                    { *m = PaymentFormDataChangedRequest{} }
func (m *PaymentFormDataChangedRequest) String() string            { return proto.CompactTextString(m) }
func (*PaymentFormDataChangedRequest) ProtoMessage()               {}
func (*PaymentFormDataChangedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *PaymentFormDataChangedRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PaymentFormDataChangedRequest) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *PaymentFormDataChangedRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

type PaymentFormUserChangePlatformRequest struct {
	// @inject_tag: validate:"required,uuid" param:"order_id"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid" param:"order_id"`
	// @inject_tag: validate:"required,min=2,max=255"
	Platform string `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty" validate:"required,min=2,max=255"`
}

func (m *PaymentFormUserChangePlatformRequest) Reset()         { *m = PaymentFormUserChangePlatformRequest{} }
func (m *PaymentFormUserChangePlatformRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentFormUserChangePlatformRequest) ProtoMessage()    {}
func (*PaymentFormUserChangePlatformRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{54}
}

func (m *PaymentFormUserChangePlatformRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PaymentFormUserChangePlatformRequest) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type PaymentFormUserChangeLangRequest struct {
	// @inject_tag: validate:"required,uuid" param:"order_id"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid" param:"order_id"`
	// @inject_tag: validate:"required,len=2"
	Lang           string `protobuf:"bytes,2,opt,name=lang" json:"lang,omitempty" validate:"required,len=2"`
	Ip             string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	AcceptLanguage string `protobuf:"bytes,4,opt,name=accept_language,json=acceptLanguage" json:"accept_language,omitempty"`
	UserAgent      string `protobuf:"bytes,5,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
}

func (m *PaymentFormUserChangeLangRequest) Reset()         { *m = PaymentFormUserChangeLangRequest{} }
func (m *PaymentFormUserChangeLangRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentFormUserChangeLangRequest) ProtoMessage()    {}
func (*PaymentFormUserChangeLangRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{55}
}

func (m *PaymentFormUserChangeLangRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PaymentFormUserChangeLangRequest) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *PaymentFormUserChangeLangRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *PaymentFormUserChangeLangRequest) GetAcceptLanguage() string {
	if m != nil {
		return m.AcceptLanguage
	}
	return ""
}

func (m *PaymentFormUserChangeLangRequest) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

type PaymentFormUserChangePaymentAccountRequest struct {
	// @inject_tag: validate:"required,uuid" param:"order_id"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid" param:"order_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MethodId string `protobuf:"bytes,2,opt,name=method_id,json=methodId" json:"method_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required"
	Account        string `protobuf:"bytes,3,opt,name=account" json:"account,omitempty" validate:"required"`
	Ip             string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	AcceptLanguage string `protobuf:"bytes,5,opt,name=accept_language,json=acceptLanguage" json:"accept_language,omitempty"`
	UserAgent      string `protobuf:"bytes,6,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
}

func (m *PaymentFormUserChangePaymentAccountRequest) Reset() {
	*m = PaymentFormUserChangePaymentAccountRequest{}
}
func (m *PaymentFormUserChangePaymentAccountRequest) String() string {
	return proto.CompactTextString(m)
}
func (*PaymentFormUserChangePaymentAccountRequest) ProtoMessage() {}
func (*PaymentFormUserChangePaymentAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{56}
}

func (m *PaymentFormUserChangePaymentAccountRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *PaymentFormUserChangePaymentAccountRequest) GetMethodId() string {
	if m != nil {
		return m.MethodId
	}
	return ""
}

func (m *PaymentFormUserChangePaymentAccountRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *PaymentFormUserChangePaymentAccountRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *PaymentFormUserChangePaymentAccountRequest) GetAcceptLanguage() string {
	if m != nil {
		return m.AcceptLanguage
	}
	return ""
}

func (m *PaymentFormUserChangePaymentAccountRequest) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

type PaymentFormDataChangeResponse struct {
	Status  int32                                      `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage                      `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.PaymentFormDataChangeResponseItem `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *PaymentFormDataChangeResponse) Reset()                    { *m = PaymentFormDataChangeResponse{} }
func (m *PaymentFormDataChangeResponse) String() string            { return proto.CompactTextString(m) }
func (*PaymentFormDataChangeResponse) ProtoMessage()               {}
func (*PaymentFormDataChangeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *PaymentFormDataChangeResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PaymentFormDataChangeResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PaymentFormDataChangeResponse) GetItem() *billing.PaymentFormDataChangeResponseItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type ProcessBillingAddressRequest struct {
	// @inject_tag: validate:"required,uuid" param:"order_id"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid" param:"order_id"`
	// @inject_tag: validate:"required,len=2"
	Country string `protobuf:"bytes,2,opt,name=country" json:"country,omitempty" validate:"required,len=2"`
	// @inject_tag: validate:"omitempty,zip_usa"
	Zip    string `protobuf:"bytes,4,opt,name=zip" json:"zip,omitempty" validate:"omitempty,zip_usa"`
	Ip     string `protobuf:"bytes,5,opt,name=ip" json:"ip,omitempty"`
	Cookie string `protobuf:"bytes,6,opt,name=cookie" json:"cookie,omitempty"`
}

func (m *ProcessBillingAddressRequest) Reset()                    { *m = ProcessBillingAddressRequest{} }
func (m *ProcessBillingAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*ProcessBillingAddressRequest) ProtoMessage()               {}
func (*ProcessBillingAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *ProcessBillingAddressRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ProcessBillingAddressRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *ProcessBillingAddressRequest) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *ProcessBillingAddressRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ProcessBillingAddressRequest) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

type ProcessBillingAddressResponseItem struct {
	// @inject_tag: json:"has_vat"
	HasVat bool `protobuf:"varint,2,opt,name=has_vat,json=hasVat" json:"has_vat"`
	// @inject_tag: json:"vat"
	Vat float64 `protobuf:"fixed64,3,opt,name=vat" json:"vat"`
	// @inject_tag: json:"amount"
	Amount float64 `protobuf:"fixed64,4,opt,name=amount" json:"amount"`
	// @inject_tag: json:"total_amount"
	TotalAmount float64 `protobuf:"fixed64,5,opt,name=total_amount,json=totalAmount" json:"total_amount"`
	// @inject_tag: json:"currency"
	Currency string `protobuf:"bytes,6,opt,name=currency" json:"currency"`
	// @inject_tag: json:"items"
	Items []*billing.OrderItem `protobuf:"bytes,7,rep,name=items" json:"items"`
	// @inject_tag: json:"charge_currency"
	ChargeCurrency string `protobuf:"bytes,8,opt,name=charge_currency,json=chargeCurrency" json:"charge_currency"`
	// @inject_tag: json:"charge_amount"
	ChargeAmount float64 `protobuf:"fixed64,9,opt,name=charge_amount,json=chargeAmount" json:"charge_amount"`
	// @inject_tag: json:"vat_in_charge_currency"
	VatInChargeCurrency float64 `protobuf:"fixed64,10,opt,name=vat_in_charge_currency,json=vatInChargeCurrency" json:"vat_in_charge_currency"`
	// @inject_tag: json:"country_change_allowed"
	CountryChangeAllowed bool `protobuf:"varint,11,opt,name=country_change_allowed,json=countryChangeAllowed" json:"country_change_allowed"`
	// @inject_tag: json:"vat_rate"
	VatRate float64 `protobuf:"fixed64,12,opt,name=vat_rate,json=vatRate" json:"vat_rate"`
}

func (m *ProcessBillingAddressResponseItem) Reset()         { *m = ProcessBillingAddressResponseItem{} }
func (m *ProcessBillingAddressResponseItem) String() string { return proto.CompactTextString(m) }
func (*ProcessBillingAddressResponseItem) ProtoMessage()    {}
func (*ProcessBillingAddressResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{59}
}

func (m *ProcessBillingAddressResponseItem) GetHasVat() bool {
	if m != nil {
		return m.HasVat
	}
	return false
}

func (m *ProcessBillingAddressResponseItem) GetVat() float64 {
	if m != nil {
		return m.Vat
	}
	return 0
}

func (m *ProcessBillingAddressResponseItem) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ProcessBillingAddressResponseItem) GetTotalAmount() float64 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

func (m *ProcessBillingAddressResponseItem) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *ProcessBillingAddressResponseItem) GetItems() []*billing.OrderItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ProcessBillingAddressResponseItem) GetChargeCurrency() string {
	if m != nil {
		return m.ChargeCurrency
	}
	return ""
}

func (m *ProcessBillingAddressResponseItem) GetChargeAmount() float64 {
	if m != nil {
		return m.ChargeAmount
	}
	return 0
}

func (m *ProcessBillingAddressResponseItem) GetVatInChargeCurrency() float64 {
	if m != nil {
		return m.VatInChargeCurrency
	}
	return 0
}

func (m *ProcessBillingAddressResponseItem) GetCountryChangeAllowed() bool {
	if m != nil {
		return m.CountryChangeAllowed
	}
	return false
}

func (m *ProcessBillingAddressResponseItem) GetVatRate() float64 {
	if m != nil {
		return m.VatRate
	}
	return 0
}

type ProcessBillingAddressResponse struct {
	Status  int32                              `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage              `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *ProcessBillingAddressResponseItem `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
	// @inject_tag: json:"-"
	Cookie string `protobuf:"bytes,4,opt,name=cookie" json:"-"`
}

func (m *ProcessBillingAddressResponse) Reset()                    { *m = ProcessBillingAddressResponse{} }
func (m *ProcessBillingAddressResponse) String() string            { return proto.CompactTextString(m) }
func (*ProcessBillingAddressResponse) ProtoMessage()               {}
func (*ProcessBillingAddressResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *ProcessBillingAddressResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ProcessBillingAddressResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ProcessBillingAddressResponse) GetItem() *ProcessBillingAddressResponseItem {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ProcessBillingAddressResponse) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

type GetMerchantByRequest struct {
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetMerchantByRequest) Reset()                    { *m = GetMerchantByRequest{} }
func (m *GetMerchantByRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantByRequest) ProtoMessage()               {}
func (*GetMerchantByRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *GetMerchantByRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetMerchantByRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ChangeMerchantDataRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId           string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	HasMerchantSignature bool   `protobuf:"varint,3,opt,name=has_merchant_signature,json=hasMerchantSignature" json:"has_merchant_signature,omitempty"`
	HasPspSignature      bool   `protobuf:"varint,4,opt,name=has_psp_signature,json=hasPspSignature" json:"has_psp_signature,omitempty"`
}

func (m *ChangeMerchantDataRequest) Reset()                    { *m = ChangeMerchantDataRequest{} }
func (m *ChangeMerchantDataRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeMerchantDataRequest) ProtoMessage()               {}
func (*ChangeMerchantDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *ChangeMerchantDataRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ChangeMerchantDataRequest) GetHasMerchantSignature() bool {
	if m != nil {
		return m.HasMerchantSignature
	}
	return false
}

func (m *ChangeMerchantDataRequest) GetHasPspSignature() bool {
	if m != nil {
		return m.HasPspSignature
	}
	return false
}

type ChangeMerchantDataResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Merchant     `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *ChangeMerchantDataResponse) Reset()                    { *m = ChangeMerchantDataResponse{} }
func (m *ChangeMerchantDataResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangeMerchantDataResponse) ProtoMessage()               {}
func (*ChangeMerchantDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *ChangeMerchantDataResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ChangeMerchantDataResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ChangeMerchantDataResponse) GetItem() *billing.Merchant {
	if m != nil {
		return m.Item
	}
	return nil
}

type ChangeMerchantResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Merchant     `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *ChangeMerchantResponse) Reset()                    { *m = ChangeMerchantResponse{} }
func (m *ChangeMerchantResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangeMerchantResponse) ProtoMessage()               {}
func (*ChangeMerchantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *ChangeMerchantResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ChangeMerchantResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ChangeMerchantResponse) GetItem() *billing.Merchant {
	if m != nil {
		return m.Item
	}
	return nil
}

type ChangeMerchantStatusResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Merchant     `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *ChangeMerchantStatusResponse) Reset()                    { *m = ChangeMerchantStatusResponse{} }
func (m *ChangeMerchantStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangeMerchantStatusResponse) ProtoMessage()               {}
func (*ChangeMerchantStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *ChangeMerchantStatusResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ChangeMerchantStatusResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ChangeMerchantStatusResponse) GetItem() *billing.Merchant {
	if m != nil {
		return m.Item
	}
	return nil
}

type CreateNotificationResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Notification `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *CreateNotificationResponse) Reset()                    { *m = CreateNotificationResponse{} }
func (m *CreateNotificationResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateNotificationResponse) ProtoMessage()               {}
func (*CreateNotificationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *CreateNotificationResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CreateNotificationResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *CreateNotificationResponse) GetItem() *billing.Notification {
	if m != nil {
		return m.Item
	}
	return nil
}

type OrderCreateProcessResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Order        `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *OrderCreateProcessResponse) Reset()                    { *m = OrderCreateProcessResponse{} }
func (m *OrderCreateProcessResponse) String() string            { return proto.CompactTextString(m) }
func (*OrderCreateProcessResponse) ProtoMessage()               {}
func (*OrderCreateProcessResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *OrderCreateProcessResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OrderCreateProcessResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *OrderCreateProcessResponse) GetItem() *billing.Order {
	if m != nil {
		return m.Item
	}
	return nil
}

type SetMerchantS3AgreementRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"-"
	S3AgreementName string `protobuf:"bytes,2,opt,name=s3_agreement_name,json=s3AgreementName" json:"-"`
}

func (m *SetMerchantS3AgreementRequest) Reset()                    { *m = SetMerchantS3AgreementRequest{} }
func (m *SetMerchantS3AgreementRequest) String() string            { return proto.CompactTextString(m) }
func (*SetMerchantS3AgreementRequest) ProtoMessage()               {}
func (*SetMerchantS3AgreementRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *SetMerchantS3AgreementRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *SetMerchantS3AgreementRequest) GetS3AgreementName() string {
	if m != nil {
		return m.S3AgreementName
	}
	return ""
}

type KeyProductInfo struct {
	Id              string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ProjectId       string               `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Name            string               `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description     string               `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	LongDescription string               `protobuf:"bytes,5,opt,name=long_description,json=longDescription" json:"long_description,omitempty"`
	Images          []string             `protobuf:"bytes,6,rep,name=images" json:"images,omitempty"`
	Platforms       []*PlatformPriceInfo `protobuf:"bytes,7,rep,name=platforms" json:"platforms,omitempty"`
}

func (m *KeyProductInfo) Reset()                    { *m = KeyProductInfo{} }
func (m *KeyProductInfo) String() string            { return proto.CompactTextString(m) }
func (*KeyProductInfo) ProtoMessage()               {}
func (*KeyProductInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *KeyProductInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *KeyProductInfo) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *KeyProductInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *KeyProductInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *KeyProductInfo) GetLongDescription() string {
	if m != nil {
		return m.LongDescription
	}
	return ""
}

func (m *KeyProductInfo) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *KeyProductInfo) GetPlatforms() []*PlatformPriceInfo {
	if m != nil {
		return m.Platforms
	}
	return nil
}

type PlatformPriceInfo struct {
	Id    string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name  string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Price *ProductPriceInfo `protobuf:"bytes,3,opt,name=price" json:"price,omitempty"`
}

func (m *PlatformPriceInfo) Reset()                    { *m = PlatformPriceInfo{} }
func (m *PlatformPriceInfo) String() string            { return proto.CompactTextString(m) }
func (*PlatformPriceInfo) ProtoMessage()               {}
func (*PlatformPriceInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *PlatformPriceInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PlatformPriceInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlatformPriceInfo) GetPrice() *ProductPriceInfo {
	if m != nil {
		return m.Price
	}
	return nil
}

type ProductPriceInfo struct {
	Amount     float64 `protobuf:"fixed64,1,opt,name=amount" json:"amount,omitempty"`
	Currency   string  `protobuf:"bytes,2,opt,name=currency" json:"currency,omitempty"`
	Region     string  `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	IsFallback bool    `protobuf:"varint,4,opt,name=is_fallback,json=isFallback" json:"is_fallback,omitempty"`
}

func (m *ProductPriceInfo) Reset()                    { *m = ProductPriceInfo{} }
func (m *ProductPriceInfo) String() string            { return proto.CompactTextString(m) }
func (*ProductPriceInfo) ProtoMessage()               {}
func (*ProductPriceInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *ProductPriceInfo) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ProductPriceInfo) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *ProductPriceInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *ProductPriceInfo) GetIsFallback() bool {
	if m != nil {
		return m.IsFallback
	}
	return false
}

type KeyProduct struct {
	// @inject_tag: validate:"omitempty,hexadecimal,len=24" json:"id"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"-"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"-" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"project_id"
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId" json:"project_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"omitempty" json:"object"
	Object string `protobuf:"bytes,4,opt,name=object" json:"object" validate:"omitempty"`
	// @inject_tag: validate:"required" json:"sku"
	Sku string `protobuf:"bytes,5,opt,name=sku" json:"sku" validate:"required"`
	// @inject_tag: validate:"required" json:"name"
	Name map[string]string `protobuf:"bytes,6,rep,name=name" json:"name" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validate:"required"`
	// @inject_tag: validate:"required,alpha,len=3" json:"default_currency"
	DefaultCurrency string `protobuf:"bytes,7,opt,name=default_currency,json=defaultCurrency" json:"default_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"enabled"
	Enabled bool `protobuf:"varint,8,opt,name=enabled" json:"enabled"`
	// @inject_tag: validate:"required,min=1,dive" json:"platforms"
	Platforms []*PlatformPrice `protobuf:"bytes,9,rep,name=platforms" json:"platforms" validate:"required,min=1,dive"`
	// @inject_tag: validate:"required" json:"description"
	Description map[string]string `protobuf:"bytes,10,rep,name=description" json:"description" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validate:"required"`
	// @inject_tag: validate:"omitempty" json:"long_description"
	LongDescription map[string]string `protobuf:"bytes,11,rep,name=long_description,json=longDescription" json:"long_description" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validate:"omitempty"`
	// @inject_tag: json:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt" json:"created_at"`
	// @inject_tag: json:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt" json:"updated_at"`
	// @inject_tag: json:"cover"
	Cover *billing.ImageCollection `protobuf:"bytes,14,opt,name=cover" json:"cover"`
	// @inject_tag: validate:"omitempty,url" json:"url"
	Url string `protobuf:"bytes,15,opt,name=url" json:"url" validate:"omitempty,url"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,16,rep,name=metadata" json:"metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// @inject_tag: json:"-"
	Deleted bool `protobuf:"varint,17,opt,name=deleted" json:"-"`
	// @inject_tag: json:"published_at"
	PublishedAt *google_protobuf.Timestamp `protobuf:"bytes,18,opt,name=published_at,json=publishedAt" json:"published_at"`
	// @inject_tag: json:"pricing" validate:"required,oneof=currency manual steam default"
	Pricing string `protobuf:"bytes,19,opt,name=pricing" json:"pricing" validate:"required,oneof=currency manual steam default"`
}

func (m *KeyProduct) Reset()                    { *m = KeyProduct{} }
func (m *KeyProduct) String() string            { return proto.CompactTextString(m) }
func (*KeyProduct) ProtoMessage()               {}
func (*KeyProduct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *KeyProduct) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *KeyProduct) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *KeyProduct) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *KeyProduct) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *KeyProduct) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *KeyProduct) GetName() map[string]string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *KeyProduct) GetDefaultCurrency() string {
	if m != nil {
		return m.DefaultCurrency
	}
	return ""
}

func (m *KeyProduct) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *KeyProduct) GetPlatforms() []*PlatformPrice {
	if m != nil {
		return m.Platforms
	}
	return nil
}

func (m *KeyProduct) GetDescription() map[string]string {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *KeyProduct) GetLongDescription() map[string]string {
	if m != nil {
		return m.LongDescription
	}
	return nil
}

func (m *KeyProduct) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *KeyProduct) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *KeyProduct) GetCover() *billing.ImageCollection {
	if m != nil {
		return m.Cover
	}
	return nil
}

func (m *KeyProduct) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *KeyProduct) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *KeyProduct) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *KeyProduct) GetPublishedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.PublishedAt
	}
	return nil
}

func (m *KeyProduct) GetPricing() string {
	if m != nil {
		return m.Pricing
	}
	return ""
}

type PlatformPrice struct {
	// @inject_tag: validate:"required" json:"id"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id" validate:"required"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,2,opt,name=name" json:"name"`
	// @inject_tag: validate:"required,min=1,currency_price,dive" json:"prices"
	Prices []*billing.ProductPrice `protobuf:"bytes,3,rep,name=prices" json:"prices" validate:"required,min=1,currency_price,dive"`
	// @inject_tag: validate:"omitempty,url" json:"eula_url"
	EulaUrl string `protobuf:"bytes,4,opt,name=eula_url,json=eulaUrl" json:"eula_url" validate:"omitempty,url"`
	// @inject_tag: validate:"omitempty,url" json:"activation_url"
	ActivationUrl string `protobuf:"bytes,5,opt,name=activation_url,json=activationUrl" json:"activation_url" validate:"omitempty,url"`
	// count is used only in listing of key products for merchant. in all other keys will be empty always
	// @inject_tag: validate:"omitempty" json:"count"
	Count int32 `protobuf:"varint,6,opt,name=count" json:"count" validate:"omitempty"`
}

func (m *PlatformPrice) Reset()                    { *m = PlatformPrice{} }
func (m *PlatformPrice) String() string            { return proto.CompactTextString(m) }
func (*PlatformPrice) ProtoMessage()               {}
func (*PlatformPrice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *PlatformPrice) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PlatformPrice) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlatformPrice) GetPrices() []*billing.ProductPrice {
	if m != nil {
		return m.Prices
	}
	return nil
}

func (m *PlatformPrice) GetEulaUrl() string {
	if m != nil {
		return m.EulaUrl
	}
	return ""
}

func (m *PlatformPrice) GetActivationUrl() string {
	if m != nil {
		return m.ActivationUrl
	}
	return ""
}

func (m *PlatformPrice) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Platform struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"id"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,2,opt,name=name" json:"name"`
	// @inject_tag: json:"-"
	Icon string `protobuf:"bytes,3,opt,name=icon" json:"-"`
	// @inject_tag: json:"-"
	Order int32 `protobuf:"varint,4,opt,name=order" json:"-"`
}

func (m *Platform) Reset()                    { *m = Platform{} }
func (m *Platform) String() string            { return proto.CompactTextString(m) }
func (*Platform) ProtoMessage()               {}
func (*Platform) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *Platform) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Platform) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Platform) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Platform) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

type Product struct {
	// @inject_tag: validate:"omitempty,hexadecimal,len=24" json:"id" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id" validate:"omitempty,hexadecimal,len=24" bson:"_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"-" bson:"merchant_id"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"-" validate:"required,hexadecimal,len=24" bson:"merchant_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"project_id" bson:"project_id"
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId" json:"project_id" validate:"required,hexadecimal,len=24" bson:"project_id"`
	// @inject_tag: validate:"required" json:"object"
	Object string `protobuf:"bytes,4,opt,name=object" json:"object" validate:"required"`
	// @inject_tag: validate:"required" json:"type"
	Type string `protobuf:"bytes,5,opt,name=type" json:"type" validate:"required"`
	// @inject_tag: validate:"required" json:"sku" bson:"sku"
	Sku string `protobuf:"bytes,6,opt,name=sku" json:"sku" validate:"required" bson:"sku"`
	// @inject_tag: validate:"required" json:"name"
	Name map[string]string `protobuf:"bytes,7,rep,name=name" json:"name" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validate:"required"`
	// @inject_tag: validate:"required,alpha,len=3" json:"default_currency"
	DefaultCurrency string `protobuf:"bytes,8,opt,name=default_currency,json=defaultCurrency" json:"default_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"enabled"
	Enabled bool `protobuf:"varint,9,opt,name=enabled" json:"enabled"`
	// @inject_tag: validate:"required,min=1,currency_price,dive" json:"prices"
	Prices []*billing.ProductPrice `protobuf:"bytes,10,rep,name=prices" json:"prices" validate:"required,min=1,currency_price,dive"`
	// @inject_tag: validate:"required" json:"description"
	Description map[string]string `protobuf:"bytes,11,rep,name=description" json:"description" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validate:"required"`
	// @inject_tag: validate:"omitempty" json:"long_description"
	LongDescription map[string]string `protobuf:"bytes,12,rep,name=long_description,json=longDescription" json:"long_description" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" validate:"omitempty"`
	// @inject_tag: json:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt" json:"created_at"`
	// @inject_tag: json:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt" json:"updated_at"`
	// @inject_tag: validate:"dive,omitempty,uri" json:"images"
	Images []string `protobuf:"bytes,15,rep,name=images" json:"images" validate:"dive,omitempty,uri"`
	// @inject_tag: validate:"omitempty,url" json:"url"
	Url string `protobuf:"bytes,16,opt,name=url" json:"url" validate:"omitempty,url"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,17,rep,name=metadata" json:"metadata" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// @inject_tag: json:"-" bson:"deleted"
	Deleted bool `protobuf:"varint,18,opt,name=deleted" json:"-" bson:"deleted"`
	// @inject_tag: json:"pricing" validate:"required,oneof=currency manual steam default"
	Pricing string `protobuf:"bytes,19,opt,name=pricing" json:"pricing" validate:"required,oneof=currency manual steam default"`
	// @inject_tag: json:"billing_type" validate:"required,oneof=real virtual"
	BillingType string `protobuf:"bytes,20,opt,name=billing_type,json=billingType" json:"billing_type" validate:"required,oneof=real virtual"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *Product) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *Product) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *Product) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Product) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *Product) GetName() map[string]string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Product) GetDefaultCurrency() string {
	if m != nil {
		return m.DefaultCurrency
	}
	return ""
}

func (m *Product) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Product) GetPrices() []*billing.ProductPrice {
	if m != nil {
		return m.Prices
	}
	return nil
}

func (m *Product) GetDescription() map[string]string {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Product) GetLongDescription() map[string]string {
	if m != nil {
		return m.LongDescription
	}
	return nil
}

func (m *Product) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Product) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Product) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Product) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Product) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Product) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *Product) GetPricing() string {
	if m != nil {
		return m.Pricing
	}
	return ""
}

func (m *Product) GetBillingType() string {
	if m != nil {
		return m.BillingType
	}
	return ""
}

type ListProductsRequest struct {
	// @inject_tag: json:"name" query:"name"
	Name string `protobuf:"bytes,1,opt,name=name" json:"name" query:"name"`
	// @inject_tag: json:"sku" query:"sku"
	Sku string `protobuf:"bytes,2,opt,name=sku" json:"sku" query:"sku"`
	// @inject_tag: validate:"required,numeric,gt=0" json:"limit" query:"limit"
	Limit int64 `protobuf:"varint,3,opt,name=limit" json:"limit" validate:"required,numeric,gt=0" query:"limit"`
	// @inject_tag: validate:"omitempty,numeric,gte=0" json:"offset" query:"offset"
	Offset int64 `protobuf:"varint,4,opt,name=offset" json:"offset" validate:"omitempty,numeric,gte=0" query:"offset"`
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"merchant_id" bson:"merchant_id"
	MerchantId string `protobuf:"bytes,5,opt,name=merchant_id,json=merchantId" json:"merchant_id" validate:"required,hexadecimal,len=24" bson:"merchant_id"`
	// @inject_tag: validate:"omitempty,hexadecimal,len=24" json:"project_id" bson:"project_id" query:"project_id"
	ProjectId string `protobuf:"bytes,6,opt,name=project_id,json=projectId" json:"project_id" validate:"omitempty,hexadecimal,len=24" bson:"project_id" query:"project_id"`
	// @inject_tag: validate:"omitempty,oneof=all true false" json:"enabled" query:"enabled"
	Enabled string `protobuf:"bytes,7,opt,name=enabled" json:"enabled" validate:"omitempty,oneof=all true false" query:"enabled"`
}

func (m *ListProductsRequest) Reset()                    { *m = ListProductsRequest{} }
func (m *ListProductsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListProductsRequest) ProtoMessage()               {}
func (*ListProductsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *ListProductsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListProductsRequest) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *ListProductsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListProductsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListProductsRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ListProductsRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *ListProductsRequest) GetEnabled() string {
	if m != nil {
		return m.Enabled
	}
	return ""
}

type GetProductsForOrderRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"project_id" bson:"project_id"
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId" json:"project_id" validate:"required,hexadecimal,len=24" bson:"project_id"`
	// @inject_tag: validate:"required,dive,hexadecimal,len=24" json:"ids" bson:"ids"
	Ids []string `protobuf:"bytes,2,rep,name=ids" json:"ids" validate:"required,dive,hexadecimal,len=24" bson:"ids"`
}

func (m *GetProductsForOrderRequest) Reset()                    { *m = GetProductsForOrderRequest{} }
func (m *GetProductsForOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*GetProductsForOrderRequest) ProtoMessage()               {}
func (*GetProductsForOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *GetProductsForOrderRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GetProductsForOrderRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type GetKeyProductInfoRequest struct {
	// @inject_tag: json:"country" query:"country"
	Country string `protobuf:"bytes,1,opt,name=country" json:"country" query:"country"`
	// @inject_tag: json:"key_product_id" validate:"required,hexadecimal,len=24"
	KeyProductId string `protobuf:"bytes,2,opt,name=key_product_id,json=keyProductId" json:"key_product_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"language" query:"language"
	Language string `protobuf:"bytes,3,opt,name=language" json:"language" query:"language"`
	// @inject_tag: json:"currency" query:"currency"
	Currency string `protobuf:"bytes,4,opt,name=currency" json:"currency" query:"currency"`
}

func (m *GetKeyProductInfoRequest) Reset()                    { *m = GetKeyProductInfoRequest{} }
func (m *GetKeyProductInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetKeyProductInfoRequest) ProtoMessage()               {}
func (*GetKeyProductInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *GetKeyProductInfoRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *GetKeyProductInfoRequest) GetKeyProductId() string {
	if m != nil {
		return m.KeyProductId
	}
	return ""
}

func (m *GetKeyProductInfoRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *GetKeyProductInfoRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type GetKeyProductInfoResponse struct {
	Status     int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message    *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	KeyProduct *KeyProductInfo       `protobuf:"bytes,3,opt,name=key_product,json=keyProduct" json:"key_product,omitempty"`
}

func (m *GetKeyProductInfoResponse) Reset()                    { *m = GetKeyProductInfoResponse{} }
func (m *GetKeyProductInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetKeyProductInfoResponse) ProtoMessage()               {}
func (*GetKeyProductInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *GetKeyProductInfoResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetKeyProductInfoResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetKeyProductInfoResponse) GetKeyProduct() *KeyProductInfo {
	if m != nil {
		return m.KeyProduct
	}
	return nil
}

type GetKeyProductsForOrderRequest struct {
	// @inject_tag: query:"project_id" validate:"required,hexadecimal,len=24"
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId" json:"project_id,omitempty" query:"project_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"ids[]" validate:"required,dive,hexadecimal,len=24"
	Ids []string `protobuf:"bytes,2,rep,name=ids" json:"ids,omitempty" query:"ids[]" validate:"required,dive,hexadecimal,len=24"`
}

func (m *GetKeyProductsForOrderRequest) Reset()                    { *m = GetKeyProductsForOrderRequest{} }
func (m *GetKeyProductsForOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*GetKeyProductsForOrderRequest) ProtoMessage()               {}
func (*GetKeyProductsForOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *GetKeyProductsForOrderRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GetKeyProductsForOrderRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type ListProductsResponse struct {
	// @inject_tag: json:"limit"
	Limit int64 `protobuf:"varint,1,opt,name=limit" json:"limit"`
	// @inject_tag: json:"offset"
	Offset int64 `protobuf:"varint,2,opt,name=offset" json:"offset"`
	// @inject_tag: json:"count"
	Total int64 `protobuf:"varint,3,opt,name=total" json:"count"`
	// @inject_tag: json:"items"
	Products []*Product `protobuf:"bytes,5,rep,name=products" json:"items"`
}

func (m *ListProductsResponse) Reset()                    { *m = ListProductsResponse{} }
func (m *ListProductsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListProductsResponse) ProtoMessage()               {}
func (*ListProductsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *ListProductsResponse) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListProductsResponse) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListProductsResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListProductsResponse) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type RequestProduct struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"product_id"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal,len=24" param:"product_id"`
	// @inject_tag: validate:"hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"hexadecimal,len=24"`
}

func (m *RequestProduct) Reset()                    { *m = RequestProduct{} }
func (m *RequestProduct) String() string            { return proto.CompactTextString(m) }
func (*RequestProduct) ProtoMessage()               {}
func (*RequestProduct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *RequestProduct) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RequestProduct) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type RequestKeyProductMerchant struct {
	// @inject_tag: query:"id" validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" query:"id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"hexadecimal,len=24"`
}

func (m *RequestKeyProductMerchant) Reset()                    { *m = RequestKeyProductMerchant{} }
func (m *RequestKeyProductMerchant) String() string            { return proto.CompactTextString(m) }
func (*RequestKeyProductMerchant) ProtoMessage()               {}
func (*RequestKeyProductMerchant) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *RequestKeyProductMerchant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RequestKeyProductMerchant) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type RequestKeyProduct struct {
	// @inject_tag: query:"id" validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" query:"id" validate:"required,hexadecimal,len=24"`
}

func (m *RequestKeyProduct) Reset()                    { *m = RequestKeyProduct{} }
func (m *RequestKeyProduct) String() string            { return proto.CompactTextString(m) }
func (*RequestKeyProduct) ProtoMessage()               {}
func (*RequestKeyProduct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *RequestKeyProduct) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type I18NTextSearchable struct {
	// @inject_tag: validate:"required,alpha,len=2" json:"lang"
	Lang string `protobuf:"bytes,1,opt,name=lang" json:"lang" validate:"required,alpha,len=2"`
	// @inject_tag: validate:"required" json:"value"
	Value string `protobuf:"bytes,2,opt,name=value" json:"value" validate:"required"`
}

func (m *I18NTextSearchable) Reset()                    { *m = I18NTextSearchable{} }
func (m *I18NTextSearchable) String() string            { return proto.CompactTextString(m) }
func (*I18NTextSearchable) ProtoMessage()               {}
func (*I18NTextSearchable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *I18NTextSearchable) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *I18NTextSearchable) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ChangeProjectResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Project      `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *ChangeProjectResponse) Reset()                    { *m = ChangeProjectResponse{} }
func (m *ChangeProjectResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangeProjectResponse) ProtoMessage()               {}
func (*ChangeProjectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *ChangeProjectResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ChangeProjectResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ChangeProjectResponse) GetItem() *billing.Project {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetProjectRequest struct {
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"project_id"
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty" validate:"required,hexadecimal,len=24" param:"project_id"`
}

func (m *GetProjectRequest) Reset()                    { *m = GetProjectRequest{} }
func (m *GetProjectRequest) String() string            { return proto.CompactTextString(m) }
func (*GetProjectRequest) ProtoMessage()               {}
func (*GetProjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *GetProjectRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetProjectRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type ListProjectsRequest struct {
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0"
	Limit int32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int32 `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: query:"quick_search"
	QuickSearch string `protobuf:"bytes,4,opt,name=quick_search,json=quickSearch" json:"quick_search,omitempty" query:"quick_search"`
	// @inject_tag: query:"status[]"
	Statuses []int32 `protobuf:"varint,5,rep,packed,name=statuses" json:"statuses,omitempty" query:"status[]"`
	// @inject_tag: query:"sort[]"
	Sort []string `protobuf:"bytes,6,rep,name=sort" json:"sort,omitempty" query:"sort[]"`
}

func (m *ListProjectsRequest) Reset()                    { *m = ListProjectsRequest{} }
func (m *ListProjectsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListProjectsRequest) ProtoMessage()               {}
func (*ListProjectsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{88} }

func (m *ListProjectsRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ListProjectsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListProjectsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListProjectsRequest) GetQuickSearch() string {
	if m != nil {
		return m.QuickSearch
	}
	return ""
}

func (m *ListProjectsRequest) GetStatuses() []int32 {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func (m *ListProjectsRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

type ListProjectsResponse struct {
	// @inject_tag: json:"count"
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*billing.Project `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *ListProjectsResponse) Reset()                    { *m = ListProjectsResponse{} }
func (m *ListProjectsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListProjectsResponse) ProtoMessage()               {}
func (*ListProjectsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

func (m *ListProjectsResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListProjectsResponse) GetItems() []*billing.Project {
	if m != nil {
		return m.Items
	}
	return nil
}

type TokenRequest struct {
	// @inject_tag: validate:"required"
	User *billing.TokenUser `protobuf:"bytes,1,opt,name=user" json:"user,omitempty" validate:"required"`
	// @inject_tag: validate:"required"
	Settings *billing.TokenSettings `protobuf:"bytes,2,opt,name=settings" json:"settings,omitempty" validate:"required"`
}

func (m *TokenRequest) Reset()                    { *m = TokenRequest{} }
func (m *TokenRequest) String() string            { return proto.CompactTextString(m) }
func (*TokenRequest) ProtoMessage()               {}
func (*TokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{90} }

func (m *TokenRequest) GetUser() *billing.TokenUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *TokenRequest) GetSettings() *billing.TokenSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type TokenResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Token   string                `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (m *TokenResponse) Reset()                    { *m = TokenResponse{} }
func (m *TokenResponse) String() string            { return proto.CompactTextString(m) }
func (*TokenResponse) ProtoMessage()               {}
func (*TokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

func (m *TokenResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TokenResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *TokenResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type CheckProjectRequestSignatureRequest struct {
	Body      string `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
}

func (m *CheckProjectRequestSignatureRequest) Reset()         { *m = CheckProjectRequestSignatureRequest{} }
func (m *CheckProjectRequestSignatureRequest) String() string { return proto.CompactTextString(m) }
func (*CheckProjectRequestSignatureRequest) ProtoMessage()    {}
func (*CheckProjectRequestSignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{92}
}

func (m *CheckProjectRequestSignatureRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *CheckProjectRequestSignatureRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *CheckProjectRequestSignatureRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type CheckProjectRequestSignatureResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *CheckProjectRequestSignatureResponse) Reset()         { *m = CheckProjectRequestSignatureResponse{} }
func (m *CheckProjectRequestSignatureResponse) String() string { return proto.CompactTextString(m) }
func (*CheckProjectRequestSignatureResponse) ProtoMessage()    {}
func (*CheckProjectRequestSignatureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{93}
}

func (m *CheckProjectRequestSignatureResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CheckProjectRequestSignatureResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type ListOrdersRequest struct {
	// @inject_tag: query:"id" validate:"omitempty,uuid"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" query:"id" validate:"omitempty,uuid"`
	// @inject_tag: query:"project[]" validate:"omitempty,dive,hexadecimal,len=24"
	Project []string `protobuf:"bytes,2,rep,name=project" json:"project,omitempty" query:"project[]" validate:"omitempty,dive,hexadecimal,len=24"`
	// @inject_tag: query:"payment_method[]" validate:"omitempty,dive,hexadecimal,len=24"
	PaymentMethod []string `protobuf:"bytes,3,rep,name=payment_method,json=paymentMethod" json:"payment_method,omitempty" query:"payment_method[]" validate:"omitempty,dive,hexadecimal,len=24"`
	// @inject_tag: query:"country[]" validate:"omitempty,dive,alpha,len=2"
	Country []string `protobuf:"bytes,4,rep,name=country" json:"country,omitempty" query:"country[]" validate:"omitempty,dive,alpha,len=2"`
	// @inject_tag: query:"status[]" validate:"omitempty,dive,alpha,oneof=created processed canceled rejected refunded chargeback pending"
	Status []string `protobuf:"bytes,5,rep,name=status" json:"status,omitempty" query:"status[]" validate:"omitempty,dive,alpha,oneof=created processed canceled rejected refunded chargeback pending"`
	// @inject_tag: query:"account"
	Account string `protobuf:"bytes,6,opt,name=account" json:"account,omitempty" query:"account"`
	// @inject_tag: query:"pm_date_from" validate:"omitempty,numeric,gt=0"
	PmDateFrom int64 `protobuf:"varint,7,opt,name=pm_date_from,json=pmDateFrom" json:"pm_date_from,omitempty" query:"pm_date_from" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"pm_date_to" validate:"omitempty,numeric,gt=0"
	PmDateTo int64 `protobuf:"varint,8,opt,name=pm_date_to,json=pmDateTo" json:"pm_date_to,omitempty" query:"pm_date_to" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"project_date_from" validate:"omitempty,numeric,gt=0"
	ProjectDateFrom int64 `protobuf:"varint,9,opt,name=project_date_from,json=projectDateFrom" json:"project_date_from,omitempty" query:"project_date_from" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"project_date_to" validate:"omitempty,numeric,gt=0"
	ProjectDateTo int64 `protobuf:"varint,10,opt,name=project_date_to,json=projectDateTo" json:"project_date_to,omitempty" query:"project_date_to" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"quick_search"
	QuickSearch string `protobuf:"bytes,11,opt,name=quick_search,json=quickSearch" json:"quick_search,omitempty" query:"quick_search"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0,lte=1000"
	Limit int64 `protobuf:"varint,12,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0,lte=1000"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,13,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: query:"sort[]"
	Sort []string `protobuf:"bytes,14,rep,name=sort" json:"sort,omitempty" query:"sort[]"`
	// @inject_tag: validate:"omitempty,dive,hexadecimal,len=24"
	Merchant []string `protobuf:"bytes,15,rep,name=merchant" json:"merchant,omitempty" validate:"omitempty,dive,hexadecimal,len=24"`
	// @inject_tag: query:"-"  json:"-"
	StatusNotificationFailedFor string `protobuf:"bytes,16,opt,name=status_notification_failed_for,json=statusNotificationFailedFor" json:"-" query:"-"`
	// @inject_tag: query:"type" validate:"omitempty,oneof=simple product key"
	Type string `protobuf:"bytes,17,opt,name=type" json:"type,omitempty" query:"type" validate:"omitempty,oneof=simple product key"`
}

func (m *ListOrdersRequest) Reset()                    { *m = ListOrdersRequest{} }
func (m *ListOrdersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListOrdersRequest) ProtoMessage()               {}
func (*ListOrdersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *ListOrdersRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ListOrdersRequest) GetProject() []string {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *ListOrdersRequest) GetPaymentMethod() []string {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *ListOrdersRequest) GetCountry() []string {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *ListOrdersRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListOrdersRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *ListOrdersRequest) GetPmDateFrom() int64 {
	if m != nil {
		return m.PmDateFrom
	}
	return 0
}

func (m *ListOrdersRequest) GetPmDateTo() int64 {
	if m != nil {
		return m.PmDateTo
	}
	return 0
}

func (m *ListOrdersRequest) GetProjectDateFrom() int64 {
	if m != nil {
		return m.ProjectDateFrom
	}
	return 0
}

func (m *ListOrdersRequest) GetProjectDateTo() int64 {
	if m != nil {
		return m.ProjectDateTo
	}
	return 0
}

func (m *ListOrdersRequest) GetQuickSearch() string {
	if m != nil {
		return m.QuickSearch
	}
	return ""
}

func (m *ListOrdersRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListOrdersRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListOrdersRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *ListOrdersRequest) GetMerchant() []string {
	if m != nil {
		return m.Merchant
	}
	return nil
}

func (m *ListOrdersRequest) GetStatusNotificationFailedFor() string {
	if m != nil {
		return m.StatusNotificationFailedFor
	}
	return ""
}

func (m *ListOrdersRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type GetOrderRequest struct {
	// @inject_tag: validate:"required,uuid" param:"order_id"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid" param:"order_id"`
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
}

func (m *GetOrderRequest) Reset()                    { *m = GetOrderRequest{} }
func (m *GetOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOrderRequest) ProtoMessage()               {}
func (*GetOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *GetOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *GetOrderRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type IsOrderCanBePayingRequest struct {
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	OrderId   string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *IsOrderCanBePayingRequest) Reset()                    { *m = IsOrderCanBePayingRequest{} }
func (m *IsOrderCanBePayingRequest) String() string            { return proto.CompactTextString(m) }
func (*IsOrderCanBePayingRequest) ProtoMessage()               {}
func (*IsOrderCanBePayingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *IsOrderCanBePayingRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *IsOrderCanBePayingRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type IsOrderCanBePayingResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Order        `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *IsOrderCanBePayingResponse) Reset()                    { *m = IsOrderCanBePayingResponse{} }
func (m *IsOrderCanBePayingResponse) String() string            { return proto.CompactTextString(m) }
func (*IsOrderCanBePayingResponse) ProtoMessage()               {}
func (*IsOrderCanBePayingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *IsOrderCanBePayingResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *IsOrderCanBePayingResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *IsOrderCanBePayingResponse) GetItem() *billing.Order {
	if m != nil {
		return m.Item
	}
	return nil
}

type SetUserNotifyRequest struct {
	// @inject_tag: validate:"required,uuid" param:"order_id"
	OrderUuid string `protobuf:"bytes,1,opt,name=order_uuid,json=orderUuid" json:"order_uuid,omitempty" validate:"required,uuid" param:"order_id"`
	// @inject_tag: query:"enable_notification" form:"enable_notification" json:"enable_notification"
	EnableNotification bool `protobuf:"varint,2,opt,name=enable_notification,json=enableNotification" json:"enable_notification" query:"enable_notification" form:"enable_notification"`
	// @inject_tag: query:"email" form:"email" json:"email" validate:"omitempty,email"
	Email string `protobuf:"bytes,3,opt,name=email" json:"email" query:"email" form:"email" validate:"omitempty,email"`
}

func (m *SetUserNotifyRequest) Reset()                    { *m = SetUserNotifyRequest{} }
func (m *SetUserNotifyRequest) String() string            { return proto.CompactTextString(m) }
func (*SetUserNotifyRequest) ProtoMessage()               {}
func (*SetUserNotifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{98} }

func (m *SetUserNotifyRequest) GetOrderUuid() string {
	if m != nil {
		return m.OrderUuid
	}
	return ""
}

func (m *SetUserNotifyRequest) GetEnableNotification() bool {
	if m != nil {
		return m.EnableNotification
	}
	return false
}

func (m *SetUserNotifyRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type NotifyUserSales struct {
	// @inject_tag: bson:"email"
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty" bson:"email"`
	// @inject_tag: bson:"order_id"
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty" bson:"order_id"`
	// @inject_tag: bson:"user_id"
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty" bson:"user_id"`
	// @inject_tag: bson:"created_at"
	Date string `protobuf:"bytes,4,opt,name=date" json:"date,omitempty" bson:"created_at"`
}

func (m *NotifyUserSales) Reset()                    { *m = NotifyUserSales{} }
func (m *NotifyUserSales) String() string            { return proto.CompactTextString(m) }
func (*NotifyUserSales) ProtoMessage()               {}
func (*NotifyUserSales) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{99} }

func (m *NotifyUserSales) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *NotifyUserSales) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *NotifyUserSales) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *NotifyUserSales) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

type NotifyUserNewRegion struct {
	// @inject_tag: bson:"country_iso_code_a2"
	CountryIsoCodeA2 string `protobuf:"bytes,1,opt,name=country_iso_code_a2,json=countryIsoCodeA2" json:"country_iso_code_a2,omitempty" bson:"country_iso_code_a2"`
	// @inject_tag: bson:"email"
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty" bson:"email"`
	// @inject_tag: bson:"order_id"
	OrderId string `protobuf:"bytes,3,opt,name=order_id,json=orderId" json:"order_id,omitempty" bson:"order_id"`
	// @inject_tag: bson:"user_id"
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty" bson:"user_id"`
	// @inject_tag: bson:"date"
	Date string `protobuf:"bytes,5,opt,name=date" json:"date,omitempty" bson:"date"`
}

func (m *NotifyUserNewRegion) Reset()                    { *m = NotifyUserNewRegion{} }
func (m *NotifyUserNewRegion) String() string            { return proto.CompactTextString(m) }
func (*NotifyUserNewRegion) ProtoMessage()               {}
func (*NotifyUserNewRegion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{100} }

func (m *NotifyUserNewRegion) GetCountryIsoCodeA2() string {
	if m != nil {
		return m.CountryIsoCodeA2
	}
	return ""
}

func (m *NotifyUserNewRegion) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *NotifyUserNewRegion) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *NotifyUserNewRegion) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *NotifyUserNewRegion) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

type GetPaymentMethodSettingsRequest struct {
	// @inject_tag: query:"payment_method_id" validate:"required,hexadecimal,len=24"
	PaymentMethodId string `protobuf:"bytes,1,opt,name=payment_method_id,json=paymentMethodId" json:"payment_method_id,omitempty" query:"payment_method_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"currency_a3" validate:"omitempty,alpha,len=3"
	CurrencyA3 string `protobuf:"bytes,2,opt,name=currency_a3,json=currencyA3" json:"currency_a3,omitempty" query:"currency_a3" validate:"omitempty,alpha,len=3"`
	// @inject_tag: query:"mcc_code" validate:"omitempty,numeric,len=4"
	MccCode string `protobuf:"bytes,3,opt,name=mcc_code,json=mccCode" json:"mcc_code,omitempty" query:"mcc_code" validate:"omitempty,numeric,len=4"`
	// @inject_tag: query:"operating_company_id" validate:"omitempty,hexadecimal,len=24"
	OperatingCompanyId string `protobuf:"bytes,4,opt,name=operating_company_id,json=operatingCompanyId" json:"operating_company_id,omitempty" query:"operating_company_id" validate:"omitempty,hexadecimal,len=24"`
}

func (m *GetPaymentMethodSettingsRequest) Reset()         { *m = GetPaymentMethodSettingsRequest{} }
func (m *GetPaymentMethodSettingsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPaymentMethodSettingsRequest) ProtoMessage()    {}
func (*GetPaymentMethodSettingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{101}
}

func (m *GetPaymentMethodSettingsRequest) GetPaymentMethodId() string {
	if m != nil {
		return m.PaymentMethodId
	}
	return ""
}

func (m *GetPaymentMethodSettingsRequest) GetCurrencyA3() string {
	if m != nil {
		return m.CurrencyA3
	}
	return ""
}

func (m *GetPaymentMethodSettingsRequest) GetMccCode() string {
	if m != nil {
		return m.MccCode
	}
	return ""
}

func (m *GetPaymentMethodSettingsRequest) GetOperatingCompanyId() string {
	if m != nil {
		return m.OperatingCompanyId
	}
	return ""
}

type GetPaymentMethodSettingsResponse struct {
	// @inject_tag: json:"params"
	Params []*billing.PaymentMethodParams `protobuf:"bytes,1,rep,name=params" json:"params"`
}

func (m *GetPaymentMethodSettingsResponse) Reset()         { *m = GetPaymentMethodSettingsResponse{} }
func (m *GetPaymentMethodSettingsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPaymentMethodSettingsResponse) ProtoMessage()    {}
func (*GetPaymentMethodSettingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{102}
}

func (m *GetPaymentMethodSettingsResponse) GetParams() []*billing.PaymentMethodParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type ChangePaymentMethodRequest struct {
	// @inject_tag: query:"payment_method_id" validate:"required,hexadecimal,len=24"
	PaymentMethodId string `protobuf:"bytes,1,opt,name=payment_method_id,json=paymentMethodId" json:"payment_method_id,omitempty" query:"payment_method_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"params" validate:"required"
	Params *billing.PaymentMethod `protobuf:"bytes,2,opt,name=params" json:"params,omitempty" query:"params" validate:"required"`
}

func (m *ChangePaymentMethodRequest) Reset()                    { *m = ChangePaymentMethodRequest{} }
func (m *ChangePaymentMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangePaymentMethodRequest) ProtoMessage()               {}
func (*ChangePaymentMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{103} }

func (m *ChangePaymentMethodRequest) GetPaymentMethodId() string {
	if m != nil {
		return m.PaymentMethodId
	}
	return ""
}

func (m *ChangePaymentMethodRequest) GetParams() *billing.PaymentMethod {
	if m != nil {
		return m.Params
	}
	return nil
}

type ChangePaymentMethodParamsRequest struct {
	// @inject_tag: query:"payment_method_id" validate:"required,hexadecimal,len=24"
	PaymentMethodId string `protobuf:"bytes,1,opt,name=payment_method_id,json=paymentMethodId" json:"payment_method_id,omitempty" query:"payment_method_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"params" validate:"required"
	Params *billing.PaymentMethodParams `protobuf:"bytes,2,opt,name=params" json:"params,omitempty" query:"params" validate:"required"`
}

func (m *ChangePaymentMethodParamsRequest) Reset()         { *m = ChangePaymentMethodParamsRequest{} }
func (m *ChangePaymentMethodParamsRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePaymentMethodParamsRequest) ProtoMessage()    {}
func (*ChangePaymentMethodParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{104}
}

func (m *ChangePaymentMethodParamsRequest) GetPaymentMethodId() string {
	if m != nil {
		return m.PaymentMethodId
	}
	return ""
}

func (m *ChangePaymentMethodParamsRequest) GetParams() *billing.PaymentMethodParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type ChangePaymentMethodResponse struct {
	Status  int32  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ChangePaymentMethodResponse) Reset()                    { *m = ChangePaymentMethodResponse{} }
func (m *ChangePaymentMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*ChangePaymentMethodResponse) ProtoMessage()               {}
func (*ChangePaymentMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

func (m *ChangePaymentMethodResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ChangePaymentMethodResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ChangePaymentMethodParamsResponse struct {
	Status  int32  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ChangePaymentMethodParamsResponse) Reset()         { *m = ChangePaymentMethodParamsResponse{} }
func (m *ChangePaymentMethodParamsResponse) String() string { return proto.CompactTextString(m) }
func (*ChangePaymentMethodParamsResponse) ProtoMessage()    {}
func (*ChangePaymentMethodParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{106}
}

func (m *ChangePaymentMethodParamsResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ChangePaymentMethodParamsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FindByZipCodeRequest struct {
	// @inject_tag: query:"country" validate:"required,len=2"
	Country string `protobuf:"bytes,1,opt,name=country" json:"country,omitempty" query:"country" validate:"required,len=2"`
	// @inject_tag: query:"zip" validate:"required,gte=2"
	Zip string `protobuf:"bytes,2,opt,name=zip" json:"zip,omitempty" query:"zip" validate:"required,gte=2"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0"
	Limit int64 `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
}

func (m *FindByZipCodeRequest) Reset()                    { *m = FindByZipCodeRequest{} }
func (m *FindByZipCodeRequest) String() string            { return proto.CompactTextString(m) }
func (*FindByZipCodeRequest) ProtoMessage()               {}
func (*FindByZipCodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{107} }

func (m *FindByZipCodeRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *FindByZipCodeRequest) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *FindByZipCodeRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FindByZipCodeRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type FindByZipCodeResponse struct {
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*billing.ZipCode `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *FindByZipCodeResponse) Reset()                    { *m = FindByZipCodeResponse{} }
func (m *FindByZipCodeResponse) String() string            { return proto.CompactTextString(m) }
func (*FindByZipCodeResponse) ProtoMessage()               {}
func (*FindByZipCodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *FindByZipCodeResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *FindByZipCodeResponse) GetItems() []*billing.ZipCode {
	if m != nil {
		return m.Items
	}
	return nil
}

type ResponseError struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
}

func (m *ResponseError) Reset()                    { *m = ResponseError{} }
func (m *ResponseError) String() string            { return proto.CompactTextString(m) }
func (*ResponseError) ProtoMessage()               {}
func (*ResponseError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{109} }

func (m *ResponseError) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ResponseError) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type ResponseErrorMessage struct {
	// @inject_tag: json:"code"
	Code string `protobuf:"bytes,1,opt,name=code" json:"code"`
	// @inject_tag: json:"message"
	Message string `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"details,omitempty"
	Details string `protobuf:"bytes,3,opt,name=details" json:"details,omitempty"`
}

func (m *ResponseErrorMessage) Reset()                    { *m = ResponseErrorMessage{} }
func (m *ResponseErrorMessage) String() string            { return proto.CompactTextString(m) }
func (*ResponseErrorMessage) ProtoMessage()               {}
func (*ResponseErrorMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *ResponseErrorMessage) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ResponseErrorMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ResponseErrorMessage) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

type CreateAccountingEntryRequest struct {
	// @inject_tag: validate:"required"
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty" validate:"required"`
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	RefundId string `protobuf:"bytes,3,opt,name=refund_id,json=refundId" json:"refund_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,4,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: validate:"required,numeric"
	Amount float64 `protobuf:"fixed64,5,opt,name=amount" json:"amount,omitempty" validate:"required,numeric"`
	// @inject_tag: validate:"required,alpha,len=3"
	Currency string `protobuf:"bytes,6,opt,name=currency" json:"currency,omitempty" validate:"required,alpha,len=3"`
	// @inject_tag: validate:"required,oneof=pending available"
	Status string `protobuf:"bytes,7,opt,name=status" json:"status,omitempty" validate:"required,oneof=pending available"`
	// @inject_tag: validate:"omitempty,numeric,gt=0"
	Date int64 `protobuf:"varint,8,opt,name=date" json:"date,omitempty" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: json:"country" validate:"required,alpha,len=2"
	Country string `protobuf:"bytes,9,opt,name=country" json:"country" validate:"required,alpha,len=2"`
	// @inject_tag: json:"reason"
	Reason string `protobuf:"bytes,10,opt,name=reason" json:"reason"`
}

func (m *CreateAccountingEntryRequest) Reset()                    { *m = CreateAccountingEntryRequest{} }
func (m *CreateAccountingEntryRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountingEntryRequest) ProtoMessage()               {}
func (*CreateAccountingEntryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

func (m *CreateAccountingEntryRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateAccountingEntryRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *CreateAccountingEntryRequest) GetRefundId() string {
	if m != nil {
		return m.RefundId
	}
	return ""
}

func (m *CreateAccountingEntryRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *CreateAccountingEntryRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreateAccountingEntryRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *CreateAccountingEntryRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CreateAccountingEntryRequest) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *CreateAccountingEntryRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *CreateAccountingEntryRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type CreateAccountingEntryResponse struct {
	Status  int32                    `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.AccountingEntry `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *CreateAccountingEntryResponse) Reset()                    { *m = CreateAccountingEntryResponse{} }
func (m *CreateAccountingEntryResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountingEntryResponse) ProtoMessage()               {}
func (*CreateAccountingEntryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *CreateAccountingEntryResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CreateAccountingEntryResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *CreateAccountingEntryResponse) GetItem() *billing.AccountingEntry {
	if m != nil {
		return m.Item
	}
	return nil
}

type CreateRoyaltyReportRequest struct {
	Merchants []string `protobuf:"bytes,1,rep,name=merchants" json:"merchants,omitempty"`
}

func (m *CreateRoyaltyReportRequest) Reset()                    { *m = CreateRoyaltyReportRequest{} }
func (m *CreateRoyaltyReportRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRoyaltyReportRequest) ProtoMessage()               {}
func (*CreateRoyaltyReportRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *CreateRoyaltyReportRequest) GetMerchants() []string {
	if m != nil {
		return m.Merchants
	}
	return nil
}

type ListRoyaltyReportsRequest struct {
	// @inject_tag: query:"period_from" validate:"omitempty,numeric,gt=0"
	PeriodFrom int64 `protobuf:"varint,1,opt,name=period_from,json=periodFrom" json:"period_from,omitempty" query:"period_from" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"period_to" validate:"omitempty,numeric,gt=0"
	PeriodTo int64 `protobuf:"varint,2,opt,name=period_to,json=periodTo" json:"period_to,omitempty" query:"period_to" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,3,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"status[]" validate:"omitempty,dive,oneof=pending accepted canceled dispute waiting_payment paid"
	Status []string `protobuf:"bytes,4,rep,name=status" json:"status,omitempty" query:"status[]" validate:"omitempty,dive,oneof=pending accepted canceled dispute waiting_payment paid"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0"
	Limit int64 `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,6,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
}

func (m *ListRoyaltyReportsRequest) Reset()                    { *m = ListRoyaltyReportsRequest{} }
func (m *ListRoyaltyReportsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRoyaltyReportsRequest) ProtoMessage()               {}
func (*ListRoyaltyReportsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *ListRoyaltyReportsRequest) GetPeriodFrom() int64 {
	if m != nil {
		return m.PeriodFrom
	}
	return 0
}

func (m *ListRoyaltyReportsRequest) GetPeriodTo() int64 {
	if m != nil {
		return m.PeriodTo
	}
	return 0
}

func (m *ListRoyaltyReportsRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ListRoyaltyReportsRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListRoyaltyReportsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRoyaltyReportsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type RoyaltyReportsPaginate struct {
	// @inject_tag: json:"count"
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*billing.RoyaltyReport `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *RoyaltyReportsPaginate) Reset()                    { *m = RoyaltyReportsPaginate{} }
func (m *RoyaltyReportsPaginate) String() string            { return proto.CompactTextString(m) }
func (*RoyaltyReportsPaginate) ProtoMessage()               {}
func (*RoyaltyReportsPaginate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *RoyaltyReportsPaginate) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *RoyaltyReportsPaginate) GetItems() []*billing.RoyaltyReport {
	if m != nil {
		return m.Items
	}
	return nil
}

type ListRoyaltyReportsResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// @inject_tag: json:"message,omitempty"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"data"
	Data *RoyaltyReportsPaginate `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *ListRoyaltyReportsResponse) Reset()                    { *m = ListRoyaltyReportsResponse{} }
func (m *ListRoyaltyReportsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListRoyaltyReportsResponse) ProtoMessage()               {}
func (*ListRoyaltyReportsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

func (m *ListRoyaltyReportsResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ListRoyaltyReportsResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ListRoyaltyReportsResponse) GetData() *RoyaltyReportsPaginate {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListRoyaltyReportOrdersRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"merchant_id"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24" param:"merchant_id"`
	// @inject_tag: query:"report_id" validate:"required,hexadecimal,len=24" param:"report_id"
	ReportId string `protobuf:"bytes,2,opt,name=report_id,json=reportId" json:"report_id,omitempty" query:"report_id" validate:"required,hexadecimal,len=24" param:"report_id"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0"
	Limit int64 `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
}

func (m *ListRoyaltyReportOrdersRequest) Reset()         { *m = ListRoyaltyReportOrdersRequest{} }
func (m *ListRoyaltyReportOrdersRequest) String() string { return proto.CompactTextString(m) }
func (*ListRoyaltyReportOrdersRequest) ProtoMessage()    {}
func (*ListRoyaltyReportOrdersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{117}
}

func (m *ListRoyaltyReportOrdersRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ListRoyaltyReportOrdersRequest) GetReportId() string {
	if m != nil {
		return m.ReportId
	}
	return ""
}

func (m *ListRoyaltyReportOrdersRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRoyaltyReportOrdersRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ChangeRoyaltyReportCorrection struct {
	Amount float64 `protobuf:"fixed64,1,opt,name=amount" json:"amount,omitempty"`
	Reason string  `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
}

func (m *ChangeRoyaltyReportCorrection) Reset()                    { *m = ChangeRoyaltyReportCorrection{} }
func (m *ChangeRoyaltyReportCorrection) String() string            { return proto.CompactTextString(m) }
func (*ChangeRoyaltyReportCorrection) ProtoMessage()               {}
func (*ChangeRoyaltyReportCorrection) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *ChangeRoyaltyReportCorrection) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ChangeRoyaltyReportCorrection) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type GetRoyaltyReportRequest struct {
	// @inject_tag: json:"merchant_id" validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"report_id" validate:"required,hexadecimal,len=24" param:"report_id"
	ReportId string `protobuf:"bytes,2,opt,name=report_id,json=reportId" json:"report_id" validate:"required,hexadecimal,len=24" param:"report_id"`
}

func (m *GetRoyaltyReportRequest) Reset()                    { *m = GetRoyaltyReportRequest{} }
func (m *GetRoyaltyReportRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRoyaltyReportRequest) ProtoMessage()               {}
func (*GetRoyaltyReportRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *GetRoyaltyReportRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetRoyaltyReportRequest) GetReportId() string {
	if m != nil {
		return m.ReportId
	}
	return ""
}

type GetRoyaltyReportResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"item"
	Item *billing.RoyaltyReport `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *GetRoyaltyReportResponse) Reset()                    { *m = GetRoyaltyReportResponse{} }
func (m *GetRoyaltyReportResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRoyaltyReportResponse) ProtoMessage()               {}
func (*GetRoyaltyReportResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *GetRoyaltyReportResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetRoyaltyReportResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetRoyaltyReportResponse) GetItem() *billing.RoyaltyReport {
	if m != nil {
		return m.Item
	}
	return nil
}

type ChangeRoyaltyReportRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"report_id" validate:"required,hexadecimal,len=24" param:"report_id"
	ReportId string `protobuf:"bytes,2,opt,name=report_id,json=reportId" json:"report_id" validate:"required,hexadecimal,len=24" param:"report_id"`
	// @inject_tag: json:"status" validate:"omitempty,oneof=pending skipped accepted canceled dispute ready_for_invoice payment_in_progress payment_done payment_error"
	Status string `protobuf:"bytes,3,opt,name=status" json:"status" validate:"omitempty,oneof=pending skipped accepted canceled dispute ready_for_invoice payment_in_progress payment_done payment_error"`
	// @inject_tag: json:"correction"
	Correction *ChangeRoyaltyReportCorrection `protobuf:"bytes,4,opt,name=correction" json:"correction"`
	Ip         string                         `protobuf:"bytes,5,opt,name=ip" json:"ip,omitempty"`
}

func (m *ChangeRoyaltyReportRequest) Reset()                    { *m = ChangeRoyaltyReportRequest{} }
func (m *ChangeRoyaltyReportRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeRoyaltyReportRequest) ProtoMessage()               {}
func (*ChangeRoyaltyReportRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{121} }

func (m *ChangeRoyaltyReportRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ChangeRoyaltyReportRequest) GetReportId() string {
	if m != nil {
		return m.ReportId
	}
	return ""
}

func (m *ChangeRoyaltyReportRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ChangeRoyaltyReportRequest) GetCorrection() *ChangeRoyaltyReportCorrection {
	if m != nil {
		return m.Correction
	}
	return nil
}

func (m *ChangeRoyaltyReportRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type MerchantReviewRoyaltyReportRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"report_id"
	ReportId string `protobuf:"bytes,2,opt,name=report_id,json=reportId" json:"report_id,omitempty" validate:"required,hexadecimal,len=24" param:"report_id"`
	// @inject_tag: json:"is_accepted"
	IsAccepted bool   `protobuf:"varint,3,opt,name=is_accepted,json=isAccepted" json:"is_accepted"`
	Ip         string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	// @inject_tag: json:"dispute_reason"
	DisputeReason string `protobuf:"bytes,5,opt,name=dispute_reason,json=disputeReason" json:"dispute_reason"`
}

func (m *MerchantReviewRoyaltyReportRequest) Reset()         { *m = MerchantReviewRoyaltyReportRequest{} }
func (m *MerchantReviewRoyaltyReportRequest) String() string { return proto.CompactTextString(m) }
func (*MerchantReviewRoyaltyReportRequest) ProtoMessage()    {}
func (*MerchantReviewRoyaltyReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{122}
}

func (m *MerchantReviewRoyaltyReportRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *MerchantReviewRoyaltyReportRequest) GetReportId() string {
	if m != nil {
		return m.ReportId
	}
	return ""
}

func (m *MerchantReviewRoyaltyReportRequest) GetIsAccepted() bool {
	if m != nil {
		return m.IsAccepted
	}
	return false
}

func (m *MerchantReviewRoyaltyReportRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *MerchantReviewRoyaltyReportRequest) GetDisputeReason() string {
	if m != nil {
		return m.DisputeReason
	}
	return ""
}

type PaymentChannelCostSystemListResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"item"
	Item *billing.PaymentChannelCostSystemList `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *PaymentChannelCostSystemListResponse) Reset()         { *m = PaymentChannelCostSystemListResponse{} }
func (m *PaymentChannelCostSystemListResponse) String() string { return proto.CompactTextString(m) }
func (*PaymentChannelCostSystemListResponse) ProtoMessage()    {}
func (*PaymentChannelCostSystemListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{123}
}

func (m *PaymentChannelCostSystemListResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PaymentChannelCostSystemListResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PaymentChannelCostSystemListResponse) GetItem() *billing.PaymentChannelCostSystemList {
	if m != nil {
		return m.Item
	}
	return nil
}

type PaymentChannelCostSystemResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"item"
	Item *billing.PaymentChannelCostSystem `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *PaymentChannelCostSystemResponse) Reset()         { *m = PaymentChannelCostSystemResponse{} }
func (m *PaymentChannelCostSystemResponse) String() string { return proto.CompactTextString(m) }
func (*PaymentChannelCostSystemResponse) ProtoMessage()    {}
func (*PaymentChannelCostSystemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{124}
}

func (m *PaymentChannelCostSystemResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PaymentChannelCostSystemResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PaymentChannelCostSystemResponse) GetItem() *billing.PaymentChannelCostSystem {
	if m != nil {
		return m.Item
	}
	return nil
}

type PaymentChannelCostMerchantListResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"item"
	Item *billing.PaymentChannelCostMerchantList `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *PaymentChannelCostMerchantListResponse) Reset() {
	*m = PaymentChannelCostMerchantListResponse{}
}
func (m *PaymentChannelCostMerchantListResponse) String() string { return proto.CompactTextString(m) }
func (*PaymentChannelCostMerchantListResponse) ProtoMessage()    {}
func (*PaymentChannelCostMerchantListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{125}
}

func (m *PaymentChannelCostMerchantListResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PaymentChannelCostMerchantListResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PaymentChannelCostMerchantListResponse) GetItem() *billing.PaymentChannelCostMerchantList {
	if m != nil {
		return m.Item
	}
	return nil
}

type PaymentChannelCostMerchantResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"item"
	Item *billing.PaymentChannelCostMerchant `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *PaymentChannelCostMerchantResponse) Reset()         { *m = PaymentChannelCostMerchantResponse{} }
func (m *PaymentChannelCostMerchantResponse) String() string { return proto.CompactTextString(m) }
func (*PaymentChannelCostMerchantResponse) ProtoMessage()    {}
func (*PaymentChannelCostMerchantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{126}
}

func (m *PaymentChannelCostMerchantResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PaymentChannelCostMerchantResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PaymentChannelCostMerchantResponse) GetItem() *billing.PaymentChannelCostMerchant {
	if m != nil {
		return m.Item
	}
	return nil
}

type MoneyBackCostSystemListResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"item"
	Item *billing.MoneyBackCostSystemList `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *MoneyBackCostSystemListResponse) Reset()         { *m = MoneyBackCostSystemListResponse{} }
func (m *MoneyBackCostSystemListResponse) String() string { return proto.CompactTextString(m) }
func (*MoneyBackCostSystemListResponse) ProtoMessage()    {}
func (*MoneyBackCostSystemListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{127}
}

func (m *MoneyBackCostSystemListResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MoneyBackCostSystemListResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *MoneyBackCostSystemListResponse) GetItem() *billing.MoneyBackCostSystemList {
	if m != nil {
		return m.Item
	}
	return nil
}

type MoneyBackCostSystemResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"item"
	Item *billing.MoneyBackCostSystem `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *MoneyBackCostSystemResponse) Reset()                    { *m = MoneyBackCostSystemResponse{} }
func (m *MoneyBackCostSystemResponse) String() string            { return proto.CompactTextString(m) }
func (*MoneyBackCostSystemResponse) ProtoMessage()               {}
func (*MoneyBackCostSystemResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *MoneyBackCostSystemResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MoneyBackCostSystemResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *MoneyBackCostSystemResponse) GetItem() *billing.MoneyBackCostSystem {
	if m != nil {
		return m.Item
	}
	return nil
}

type MoneyBackCostMerchantListResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"item"
	Item *billing.MoneyBackCostMerchantList `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *MoneyBackCostMerchantListResponse) Reset()         { *m = MoneyBackCostMerchantListResponse{} }
func (m *MoneyBackCostMerchantListResponse) String() string { return proto.CompactTextString(m) }
func (*MoneyBackCostMerchantListResponse) ProtoMessage()    {}
func (*MoneyBackCostMerchantListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{129}
}

func (m *MoneyBackCostMerchantListResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MoneyBackCostMerchantListResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *MoneyBackCostMerchantListResponse) GetItem() *billing.MoneyBackCostMerchantList {
	if m != nil {
		return m.Item
	}
	return nil
}

type MoneyBackCostMerchantResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"item"
	Item *billing.MoneyBackCostMerchant `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *MoneyBackCostMerchantResponse) Reset()                    { *m = MoneyBackCostMerchantResponse{} }
func (m *MoneyBackCostMerchantResponse) String() string            { return proto.CompactTextString(m) }
func (*MoneyBackCostMerchantResponse) ProtoMessage()               {}
func (*MoneyBackCostMerchantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{130} }

func (m *MoneyBackCostMerchantResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MoneyBackCostMerchantResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *MoneyBackCostMerchantResponse) GetItem() *billing.MoneyBackCostMerchant {
	if m != nil {
		return m.Item
	}
	return nil
}

type PriceGroupByCountryRequest struct {
	// @inject_tag: validate:"required,alpha,len=2"
	Country string `protobuf:"bytes,1,opt,name=country" json:"country,omitempty" validate:"required,alpha,len=2"`
}

func (m *PriceGroupByCountryRequest) Reset()                    { *m = PriceGroupByCountryRequest{} }
func (m *PriceGroupByCountryRequest) String() string            { return proto.CompactTextString(m) }
func (*PriceGroupByCountryRequest) ProtoMessage()               {}
func (*PriceGroupByCountryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

func (m *PriceGroupByCountryRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type PriceGroupCurrenciesResponse struct {
	// @inject_tag: json:"regions"
	Region []*PriceGroupRegions `protobuf:"bytes,1,rep,name=region" json:"regions"`
}

func (m *PriceGroupCurrenciesResponse) Reset()                    { *m = PriceGroupCurrenciesResponse{} }
func (m *PriceGroupCurrenciesResponse) String() string            { return proto.CompactTextString(m) }
func (*PriceGroupCurrenciesResponse) ProtoMessage()               {}
func (*PriceGroupCurrenciesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132} }

func (m *PriceGroupCurrenciesResponse) GetRegion() []*PriceGroupRegions {
	if m != nil {
		return m.Region
	}
	return nil
}

type PriceGroupRegions struct {
	// @inject_tag: json:"currency"
	Currency string `protobuf:"bytes,1,opt,name=currency" json:"currency"`
	// @inject_tag: json:"regions"
	Regions []*PriceGroupRegion `protobuf:"bytes,2,rep,name=regions" json:"regions"`
}

func (m *PriceGroupRegions) Reset()                    { *m = PriceGroupRegions{} }
func (m *PriceGroupRegions) String() string            { return proto.CompactTextString(m) }
func (*PriceGroupRegions) ProtoMessage()               {}
func (*PriceGroupRegions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{133} }

func (m *PriceGroupRegions) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *PriceGroupRegions) GetRegions() []*PriceGroupRegion {
	if m != nil {
		return m.Regions
	}
	return nil
}

type PriceGroupRegion struct {
	// @inject_tag: json:"region"
	Region string `protobuf:"bytes,1,opt,name=region" json:"region"`
	// @inject_tag: json:"country"
	Country []string `protobuf:"bytes,2,rep,name=country" json:"country"`
}

func (m *PriceGroupRegion) Reset()                    { *m = PriceGroupRegion{} }
func (m *PriceGroupRegion) String() string            { return proto.CompactTextString(m) }
func (*PriceGroupRegion) ProtoMessage()               {}
func (*PriceGroupRegion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

func (m *PriceGroupRegion) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PriceGroupRegion) GetCountry() []string {
	if m != nil {
		return m.Country
	}
	return nil
}

type PriceGroupByRegionRequest struct {
	// @inject_tag: validate:"required,alpha"
	Region string `protobuf:"bytes,1,opt,name=region" json:"region,omitempty" validate:"required,alpha"`
}

func (m *PriceGroupByRegionRequest) Reset()                    { *m = PriceGroupByRegionRequest{} }
func (m *PriceGroupByRegionRequest) String() string            { return proto.CompactTextString(m) }
func (*PriceGroupByRegionRequest) ProtoMessage()               {}
func (*PriceGroupByRegionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *PriceGroupByRegionRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type RecommendedPriceRequest struct {
	// @inject_tag: validate:"required,numeric,gte=0"
	Amount float64 `protobuf:"fixed64,1,opt,name=amount" json:"amount,omitempty" validate:"required,numeric,gte=0"`
	// @inject_tag: validate:"required,alpha,len=3"
	Currency string `protobuf:"bytes,2,opt,name=currency" json:"currency,omitempty" validate:"required,alpha,len=3"`
}

func (m *RecommendedPriceRequest) Reset()                    { *m = RecommendedPriceRequest{} }
func (m *RecommendedPriceRequest) String() string            { return proto.CompactTextString(m) }
func (*RecommendedPriceRequest) ProtoMessage()               {}
func (*RecommendedPriceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{136} }

func (m *RecommendedPriceRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *RecommendedPriceRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type RecommendedPriceResponse struct {
	// @inject_tag: json:"recommended_price"
	RecommendedPrice []*billing.RecommendedPrice `protobuf:"bytes,1,rep,name=recommended_price,json=recommendedPrice" json:"recommended_price"`
}

func (m *RecommendedPriceResponse) Reset()                    { *m = RecommendedPriceResponse{} }
func (m *RecommendedPriceResponse) String() string            { return proto.CompactTextString(m) }
func (*RecommendedPriceResponse) ProtoMessage()               {}
func (*RecommendedPriceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

func (m *RecommendedPriceResponse) GetRecommendedPrice() []*billing.RecommendedPrice {
	if m != nil {
		return m.RecommendedPrice
	}
	return nil
}

type RecommendedPriceTableRequest struct {
	// @inject_tag: validate:"required,alpha,len=3"
	Currency string `protobuf:"bytes,1,opt,name=currency" json:"currency,omitempty" validate:"required,alpha,len=3"`
}

func (m *RecommendedPriceTableRequest) Reset()                    { *m = RecommendedPriceTableRequest{} }
func (m *RecommendedPriceTableRequest) String() string            { return proto.CompactTextString(m) }
func (*RecommendedPriceTableRequest) ProtoMessage()               {}
func (*RecommendedPriceTableRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

func (m *RecommendedPriceTableRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type RecommendedPriceTableResponse struct {
	// @inject_tag: json:"ranges"
	Ranges []*billing.PriceTableRange `protobuf:"bytes,1,rep,name=ranges" json:"ranges"`
}

func (m *RecommendedPriceTableResponse) Reset()                    { *m = RecommendedPriceTableResponse{} }
func (m *RecommendedPriceTableResponse) String() string            { return proto.CompactTextString(m) }
func (*RecommendedPriceTableResponse) ProtoMessage()               {}
func (*RecommendedPriceTableResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *RecommendedPriceTableResponse) GetRanges() []*billing.PriceTableRange {
	if m != nil {
		return m.Ranges
	}
	return nil
}

type ProductPricesResponse struct {
	// @inject_tag: json:"product_price"
	ProductPrice []*billing.ProductPrice `protobuf:"bytes,1,rep,name=product_price,json=productPrice" json:"product_price"`
}

func (m *ProductPricesResponse) Reset()                    { *m = ProductPricesResponse{} }
func (m *ProductPricesResponse) String() string            { return proto.CompactTextString(m) }
func (*ProductPricesResponse) ProtoMessage()               {}
func (*ProductPricesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{140} }

func (m *ProductPricesResponse) GetProductPrice() []*billing.ProductPrice {
	if m != nil {
		return m.ProductPrice
	}
	return nil
}

type UpdateProductPricesRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"product_id" param:"product_id"
	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId" json:"product_id" validate:"required,hexadecimal,len=24" param:"product_id"`
	// @inject_tag: validate:"required,min=1,currency_price,dive" json:"prices"
	Prices []*billing.ProductPrice `protobuf:"bytes,2,rep,name=prices" json:"prices" validate:"required,min=1,currency_price,dive"`
	// @inject_tag: validate:"hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,3,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"hexadecimal,len=24"`
}

func (m *UpdateProductPricesRequest) Reset()                    { *m = UpdateProductPricesRequest{} }
func (m *UpdateProductPricesRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductPricesRequest) ProtoMessage()               {}
func (*UpdateProductPricesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *UpdateProductPricesRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *UpdateProductPricesRequest) GetPrices() []*billing.ProductPrice {
	if m != nil {
		return m.Prices
	}
	return nil
}

func (m *UpdateProductPricesRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type UserProfilePersonal struct {
	// @inject_tag: json:"first_name" bson:"first_name" validate:"required,name,max=30"
	FirstName string `protobuf:"bytes,1,opt,name=first_name,json=firstName" json:"first_name" bson:"first_name" validate:"required,name,max=30"`
	// @inject_tag: json:"last_name" bson:"last_name" validate:"required,name,max=30"
	LastName string `protobuf:"bytes,2,opt,name=last_name,json=lastName" json:"last_name" bson:"last_name" validate:"required,name,max=30"`
	// @inject_tag: json:"position" bson:"position" validate:"required,position"
	Position string `protobuf:"bytes,3,opt,name=position" json:"position" bson:"position" validate:"required,position"`
}

func (m *UserProfilePersonal) Reset()                    { *m = UserProfilePersonal{} }
func (m *UserProfilePersonal) String() string            { return proto.CompactTextString(m) }
func (*UserProfilePersonal) ProtoMessage()               {}
func (*UserProfilePersonal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{142} }

func (m *UserProfilePersonal) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UserProfilePersonal) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *UserProfilePersonal) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

type UserProfileHelp struct {
	// @inject_tag: json:"product_promotion_and_development" bson:"product_promotion_and_development"
	ProductPromotionAndDevelopment bool `protobuf:"varint,1,opt,name=product_promotion_and_development,json=productPromotionAndDevelopment" json:"product_promotion_and_development" bson:"product_promotion_and_development"`
	// @inject_tag: json:"released_game_promotion" bson:"released_game_promotion"
	ReleasedGamePromotion bool `protobuf:"varint,2,opt,name=released_game_promotion,json=releasedGamePromotion" json:"released_game_promotion" bson:"released_game_promotion"`
	// @inject_tag: json:"international_sales" bson:"international_sales"
	InternationalSales bool `protobuf:"varint,3,opt,name=international_sales,json=internationalSales" json:"international_sales" bson:"international_sales"`
	// @inject_tag: json:"other" bson:"other"
	Other bool `protobuf:"varint,4,opt,name=other" json:"other" bson:"other"`
}

func (m *UserProfileHelp) Reset()                    { *m = UserProfileHelp{} }
func (m *UserProfileHelp) String() string            { return proto.CompactTextString(m) }
func (*UserProfileHelp) ProtoMessage()               {}
func (*UserProfileHelp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

func (m *UserProfileHelp) GetProductPromotionAndDevelopment() bool {
	if m != nil {
		return m.ProductPromotionAndDevelopment
	}
	return false
}

func (m *UserProfileHelp) GetReleasedGamePromotion() bool {
	if m != nil {
		return m.ReleasedGamePromotion
	}
	return false
}

func (m *UserProfileHelp) GetInternationalSales() bool {
	if m != nil {
		return m.InternationalSales
	}
	return false
}

func (m *UserProfileHelp) GetOther() bool {
	if m != nil {
		return m.Other
	}
	return false
}

type UserProfileCompanyMonetization struct {
	// @inject_tag: json:"paid_subscription" bson:"paid_subscription"
	PaidSubscription bool `protobuf:"varint,1,opt,name=paid_subscription,json=paidSubscription" json:"paid_subscription" bson:"paid_subscription"`
	// @inject_tag: json:"in_game_advertising" bson:"in_game_advertising"
	InGameAdvertising bool `protobuf:"varint,2,opt,name=in_game_advertising,json=inGameAdvertising" json:"in_game_advertising" bson:"in_game_advertising"`
	// @inject_tag: json:"in_game_purchases" bson:"in_game_purchases"
	InGamePurchases bool `protobuf:"varint,3,opt,name=in_game_purchases,json=inGamePurchases" json:"in_game_purchases" bson:"in_game_purchases"`
	// @inject_tag: json:"premium_access" bson:"premium_access"
	PremiumAccess bool `protobuf:"varint,4,opt,name=premium_access,json=premiumAccess" json:"premium_access" bson:"premium_access"`
	// @inject_tag: json:"other" bson:"other"
	Other bool `protobuf:"varint,5,opt,name=other" json:"other" bson:"other"`
}

func (m *UserProfileCompanyMonetization) Reset()         { *m = UserProfileCompanyMonetization{} }
func (m *UserProfileCompanyMonetization) String() string { return proto.CompactTextString(m) }
func (*UserProfileCompanyMonetization) ProtoMessage()    {}
func (*UserProfileCompanyMonetization) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{144}
}

func (m *UserProfileCompanyMonetization) GetPaidSubscription() bool {
	if m != nil {
		return m.PaidSubscription
	}
	return false
}

func (m *UserProfileCompanyMonetization) GetInGameAdvertising() bool {
	if m != nil {
		return m.InGameAdvertising
	}
	return false
}

func (m *UserProfileCompanyMonetization) GetInGamePurchases() bool {
	if m != nil {
		return m.InGamePurchases
	}
	return false
}

func (m *UserProfileCompanyMonetization) GetPremiumAccess() bool {
	if m != nil {
		return m.PremiumAccess
	}
	return false
}

func (m *UserProfileCompanyMonetization) GetOther() bool {
	if m != nil {
		return m.Other
	}
	return false
}

type UserProfileCompanyPlatforms struct {
	// @inject_tag: json:"pc_mac" bson:"pc_mac"
	PcMac bool `protobuf:"varint,1,opt,name=pc_mac,json=pcMac" json:"pc_mac" bson:"pc_mac"`
	// @inject_tag: json:"game_console" bson:"game_console"
	GameConsole bool `protobuf:"varint,2,opt,name=game_console,json=gameConsole" json:"game_console" bson:"game_console"`
	// @inject_tag: json:"mobile_device" bson:"mobile_device"
	MobileDevice bool `protobuf:"varint,3,opt,name=mobile_device,json=mobileDevice" json:"mobile_device" bson:"mobile_device"`
	// @inject_tag: json:"web_browser" bson:"web_browser"
	WebBrowser bool `protobuf:"varint,4,opt,name=web_browser,json=webBrowser" json:"web_browser" bson:"web_browser"`
	// @inject_tag: json:"other" bson:"other"
	Other bool `protobuf:"varint,5,opt,name=other" json:"other" bson:"other"`
}

func (m *UserProfileCompanyPlatforms) Reset()                    { *m = UserProfileCompanyPlatforms{} }
func (m *UserProfileCompanyPlatforms) String() string            { return proto.CompactTextString(m) }
func (*UserProfileCompanyPlatforms) ProtoMessage()               {}
func (*UserProfileCompanyPlatforms) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *UserProfileCompanyPlatforms) GetPcMac() bool {
	if m != nil {
		return m.PcMac
	}
	return false
}

func (m *UserProfileCompanyPlatforms) GetGameConsole() bool {
	if m != nil {
		return m.GameConsole
	}
	return false
}

func (m *UserProfileCompanyPlatforms) GetMobileDevice() bool {
	if m != nil {
		return m.MobileDevice
	}
	return false
}

func (m *UserProfileCompanyPlatforms) GetWebBrowser() bool {
	if m != nil {
		return m.WebBrowser
	}
	return false
}

func (m *UserProfileCompanyPlatforms) GetOther() bool {
	if m != nil {
		return m.Other
	}
	return false
}

type UserProfileCompany struct {
	// @inject_tag: json:"company_name" bson:"company_name" validate:"required,company_name,max=60"
	CompanyName string `protobuf:"bytes,1,opt,name=company_name,json=companyName" json:"company_name" bson:"company_name" validate:"required,company_name,max=60"`
	// @inject_tag: json:"website" validate:"required,url" bson:"website"
	Website string `protobuf:"bytes,2,opt,name=website" json:"website" validate:"required,url" bson:"website"`
	// @inject_tag: json:"annual_income" bson:"annual_income" validate:"required"
	AnnualIncome *billing.RangeInt `protobuf:"bytes,3,opt,name=annual_income,json=annualIncome" json:"annual_income" bson:"annual_income" validate:"required"`
	// @inject_tag: json:"number_of_employees" bson:"number_of_employees" validate:"required"
	NumberOfEmployees *billing.RangeInt `protobuf:"bytes,4,opt,name=number_of_employees,json=numberOfEmployees" json:"number_of_employees" bson:"number_of_employees" validate:"required"`
	// @inject_tag: json:"kind_of_activity" validate:"omitempty,oneof=develop_and_publish_your_games publish_games_of_other_companies publish_your_games_through_other_publishers other" bson:"kind_of_activity"
	KindOfActivity string `protobuf:"bytes,5,opt,name=kind_of_activity,json=kindOfActivity" json:"kind_of_activity" validate:"omitempty,oneof=develop_and_publish_your_games publish_games_of_other_companies publish_your_games_through_other_publishers other" bson:"kind_of_activity"`
	// @inject_tag: json:"monetization" bson:"monetization"
	Monetization *UserProfileCompanyMonetization `protobuf:"bytes,6,opt,name=monetization" json:"monetization" bson:"monetization"`
	// @inject_tag: json:"platforms" bson:"platforms"
	Platforms *UserProfileCompanyPlatforms `protobuf:"bytes,7,opt,name=platforms" json:"platforms" bson:"platforms"`
}

func (m *UserProfileCompany) Reset()                    { *m = UserProfileCompany{} }
func (m *UserProfileCompany) String() string            { return proto.CompactTextString(m) }
func (*UserProfileCompany) ProtoMessage()               {}
func (*UserProfileCompany) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146} }

func (m *UserProfileCompany) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *UserProfileCompany) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *UserProfileCompany) GetAnnualIncome() *billing.RangeInt {
	if m != nil {
		return m.AnnualIncome
	}
	return nil
}

func (m *UserProfileCompany) GetNumberOfEmployees() *billing.RangeInt {
	if m != nil {
		return m.NumberOfEmployees
	}
	return nil
}

func (m *UserProfileCompany) GetKindOfActivity() string {
	if m != nil {
		return m.KindOfActivity
	}
	return ""
}

func (m *UserProfileCompany) GetMonetization() *UserProfileCompanyMonetization {
	if m != nil {
		return m.Monetization
	}
	return nil
}

func (m *UserProfileCompany) GetPlatforms() *UserProfileCompanyPlatforms {
	if m != nil {
		return m.Platforms
	}
	return nil
}

type UserProfileEmail struct {
	// @inject_tag: json:"email" validate:"required,email"
	Email string `protobuf:"bytes,1,opt,name=email" json:"email" validate:"required,email"`
	// @inject_tag: json:"confirmed"
	Confirmed bool `protobuf:"varint,2,opt,name=confirmed" json:"confirmed"`
	// @inject_tag: json:"confirmed_at"
	ConfirmedAt *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=confirmed_at,json=confirmedAt" json:"confirmed_at"`
	// @inject_tag: json:"-" bson:"-"
	ConfirmationUrl string `protobuf:"bytes,4,opt,name=confirmation_url,json=confirmationUrl" json:"-" bson:"-"`
	// @inject_tag: json:"-" bson:"is_confirmation_email_sent"
	IsConfirmationEmailSent bool `protobuf:"varint,5,opt,name=is_confirmation_email_sent,json=isConfirmationEmailSent" json:"-" bson:"is_confirmation_email_sent"`
}

func (m *UserProfileEmail) Reset()                    { *m = UserProfileEmail{} }
func (m *UserProfileEmail) String() string            { return proto.CompactTextString(m) }
func (*UserProfileEmail) ProtoMessage()               {}
func (*UserProfileEmail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{147} }

func (m *UserProfileEmail) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserProfileEmail) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *UserProfileEmail) GetConfirmedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.ConfirmedAt
	}
	return nil
}

func (m *UserProfileEmail) GetConfirmationUrl() string {
	if m != nil {
		return m.ConfirmationUrl
	}
	return ""
}

func (m *UserProfileEmail) GetIsConfirmationEmailSent() bool {
	if m != nil {
		return m.IsConfirmationEmailSent
	}
	return false
}

type UserProfile struct {
	// @inject_tag: json:"id"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id"`
	// @inject_tag: json:"-" validate:"required,hexadecimal,len=24"
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"-" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"email"
	Email *UserProfileEmail `protobuf:"bytes,3,opt,name=email" json:"email"`
	// @inject_tag: json:"personal"
	Personal *UserProfilePersonal `protobuf:"bytes,4,opt,name=personal" json:"personal"`
	// @inject_tag: json:"help"
	Help *UserProfileHelp `protobuf:"bytes,5,opt,name=help" json:"help"`
	// @inject_tag: json:"company"
	Company *UserProfileCompany `protobuf:"bytes,6,opt,name=company" json:"company"`
	// @inject_tag: json:"last_step" bson:"last_step"
	LastStep string `protobuf:"bytes,7,opt,name=last_step,json=lastStep" json:"last_step" bson:"last_step"`
	// @inject_tag: json:"centrifugo_token" bson:"centrifugo_token"
	CentrifugoToken string `protobuf:"bytes,8,opt,name=centrifugo_token,json=centrifugoToken" json:"centrifugo_token" bson:"centrifugo_token"`
	// @inject_tag: json:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt" json:"created_at"`
	// @inject_tag: json:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt" json:"updated_at"`
}

func (m *UserProfile) Reset()                    { *m = UserProfile{} }
func (m *UserProfile) String() string            { return proto.CompactTextString(m) }
func (*UserProfile) ProtoMessage()               {}
func (*UserProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148} }

func (m *UserProfile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserProfile) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserProfile) GetEmail() *UserProfileEmail {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *UserProfile) GetPersonal() *UserProfilePersonal {
	if m != nil {
		return m.Personal
	}
	return nil
}

func (m *UserProfile) GetHelp() *UserProfileHelp {
	if m != nil {
		return m.Help
	}
	return nil
}

func (m *UserProfile) GetCompany() *UserProfileCompany {
	if m != nil {
		return m.Company
	}
	return nil
}

func (m *UserProfile) GetLastStep() string {
	if m != nil {
		return m.LastStep
	}
	return ""
}

func (m *UserProfile) GetCentrifugoToken() string {
	if m != nil {
		return m.CentrifugoToken
	}
	return ""
}

func (m *UserProfile) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *UserProfile) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CommonUserProfileRequest struct {
	// @inject_tag: json:"user_id" validate:"required,hexadecimal,len=24"
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"merchant_id" validate:"omitempty,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id" validate:"omitempty,hexadecimal,len=24"`
}

func (m *CommonUserProfileRequest) Reset()                    { *m = CommonUserProfileRequest{} }
func (m *CommonUserProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*CommonUserProfileRequest) ProtoMessage()               {}
func (*CommonUserProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{149} }

func (m *CommonUserProfileRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CommonUserProfileRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type CommonUserProfileResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Profile *CommonUserProfile    `protobuf:"bytes,3,opt,name=profile" json:"profile,omitempty"`
}

func (m *CommonUserProfileResponse) Reset()                    { *m = CommonUserProfileResponse{} }
func (m *CommonUserProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*CommonUserProfileResponse) ProtoMessage()               {}
func (*CommonUserProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{150} }

func (m *CommonUserProfileResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CommonUserProfileResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *CommonUserProfileResponse) GetProfile() *CommonUserProfile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type CommonUserProfile struct {
	Profile     *UserProfile      `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
	Role        *billing.UserRole `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	Permissions []*Permission     `protobuf:"bytes,3,rep,name=permissions" json:"permissions,omitempty"`
	Merchant    *billing.Merchant `protobuf:"bytes,4,opt,name=merchant" json:"merchant,omitempty"`
}

func (m *CommonUserProfile) Reset()                    { *m = CommonUserProfile{} }
func (m *CommonUserProfile) String() string            { return proto.CompactTextString(m) }
func (*CommonUserProfile) ProtoMessage()               {}
func (*CommonUserProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{151} }

func (m *CommonUserProfile) GetProfile() *UserProfile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *CommonUserProfile) GetRole() *billing.UserRole {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *CommonUserProfile) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *CommonUserProfile) GetMerchant() *billing.Merchant {
	if m != nil {
		return m.Merchant
	}
	return nil
}

type GetUserProfileRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	ProfileId string `protobuf:"bytes,2,opt,name=profile_id,json=profileId" json:"profile_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
}

func (m *GetUserProfileRequest) Reset()                    { *m = GetUserProfileRequest{} }
func (m *GetUserProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserProfileRequest) ProtoMessage()               {}
func (*GetUserProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{152} }

func (m *GetUserProfileRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetUserProfileRequest) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

type GetUserProfileResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *UserProfile          `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetUserProfileResponse) Reset()                    { *m = GetUserProfileResponse{} }
func (m *GetUserProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserProfileResponse) ProtoMessage()               {}
func (*GetUserProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{153} }

func (m *GetUserProfileResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetUserProfileResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetUserProfileResponse) GetItem() *UserProfile {
	if m != nil {
		return m.Item
	}
	return nil
}

type PageReview struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// @inject_tag: json:"user_id" bson:"user_id"
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id" bson:"user_id"`
	Review string `protobuf:"bytes,3,opt,name=review" json:"review,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	IsRead bool   `protobuf:"varint,5,opt,name=is_read,json=isRead" json:"is_read,omitempty"`
	// @inject_tag: json:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt" json:"created_at"`
	// @inject_tag: json:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt" json:"updated_at"`
}

func (m *PageReview) Reset()                    { *m = PageReview{} }
func (m *PageReview) String() string            { return proto.CompactTextString(m) }
func (*PageReview) ProtoMessage()               {}
func (*PageReview) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{154} }

func (m *PageReview) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PageReview) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PageReview) GetReview() string {
	if m != nil {
		return m.Review
	}
	return ""
}

func (m *PageReview) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *PageReview) GetIsRead() bool {
	if m != nil {
		return m.IsRead
	}
	return false
}

func (m *PageReview) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PageReview) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CreatePageReviewRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,max=500"
	Review string `protobuf:"bytes,2,opt,name=review" json:"review,omitempty" validate:"required,max=500"`
	// @inject_tag: validate:"required"
	Url string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty" validate:"required"`
}

func (m *CreatePageReviewRequest) Reset()                    { *m = CreatePageReviewRequest{} }
func (m *CreatePageReviewRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePageReviewRequest) ProtoMessage()               {}
func (*CreatePageReviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{155} }

func (m *CreatePageReviewRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreatePageReviewRequest) GetReview() string {
	if m != nil {
		return m.Review
	}
	return ""
}

func (m *CreatePageReviewRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ConfirmUserEmailRequest struct {
	// @inject_tag: validate:"required"
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty" validate:"required"`
}

func (m *ConfirmUserEmailRequest) Reset()                    { *m = ConfirmUserEmailRequest{} }
func (m *ConfirmUserEmailRequest) String() string            { return proto.CompactTextString(m) }
func (*ConfirmUserEmailRequest) ProtoMessage()               {}
func (*ConfirmUserEmailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{156} }

func (m *ConfirmUserEmailRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ConfirmUserEmailResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Profile *UserProfile          `protobuf:"bytes,3,opt,name=profile" json:"profile,omitempty"`
}

func (m *ConfirmUserEmailResponse) Reset()                    { *m = ConfirmUserEmailResponse{} }
func (m *ConfirmUserEmailResponse) String() string            { return proto.CompactTextString(m) }
func (*ConfirmUserEmailResponse) ProtoMessage()               {}
func (*ConfirmUserEmailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{157} }

func (m *ConfirmUserEmailResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ConfirmUserEmailResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ConfirmUserEmailResponse) GetProfile() *UserProfile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type VatTransactionsRequest struct {
	// @inject_tag: json:"vat_report_id" validate:"required,hexadecimal,len=24"
	VatReportId string `protobuf:"bytes,1,opt,name=vat_report_id,json=vatReportId" json:"vat_report_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0"
	Limit int64 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: query:"sort[]"
	Sort []string `protobuf:"bytes,4,rep,name=sort" json:"sort,omitempty" query:"sort[]"`
}

func (m *VatTransactionsRequest) Reset()                    { *m = VatTransactionsRequest{} }
func (m *VatTransactionsRequest) String() string            { return proto.CompactTextString(m) }
func (*VatTransactionsRequest) ProtoMessage()               {}
func (*VatTransactionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{158} }

func (m *VatTransactionsRequest) GetVatReportId() string {
	if m != nil {
		return m.VatReportId
	}
	return ""
}

func (m *VatTransactionsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *VatTransactionsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *VatTransactionsRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

type TransactionsPaginate struct {
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*billing.OrderViewPublic `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *TransactionsPaginate) Reset()                    { *m = TransactionsPaginate{} }
func (m *TransactionsPaginate) String() string            { return proto.CompactTextString(m) }
func (*TransactionsPaginate) ProtoMessage()               {}
func (*TransactionsPaginate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{159} }

func (m *TransactionsPaginate) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TransactionsPaginate) GetItems() []*billing.OrderViewPublic {
	if m != nil {
		return m.Items
	}
	return nil
}

type TransactionsResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// @inject_tag: json:"message,omitempty"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"data"
	Data *TransactionsPaginate `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *TransactionsResponse) Reset()                    { *m = TransactionsResponse{} }
func (m *TransactionsResponse) String() string            { return proto.CompactTextString(m) }
func (*TransactionsResponse) ProtoMessage()               {}
func (*TransactionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{160} }

func (m *TransactionsResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *TransactionsResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *TransactionsResponse) GetData() *TransactionsPaginate {
	if m != nil {
		return m.Data
	}
	return nil
}

type VatReportsRequest struct {
	// @inject_tag: json:"country" query:"country" validate:"required,alpha,len=2"
	Country string `protobuf:"bytes,1,opt,name=country" json:"country" query:"country" validate:"required,alpha,len=2"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0"
	Limit int64 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: query:"sort[]"
	Sort []string `protobuf:"bytes,4,rep,name=sort" json:"sort,omitempty" query:"sort[]"`
}

func (m *VatReportsRequest) Reset()                    { *m = VatReportsRequest{} }
func (m *VatReportsRequest) String() string            { return proto.CompactTextString(m) }
func (*VatReportsRequest) ProtoMessage()               {}
func (*VatReportsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{161} }

func (m *VatReportsRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *VatReportsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *VatReportsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *VatReportsRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

type VatReportsPaginate struct {
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*billing.VatReport `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *VatReportsPaginate) Reset()                    { *m = VatReportsPaginate{} }
func (m *VatReportsPaginate) String() string            { return proto.CompactTextString(m) }
func (*VatReportsPaginate) ProtoMessage()               {}
func (*VatReportsPaginate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{162} }

func (m *VatReportsPaginate) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *VatReportsPaginate) GetItems() []*billing.VatReport {
	if m != nil {
		return m.Items
	}
	return nil
}

type VatReportsResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// @inject_tag: json:"message,omitempty"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"data"
	Data *VatReportsPaginate `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *VatReportsResponse) Reset()                    { *m = VatReportsResponse{} }
func (m *VatReportsResponse) String() string            { return proto.CompactTextString(m) }
func (*VatReportsResponse) ProtoMessage()               {}
func (*VatReportsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{163} }

func (m *VatReportsResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *VatReportsResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *VatReportsResponse) GetData() *VatReportsPaginate {
	if m != nil {
		return m.Data
	}
	return nil
}

type ProcessVatReportsRequest struct {
	Date *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=date" json:"date,omitempty"`
}

func (m *ProcessVatReportsRequest) Reset()                    { *m = ProcessVatReportsRequest{} }
func (m *ProcessVatReportsRequest) String() string            { return proto.CompactTextString(m) }
func (*ProcessVatReportsRequest) ProtoMessage()               {}
func (*ProcessVatReportsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{164} }

func (m *ProcessVatReportsRequest) GetDate() *google_protobuf.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type UpdateVatReportStatusRequest struct {
	// @inject_tag: json:"id" bson:"_id" validate:"hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id" bson:"_id" validate:"hexadecimal,len=24"`
	// @inject_tag: json:"status" bson:"status" validate:"required,alpha,oneof=paid canceled"
	Status string `protobuf:"bytes,2,opt,name=status" json:"status" bson:"status" validate:"required,alpha,oneof=paid canceled"`
}

func (m *UpdateVatReportStatusRequest) Reset()                    { *m = UpdateVatReportStatusRequest{} }
func (m *UpdateVatReportStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateVatReportStatusRequest) ProtoMessage()               {}
func (*UpdateVatReportStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{165} }

func (m *UpdateVatReportStatusRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateVatReportStatusRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type GetMerchantOnboardingCompleteDataResponseItem struct {
	// @inject_tag: json:"status"
	Status string `protobuf:"bytes,1,opt,name=status" json:"status"`
	// @inject_tag: json:"steps"
	Steps *billing.MerchantCompletedSteps `protobuf:"bytes,2,opt,name=steps" json:"steps"`
	// @inject_tag: json:"complete_steps_count"
	CompleteStepsCount int32 `protobuf:"varint,3,opt,name=complete_steps_count,json=completeStepsCount" json:"complete_steps_count"`
}

func (m *GetMerchantOnboardingCompleteDataResponseItem) Reset() {
	*m = GetMerchantOnboardingCompleteDataResponseItem{}
}
func (m *GetMerchantOnboardingCompleteDataResponseItem) String() string {
	return proto.CompactTextString(m)
}
func (*GetMerchantOnboardingCompleteDataResponseItem) ProtoMessage() {}
func (*GetMerchantOnboardingCompleteDataResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{166}
}

func (m *GetMerchantOnboardingCompleteDataResponseItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GetMerchantOnboardingCompleteDataResponseItem) GetSteps() *billing.MerchantCompletedSteps {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *GetMerchantOnboardingCompleteDataResponseItem) GetCompleteStepsCount() int32 {
	if m != nil {
		return m.CompleteStepsCount
	}
	return 0
}

type GetMerchantOnboardingCompleteDataResponse struct {
	Status  int32                                          `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage                          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *GetMerchantOnboardingCompleteDataResponseItem `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetMerchantOnboardingCompleteDataResponse) Reset() {
	*m = GetMerchantOnboardingCompleteDataResponse{}
}
func (m *GetMerchantOnboardingCompleteDataResponse) String() string { return proto.CompactTextString(m) }
func (*GetMerchantOnboardingCompleteDataResponse) ProtoMessage()    {}
func (*GetMerchantOnboardingCompleteDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{167}
}

func (m *GetMerchantOnboardingCompleteDataResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetMerchantOnboardingCompleteDataResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetMerchantOnboardingCompleteDataResponse) GetItem() *GetMerchantOnboardingCompleteDataResponseItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetMerchantTariffRatesRequest struct {
	// @inject_tag: query:"region" validate:"required,tariff_region"
	HomeRegion string `protobuf:"bytes,1,opt,name=home_region,json=homeRegion" json:"home_region,omitempty" query:"region" validate:"required,tariff_region"`
	// @inject_tag: query:"payer_region" validate:"omitempty,tariff_region"
	PayerRegion string `protobuf:"bytes,2,opt,name=payer_region,json=payerRegion" json:"payer_region,omitempty" query:"payer_region" validate:"omitempty,tariff_region"`
	// @inject_tag: query:"min_amount" validate:"omitempty,numeric,gte=0"
	MinAmount float64 `protobuf:"fixed64,3,opt,name=min_amount,json=minAmount" json:"min_amount,omitempty" query:"min_amount" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: query:"max_amount" validate:"omitempty,numeric,gt=0"
	MaxAmount float64 `protobuf:"fixed64,4,opt,name=max_amount,json=maxAmount" json:"max_amount,omitempty" query:"max_amount" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"merchant_operations_type" json:"merchant_operations_type" validate:"oneof=high-risk low-risk"
	MerchantOperationsType string `protobuf:"bytes,5,opt,name=merchant_operations_type,json=merchantOperationsType" json:"merchant_operations_type" query:"merchant_operations_type" validate:"oneof=high-risk low-risk"`
}

func (m *GetMerchantTariffRatesRequest) Reset()                    { *m = GetMerchantTariffRatesRequest{} }
func (m *GetMerchantTariffRatesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantTariffRatesRequest) ProtoMessage()               {}
func (*GetMerchantTariffRatesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{168} }

func (m *GetMerchantTariffRatesRequest) GetHomeRegion() string {
	if m != nil {
		return m.HomeRegion
	}
	return ""
}

func (m *GetMerchantTariffRatesRequest) GetPayerRegion() string {
	if m != nil {
		return m.PayerRegion
	}
	return ""
}

func (m *GetMerchantTariffRatesRequest) GetMinAmount() float64 {
	if m != nil {
		return m.MinAmount
	}
	return 0
}

func (m *GetMerchantTariffRatesRequest) GetMaxAmount() float64 {
	if m != nil {
		return m.MaxAmount
	}
	return 0
}

func (m *GetMerchantTariffRatesRequest) GetMerchantOperationsType() string {
	if m != nil {
		return m.MerchantOperationsType
	}
	return ""
}

type GetMerchantTariffRatesResponseItems struct {
	Payment []*billing.MerchantTariffRatesPayment `protobuf:"bytes,1,rep,name=payment" json:"payment,omitempty"`
	// @inject_tag: json:"-"
	Refund []*billing.MerchantTariffRatesSettingsItem `protobuf:"bytes,2,rep,name=refund" json:"-"`
	// @inject_tag: json:"chargeback"
	Chargeback []*billing.MerchantTariffRatesSettingsItem `protobuf:"bytes,3,rep,name=chargeback" json:"chargeback"`
	// @inject_tag: json:"payout"
	Payout map[string]*billing.MerchantTariffRatesSettingsItem `protobuf:"bytes,4,rep,name=payout" json:"payout" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// @inject_tag: json:"minimal_payout"
	MinimalPayout map[string]float32 `protobuf:"bytes,5,rep,name=minimal_payout,json=minimalPayout" json:"minimal_payout" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	// @inject_tag: json:"mcc_code"
	MccCode string `protobuf:"bytes,6,opt,name=mcc_code,json=mccCode" json:"mcc_code"`
}

func (m *GetMerchantTariffRatesResponseItems) Reset()         { *m = GetMerchantTariffRatesResponseItems{} }
func (m *GetMerchantTariffRatesResponseItems) String() string { return proto.CompactTextString(m) }
func (*GetMerchantTariffRatesResponseItems) ProtoMessage()    {}
func (*GetMerchantTariffRatesResponseItems) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{169}
}

func (m *GetMerchantTariffRatesResponseItems) GetPayment() []*billing.MerchantTariffRatesPayment {
	if m != nil {
		return m.Payment
	}
	return nil
}

func (m *GetMerchantTariffRatesResponseItems) GetRefund() []*billing.MerchantTariffRatesSettingsItem {
	if m != nil {
		return m.Refund
	}
	return nil
}

func (m *GetMerchantTariffRatesResponseItems) GetChargeback() []*billing.MerchantTariffRatesSettingsItem {
	if m != nil {
		return m.Chargeback
	}
	return nil
}

func (m *GetMerchantTariffRatesResponseItems) GetPayout() map[string]*billing.MerchantTariffRatesSettingsItem {
	if m != nil {
		return m.Payout
	}
	return nil
}

func (m *GetMerchantTariffRatesResponseItems) GetMinimalPayout() map[string]float32 {
	if m != nil {
		return m.MinimalPayout
	}
	return nil
}

func (m *GetMerchantTariffRatesResponseItems) GetMccCode() string {
	if m != nil {
		return m.MccCode
	}
	return ""
}

type GetMerchantTariffRatesResponse struct {
	Status  int32                                `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Items   *GetMerchantTariffRatesResponseItems `protobuf:"bytes,3,opt,name=items" json:"items,omitempty"`
}

func (m *GetMerchantTariffRatesResponse) Reset()         { *m = GetMerchantTariffRatesResponse{} }
func (m *GetMerchantTariffRatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetMerchantTariffRatesResponse) ProtoMessage()    {}
func (*GetMerchantTariffRatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{170}
}

func (m *GetMerchantTariffRatesResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetMerchantTariffRatesResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetMerchantTariffRatesResponse) GetItems() *GetMerchantTariffRatesResponseItems {
	if m != nil {
		return m.Items
	}
	return nil
}

type SetMerchantTariffRatesRequest struct {
	// @inject_tag: json:"merchant_id" validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"home_region" validate:"required,tariff_region"
	HomeRegion string `protobuf:"bytes,2,opt,name=home_region,json=homeRegion" json:"home_region" validate:"required,tariff_region"`
	// @inject_tag: query:"merchant_operations_type" json:"merchant_operations_type" validate:"oneof=high-risk low-risk"
	MerchantOperationsType string `protobuf:"bytes,3,opt,name=merchant_operations_type,json=merchantOperationsType" json:"merchant_operations_type" query:"merchant_operations_type" validate:"oneof=high-risk low-risk"`
}

func (m *SetMerchantTariffRatesRequest) Reset()                    { *m = SetMerchantTariffRatesRequest{} }
func (m *SetMerchantTariffRatesRequest) String() string            { return proto.CompactTextString(m) }
func (*SetMerchantTariffRatesRequest) ProtoMessage()               {}
func (*SetMerchantTariffRatesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{171} }

func (m *SetMerchantTariffRatesRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *SetMerchantTariffRatesRequest) GetHomeRegion() string {
	if m != nil {
		return m.HomeRegion
	}
	return ""
}

func (m *SetMerchantTariffRatesRequest) GetMerchantOperationsType() string {
	if m != nil {
		return m.MerchantOperationsType
	}
	return ""
}

type ListOrdersPublicResponseItem struct {
	// @inject_tag: json:"count"
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*billing.OrderViewPublic `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *ListOrdersPublicResponseItem) Reset()                    { *m = ListOrdersPublicResponseItem{} }
func (m *ListOrdersPublicResponseItem) String() string            { return proto.CompactTextString(m) }
func (*ListOrdersPublicResponseItem) ProtoMessage()               {}
func (*ListOrdersPublicResponseItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{172} }

func (m *ListOrdersPublicResponseItem) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListOrdersPublicResponseItem) GetItems() []*billing.OrderViewPublic {
	if m != nil {
		return m.Items
	}
	return nil
}

type ListOrdersPrivateResponseItem struct {
	// @inject_tag: json:"count"
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*billing.OrderViewPrivate `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *ListOrdersPrivateResponseItem) Reset()                    { *m = ListOrdersPrivateResponseItem{} }
func (m *ListOrdersPrivateResponseItem) String() string            { return proto.CompactTextString(m) }
func (*ListOrdersPrivateResponseItem) ProtoMessage()               {}
func (*ListOrdersPrivateResponseItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{173} }

func (m *ListOrdersPrivateResponseItem) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListOrdersPrivateResponseItem) GetItems() []*billing.OrderViewPrivate {
	if m != nil {
		return m.Items
	}
	return nil
}

type ListOrdersPublicResponse struct {
	Status  int32                         `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage         `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *ListOrdersPublicResponseItem `protobuf:"bytes,3,opt,name=Item" json:"Item,omitempty"`
}

func (m *ListOrdersPublicResponse) Reset()                    { *m = ListOrdersPublicResponse{} }
func (m *ListOrdersPublicResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOrdersPublicResponse) ProtoMessage()               {}
func (*ListOrdersPublicResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{174} }

func (m *ListOrdersPublicResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ListOrdersPublicResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ListOrdersPublicResponse) GetItem() *ListOrdersPublicResponseItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type ListOrdersPrivateResponse struct {
	Status  int32                          `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *ListOrdersPrivateResponseItem `protobuf:"bytes,3,opt,name=Item" json:"Item,omitempty"`
}

func (m *ListOrdersPrivateResponse) Reset()                    { *m = ListOrdersPrivateResponse{} }
func (m *ListOrdersPrivateResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOrdersPrivateResponse) ProtoMessage()               {}
func (*ListOrdersPrivateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{175} }

func (m *ListOrdersPrivateResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ListOrdersPrivateResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ListOrdersPrivateResponse) GetItem() *ListOrdersPrivateResponseItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type ListOrdersResponseItem struct {
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	// @inject_tag: json:"items"
	Items []*billing.Order `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *ListOrdersResponseItem) Reset()                    { *m = ListOrdersResponseItem{} }
func (m *ListOrdersResponseItem) String() string            { return proto.CompactTextString(m) }
func (*ListOrdersResponseItem) ProtoMessage()               {}
func (*ListOrdersResponseItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{176} }

func (m *ListOrdersResponseItem) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListOrdersResponseItem) GetItems() []*billing.Order {
	if m != nil {
		return m.Items
	}
	return nil
}

type ListOrdersResponse struct {
	Status  int32                   `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *ListOrdersResponseItem `protobuf:"bytes,3,opt,name=Item" json:"Item,omitempty"`
}

func (m *ListOrdersResponse) Reset()                    { *m = ListOrdersResponse{} }
func (m *ListOrdersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListOrdersResponse) ProtoMessage()               {}
func (*ListOrdersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{177} }

func (m *ListOrdersResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ListOrdersResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ListOrdersResponse) GetItem() *ListOrdersResponseItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetOrderPublicResponse struct {
	Status  int32                    `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.OrderViewPublic `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetOrderPublicResponse) Reset()                    { *m = GetOrderPublicResponse{} }
func (m *GetOrderPublicResponse) String() string            { return proto.CompactTextString(m) }
func (*GetOrderPublicResponse) ProtoMessage()               {}
func (*GetOrderPublicResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{178} }

func (m *GetOrderPublicResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetOrderPublicResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetOrderPublicResponse) GetItem() *billing.OrderViewPublic {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetOrderPrivateResponse struct {
	Status  int32                     `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.OrderViewPrivate `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetOrderPrivateResponse) Reset()                    { *m = GetOrderPrivateResponse{} }
func (m *GetOrderPrivateResponse) String() string            { return proto.CompactTextString(m) }
func (*GetOrderPrivateResponse) ProtoMessage()               {}
func (*GetOrderPrivateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{179} }

func (m *GetOrderPrivateResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetOrderPrivateResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetOrderPrivateResponse) GetItem() *billing.OrderViewPrivate {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetDashboardMainRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"period" validate:"required,oneof=current_month previous_month current_quarter previous_quarter current_year previous_year"
	Period string `protobuf:"bytes,2,opt,name=period" json:"period,omitempty" query:"period" validate:"required,oneof=current_month previous_month current_quarter previous_quarter current_year previous_year"`
}

func (m *GetDashboardMainRequest) Reset()                    { *m = GetDashboardMainRequest{} }
func (m *GetDashboardMainRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDashboardMainRequest) ProtoMessage()               {}
func (*GetDashboardMainRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{180} }

func (m *GetDashboardMainRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetDashboardMainRequest) GetPeriod() string {
	if m != nil {
		return m.Period
	}
	return ""
}

type GetDashboardMainResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *DashboardMainReport  `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetDashboardMainResponse) Reset()                    { *m = GetDashboardMainResponse{} }
func (m *GetDashboardMainResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDashboardMainResponse) ProtoMessage()               {}
func (*GetDashboardMainResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{181} }

func (m *GetDashboardMainResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetDashboardMainResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetDashboardMainResponse) GetItem() *DashboardMainReport {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetDashboardBaseReportRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"period" validate:"required,oneof=current_day previous_day current_week previous_week current_month previous_month current_quarter previous_quarter current_year previous_year"
	Period string `protobuf:"bytes,2,opt,name=period" json:"period,omitempty" query:"period" validate:"required,oneof=current_day previous_day current_week previous_week current_month previous_month current_quarter previous_quarter current_year previous_year"`
}

func (m *GetDashboardBaseReportRequest) Reset()                    { *m = GetDashboardBaseReportRequest{} }
func (m *GetDashboardBaseReportRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDashboardBaseReportRequest) ProtoMessage()               {}
func (*GetDashboardBaseReportRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{182} }

func (m *GetDashboardBaseReportRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetDashboardBaseReportRequest) GetPeriod() string {
	if m != nil {
		return m.Period
	}
	return ""
}

type GetDashboardBaseReportResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *DashboardBaseReports `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetDashboardBaseReportResponse) Reset()         { *m = GetDashboardBaseReportResponse{} }
func (m *GetDashboardBaseReportResponse) String() string { return proto.CompactTextString(m) }
func (*GetDashboardBaseReportResponse) ProtoMessage()    {}
func (*GetDashboardBaseReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{183}
}

func (m *GetDashboardBaseReportResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetDashboardBaseReportResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetDashboardBaseReportResponse) GetItem() *DashboardBaseReports {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetDashboardRevenueDynamicsReportResponse struct {
	Status  int32                          `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage          `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *DashboardRevenueDynamicReport `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetDashboardRevenueDynamicsReportResponse) Reset() {
	*m = GetDashboardRevenueDynamicsReportResponse{}
}
func (m *GetDashboardRevenueDynamicsReportResponse) String() string { return proto.CompactTextString(m) }
func (*GetDashboardRevenueDynamicsReportResponse) ProtoMessage()    {}
func (*GetDashboardRevenueDynamicsReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{184}
}

func (m *GetDashboardRevenueDynamicsReportResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetDashboardRevenueDynamicsReportResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetDashboardRevenueDynamicsReportResponse) GetItem() *DashboardRevenueDynamicReport {
	if m != nil {
		return m.Item
	}
	return nil
}

type DashboardAmountItemWithChart struct {
	// @inject_tag: json:"amount_current"
	AmountCurrent float64 `protobuf:"fixed64,1,opt,name=amount_current,json=amountCurrent" json:"amount_current"`
	// @inject_tag: json:"amount_previous"
	AmountPrevious float64 `protobuf:"fixed64,2,opt,name=amount_previous,json=amountPrevious" json:"amount_previous"`
	// @inject_tag: json:"currency"
	Currency string `protobuf:"bytes,3,opt,name=currency" json:"currency"`
	// @inject_tag: json:"chart"
	Chart []*DashboardChartItemFloat `protobuf:"bytes,4,rep,name=chart" json:"chart"`
}

func (m *DashboardAmountItemWithChart) Reset()                    { *m = DashboardAmountItemWithChart{} }
func (m *DashboardAmountItemWithChart) String() string            { return proto.CompactTextString(m) }
func (*DashboardAmountItemWithChart) ProtoMessage()               {}
func (*DashboardAmountItemWithChart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{185} }

func (m *DashboardAmountItemWithChart) GetAmountCurrent() float64 {
	if m != nil {
		return m.AmountCurrent
	}
	return 0
}

func (m *DashboardAmountItemWithChart) GetAmountPrevious() float64 {
	if m != nil {
		return m.AmountPrevious
	}
	return 0
}

func (m *DashboardAmountItemWithChart) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *DashboardAmountItemWithChart) GetChart() []*DashboardChartItemFloat {
	if m != nil {
		return m.Chart
	}
	return nil
}

type DashboardChartItemFloat struct {
	// @inject_tag: json:"label" bson:"label"
	Label int64 `protobuf:"varint,1,opt,name=label" json:"label" bson:"label"`
	// @inject_tag: json:"value" bson:"value"
	Value float64 `protobuf:"fixed64,2,opt,name=value" json:"value" bson:"value"`
}

func (m *DashboardChartItemFloat) Reset()                    { *m = DashboardChartItemFloat{} }
func (m *DashboardChartItemFloat) String() string            { return proto.CompactTextString(m) }
func (*DashboardChartItemFloat) ProtoMessage()               {}
func (*DashboardChartItemFloat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{186} }

func (m *DashboardChartItemFloat) GetLabel() int64 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *DashboardChartItemFloat) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type DashboardMainReportTotalTransactions struct {
	// @inject_tag: json:"count_current" bson:"count"
	CountCurrent int64 `protobuf:"varint,1,opt,name=count_current,json=countCurrent" json:"count_current" bson:"count"`
	// @inject_tag: json:"count_previous"
	CountPrevious int64 `protobuf:"varint,2,opt,name=count_previous,json=countPrevious" json:"count_previous"`
	// @inject_tag: json:"chart"
	Chart []*DashboardChartItemFloat `protobuf:"bytes,3,rep,name=chart" json:"chart"`
}

func (m *DashboardMainReportTotalTransactions) Reset()         { *m = DashboardMainReportTotalTransactions{} }
func (m *DashboardMainReportTotalTransactions) String() string { return proto.CompactTextString(m) }
func (*DashboardMainReportTotalTransactions) ProtoMessage()    {}
func (*DashboardMainReportTotalTransactions) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{187}
}

func (m *DashboardMainReportTotalTransactions) GetCountCurrent() int64 {
	if m != nil {
		return m.CountCurrent
	}
	return 0
}

func (m *DashboardMainReportTotalTransactions) GetCountPrevious() int64 {
	if m != nil {
		return m.CountPrevious
	}
	return 0
}

func (m *DashboardMainReportTotalTransactions) GetChart() []*DashboardChartItemFloat {
	if m != nil {
		return m.Chart
	}
	return nil
}

type DashboardMainReport struct {
	// @inject_tag: json:"gross_revenue" bson:"gross_revenue"
	GrossRevenue *DashboardAmountItemWithChart `protobuf:"bytes,1,opt,name=gross_revenue,json=grossRevenue" json:"gross_revenue" bson:"gross_revenue"`
	// @inject_tag: json:"vat" bson:"vat"
	Vat *DashboardAmountItemWithChart `protobuf:"bytes,2,opt,name=vat" json:"vat" bson:"vat"`
	// @inject_tag: json:"total_transactions" bson:"total_transactions"
	TotalTransactions *DashboardMainReportTotalTransactions `protobuf:"bytes,3,opt,name=total_transactions,json=totalTransactions" json:"total_transactions" bson:"total_transactions"`
	// @inject_tag: json:"arpu" bson:"arpu"
	Arpu *DashboardAmountItemWithChart `protobuf:"bytes,4,opt,name=arpu" json:"arpu" bson:"arpu"`
}

func (m *DashboardMainReport) Reset()                    { *m = DashboardMainReport{} }
func (m *DashboardMainReport) String() string            { return proto.CompactTextString(m) }
func (*DashboardMainReport) ProtoMessage()               {}
func (*DashboardMainReport) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{188} }

func (m *DashboardMainReport) GetGrossRevenue() *DashboardAmountItemWithChart {
	if m != nil {
		return m.GrossRevenue
	}
	return nil
}

func (m *DashboardMainReport) GetVat() *DashboardAmountItemWithChart {
	if m != nil {
		return m.Vat
	}
	return nil
}

func (m *DashboardMainReport) GetTotalTransactions() *DashboardMainReportTotalTransactions {
	if m != nil {
		return m.TotalTransactions
	}
	return nil
}

func (m *DashboardMainReport) GetArpu() *DashboardAmountItemWithChart {
	if m != nil {
		return m.Arpu
	}
	return nil
}

type DashboardRevenueDynamicReport struct {
	// @inject_tag: json:"currency"
	Currency string `protobuf:"bytes,1,opt,name=currency" json:"currency"`
	// @inject_tag: json:"items"
	Items []*DashboardRevenueDynamicReportItem `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *DashboardRevenueDynamicReport) Reset()                    { *m = DashboardRevenueDynamicReport{} }
func (m *DashboardRevenueDynamicReport) String() string            { return proto.CompactTextString(m) }
func (*DashboardRevenueDynamicReport) ProtoMessage()               {}
func (*DashboardRevenueDynamicReport) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{189} }

func (m *DashboardRevenueDynamicReport) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *DashboardRevenueDynamicReport) GetItems() []*DashboardRevenueDynamicReportItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type DashboardRevenueDynamicReportItem struct {
	// @inject_tag: json:"label"
	Label int64 `protobuf:"varint,1,opt,name=label" json:"label"`
	// @inject_tag: json:"amount"
	Amount float64 `protobuf:"fixed64,2,opt,name=amount" json:"amount"`
	// @inject_tag: json:"-"
	Currency string `protobuf:"bytes,3,opt,name=currency" json:"-"`
	// @inject_tag: json:"count"
	Count int64 `protobuf:"varint,4,opt,name=count" json:"count"`
}

func (m *DashboardRevenueDynamicReportItem) Reset()         { *m = DashboardRevenueDynamicReportItem{} }
func (m *DashboardRevenueDynamicReportItem) String() string { return proto.CompactTextString(m) }
func (*DashboardRevenueDynamicReportItem) ProtoMessage()    {}
func (*DashboardRevenueDynamicReportItem) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{190}
}

func (m *DashboardRevenueDynamicReportItem) GetLabel() int64 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *DashboardRevenueDynamicReportItem) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *DashboardRevenueDynamicReportItem) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *DashboardRevenueDynamicReportItem) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DashboardRevenueByCountryReportTop struct {
	// @inject_tag: json:"country"
	Country string `protobuf:"bytes,1,opt,name=country" json:"country"`
	// @inject_tag: json:"amount"
	Amount float64 `protobuf:"fixed64,2,opt,name=amount" json:"amount"`
}

func (m *DashboardRevenueByCountryReportTop) Reset()         { *m = DashboardRevenueByCountryReportTop{} }
func (m *DashboardRevenueByCountryReportTop) String() string { return proto.CompactTextString(m) }
func (*DashboardRevenueByCountryReportTop) ProtoMessage()    {}
func (*DashboardRevenueByCountryReportTop) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{191}
}

func (m *DashboardRevenueByCountryReportTop) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *DashboardRevenueByCountryReportTop) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type DashboardRevenueByCountryReportChartItem struct {
	// @inject_tag: json:"label"
	Label int64 `protobuf:"varint,1,opt,name=label" json:"label"`
	// @inject_tag: json:"amount"
	Amount float64 `protobuf:"fixed64,2,opt,name=amount" json:"amount"`
}

func (m *DashboardRevenueByCountryReportChartItem) Reset() {
	*m = DashboardRevenueByCountryReportChartItem{}
}
func (m *DashboardRevenueByCountryReportChartItem) String() string { return proto.CompactTextString(m) }
func (*DashboardRevenueByCountryReportChartItem) ProtoMessage()    {}
func (*DashboardRevenueByCountryReportChartItem) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{192}
}

func (m *DashboardRevenueByCountryReportChartItem) GetLabel() int64 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *DashboardRevenueByCountryReportChartItem) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type DashboardRevenueByCountryReport struct {
	// @inject_tag: json:"currency"
	Currency string `protobuf:"bytes,1,opt,name=currency" json:"currency"`
	// @inject_tag: json:"top" bson:"top"
	Top []*DashboardRevenueByCountryReportTop `protobuf:"bytes,2,rep,name=top" json:"top" bson:"top"`
	// @inject_tag: json:"total_current" bson:"total"
	TotalCurrent float64 `protobuf:"fixed64,3,opt,name=total_current,json=totalCurrent" json:"total_current" bson:"total"`
	// @inject_tag: json:"total_previous"
	TotalPrevious float64 `protobuf:"fixed64,4,opt,name=total_previous,json=totalPrevious" json:"total_previous"`
	// @inject_tag: json:"chart" bson:"chart"
	Chart []*DashboardRevenueByCountryReportChartItem `protobuf:"bytes,5,rep,name=chart" json:"chart" bson:"chart"`
}

func (m *DashboardRevenueByCountryReport) Reset()         { *m = DashboardRevenueByCountryReport{} }
func (m *DashboardRevenueByCountryReport) String() string { return proto.CompactTextString(m) }
func (*DashboardRevenueByCountryReport) ProtoMessage()    {}
func (*DashboardRevenueByCountryReport) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{193}
}

func (m *DashboardRevenueByCountryReport) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *DashboardRevenueByCountryReport) GetTop() []*DashboardRevenueByCountryReportTop {
	if m != nil {
		return m.Top
	}
	return nil
}

func (m *DashboardRevenueByCountryReport) GetTotalCurrent() float64 {
	if m != nil {
		return m.TotalCurrent
	}
	return 0
}

func (m *DashboardRevenueByCountryReport) GetTotalPrevious() float64 {
	if m != nil {
		return m.TotalPrevious
	}
	return 0
}

func (m *DashboardRevenueByCountryReport) GetChart() []*DashboardRevenueByCountryReportChartItem {
	if m != nil {
		return m.Chart
	}
	return nil
}

type DashboardSalesTodayReportTop struct {
	// @inject_tag: json:"name" bson:"name"
	Name string `protobuf:"bytes,1,opt,name=name" json:"name" bson:"name"`
	// @inject_tag: json:"count" bson:"count"
	Count int64 `protobuf:"varint,2,opt,name=count" json:"count" bson:"count"`
}

func (m *DashboardSalesTodayReportTop) Reset()                    { *m = DashboardSalesTodayReportTop{} }
func (m *DashboardSalesTodayReportTop) String() string            { return proto.CompactTextString(m) }
func (*DashboardSalesTodayReportTop) ProtoMessage()               {}
func (*DashboardSalesTodayReportTop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{194} }

func (m *DashboardSalesTodayReportTop) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DashboardSalesTodayReportTop) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DashboardChartItemInt struct {
	// @inject_tag: json:"label" bson:"label"
	Label int64 `protobuf:"varint,1,opt,name=label" json:"label" bson:"label"`
	// @inject_tag: json:"value" bson:"value"
	Value int64 `protobuf:"varint,2,opt,name=value" json:"value" bson:"value"`
}

func (m *DashboardChartItemInt) Reset()                    { *m = DashboardChartItemInt{} }
func (m *DashboardChartItemInt) String() string            { return proto.CompactTextString(m) }
func (*DashboardChartItemInt) ProtoMessage()               {}
func (*DashboardChartItemInt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{195} }

func (m *DashboardChartItemInt) GetLabel() int64 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *DashboardChartItemInt) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type DashboardSalesTodayReport struct {
	// @inject_tag: json:"top" bson:"top"
	Top []*DashboardSalesTodayReportTop `protobuf:"bytes,1,rep,name=top" json:"top" bson:"top"`
	// @inject_tag: json:"total_current" bson:"total"
	TotalCurrent int64 `protobuf:"varint,2,opt,name=total_current,json=totalCurrent" json:"total_current" bson:"total"`
	// @inject_tag: json:"total_previous"
	TotalPrevious int64 `protobuf:"varint,3,opt,name=total_previous,json=totalPrevious" json:"total_previous"`
	// @inject_tag: json:"chart" bson:"chart"
	Chart []*DashboardChartItemInt `protobuf:"bytes,4,rep,name=chart" json:"chart" bson:"chart"`
}

func (m *DashboardSalesTodayReport) Reset()                    { *m = DashboardSalesTodayReport{} }
func (m *DashboardSalesTodayReport) String() string            { return proto.CompactTextString(m) }
func (*DashboardSalesTodayReport) ProtoMessage()               {}
func (*DashboardSalesTodayReport) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{196} }

func (m *DashboardSalesTodayReport) GetTop() []*DashboardSalesTodayReportTop {
	if m != nil {
		return m.Top
	}
	return nil
}

func (m *DashboardSalesTodayReport) GetTotalCurrent() int64 {
	if m != nil {
		return m.TotalCurrent
	}
	return 0
}

func (m *DashboardSalesTodayReport) GetTotalPrevious() int64 {
	if m != nil {
		return m.TotalPrevious
	}
	return 0
}

func (m *DashboardSalesTodayReport) GetChart() []*DashboardChartItemInt {
	if m != nil {
		return m.Chart
	}
	return nil
}

type DashboardSourcesReport struct {
	// @inject_tag: json:"top" bson:"top"
	Top []*DashboardSalesTodayReportTop `protobuf:"bytes,1,rep,name=top" json:"top" bson:"top"`
	// @inject_tag: json:"total_current" bson:"total"
	TotalCurrent int64 `protobuf:"varint,2,opt,name=total_current,json=totalCurrent" json:"total_current" bson:"total"`
	// @inject_tag: json:"total_previous"
	TotalPrevious int64 `protobuf:"varint,3,opt,name=total_previous,json=totalPrevious" json:"total_previous"`
	// @inject_tag: json:"chart" bson:"chart"
	Chart []*DashboardChartItemInt `protobuf:"bytes,4,rep,name=chart" json:"chart" bson:"chart"`
}

func (m *DashboardSourcesReport) Reset()                    { *m = DashboardSourcesReport{} }
func (m *DashboardSourcesReport) String() string            { return proto.CompactTextString(m) }
func (*DashboardSourcesReport) ProtoMessage()               {}
func (*DashboardSourcesReport) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{197} }

func (m *DashboardSourcesReport) GetTop() []*DashboardSalesTodayReportTop {
	if m != nil {
		return m.Top
	}
	return nil
}

func (m *DashboardSourcesReport) GetTotalCurrent() int64 {
	if m != nil {
		return m.TotalCurrent
	}
	return 0
}

func (m *DashboardSourcesReport) GetTotalPrevious() int64 {
	if m != nil {
		return m.TotalPrevious
	}
	return 0
}

func (m *DashboardSourcesReport) GetChart() []*DashboardChartItemInt {
	if m != nil {
		return m.Chart
	}
	return nil
}

type DashboardBaseReports struct {
	// @inject_tag: json:"revenue_by_country"
	RevenueByCountry *DashboardRevenueByCountryReport `protobuf:"bytes,1,opt,name=revenue_by_country,json=revenueByCountry" json:"revenue_by_country"`
	// @inject_tag: json:"sales_today"
	SalesToday *DashboardSalesTodayReport `protobuf:"bytes,2,opt,name=sales_today,json=salesToday" json:"sales_today"`
	// @inject_tag: json:"sources"
	Sources *DashboardSourcesReport `protobuf:"bytes,4,opt,name=sources" json:"sources"`
}

func (m *DashboardBaseReports) Reset()                    { *m = DashboardBaseReports{} }
func (m *DashboardBaseReports) String() string            { return proto.CompactTextString(m) }
func (*DashboardBaseReports) ProtoMessage()               {}
func (*DashboardBaseReports) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{198} }

func (m *DashboardBaseReports) GetRevenueByCountry() *DashboardRevenueByCountryReport {
	if m != nil {
		return m.RevenueByCountry
	}
	return nil
}

func (m *DashboardBaseReports) GetSalesToday() *DashboardSalesTodayReport {
	if m != nil {
		return m.SalesToday
	}
	return nil
}

func (m *DashboardBaseReports) GetSources() *DashboardSourcesReport {
	if m != nil {
		return m.Sources
	}
	return nil
}

type CreatePayoutDocumentRequest struct {
	// @inject_tag: json:"description" validate:"max=255"
	Description string `protobuf:"bytes,1,opt,name=description" json:"description" validate:"max=255"`
	// @inject_tag: json:"merchant_id" validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"ip" validate:"required"
	Ip string `protobuf:"bytes,3,opt,name=ip" json:"ip" validate:"required"`
	// @inject_tag: json:"-" validate:"required"
	Initiator string `protobuf:"bytes,4,opt,name=initiator" json:"-" validate:"required"`
	// @inject_tag: json:"-"
	IsAutoGeneration bool `protobuf:"varint,5,opt,name=is_auto_generation,json=isAutoGeneration" json:"-"`
}

func (m *CreatePayoutDocumentRequest) Reset()                    { *m = CreatePayoutDocumentRequest{} }
func (m *CreatePayoutDocumentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePayoutDocumentRequest) ProtoMessage()               {}
func (*CreatePayoutDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{199} }

func (m *CreatePayoutDocumentRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreatePayoutDocumentRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *CreatePayoutDocumentRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *CreatePayoutDocumentRequest) GetInitiator() string {
	if m != nil {
		return m.Initiator
	}
	return ""
}

func (m *CreatePayoutDocumentRequest) GetIsAutoGeneration() bool {
	if m != nil {
		return m.IsAutoGeneration
	}
	return false
}

type PayoutDocumentResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"item"
	Item *billing.PayoutDocument `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *PayoutDocumentResponse) Reset()                    { *m = PayoutDocumentResponse{} }
func (m *PayoutDocumentResponse) String() string            { return proto.CompactTextString(m) }
func (*PayoutDocumentResponse) ProtoMessage()               {}
func (*PayoutDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{200} }

func (m *PayoutDocumentResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PayoutDocumentResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PayoutDocumentResponse) GetItem() *billing.PayoutDocument {
	if m != nil {
		return m.Item
	}
	return nil
}

type CreatePayoutDocumentResponse struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status"`
	// @inject_tag: json:"message"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message"`
	// @inject_tag: json:"items"
	Items []*billing.PayoutDocument `protobuf:"bytes,3,rep,name=items" json:"items"`
}

func (m *CreatePayoutDocumentResponse) Reset()                    { *m = CreatePayoutDocumentResponse{} }
func (m *CreatePayoutDocumentResponse) String() string            { return proto.CompactTextString(m) }
func (*CreatePayoutDocumentResponse) ProtoMessage()               {}
func (*CreatePayoutDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{201} }

func (m *CreatePayoutDocumentResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CreatePayoutDocumentResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *CreatePayoutDocumentResponse) GetItems() []*billing.PayoutDocument {
	if m != nil {
		return m.Items
	}
	return nil
}

type UpdatePayoutDocumentRequest struct {
	// @inject_tag: json:"payout_document_id" validate:"required,hexadecimal,len=24" param:"payout_document_id"
	PayoutDocumentId string `protobuf:"bytes,1,opt,name=payout_document_id,json=payoutDocumentId" json:"payout_document_id" validate:"required,hexadecimal,len=24" param:"payout_document_id"`
	// @inject_tag: json:"transaction" validate:"omitempty,max=255"
	Transaction string `protobuf:"bytes,2,opt,name=transaction" json:"transaction" validate:"omitempty,max=255"`
	// @inject_tag: json:"status" validate:"required,oneof=skip pending in_progress paid canceled failed"
	Status string `protobuf:"bytes,3,opt,name=status" json:"status" validate:"required,oneof=skip pending in_progress paid canceled failed"`
	// @inject_tag: json:"failure_code" validate:"omitempty,oneof=account_closed account_frozen account_restricted destination_bank_invalid could_not_process declined insufficient_funds invalid_account_number incorrect_account_holder_name invalid_currency"
	FailureCode string `protobuf:"bytes,4,opt,name=failure_code,json=failureCode" json:"failure_code" validate:"omitempty,oneof=account_closed account_frozen account_restricted destination_bank_invalid could_not_process declined insufficient_funds invalid_account_number incorrect_account_holder_name invalid_currency"`
	// @inject_tag: json:"failure_message" validate:"omitempty,max=255"
	FailureMessage string `protobuf:"bytes,5,opt,name=failure_message,json=failureMessage" json:"failure_message" validate:"omitempty,max=255"`
	// @inject_tag: json:"failure_transaction" validate:"omitempty,max=255"
	FailureTransaction string `protobuf:"bytes,6,opt,name=failure_transaction,json=failureTransaction" json:"failure_transaction" validate:"omitempty,max=255"`
	// @inject_tag: json:"ip"
	Ip string `protobuf:"bytes,7,opt,name=ip" json:"ip"`
}

func (m *UpdatePayoutDocumentRequest) Reset()                    { *m = UpdatePayoutDocumentRequest{} }
func (m *UpdatePayoutDocumentRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePayoutDocumentRequest) ProtoMessage()               {}
func (*UpdatePayoutDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{202} }

func (m *UpdatePayoutDocumentRequest) GetPayoutDocumentId() string {
	if m != nil {
		return m.PayoutDocumentId
	}
	return ""
}

func (m *UpdatePayoutDocumentRequest) GetTransaction() string {
	if m != nil {
		return m.Transaction
	}
	return ""
}

func (m *UpdatePayoutDocumentRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UpdatePayoutDocumentRequest) GetFailureCode() string {
	if m != nil {
		return m.FailureCode
	}
	return ""
}

func (m *UpdatePayoutDocumentRequest) GetFailureMessage() string {
	if m != nil {
		return m.FailureMessage
	}
	return ""
}

func (m *UpdatePayoutDocumentRequest) GetFailureTransaction() string {
	if m != nil {
		return m.FailureTransaction
	}
	return ""
}

func (m *UpdatePayoutDocumentRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type GetPayoutDocumentRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"payout_document_id"
	PayoutDocumentId string `protobuf:"bytes,1,opt,name=payout_document_id,json=payoutDocumentId" json:"payout_document_id,omitempty" validate:"required,hexadecimal,len=24" param:"payout_document_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *GetPayoutDocumentRequest) Reset()                    { *m = GetPayoutDocumentRequest{} }
func (m *GetPayoutDocumentRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPayoutDocumentRequest) ProtoMessage()               {}
func (*GetPayoutDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{203} }

func (m *GetPayoutDocumentRequest) GetPayoutDocumentId() string {
	if m != nil {
		return m.PayoutDocumentId
	}
	return ""
}

func (m *GetPayoutDocumentRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type GetPayoutDocumentsRequest struct {
	// @inject_tag: query:"payout_document_id" validate:"omitempty,hexadecimal,len=24"
	PayoutDocumentId string `protobuf:"bytes,1,opt,name=payout_document_id,json=payoutDocumentId" json:"payout_document_id,omitempty" query:"payout_document_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: query:"status[]" validate:"omitempty,dive,oneof=skip pending in_progress paid canceled failed"
	Status []string `protobuf:"bytes,2,rep,name=status" json:"status,omitempty" query:"status[]" validate:"omitempty,dive,oneof=skip pending in_progress paid canceled failed"`
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,3,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: query:"date_from" validate:"omitempty,numeric,gt=0"
	DateFrom int64 `protobuf:"varint,4,opt,name=date_from,json=dateFrom" json:"date_from,omitempty" query:"date_from" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"date_to" validate:"omitempty,numeric,gt=0"
	DateTo int64 `protobuf:"varint,5,opt,name=date_to,json=dateTo" json:"date_to,omitempty" query:"date_to" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0"
	Limit int64 `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,7,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
}

func (m *GetPayoutDocumentsRequest) Reset()                    { *m = GetPayoutDocumentsRequest{} }
func (m *GetPayoutDocumentsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPayoutDocumentsRequest) ProtoMessage()               {}
func (*GetPayoutDocumentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{204} }

func (m *GetPayoutDocumentsRequest) GetPayoutDocumentId() string {
	if m != nil {
		return m.PayoutDocumentId
	}
	return ""
}

func (m *GetPayoutDocumentsRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetPayoutDocumentsRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetPayoutDocumentsRequest) GetDateFrom() int64 {
	if m != nil {
		return m.DateFrom
	}
	return 0
}

func (m *GetPayoutDocumentsRequest) GetDateTo() int64 {
	if m != nil {
		return m.DateTo
	}
	return 0
}

func (m *GetPayoutDocumentsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetPayoutDocumentsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type PayoutDocumentsPaginate struct {
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*billing.PayoutDocument `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *PayoutDocumentsPaginate) Reset()                    { *m = PayoutDocumentsPaginate{} }
func (m *PayoutDocumentsPaginate) String() string            { return proto.CompactTextString(m) }
func (*PayoutDocumentsPaginate) ProtoMessage()               {}
func (*PayoutDocumentsPaginate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{205} }

func (m *PayoutDocumentsPaginate) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *PayoutDocumentsPaginate) GetItems() []*billing.PayoutDocument {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetPayoutDocumentsResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// @inject_tag: json:"message,omitempty"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"data"
	Data *PayoutDocumentsPaginate `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *GetPayoutDocumentsResponse) Reset()                    { *m = GetPayoutDocumentsResponse{} }
func (m *GetPayoutDocumentsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPayoutDocumentsResponse) ProtoMessage()               {}
func (*GetPayoutDocumentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{206} }

func (m *GetPayoutDocumentsResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetPayoutDocumentsResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetPayoutDocumentsResponse) GetData() *PayoutDocumentsPaginate {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdatePayoutDocumentSignaturesRequest struct {
	// @inject_tag: query:"payout_document_id" validate:"required,hexadecimal,len=24"
	PayoutDocumentId string `protobuf:"bytes,1,opt,name=payout_document_id,json=payoutDocumentId" json:"payout_document_id,omitempty" query:"payout_document_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"has_merchant_signature"
	HasMerchantSignature bool `protobuf:"varint,2,opt,name=has_merchant_signature,json=hasMerchantSignature" json:"has_merchant_signature"`
	// @inject_tag: json:"has_psp_signature"
	HasPspSignature bool `protobuf:"varint,3,opt,name=has_psp_signature,json=hasPspSignature" json:"has_psp_signature"`
	// @inject_tag: json:"signed_document_file_url"
	SignedDocumentFileUrl string `protobuf:"bytes,4,opt,name=signed_document_file_url,json=signedDocumentFileUrl" json:"signed_document_file_url"`
}

func (m *UpdatePayoutDocumentSignaturesRequest) Reset()         { *m = UpdatePayoutDocumentSignaturesRequest{} }
func (m *UpdatePayoutDocumentSignaturesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePayoutDocumentSignaturesRequest) ProtoMessage()    {}
func (*UpdatePayoutDocumentSignaturesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{207}
}

func (m *UpdatePayoutDocumentSignaturesRequest) GetPayoutDocumentId() string {
	if m != nil {
		return m.PayoutDocumentId
	}
	return ""
}

func (m *UpdatePayoutDocumentSignaturesRequest) GetHasMerchantSignature() bool {
	if m != nil {
		return m.HasMerchantSignature
	}
	return false
}

func (m *UpdatePayoutDocumentSignaturesRequest) GetHasPspSignature() bool {
	if m != nil {
		return m.HasPspSignature
	}
	return false
}

func (m *UpdatePayoutDocumentSignaturesRequest) GetSignedDocumentFileUrl() string {
	if m != nil {
		return m.SignedDocumentFileUrl
	}
	return ""
}

type GetMerchantBalanceRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *GetMerchantBalanceRequest) Reset()                    { *m = GetMerchantBalanceRequest{} }
func (m *GetMerchantBalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantBalanceRequest) ProtoMessage()               {}
func (*GetMerchantBalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{208} }

func (m *GetMerchantBalanceRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type GetMerchantBalanceResponse struct {
	Status  int32                    `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.MerchantBalance `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetMerchantBalanceResponse) Reset()                    { *m = GetMerchantBalanceResponse{} }
func (m *GetMerchantBalanceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantBalanceResponse) ProtoMessage()               {}
func (*GetMerchantBalanceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{209} }

func (m *GetMerchantBalanceResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetMerchantBalanceResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetMerchantBalanceResponse) GetItem() *billing.MerchantBalance {
	if m != nil {
		return m.Item
	}
	return nil
}

type PayoutDocumentPdfUploadedRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required"
	Filename string `protobuf:"bytes,2,opt,name=filename" json:"filename,omitempty" validate:"required"`
	// @inject_tag: validate:"required,numeric,gte=0"
	RetentionTime int32 `protobuf:"varint,3,opt,name=retention_time,json=retentionTime" json:"retention_time,omitempty" validate:"required,numeric,gte=0"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	PayoutId string `protobuf:"bytes,4,opt,name=payout_id,json=payoutId" json:"payout_id,omitempty" validate:"required,hexadecimal,len=24"`
	Content  []byte `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *PayoutDocumentPdfUploadedRequest) Reset()         { *m = PayoutDocumentPdfUploadedRequest{} }
func (m *PayoutDocumentPdfUploadedRequest) String() string { return proto.CompactTextString(m) }
func (*PayoutDocumentPdfUploadedRequest) ProtoMessage()    {}
func (*PayoutDocumentPdfUploadedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{210}
}

func (m *PayoutDocumentPdfUploadedRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PayoutDocumentPdfUploadedRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *PayoutDocumentPdfUploadedRequest) GetRetentionTime() int32 {
	if m != nil {
		return m.RetentionTime
	}
	return 0
}

func (m *PayoutDocumentPdfUploadedRequest) GetPayoutId() string {
	if m != nil {
		return m.PayoutId
	}
	return ""
}

func (m *PayoutDocumentPdfUploadedRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type PayoutDocumentPdfUploadedResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *PayoutDocumentPdfUploadedResponse) Reset()         { *m = PayoutDocumentPdfUploadedResponse{} }
func (m *PayoutDocumentPdfUploadedResponse) String() string { return proto.CompactTextString(m) }
func (*PayoutDocumentPdfUploadedResponse) ProtoMessage()    {}
func (*PayoutDocumentPdfUploadedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{211}
}

func (m *PayoutDocumentPdfUploadedResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PayoutDocumentPdfUploadedResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type OrderReceiptRequest struct {
	// @inject_tag: validate:"required,uuid" param:"order_id"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid" param:"order_id"`
	// @inject_tag: validate:"required,uuid" param:"receipt_id"
	ReceiptId string `protobuf:"bytes,2,opt,name=receipt_id,json=receiptId" json:"receipt_id,omitempty" validate:"required,uuid" param:"receipt_id"`
}

func (m *OrderReceiptRequest) Reset()                    { *m = OrderReceiptRequest{} }
func (m *OrderReceiptRequest) String() string            { return proto.CompactTextString(m) }
func (*OrderReceiptRequest) ProtoMessage()               {}
func (*OrderReceiptRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{212} }

func (m *OrderReceiptRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderReceiptRequest) GetReceiptId() string {
	if m != nil {
		return m.ReceiptId
	}
	return ""
}

type OrderReceiptResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Receipt *billing.OrderReceipt `protobuf:"bytes,3,opt,name=receipt" json:"receipt,omitempty"`
}

func (m *OrderReceiptResponse) Reset()                    { *m = OrderReceiptResponse{} }
func (m *OrderReceiptResponse) String() string            { return proto.CompactTextString(m) }
func (*OrderReceiptResponse) ProtoMessage()               {}
func (*OrderReceiptResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{213} }

func (m *OrderReceiptResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OrderReceiptResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *OrderReceiptResponse) GetReceipt() *billing.OrderReceipt {
	if m != nil {
		return m.Receipt
	}
	return nil
}

type GetProductResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *Product              `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetProductResponse) Reset()                    { *m = GetProductResponse{} }
func (m *GetProductResponse) String() string            { return proto.CompactTextString(m) }
func (*GetProductResponse) ProtoMessage()               {}
func (*GetProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{214} }

func (m *GetProductResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetProductResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetProductResponse) GetItem() *Product {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetPriceGroupByRegionResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"group"
	Group *billing.PriceGroup `protobuf:"bytes,3,opt,name=Group" json:"group"`
}

func (m *GetPriceGroupByRegionResponse) Reset()                    { *m = GetPriceGroupByRegionResponse{} }
func (m *GetPriceGroupByRegionResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPriceGroupByRegionResponse) ProtoMessage()               {}
func (*GetPriceGroupByRegionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{215} }

func (m *GetPriceGroupByRegionResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetPriceGroupByRegionResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetPriceGroupByRegionResponse) GetGroup() *billing.PriceGroup {
	if m != nil {
		return m.Group
	}
	return nil
}

type GetPriceGroupByRegionRequest struct {
	// @inject_tag: json:"region" validate:"required"
	Region string `protobuf:"bytes,1,opt,name=region" json:"region" validate:"required"`
}

func (m *GetPriceGroupByRegionRequest) Reset()                    { *m = GetPriceGroupByRegionRequest{} }
func (m *GetPriceGroupByRegionRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPriceGroupByRegionRequest) ProtoMessage()               {}
func (*GetPriceGroupByRegionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{216} }

func (m *GetPriceGroupByRegionRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type ChangeMerchantManualPayoutsRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId           string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	ManualPayoutsEnabled bool   `protobuf:"varint,2,opt,name=manual_payouts_enabled,json=manualPayoutsEnabled" json:"manual_payouts_enabled,omitempty"`
}

func (m *ChangeMerchantManualPayoutsRequest) Reset()         { *m = ChangeMerchantManualPayoutsRequest{} }
func (m *ChangeMerchantManualPayoutsRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeMerchantManualPayoutsRequest) ProtoMessage()    {}
func (*ChangeMerchantManualPayoutsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{217}
}

func (m *ChangeMerchantManualPayoutsRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ChangeMerchantManualPayoutsRequest) GetManualPayoutsEnabled() bool {
	if m != nil {
		return m.ManualPayoutsEnabled
	}
	return false
}

type ChangeMerchantManualPayoutsResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Merchant     `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *ChangeMerchantManualPayoutsResponse) Reset()         { *m = ChangeMerchantManualPayoutsResponse{} }
func (m *ChangeMerchantManualPayoutsResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeMerchantManualPayoutsResponse) ProtoMessage()    {}
func (*ChangeMerchantManualPayoutsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{218}
}

func (m *ChangeMerchantManualPayoutsResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ChangeMerchantManualPayoutsResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ChangeMerchantManualPayoutsResponse) GetItem() *billing.Merchant {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetPaylinksRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"omitempty,hexadecimal,len=24"
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: validate:"required,numeric,gte=1"
	Limit int64 `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty" validate:"required,numeric,gte=1"`
	// @inject_tag: validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty" validate:"omitempty,numeric,gte=0"`
}

func (m *GetPaylinksRequest) Reset()                    { *m = GetPaylinksRequest{} }
func (m *GetPaylinksRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPaylinksRequest) ProtoMessage()               {}
func (*GetPaylinksRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{219} }

func (m *GetPaylinksRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetPaylinksRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GetPaylinksRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetPaylinksRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type PaylinksPaginate struct {
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,1,opt,name=count" json:"count"`
	// @inject_tag: json:"items"
	Items []*paylink.Paylink `protobuf:"bytes,2,rep,name=items" json:"items"`
}

func (m *PaylinksPaginate) Reset()                    { *m = PaylinksPaginate{} }
func (m *PaylinksPaginate) String() string            { return proto.CompactTextString(m) }
func (*PaylinksPaginate) ProtoMessage()               {}
func (*PaylinksPaginate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{220} }

func (m *PaylinksPaginate) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *PaylinksPaginate) GetItems() []*paylink.Paylink {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetPaylinksResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// @inject_tag: json:"message,omitempty"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"data"
	Data *PaylinksPaginate `protobuf:"bytes,3,opt,name=data" json:"data"`
}

func (m *GetPaylinksResponse) Reset()                    { *m = GetPaylinksResponse{} }
func (m *GetPaylinksResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPaylinksResponse) ProtoMessage()               {}
func (*GetPaylinksResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{221} }

func (m *GetPaylinksResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetPaylinksResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetPaylinksResponse) GetData() *PaylinksPaginate {
	if m != nil {
		return m.Data
	}
	return nil
}

type PaylinkRequestById struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *PaylinkRequestById) Reset()                    { *m = PaylinkRequestById{} }
func (m *PaylinkRequestById) String() string            { return proto.CompactTextString(m) }
func (*PaylinkRequestById) ProtoMessage()               {}
func (*PaylinkRequestById) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{222} }

func (m *PaylinkRequestById) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PaylinkRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" param="id"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *PaylinkRequest) Reset()                    { *m = PaylinkRequest{} }
func (m *PaylinkRequest) String() string            { return proto.CompactTextString(m) }
func (*PaylinkRequest) ProtoMessage()               {}
func (*PaylinkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{223} }

func (m *PaylinkRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaylinkRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type GetPaylinkResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// @inject_tag: json:"message,omitempty"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"item"
	Item *paylink.Paylink `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *GetPaylinkResponse) Reset()                    { *m = GetPaylinkResponse{} }
func (m *GetPaylinkResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPaylinkResponse) ProtoMessage()               {}
func (*GetPaylinkResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{224} }

func (m *GetPaylinkResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetPaylinkResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetPaylinkResponse) GetItem() *paylink.Paylink {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetPaylinkURLRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	UrlMask    string `protobuf:"bytes,3,opt,name=url_mask,json=urlMask" json:"url_mask,omitempty"`
	// @inject_tag: query:"utm_source"
	UtmSource string `protobuf:"bytes,4,opt,name=utm_source,json=utmSource" json:"utm_source,omitempty" query:"utm_source"`
	// @inject_tag: query:"utm_medium"
	UtmMedium string `protobuf:"bytes,5,opt,name=utm_medium,json=utmMedium" json:"utm_medium,omitempty" query:"utm_medium"`
	// @inject_tag: query:"utm_campaign"
	UtmCampaign string `protobuf:"bytes,6,opt,name=utm_campaign,json=utmCampaign" json:"utm_campaign,omitempty" query:"utm_campaign"`
}

func (m *GetPaylinkURLRequest) Reset()                    { *m = GetPaylinkURLRequest{} }
func (m *GetPaylinkURLRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPaylinkURLRequest) ProtoMessage()               {}
func (*GetPaylinkURLRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{225} }

func (m *GetPaylinkURLRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetPaylinkURLRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetPaylinkURLRequest) GetUrlMask() string {
	if m != nil {
		return m.UrlMask
	}
	return ""
}

func (m *GetPaylinkURLRequest) GetUtmSource() string {
	if m != nil {
		return m.UtmSource
	}
	return ""
}

func (m *GetPaylinkURLRequest) GetUtmMedium() string {
	if m != nil {
		return m.UtmMedium
	}
	return ""
}

func (m *GetPaylinkURLRequest) GetUtmCampaign() string {
	if m != nil {
		return m.UtmCampaign
	}
	return ""
}

type GetPaylinkUrlResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// @inject_tag: json:"message,omitempty"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"url"
	Url string `protobuf:"bytes,4,opt,name=url" json:"url"`
}

func (m *GetPaylinkUrlResponse) Reset()                    { *m = GetPaylinkUrlResponse{} }
func (m *GetPaylinkUrlResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPaylinkUrlResponse) ProtoMessage()               {}
func (*GetPaylinkUrlResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{226} }

func (m *GetPaylinkUrlResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetPaylinkUrlResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetPaylinkUrlResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type GetPaylinkStatCommonRequest struct {
	// @inject_tag: validate:"required,hexadecimal" param:"id"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal" param:"id"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"period_from" validate:"omitempty,numeric,gte=0"
	PeriodFrom int64 `protobuf:"varint,3,opt,name=period_from,json=periodFrom" json:"period_from,omitempty" query:"period_from" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: query:"period_to" validate:"omitempty,numeric,gte=0"
	PeriodTo int64 `protobuf:"varint,4,opt,name=period_to,json=periodTo" json:"period_to,omitempty" query:"period_to" validate:"omitempty,numeric,gte=0"`
}

func (m *GetPaylinkStatCommonRequest) Reset()                    { *m = GetPaylinkStatCommonRequest{} }
func (m *GetPaylinkStatCommonRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPaylinkStatCommonRequest) ProtoMessage()               {}
func (*GetPaylinkStatCommonRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{227} }

func (m *GetPaylinkStatCommonRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetPaylinkStatCommonRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetPaylinkStatCommonRequest) GetPeriodFrom() int64 {
	if m != nil {
		return m.PeriodFrom
	}
	return 0
}

func (m *GetPaylinkStatCommonRequest) GetPeriodTo() int64 {
	if m != nil {
		return m.PeriodTo
	}
	return 0
}

type GetPaylinkTransactionsRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"merchant_id"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24" param:"merchant_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24" param="id"
	Id string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: query:"limit" validate:"omitempty,numeric,gt=0"
	Limit int64 `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty" query:"limit" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: query:"offset" validate:"omitempty,numeric,gte=0"
	Offset int64 `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty" query:"offset" validate:"omitempty,numeric,gte=0"`
}

func (m *GetPaylinkTransactionsRequest) Reset()                    { *m = GetPaylinkTransactionsRequest{} }
func (m *GetPaylinkTransactionsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPaylinkTransactionsRequest) ProtoMessage()               {}
func (*GetPaylinkTransactionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{228} }

func (m *GetPaylinkTransactionsRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetPaylinkTransactionsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetPaylinkTransactionsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetPaylinkTransactionsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type GetPaylinkStatCommonResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// @inject_tag: json:"message,omitempty"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"item"
	Item *paylink.StatCommon `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *GetPaylinkStatCommonResponse) Reset()                    { *m = GetPaylinkStatCommonResponse{} }
func (m *GetPaylinkStatCommonResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPaylinkStatCommonResponse) ProtoMessage()               {}
func (*GetPaylinkStatCommonResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{229} }

func (m *GetPaylinkStatCommonResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetPaylinkStatCommonResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetPaylinkStatCommonResponse) GetItem() *paylink.StatCommon {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetPaylinkStatCommonGroupResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// @inject_tag: json:"message,omitempty"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"item"
	Item *paylink.GroupStatCommon `protobuf:"bytes,3,opt,name=item" json:"item"`
}

func (m *GetPaylinkStatCommonGroupResponse) Reset()         { *m = GetPaylinkStatCommonGroupResponse{} }
func (m *GetPaylinkStatCommonGroupResponse) String() string { return proto.CompactTextString(m) }
func (*GetPaylinkStatCommonGroupResponse) ProtoMessage()    {}
func (*GetPaylinkStatCommonGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{230}
}

func (m *GetPaylinkStatCommonGroupResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetPaylinkStatCommonGroupResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetPaylinkStatCommonGroupResponse) GetItem() *paylink.GroupStatCommon {
	if m != nil {
		return m.Item
	}
	return nil
}

type RoyaltyReportPdfUploadedRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required"
	Filename string `protobuf:"bytes,2,opt,name=filename" json:"filename,omitempty" validate:"required"`
	// @inject_tag: validate:"required,numeric,gte=0"
	RetentionTime int32 `protobuf:"varint,3,opt,name=retention_time,json=retentionTime" json:"retention_time,omitempty" validate:"required,numeric,gte=0"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	RoyaltyReportId string `protobuf:"bytes,4,opt,name=royalty_report_id,json=royaltyReportId" json:"royalty_report_id,omitempty" validate:"required,hexadecimal,len=24"`
	Content         []byte `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *RoyaltyReportPdfUploadedRequest) Reset()         { *m = RoyaltyReportPdfUploadedRequest{} }
func (m *RoyaltyReportPdfUploadedRequest) String() string { return proto.CompactTextString(m) }
func (*RoyaltyReportPdfUploadedRequest) ProtoMessage()    {}
func (*RoyaltyReportPdfUploadedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{231}
}

func (m *RoyaltyReportPdfUploadedRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RoyaltyReportPdfUploadedRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *RoyaltyReportPdfUploadedRequest) GetRetentionTime() int32 {
	if m != nil {
		return m.RetentionTime
	}
	return 0
}

func (m *RoyaltyReportPdfUploadedRequest) GetRoyaltyReportId() string {
	if m != nil {
		return m.RoyaltyReportId
	}
	return ""
}

func (m *RoyaltyReportPdfUploadedRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type RoyaltyReportPdfUploadedResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *RoyaltyReportPdfUploadedResponse) Reset()         { *m = RoyaltyReportPdfUploadedResponse{} }
func (m *RoyaltyReportPdfUploadedResponse) String() string { return proto.CompactTextString(m) }
func (*RoyaltyReportPdfUploadedResponse) ProtoMessage()    {}
func (*RoyaltyReportPdfUploadedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{232}
}

func (m *RoyaltyReportPdfUploadedResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RoyaltyReportPdfUploadedResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

type DeleteSavedCardRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required"
	Cookie string `protobuf:"bytes,2,opt,name=cookie" json:"cookie,omitempty" validate:"required"`
}

func (m *DeleteSavedCardRequest) Reset()                    { *m = DeleteSavedCardRequest{} }
func (m *DeleteSavedCardRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteSavedCardRequest) ProtoMessage()               {}
func (*DeleteSavedCardRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{233} }

func (m *DeleteSavedCardRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteSavedCardRequest) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

type GetOperatingCompaniesListResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// @inject_tag: json:"message,omitempty"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"items"
	Items []*billing.OperatingCompany `protobuf:"bytes,3,rep,name=items" json:"items"`
}

func (m *GetOperatingCompaniesListResponse) Reset()         { *m = GetOperatingCompaniesListResponse{} }
func (m *GetOperatingCompaniesListResponse) String() string { return proto.CompactTextString(m) }
func (*GetOperatingCompaniesListResponse) ProtoMessage()    {}
func (*GetOperatingCompaniesListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{234}
}

func (m *GetOperatingCompaniesListResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetOperatingCompaniesListResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetOperatingCompaniesListResponse) GetItems() []*billing.OperatingCompany {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetPaymentMinLimitsSystemResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// @inject_tag: json:"message,omitempty"
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// @inject_tag: json:"items"
	Items []*billing.PaymentMinLimitSystem `protobuf:"bytes,3,rep,name=items" json:"items"`
}

func (m *GetPaymentMinLimitsSystemResponse) Reset()         { *m = GetPaymentMinLimitsSystemResponse{} }
func (m *GetPaymentMinLimitsSystemResponse) String() string { return proto.CompactTextString(m) }
func (*GetPaymentMinLimitsSystemResponse) ProtoMessage()    {}
func (*GetPaymentMinLimitsSystemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{235}
}

func (m *GetPaymentMinLimitsSystemResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetPaymentMinLimitsSystemResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetPaymentMinLimitsSystemResponse) GetItems() []*billing.PaymentMinLimitSystem {
	if m != nil {
		return m.Items
	}
	return nil
}

type SetMerchantOperatingCompanyRequest struct {
	// @inject_tag: json:"id" validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"operating_company_id" validate:"required,hexadecimal,len=24"
	OperatingCompanyId string `protobuf:"bytes,2,opt,name=operating_company_id,json=operatingCompanyId" json:"operating_company_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"dont_charge_vat"
	DontChargeVat bool `protobuf:"varint,3,opt,name=dont_charge_vat,json=dontChargeVat" json:"dont_charge_vat"`
}

func (m *SetMerchantOperatingCompanyRequest) Reset()         { *m = SetMerchantOperatingCompanyRequest{} }
func (m *SetMerchantOperatingCompanyRequest) String() string { return proto.CompactTextString(m) }
func (*SetMerchantOperatingCompanyRequest) ProtoMessage()    {}
func (*SetMerchantOperatingCompanyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{236}
}

func (m *SetMerchantOperatingCompanyRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *SetMerchantOperatingCompanyRequest) GetOperatingCompanyId() string {
	if m != nil {
		return m.OperatingCompanyId
	}
	return ""
}

func (m *SetMerchantOperatingCompanyRequest) GetDontChargeVat() bool {
	if m != nil {
		return m.DontChargeVat
	}
	return false
}

type SetMerchantOperatingCompanyResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.Merchant     `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *SetMerchantOperatingCompanyResponse) Reset()         { *m = SetMerchantOperatingCompanyResponse{} }
func (m *SetMerchantOperatingCompanyResponse) String() string { return proto.CompactTextString(m) }
func (*SetMerchantOperatingCompanyResponse) ProtoMessage()    {}
func (*SetMerchantOperatingCompanyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{237}
}

func (m *SetMerchantOperatingCompanyResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SetMerchantOperatingCompanyResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SetMerchantOperatingCompanyResponse) GetItem() *billing.Merchant {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetOperatingCompanyRequest struct {
	// @inject_tag: json:"id" validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,2,opt,name=id" json:"id" validate:"required,hexadecimal,len=24"`
}

func (m *GetOperatingCompanyRequest) Reset()                    { *m = GetOperatingCompanyRequest{} }
func (m *GetOperatingCompanyRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOperatingCompanyRequest) ProtoMessage()               {}
func (*GetOperatingCompanyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{238} }

func (m *GetOperatingCompanyRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetOperatingCompanyResponse struct {
	Status  int32                     `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Company *billing.OperatingCompany `protobuf:"bytes,3,opt,name=company" json:"company,omitempty"`
}

func (m *GetOperatingCompanyResponse) Reset()                    { *m = GetOperatingCompanyResponse{} }
func (m *GetOperatingCompanyResponse) String() string            { return proto.CompactTextString(m) }
func (*GetOperatingCompanyResponse) ProtoMessage()               {}
func (*GetOperatingCompanyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{239} }

func (m *GetOperatingCompanyResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetOperatingCompanyResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetOperatingCompanyResponse) GetCompany() *billing.OperatingCompany {
	if m != nil {
		return m.Company
	}
	return nil
}

type OrderReCreateProcessRequest struct {
	// @inject_tag: validate:"required,uuid"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty" validate:"required,uuid"`
}

func (m *OrderReCreateProcessRequest) Reset()                    { *m = OrderReCreateProcessRequest{} }
func (m *OrderReCreateProcessRequest) String() string            { return proto.CompactTextString(m) }
func (*OrderReCreateProcessRequest) ProtoMessage()               {}
func (*OrderReCreateProcessRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{240} }

func (m *OrderReCreateProcessRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type GetMerchantUsersRequest struct {
	// @inject_tag: json:"merchant_id" validate:"required"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id" validate:"required"`
}

func (m *GetMerchantUsersRequest) Reset()                    { *m = GetMerchantUsersRequest{} }
func (m *GetMerchantUsersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantUsersRequest) ProtoMessage()               {}
func (*GetMerchantUsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{241} }

func (m *GetMerchantUsersRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type GetMerchantUsersResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Users   []*billing.UserRole   `protobuf:"bytes,3,rep,name=users" json:"users,omitempty"`
}

func (m *GetMerchantUsersResponse) Reset()                    { *m = GetMerchantUsersResponse{} }
func (m *GetMerchantUsersResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantUsersResponse) ProtoMessage()               {}
func (*GetMerchantUsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{242} }

func (m *GetMerchantUsersResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetMerchantUsersResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetMerchantUsersResponse) GetUsers() []*billing.UserRole {
	if m != nil {
		return m.Users
	}
	return nil
}

type InviteUserMerchantRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,email"
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty" validate:"required,email"`
	// @inject_tag: validate:"required"
	Role string `protobuf:"bytes,3,opt,name=role" json:"role,omitempty" validate:"required"`
}

func (m *InviteUserMerchantRequest) Reset()                    { *m = InviteUserMerchantRequest{} }
func (m *InviteUserMerchantRequest) String() string            { return proto.CompactTextString(m) }
func (*InviteUserMerchantRequest) ProtoMessage()               {}
func (*InviteUserMerchantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{243} }

func (m *InviteUserMerchantRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *InviteUserMerchantRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *InviteUserMerchantRequest) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type InviteUserMerchantResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Role    *billing.UserRole     `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
}

func (m *InviteUserMerchantResponse) Reset()                    { *m = InviteUserMerchantResponse{} }
func (m *InviteUserMerchantResponse) String() string            { return proto.CompactTextString(m) }
func (*InviteUserMerchantResponse) ProtoMessage()               {}
func (*InviteUserMerchantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{244} }

func (m *InviteUserMerchantResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *InviteUserMerchantResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *InviteUserMerchantResponse) GetRole() *billing.UserRole {
	if m != nil {
		return m.Role
	}
	return nil
}

type InviteUserAdminRequest struct {
	// @inject_tag: validate:"required,email"
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty" validate:"required,email"`
	// @inject_tag: validate:"required"
	Role string `protobuf:"bytes,2,opt,name=role" json:"role,omitempty" validate:"required"`
}

func (m *InviteUserAdminRequest) Reset()                    { *m = InviteUserAdminRequest{} }
func (m *InviteUserAdminRequest) String() string            { return proto.CompactTextString(m) }
func (*InviteUserAdminRequest) ProtoMessage()               {}
func (*InviteUserAdminRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{245} }

func (m *InviteUserAdminRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *InviteUserAdminRequest) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type InviteUserAdminResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Role    *billing.UserRole     `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
}

func (m *InviteUserAdminResponse) Reset()                    { *m = InviteUserAdminResponse{} }
func (m *InviteUserAdminResponse) String() string            { return proto.CompactTextString(m) }
func (*InviteUserAdminResponse) ProtoMessage()               {}
func (*InviteUserAdminResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{246} }

func (m *InviteUserAdminResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *InviteUserAdminResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *InviteUserAdminResponse) GetRole() *billing.UserRole {
	if m != nil {
		return m.Role
	}
	return nil
}

type ResendInviteMerchantRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,email"
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty" validate:"required,email"`
}

func (m *ResendInviteMerchantRequest) Reset()                    { *m = ResendInviteMerchantRequest{} }
func (m *ResendInviteMerchantRequest) String() string            { return proto.CompactTextString(m) }
func (*ResendInviteMerchantRequest) ProtoMessage()               {}
func (*ResendInviteMerchantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{247} }

func (m *ResendInviteMerchantRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ResendInviteMerchantRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ResendInviteAdminRequest struct {
	// @inject_tag: validate:"required,email"
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty" validate:"required,email"`
}

func (m *ResendInviteAdminRequest) Reset()                    { *m = ResendInviteAdminRequest{} }
func (m *ResendInviteAdminRequest) String() string            { return proto.CompactTextString(m) }
func (*ResendInviteAdminRequest) ProtoMessage()               {}
func (*ResendInviteAdminRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{248} }

func (m *ResendInviteAdminRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type GetMerchantUserRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *GetMerchantUserRequest) Reset()                    { *m = GetMerchantUserRequest{} }
func (m *GetMerchantUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantUserRequest) ProtoMessage()               {}
func (*GetMerchantUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{249} }

func (m *GetMerchantUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetMerchantUserResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Role    *billing.UserRole     `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
}

func (m *GetMerchantUserResponse) Reset()                    { *m = GetMerchantUserResponse{} }
func (m *GetMerchantUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantUserResponse) ProtoMessage()               {}
func (*GetMerchantUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{250} }

func (m *GetMerchantUserResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetMerchantUserResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetMerchantUserResponse) GetRole() *billing.UserRole {
	if m != nil {
		return m.Role
	}
	return nil
}

type GetAdminUserRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *GetAdminUserRequest) Reset()                    { *m = GetAdminUserRequest{} }
func (m *GetAdminUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAdminUserRequest) ProtoMessage()               {}
func (*GetAdminUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{251} }

func (m *GetAdminUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetAdminUserResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Role    *billing.UserRole     `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
}

func (m *GetAdminUserResponse) Reset()                    { *m = GetAdminUserResponse{} }
func (m *GetAdminUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAdminUserResponse) ProtoMessage()               {}
func (*GetAdminUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{252} }

func (m *GetAdminUserResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetAdminUserResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetAdminUserResponse) GetRole() *billing.UserRole {
	if m != nil {
		return m.Role
	}
	return nil
}

type CheckInviteTokenRequest struct {
	// @inject_tag: validate:"required"
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty" validate:"required"`
	// @inject_tag: validate:"required,email"
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty" validate:"required,email"`
}

func (m *CheckInviteTokenRequest) Reset()                    { *m = CheckInviteTokenRequest{} }
func (m *CheckInviteTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckInviteTokenRequest) ProtoMessage()               {}
func (*CheckInviteTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{253} }

func (m *CheckInviteTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CheckInviteTokenRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CheckInviteTokenResponse struct {
	Status   int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message  *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	RoleId   string                `protobuf:"bytes,3,opt,name=role_id,json=roleId" json:"role_id,omitempty"`
	RoleType string                `protobuf:"bytes,4,opt,name=role_type,json=roleType" json:"role_type,omitempty"`
}

func (m *CheckInviteTokenResponse) Reset()                    { *m = CheckInviteTokenResponse{} }
func (m *CheckInviteTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckInviteTokenResponse) ProtoMessage()               {}
func (*CheckInviteTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{254} }

func (m *CheckInviteTokenResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CheckInviteTokenResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *CheckInviteTokenResponse) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *CheckInviteTokenResponse) GetRoleType() string {
	if m != nil {
		return m.RoleType
	}
	return ""
}

type AcceptInviteRequest struct {
	// @inject_tag: validate:"required"
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty" validate:"required"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,email"
	Email string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty" validate:"required,email"`
}

func (m *AcceptInviteRequest) Reset()                    { *m = AcceptInviteRequest{} }
func (m *AcceptInviteRequest) String() string            { return proto.CompactTextString(m) }
func (*AcceptInviteRequest) ProtoMessage()               {}
func (*AcceptInviteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{255} }

func (m *AcceptInviteRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AcceptInviteRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AcceptInviteRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type AcceptInviteResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Role    *billing.UserRole     `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
}

func (m *AcceptInviteResponse) Reset()                    { *m = AcceptInviteResponse{} }
func (m *AcceptInviteResponse) String() string            { return proto.CompactTextString(m) }
func (*AcceptInviteResponse) ProtoMessage()               {}
func (*AcceptInviteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{256} }

func (m *AcceptInviteResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AcceptInviteResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *AcceptInviteResponse) GetRole() *billing.UserRole {
	if m != nil {
		return m.Role
	}
	return nil
}

type GetAdminUsersResponse struct {
	Status  int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Users   []*billing.UserRole   `protobuf:"bytes,3,rep,name=users" json:"users,omitempty"`
}

func (m *GetAdminUsersResponse) Reset()                    { *m = GetAdminUsersResponse{} }
func (m *GetAdminUsersResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAdminUsersResponse) ProtoMessage()               {}
func (*GetAdminUsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{257} }

func (m *GetAdminUsersResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetAdminUsersResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetAdminUsersResponse) GetUsers() []*billing.UserRole {
	if m != nil {
		return m.Users
	}
	return nil
}

type GetMerchantsForUserRequest struct {
	// @inject_tag: json:"user_id" validate:"required"
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id" validate:"required"`
}

func (m *GetMerchantsForUserRequest) Reset()                    { *m = GetMerchantsForUserRequest{} }
func (m *GetMerchantsForUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantsForUserRequest) ProtoMessage()               {}
func (*GetMerchantsForUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{258} }

func (m *GetMerchantsForUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetMerchantsForUserResponse struct {
	Status    int32                  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message   *ResponseErrorMessage  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Merchants []*MerchantForUserInfo `protobuf:"bytes,3,rep,name=merchants" json:"merchants,omitempty"`
}

func (m *GetMerchantsForUserResponse) Reset()                    { *m = GetMerchantsForUserResponse{} }
func (m *GetMerchantsForUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantsForUserResponse) ProtoMessage()               {}
func (*GetMerchantsForUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{259} }

func (m *GetMerchantsForUserResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetMerchantsForUserResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetMerchantsForUserResponse) GetMerchants() []*MerchantForUserInfo {
	if m != nil {
		return m.Merchants
	}
	return nil
}

type MerchantForUserInfo struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Role string `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
}

func (m *MerchantForUserInfo) Reset()                    { *m = MerchantForUserInfo{} }
func (m *MerchantForUserInfo) String() string            { return proto.CompactTextString(m) }
func (*MerchantForUserInfo) ProtoMessage()               {}
func (*MerchantForUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{260} }

func (m *MerchantForUserInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MerchantForUserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantForUserInfo) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type ChangeRoleForMerchantUserRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"role_id"
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId" json:"role_id,omitempty" validate:"required,hexadecimal,len=24" param:"role_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required"
	Role string `protobuf:"bytes,3,opt,name=role" json:"role,omitempty" validate:"required"`
}

func (m *ChangeRoleForMerchantUserRequest) Reset()         { *m = ChangeRoleForMerchantUserRequest{} }
func (m *ChangeRoleForMerchantUserRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeRoleForMerchantUserRequest) ProtoMessage()    {}
func (*ChangeRoleForMerchantUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{261}
}

func (m *ChangeRoleForMerchantUserRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *ChangeRoleForMerchantUserRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ChangeRoleForMerchantUserRequest) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type ChangeRoleForAdminUserRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"role_id"
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId" json:"role_id,omitempty" validate:"required,hexadecimal,len=24" param:"role_id"`
	// @inject_tag: validate:"required"
	Role string `protobuf:"bytes,3,opt,name=role" json:"role,omitempty" validate:"required"`
}

func (m *ChangeRoleForAdminUserRequest) Reset()                    { *m = ChangeRoleForAdminUserRequest{} }
func (m *ChangeRoleForAdminUserRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeRoleForAdminUserRequest) ProtoMessage()               {}
func (*ChangeRoleForAdminUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{262} }

func (m *ChangeRoleForAdminUserRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *ChangeRoleForAdminUserRequest) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type GetRoleListRequest struct {
	// @inject_tag: validate:"required,oneof=merchant system"
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty" validate:"required,oneof=merchant system"`
}

func (m *GetRoleListRequest) Reset()                    { *m = GetRoleListRequest{} }
func (m *GetRoleListRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRoleListRequest) ProtoMessage()               {}
func (*GetRoleListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{263} }

func (m *GetRoleListRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type GetRoleListResponse struct {
	Items []*billing.RoleListItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *GetRoleListResponse) Reset()                    { *m = GetRoleListResponse{} }
func (m *GetRoleListResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRoleListResponse) ProtoMessage()               {}
func (*GetRoleListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{264} }

func (m *GetRoleListResponse) GetItems() []*billing.RoleListItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type AdminRoleRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"role_id"
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId" json:"role_id,omitempty" validate:"required,hexadecimal,len=24" param:"role_id"`
}

func (m *AdminRoleRequest) Reset()                    { *m = AdminRoleRequest{} }
func (m *AdminRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*AdminRoleRequest) ProtoMessage()               {}
func (*AdminRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{265} }

func (m *AdminRoleRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

type MerchantRoleRequest struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" param:"role_id"
	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId" json:"role_id,omitempty" validate:"required,hexadecimal,len=24" param:"role_id"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
}

func (m *MerchantRoleRequest) Reset()                    { *m = MerchantRoleRequest{} }
func (m *MerchantRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*MerchantRoleRequest) ProtoMessage()               {}
func (*MerchantRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{266} }

func (m *MerchantRoleRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *MerchantRoleRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type Permission struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Access string `protobuf:"bytes,2,opt,name=access" json:"access,omitempty"`
}

func (m *Permission) Reset()                    { *m = Permission{} }
func (m *Permission) String() string            { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()               {}
func (*Permission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{267} }

func (m *Permission) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Permission) GetAccess() string {
	if m != nil {
		return m.Access
	}
	return ""
}

type UserRoleResponse struct {
	Status   int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message  *ResponseErrorMessage `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	UserRole *billing.UserRole     `protobuf:"bytes,3,opt,name=user_role,json=userRole" json:"user_role,omitempty"`
}

func (m *UserRoleResponse) Reset()                    { *m = UserRoleResponse{} }
func (m *UserRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*UserRoleResponse) ProtoMessage()               {}
func (*UserRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{268} }

func (m *UserRoleResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UserRoleResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *UserRoleResponse) GetUserRole() *billing.UserRole {
	if m != nil {
		return m.UserRole
	}
	return nil
}

type GetCountriesListForOrderRequest struct {
	// @inject_tag: validate:"required,uuid" json:"order_id" query:"order_id" param:"order_id"
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id" validate:"required,uuid" query:"order_id" param:"order_id"`
}

func (m *GetCountriesListForOrderRequest) Reset()         { *m = GetCountriesListForOrderRequest{} }
func (m *GetCountriesListForOrderRequest) String() string { return proto.CompactTextString(m) }
func (*GetCountriesListForOrderRequest) ProtoMessage()    {}
func (*GetCountriesListForOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{269}
}

func (m *GetCountriesListForOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type GetCountriesListForOrderResponse struct {
	Status  int32                  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message *ResponseErrorMessage  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Item    *billing.CountriesList `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
}

func (m *GetCountriesListForOrderResponse) Reset()         { *m = GetCountriesListForOrderResponse{} }
func (m *GetCountriesListForOrderResponse) String() string { return proto.CompactTextString(m) }
func (*GetCountriesListForOrderResponse) ProtoMessage()    {}
func (*GetCountriesListForOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{270}
}

func (m *GetCountriesListForOrderResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetCountriesListForOrderResponse) GetMessage() *ResponseErrorMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *GetCountriesListForOrderResponse) GetItem() *billing.CountriesList {
	if m != nil {
		return m.Item
	}
	return nil
}

func init() {
	proto.RegisterType((*EmptyRequest)(nil), "grpc.EmptyRequest")
	proto.RegisterType((*EmptyResponse)(nil), "grpc.EmptyResponse")
	proto.RegisterType((*EmptyResponseWithStatus)(nil), "grpc.EmptyResponseWithStatus")
	proto.RegisterType((*CheckSkuAndKeyProjectRequest)(nil), "grpc.CheckSkuAndKeyProjectRequest")
	proto.RegisterType((*ChangeCodeInOrderRequest)(nil), "grpc.ChangeCodeInOrderRequest")
	proto.RegisterType((*ChangeCodeInOrderResponse)(nil), "grpc.ChangeCodeInOrderResponse")
	proto.RegisterType((*GetPlatformKeyCountResponse)(nil), "grpc.GetPlatformKeyCountResponse")
	proto.RegisterType((*KeyForOrderRequest)(nil), "grpc.KeyForOrderRequest")
	proto.RegisterType((*GetKeyForOrderRequestResponse)(nil), "grpc.GetKeyForOrderRequestResponse")
	proto.RegisterType((*PlatformKeyReserveResponse)(nil), "grpc.PlatformKeyReserveResponse")
	proto.RegisterType((*PlatformKeyReserveRequest)(nil), "grpc.PlatformKeyReserveRequest")
	proto.RegisterType((*PlatformKeysFileResponse)(nil), "grpc.PlatformKeysFileResponse")
	proto.RegisterType((*PlatformKeysFileRequest)(nil), "grpc.PlatformKeysFileRequest")
	proto.RegisterType((*GetPlatformKeyCountRequest)(nil), "grpc.GetPlatformKeyCountRequest")
	proto.RegisterType((*RemovePlatformRequest)(nil), "grpc.RemovePlatformRequest")
	proto.RegisterType((*KeyProductResponse)(nil), "grpc.KeyProductResponse")
	proto.RegisterType((*CreateOrUpdateKeyProductRequest)(nil), "grpc.CreateOrUpdateKeyProductRequest")
	proto.RegisterType((*UnPublishKeyProductRequest)(nil), "grpc.UnPublishKeyProductRequest")
	proto.RegisterType((*PublishKeyProductRequest)(nil), "grpc.PublishKeyProductRequest")
	proto.RegisterType((*ListPlatformsRequest)(nil), "grpc.ListPlatformsRequest")
	proto.RegisterType((*ListPlatformsResponse)(nil), "grpc.ListPlatformsResponse")
	proto.RegisterType((*ListKeyProductsResponse)(nil), "grpc.ListKeyProductsResponse")
	proto.RegisterType((*ListKeyProductsRequest)(nil), "grpc.ListKeyProductsRequest")
	proto.RegisterType((*PaymentCreateRequest)(nil), "grpc.PaymentCreateRequest")
	proto.RegisterType((*PaymentCreateResponse)(nil), "grpc.PaymentCreateResponse")
	proto.RegisterType((*PaymentFormJsonDataRequest)(nil), "grpc.PaymentFormJsonDataRequest")
	proto.RegisterType((*PaymentFormJsonDataProject)(nil), "grpc.PaymentFormJsonDataProject")
	proto.RegisterType((*PaymentFormJsonData)(nil), "grpc.PaymentFormJsonData")
	proto.RegisterType((*PaymentFormJsonDataResponse)(nil), "grpc.PaymentFormJsonDataResponse")
	proto.RegisterType((*PaymentNotifyRequest)(nil), "grpc.PaymentNotifyRequest")
	proto.RegisterType((*PaymentNotifyResponse)(nil), "grpc.PaymentNotifyResponse")
	proto.RegisterType((*OnboardingRequest)(nil), "grpc.OnboardingRequest")
	proto.RegisterType((*FindByIdRequest)(nil), "grpc.FindByIdRequest")
	proto.RegisterType((*MerchantListingRequest)(nil), "grpc.MerchantListingRequest")
	proto.RegisterType((*MerchantListingResponse)(nil), "grpc.MerchantListingResponse")
	proto.RegisterType((*MerchantChangeStatusRequest)(nil), "grpc.MerchantChangeStatusRequest")
	proto.RegisterType((*NotificationRequest)(nil), "grpc.NotificationRequest")
	proto.RegisterType((*Notifications)(nil), "grpc.Notifications")
	proto.RegisterType((*ListingNotificationRequest)(nil), "grpc.ListingNotificationRequest")
	proto.RegisterType((*ListingMerchantPaymentMethod)(nil), "grpc.ListingMerchantPaymentMethod")
	proto.RegisterType((*GetMerchantPaymentMethodRequest)(nil), "grpc.GetMerchantPaymentMethodRequest")
	proto.RegisterType((*GetMerchantPaymentMethodResponse)(nil), "grpc.GetMerchantPaymentMethodResponse")
	proto.RegisterType((*ListMerchantPaymentMethodsRequest)(nil), "grpc.ListMerchantPaymentMethodsRequest")
	proto.RegisterType((*MerchantPaymentMethodRequest)(nil), "grpc.MerchantPaymentMethodRequest")
	proto.RegisterType((*MerchantPaymentMethodResponse)(nil), "grpc.MerchantPaymentMethodResponse")
	proto.RegisterType((*GetMerchantResponse)(nil), "grpc.GetMerchantResponse")
	proto.RegisterType((*GetNotificationRequest)(nil), "grpc.GetNotificationRequest")
	proto.RegisterType((*CreateRefundRequest)(nil), "grpc.CreateRefundRequest")
	proto.RegisterType((*CreateRefundResponse)(nil), "grpc.CreateRefundResponse")
	proto.RegisterType((*ListRefundsRequest)(nil), "grpc.ListRefundsRequest")
	proto.RegisterType((*ListRefundsResponse)(nil), "grpc.ListRefundsResponse")
	proto.RegisterType((*GetRefundRequest)(nil), "grpc.GetRefundRequest")
	proto.RegisterType((*CallbackRequest)(nil), "grpc.CallbackRequest")
	proto.RegisterType((*PaymentFormDataChangedRequest)(nil), "grpc.PaymentFormDataChangedRequest")
	proto.RegisterType((*PaymentFormUserChangePlatformRequest)(nil), "grpc.PaymentFormUserChangePlatformRequest")
	proto.RegisterType((*PaymentFormUserChangeLangRequest)(nil), "grpc.PaymentFormUserChangeLangRequest")
	proto.RegisterType((*PaymentFormUserChangePaymentAccountRequest)(nil), "grpc.PaymentFormUserChangePaymentAccountRequest")
	proto.RegisterType((*PaymentFormDataChangeResponse)(nil), "grpc.PaymentFormDataChangeResponse")
	proto.RegisterType((*ProcessBillingAddressRequest)(nil), "grpc.ProcessBillingAddressRequest")
	proto.RegisterType((*ProcessBillingAddressResponseItem)(nil), "grpc.ProcessBillingAddressResponseItem")
	proto.RegisterType((*ProcessBillingAddressResponse)(nil), "grpc.ProcessBillingAddressResponse")
	proto.RegisterType((*GetMerchantByRequest)(nil), "grpc.GetMerchantByRequest")
	proto.RegisterType((*ChangeMerchantDataRequest)(nil), "grpc.ChangeMerchantDataRequest")
	proto.RegisterType((*ChangeMerchantDataResponse)(nil), "grpc.ChangeMerchantDataResponse")
	proto.RegisterType((*ChangeMerchantResponse)(nil), "grpc.ChangeMerchantResponse")
	proto.RegisterType((*ChangeMerchantStatusResponse)(nil), "grpc.ChangeMerchantStatusResponse")
	proto.RegisterType((*CreateNotificationResponse)(nil), "grpc.CreateNotificationResponse")
	proto.RegisterType((*OrderCreateProcessResponse)(nil), "grpc.OrderCreateProcessResponse")
	proto.RegisterType((*SetMerchantS3AgreementRequest)(nil), "grpc.SetMerchantS3AgreementRequest")
	proto.RegisterType((*KeyProductInfo)(nil), "grpc.KeyProductInfo")
	proto.RegisterType((*PlatformPriceInfo)(nil), "grpc.PlatformPriceInfo")
	proto.RegisterType((*ProductPriceInfo)(nil), "grpc.ProductPriceInfo")
	proto.RegisterType((*KeyProduct)(nil), "grpc.KeyProduct")
	proto.RegisterType((*PlatformPrice)(nil), "grpc.PlatformPrice")
	proto.RegisterType((*Platform)(nil), "grpc.Platform")
	proto.RegisterType((*Product)(nil), "grpc.Product")
	proto.RegisterType((*ListProductsRequest)(nil), "grpc.ListProductsRequest")
	proto.RegisterType((*GetProductsForOrderRequest)(nil), "grpc.GetProductsForOrderRequest")
	proto.RegisterType((*GetKeyProductInfoRequest)(nil), "grpc.GetKeyProductInfoRequest")
	proto.RegisterType((*GetKeyProductInfoResponse)(nil), "grpc.GetKeyProductInfoResponse")
	proto.RegisterType((*GetKeyProductsForOrderRequest)(nil), "grpc.GetKeyProductsForOrderRequest")
	proto.RegisterType((*ListProductsResponse)(nil), "grpc.ListProductsResponse")
	proto.RegisterType((*RequestProduct)(nil), "grpc.RequestProduct")
	proto.RegisterType((*RequestKeyProductMerchant)(nil), "grpc.RequestKeyProductMerchant")
	proto.RegisterType((*RequestKeyProduct)(nil), "grpc.RequestKeyProduct")
	proto.RegisterType((*I18NTextSearchable)(nil), "grpc.I18NTextSearchable")
	proto.RegisterType((*ChangeProjectResponse)(nil), "grpc.ChangeProjectResponse")
	proto.RegisterType((*GetProjectRequest)(nil), "grpc.GetProjectRequest")
	proto.RegisterType((*ListProjectsRequest)(nil), "grpc.ListProjectsRequest")
	proto.RegisterType((*ListProjectsResponse)(nil), "grpc.ListProjectsResponse")
	proto.RegisterType((*TokenRequest)(nil), "grpc.TokenRequest")
	proto.RegisterType((*TokenResponse)(nil), "grpc.TokenResponse")
	proto.RegisterType((*CheckProjectRequestSignatureRequest)(nil), "grpc.CheckProjectRequestSignatureRequest")
	proto.RegisterType((*CheckProjectRequestSignatureResponse)(nil), "grpc.CheckProjectRequestSignatureResponse")
	proto.RegisterType((*ListOrdersRequest)(nil), "grpc.ListOrdersRequest")
	proto.RegisterType((*GetOrderRequest)(nil), "grpc.GetOrderRequest")
	proto.RegisterType((*IsOrderCanBePayingRequest)(nil), "grpc.IsOrderCanBePayingRequest")
	proto.RegisterType((*IsOrderCanBePayingResponse)(nil), "grpc.IsOrderCanBePayingResponse")
	proto.RegisterType((*SetUserNotifyRequest)(nil), "grpc.SetUserNotifyRequest")
	proto.RegisterType((*NotifyUserSales)(nil), "grpc.NotifyUserSales")
	proto.RegisterType((*NotifyUserNewRegion)(nil), "grpc.NotifyUserNewRegion")
	proto.RegisterType((*GetPaymentMethodSettingsRequest)(nil), "grpc.GetPaymentMethodSettingsRequest")
	proto.RegisterType((*GetPaymentMethodSettingsResponse)(nil), "grpc.GetPaymentMethodSettingsResponse")
	proto.RegisterType((*ChangePaymentMethodRequest)(nil), "grpc.ChangePaymentMethodRequest")
	proto.RegisterType((*ChangePaymentMethodParamsRequest)(nil), "grpc.ChangePaymentMethodParamsRequest")
	proto.RegisterType((*ChangePaymentMethodResponse)(nil), "grpc.ChangePaymentMethodResponse")
	proto.RegisterType((*ChangePaymentMethodParamsResponse)(nil), "grpc.ChangePaymentMethodParamsResponse")
	proto.RegisterType((*FindByZipCodeRequest)(nil), "grpc.FindByZipCodeRequest")
	proto.RegisterType((*FindByZipCodeResponse)(nil), "grpc.FindByZipCodeResponse")
	proto.RegisterType((*ResponseError)(nil), "grpc.ResponseError")
	proto.RegisterType((*ResponseErrorMessage)(nil), "grpc.ResponseErrorMessage")
	proto.RegisterType((*CreateAccountingEntryRequest)(nil), "grpc.CreateAccountingEntryRequest")
	proto.RegisterType((*CreateAccountingEntryResponse)(nil), "grpc.CreateAccountingEntryResponse")
	proto.RegisterType((*CreateRoyaltyReportRequest)(nil), "grpc.CreateRoyaltyReportRequest")
	proto.RegisterType((*ListRoyaltyReportsRequest)(nil), "grpc.ListRoyaltyReportsRequest")
	proto.RegisterType((*RoyaltyReportsPaginate)(nil), "grpc.RoyaltyReportsPaginate")
	proto.RegisterType((*ListRoyaltyReportsResponse)(nil), "grpc.ListRoyaltyReportsResponse")
	proto.RegisterType((*ListRoyaltyReportOrdersRequest)(nil), "grpc.ListRoyaltyReportOrdersRequest")
	proto.RegisterType((*ChangeRoyaltyReportCorrection)(nil), "grpc.ChangeRoyaltyReportCorrection")
	proto.RegisterType((*GetRoyaltyReportRequest)(nil), "grpc.GetRoyaltyReportRequest")
	proto.RegisterType((*GetRoyaltyReportResponse)(nil), "grpc.GetRoyaltyReportResponse")
	proto.RegisterType((*ChangeRoyaltyReportRequest)(nil), "grpc.ChangeRoyaltyReportRequest")
	proto.RegisterType((*MerchantReviewRoyaltyReportRequest)(nil), "grpc.MerchantReviewRoyaltyReportRequest")
	proto.RegisterType((*PaymentChannelCostSystemListResponse)(nil), "grpc.PaymentChannelCostSystemListResponse")
	proto.RegisterType((*PaymentChannelCostSystemResponse)(nil), "grpc.PaymentChannelCostSystemResponse")
	proto.RegisterType((*PaymentChannelCostMerchantListResponse)(nil), "grpc.PaymentChannelCostMerchantListResponse")
	proto.RegisterType((*PaymentChannelCostMerchantResponse)(nil), "grpc.PaymentChannelCostMerchantResponse")
	proto.RegisterType((*MoneyBackCostSystemListResponse)(nil), "grpc.MoneyBackCostSystemListResponse")
	proto.RegisterType((*MoneyBackCostSystemResponse)(nil), "grpc.MoneyBackCostSystemResponse")
	proto.RegisterType((*MoneyBackCostMerchantListResponse)(nil), "grpc.MoneyBackCostMerchantListResponse")
	proto.RegisterType((*MoneyBackCostMerchantResponse)(nil), "grpc.MoneyBackCostMerchantResponse")
	proto.RegisterType((*PriceGroupByCountryRequest)(nil), "grpc.PriceGroupByCountryRequest")
	proto.RegisterType((*PriceGroupCurrenciesResponse)(nil), "grpc.PriceGroupCurrenciesResponse")
	proto.RegisterType((*PriceGroupRegions)(nil), "grpc.PriceGroupRegions")
	proto.RegisterType((*PriceGroupRegion)(nil), "grpc.PriceGroupRegion")
	proto.RegisterType((*PriceGroupByRegionRequest)(nil), "grpc.PriceGroupByRegionRequest")
	proto.RegisterType((*RecommendedPriceRequest)(nil), "grpc.RecommendedPriceRequest")
	proto.RegisterType((*RecommendedPriceResponse)(nil), "grpc.RecommendedPriceResponse")
	proto.RegisterType((*RecommendedPriceTableRequest)(nil), "grpc.RecommendedPriceTableRequest")
	proto.RegisterType((*RecommendedPriceTableResponse)(nil), "grpc.RecommendedPriceTableResponse")
	proto.RegisterType((*ProductPricesResponse)(nil), "grpc.ProductPricesResponse")
	proto.RegisterType((*UpdateProductPricesRequest)(nil), "grpc.UpdateProductPricesRequest")
	proto.RegisterType((*UserProfilePersonal)(nil), "grpc.UserProfilePersonal")
	proto.RegisterType((*UserProfileHelp)(nil), "grpc.UserProfileHelp")
	proto.RegisterType((*UserProfileCompanyMonetization)(nil), "grpc.UserProfileCompanyMonetization")
	proto.RegisterType((*UserProfileCompanyPlatforms)(nil), "grpc.UserProfileCompanyPlatforms")
	proto.RegisterType((*UserProfileCompany)(nil), "grpc.UserProfileCompany")
	proto.RegisterType((*UserProfileEmail)(nil), "grpc.UserProfileEmail")
	proto.RegisterType((*UserProfile)(nil), "grpc.UserProfile")
	proto.RegisterType((*CommonUserProfileRequest)(nil), "grpc.CommonUserProfileRequest")
	proto.RegisterType((*CommonUserProfileResponse)(nil), "grpc.CommonUserProfileResponse")
	proto.RegisterType((*CommonUserProfile)(nil), "grpc.CommonUserProfile")
	proto.RegisterType((*GetUserProfileRequest)(nil), "grpc.GetUserProfileRequest")
	proto.RegisterType((*GetUserProfileResponse)(nil), "grpc.GetUserProfileResponse")
	proto.RegisterType((*PageReview)(nil), "grpc.PageReview")
	proto.RegisterType((*CreatePageReviewRequest)(nil), "grpc.CreatePageReviewRequest")
	proto.RegisterType((*ConfirmUserEmailRequest)(nil), "grpc.ConfirmUserEmailRequest")
	proto.RegisterType((*ConfirmUserEmailResponse)(nil), "grpc.ConfirmUserEmailResponse")
	proto.RegisterType((*VatTransactionsRequest)(nil), "grpc.VatTransactionsRequest")
	proto.RegisterType((*TransactionsPaginate)(nil), "grpc.TransactionsPaginate")
	proto.RegisterType((*TransactionsResponse)(nil), "grpc.TransactionsResponse")
	proto.RegisterType((*VatReportsRequest)(nil), "grpc.VatReportsRequest")
	proto.RegisterType((*VatReportsPaginate)(nil), "grpc.VatReportsPaginate")
	proto.RegisterType((*VatReportsResponse)(nil), "grpc.VatReportsResponse")
	proto.RegisterType((*ProcessVatReportsRequest)(nil), "grpc.ProcessVatReportsRequest")
	proto.RegisterType((*UpdateVatReportStatusRequest)(nil), "grpc.UpdateVatReportStatusRequest")
	proto.RegisterType((*GetMerchantOnboardingCompleteDataResponseItem)(nil), "grpc.GetMerchantOnboardingCompleteDataResponseItem")
	proto.RegisterType((*GetMerchantOnboardingCompleteDataResponse)(nil), "grpc.GetMerchantOnboardingCompleteDataResponse")
	proto.RegisterType((*GetMerchantTariffRatesRequest)(nil), "grpc.GetMerchantTariffRatesRequest")
	proto.RegisterType((*GetMerchantTariffRatesResponseItems)(nil), "grpc.GetMerchantTariffRatesResponseItems")
	proto.RegisterType((*GetMerchantTariffRatesResponse)(nil), "grpc.GetMerchantTariffRatesResponse")
	proto.RegisterType((*SetMerchantTariffRatesRequest)(nil), "grpc.SetMerchantTariffRatesRequest")
	proto.RegisterType((*ListOrdersPublicResponseItem)(nil), "grpc.ListOrdersPublicResponseItem")
	proto.RegisterType((*ListOrdersPrivateResponseItem)(nil), "grpc.ListOrdersPrivateResponseItem")
	proto.RegisterType((*ListOrdersPublicResponse)(nil), "grpc.ListOrdersPublicResponse")
	proto.RegisterType((*ListOrdersPrivateResponse)(nil), "grpc.ListOrdersPrivateResponse")
	proto.RegisterType((*ListOrdersResponseItem)(nil), "grpc.ListOrdersResponseItem")
	proto.RegisterType((*ListOrdersResponse)(nil), "grpc.ListOrdersResponse")
	proto.RegisterType((*GetOrderPublicResponse)(nil), "grpc.GetOrderPublicResponse")
	proto.RegisterType((*GetOrderPrivateResponse)(nil), "grpc.GetOrderPrivateResponse")
	proto.RegisterType((*GetDashboardMainRequest)(nil), "grpc.GetDashboardMainRequest")
	proto.RegisterType((*GetDashboardMainResponse)(nil), "grpc.GetDashboardMainResponse")
	proto.RegisterType((*GetDashboardBaseReportRequest)(nil), "grpc.GetDashboardBaseReportRequest")
	proto.RegisterType((*GetDashboardBaseReportResponse)(nil), "grpc.GetDashboardBaseReportResponse")
	proto.RegisterType((*GetDashboardRevenueDynamicsReportResponse)(nil), "grpc.GetDashboardRevenueDynamicsReportResponse")
	proto.RegisterType((*DashboardAmountItemWithChart)(nil), "grpc.DashboardAmountItemWithChart")
	proto.RegisterType((*DashboardChartItemFloat)(nil), "grpc.DashboardChartItemFloat")
	proto.RegisterType((*DashboardMainReportTotalTransactions)(nil), "grpc.DashboardMainReportTotalTransactions")
	proto.RegisterType((*DashboardMainReport)(nil), "grpc.DashboardMainReport")
	proto.RegisterType((*DashboardRevenueDynamicReport)(nil), "grpc.DashboardRevenueDynamicReport")
	proto.RegisterType((*DashboardRevenueDynamicReportItem)(nil), "grpc.DashboardRevenueDynamicReportItem")
	proto.RegisterType((*DashboardRevenueByCountryReportTop)(nil), "grpc.DashboardRevenueByCountryReportTop")
	proto.RegisterType((*DashboardRevenueByCountryReportChartItem)(nil), "grpc.DashboardRevenueByCountryReportChartItem")
	proto.RegisterType((*DashboardRevenueByCountryReport)(nil), "grpc.DashboardRevenueByCountryReport")
	proto.RegisterType((*DashboardSalesTodayReportTop)(nil), "grpc.DashboardSalesTodayReportTop")
	proto.RegisterType((*DashboardChartItemInt)(nil), "grpc.DashboardChartItemInt")
	proto.RegisterType((*DashboardSalesTodayReport)(nil), "grpc.DashboardSalesTodayReport")
	proto.RegisterType((*DashboardSourcesReport)(nil), "grpc.DashboardSourcesReport")
	proto.RegisterType((*DashboardBaseReports)(nil), "grpc.DashboardBaseReports")
	proto.RegisterType((*CreatePayoutDocumentRequest)(nil), "grpc.CreatePayoutDocumentRequest")
	proto.RegisterType((*PayoutDocumentResponse)(nil), "grpc.PayoutDocumentResponse")
	proto.RegisterType((*CreatePayoutDocumentResponse)(nil), "grpc.CreatePayoutDocumentResponse")
	proto.RegisterType((*UpdatePayoutDocumentRequest)(nil), "grpc.UpdatePayoutDocumentRequest")
	proto.RegisterType((*GetPayoutDocumentRequest)(nil), "grpc.GetPayoutDocumentRequest")
	proto.RegisterType((*GetPayoutDocumentsRequest)(nil), "grpc.GetPayoutDocumentsRequest")
	proto.RegisterType((*PayoutDocumentsPaginate)(nil), "grpc.PayoutDocumentsPaginate")
	proto.RegisterType((*GetPayoutDocumentsResponse)(nil), "grpc.GetPayoutDocumentsResponse")
	proto.RegisterType((*UpdatePayoutDocumentSignaturesRequest)(nil), "grpc.UpdatePayoutDocumentSignaturesRequest")
	proto.RegisterType((*GetMerchantBalanceRequest)(nil), "grpc.GetMerchantBalanceRequest")
	proto.RegisterType((*GetMerchantBalanceResponse)(nil), "grpc.GetMerchantBalanceResponse")
	proto.RegisterType((*PayoutDocumentPdfUploadedRequest)(nil), "grpc.PayoutDocumentPdfUploadedRequest")
	proto.RegisterType((*PayoutDocumentPdfUploadedResponse)(nil), "grpc.PayoutDocumentPdfUploadedResponse")
	proto.RegisterType((*OrderReceiptRequest)(nil), "grpc.OrderReceiptRequest")
	proto.RegisterType((*OrderReceiptResponse)(nil), "grpc.OrderReceiptResponse")
	proto.RegisterType((*GetProductResponse)(nil), "grpc.GetProductResponse")
	proto.RegisterType((*GetPriceGroupByRegionResponse)(nil), "grpc.GetPriceGroupByRegionResponse")
	proto.RegisterType((*GetPriceGroupByRegionRequest)(nil), "grpc.GetPriceGroupByRegionRequest")
	proto.RegisterType((*ChangeMerchantManualPayoutsRequest)(nil), "grpc.ChangeMerchantManualPayoutsRequest")
	proto.RegisterType((*ChangeMerchantManualPayoutsResponse)(nil), "grpc.ChangeMerchantManualPayoutsResponse")
	proto.RegisterType((*GetPaylinksRequest)(nil), "grpc.GetPaylinksRequest")
	proto.RegisterType((*PaylinksPaginate)(nil), "grpc.PaylinksPaginate")
	proto.RegisterType((*GetPaylinksResponse)(nil), "grpc.GetPaylinksResponse")
	proto.RegisterType((*PaylinkRequestById)(nil), "grpc.PaylinkRequestById")
	proto.RegisterType((*PaylinkRequest)(nil), "grpc.PaylinkRequest")
	proto.RegisterType((*GetPaylinkResponse)(nil), "grpc.GetPaylinkResponse")
	proto.RegisterType((*GetPaylinkURLRequest)(nil), "grpc.GetPaylinkURLRequest")
	proto.RegisterType((*GetPaylinkUrlResponse)(nil), "grpc.GetPaylinkUrlResponse")
	proto.RegisterType((*GetPaylinkStatCommonRequest)(nil), "grpc.GetPaylinkStatCommonRequest")
	proto.RegisterType((*GetPaylinkTransactionsRequest)(nil), "grpc.GetPaylinkTransactionsRequest")
	proto.RegisterType((*GetPaylinkStatCommonResponse)(nil), "grpc.GetPaylinkStatCommonResponse")
	proto.RegisterType((*GetPaylinkStatCommonGroupResponse)(nil), "grpc.GetPaylinkStatCommonGroupResponse")
	proto.RegisterType((*RoyaltyReportPdfUploadedRequest)(nil), "grpc.RoyaltyReportPdfUploadedRequest")
	proto.RegisterType((*RoyaltyReportPdfUploadedResponse)(nil), "grpc.RoyaltyReportPdfUploadedResponse")
	proto.RegisterType((*DeleteSavedCardRequest)(nil), "grpc.DeleteSavedCardRequest")
	proto.RegisterType((*GetOperatingCompaniesListResponse)(nil), "grpc.GetOperatingCompaniesListResponse")
	proto.RegisterType((*GetPaymentMinLimitsSystemResponse)(nil), "grpc.GetPaymentMinLimitsSystemResponse")
	proto.RegisterType((*SetMerchantOperatingCompanyRequest)(nil), "grpc.SetMerchantOperatingCompanyRequest")
	proto.RegisterType((*SetMerchantOperatingCompanyResponse)(nil), "grpc.SetMerchantOperatingCompanyResponse")
	proto.RegisterType((*GetOperatingCompanyRequest)(nil), "grpc.GetOperatingCompanyRequest")
	proto.RegisterType((*GetOperatingCompanyResponse)(nil), "grpc.GetOperatingCompanyResponse")
	proto.RegisterType((*OrderReCreateProcessRequest)(nil), "grpc.OrderReCreateProcessRequest")
	proto.RegisterType((*GetMerchantUsersRequest)(nil), "grpc.GetMerchantUsersRequest")
	proto.RegisterType((*GetMerchantUsersResponse)(nil), "grpc.GetMerchantUsersResponse")
	proto.RegisterType((*InviteUserMerchantRequest)(nil), "grpc.InviteUserMerchantRequest")
	proto.RegisterType((*InviteUserMerchantResponse)(nil), "grpc.InviteUserMerchantResponse")
	proto.RegisterType((*InviteUserAdminRequest)(nil), "grpc.InviteUserAdminRequest")
	proto.RegisterType((*InviteUserAdminResponse)(nil), "grpc.InviteUserAdminResponse")
	proto.RegisterType((*ResendInviteMerchantRequest)(nil), "grpc.ResendInviteMerchantRequest")
	proto.RegisterType((*ResendInviteAdminRequest)(nil), "grpc.ResendInviteAdminRequest")
	proto.RegisterType((*GetMerchantUserRequest)(nil), "grpc.GetMerchantUserRequest")
	proto.RegisterType((*GetMerchantUserResponse)(nil), "grpc.GetMerchantUserResponse")
	proto.RegisterType((*GetAdminUserRequest)(nil), "grpc.GetAdminUserRequest")
	proto.RegisterType((*GetAdminUserResponse)(nil), "grpc.GetAdminUserResponse")
	proto.RegisterType((*CheckInviteTokenRequest)(nil), "grpc.CheckInviteTokenRequest")
	proto.RegisterType((*CheckInviteTokenResponse)(nil), "grpc.CheckInviteTokenResponse")
	proto.RegisterType((*AcceptInviteRequest)(nil), "grpc.AcceptInviteRequest")
	proto.RegisterType((*AcceptInviteResponse)(nil), "grpc.AcceptInviteResponse")
	proto.RegisterType((*GetAdminUsersResponse)(nil), "grpc.GetAdminUsersResponse")
	proto.RegisterType((*GetMerchantsForUserRequest)(nil), "grpc.GetMerchantsForUserRequest")
	proto.RegisterType((*GetMerchantsForUserResponse)(nil), "grpc.GetMerchantsForUserResponse")
	proto.RegisterType((*MerchantForUserInfo)(nil), "grpc.MerchantForUserInfo")
	proto.RegisterType((*ChangeRoleForMerchantUserRequest)(nil), "grpc.ChangeRoleForMerchantUserRequest")
	proto.RegisterType((*ChangeRoleForAdminUserRequest)(nil), "grpc.ChangeRoleForAdminUserRequest")
	proto.RegisterType((*GetRoleListRequest)(nil), "grpc.GetRoleListRequest")
	proto.RegisterType((*GetRoleListResponse)(nil), "grpc.GetRoleListResponse")
	proto.RegisterType((*AdminRoleRequest)(nil), "grpc.AdminRoleRequest")
	proto.RegisterType((*MerchantRoleRequest)(nil), "grpc.MerchantRoleRequest")
	proto.RegisterType((*Permission)(nil), "grpc.Permission")
	proto.RegisterType((*UserRoleResponse)(nil), "grpc.UserRoleResponse")
	proto.RegisterType((*GetCountriesListForOrderRequest)(nil), "grpc.GetCountriesListForOrderRequest")
	proto.RegisterType((*GetCountriesListForOrderResponse)(nil), "grpc.GetCountriesListForOrderResponse")
}

func init() { proto.RegisterFile("grpc/grpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 12170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0x69, 0x6c, 0x24, 0xc9,
	0x95, 0x18, 0xdc, 0xc9, 0xe2, 0x51, 0x7c, 0xbc, 0x83, 0x6c, 0xb2, 0x58, 0x24, 0xfb, 0xc8, 0x9e,
	0x9e, 0xe9, 0x9e, 0xa3, 0x7b, 0xd4, 0x73, 0x68, 0x76, 0x74, 0xec, 0xb0, 0xd9, 0x87, 0x38, 0x33,
	0x3d, 0x4d, 0x25, 0xd9, 0xa3, 0xd1, 0x68, 0xa4, 0x42, 0xb2, 0x2a, 0x48, 0xa6, 0x58, 0x95, 0x59,
	0xca, 0xcc, 0xe2, 0xa8, 0x24, 0x41, 0xc2, 0xea, 0xdb, 0x05, 0x76, 0x3f, 0xad, 0xb4, 0x97, 0x64,
	0x2f, 0x56, 0xc7, 0xca, 0xf2, 0x7a, 0x85, 0x85, 0xbd, 0xde, 0xc5, 0x2e, 0x0c, 0x1b, 0xb2, 0x0d,
	0x1b, 0xbb, 0xb0, 0x0d, 0x18, 0x30, 0xe0, 0x5f, 0x36, 0x8c, 0xfd, 0x65, 0x03, 0xd6, 0x3f, 0xdb,
	0x0b, 0x18, 0xfe, 0x6f, 0xc4, 0x99, 0x11, 0x99, 0x91, 0x99, 0xc5, 0x9e, 0xae, 0x1e, 0x2f, 0xec,
	0x3f, 0x64, 0x65, 0x1c, 0x2f, 0x5e, 0xbc, 0x78, 0xf1, 0xe2, 0xc5, 0x8b, 0x17, 0x2f, 0x60, 0xee,
	0x30, 0xec, 0x36, 0xaf, 0x93, 0x3f, 0xd7, 0xba, 0x61, 0x10, 0x07, 0x68, 0x94, 0xfc, 0xae, 0x9f,
	0x3f, 0x0c, 0x82, 0xc3, 0x36, 0xbe, 0x4e, 0xd3, 0xf6, 0x7b, 0x07, 0xd7, 0x63, 0xaf, 0x83, 0xa3,
	0xd8, 0xed, 0x74, 0x59, 0xb1, 0xfa, 0xd9, 0x7d, 0xaf, 0xdd, 0xf6, 0xfc, 0xc3, 0xeb, 0xfc, 0xbf,
	0x48, 0xee, 0xba, 0xfd, 0xb6, 0xe7, 0x1f, 0x5f, 0xe7, 0xff, 0x59, 0xb2, 0x3d, 0x0b, 0xd3, 0xb7,
	0x3b, 0xdd, 0xb8, 0xef, 0xe0, 0x2f, 0xf5, 0x70, 0x14, 0xdb, 0x73, 0x30, 0xc3, 0xbf, 0xa3, 0x6e,
	0xe0, 0x47, 0xd8, 0x3e, 0x84, 0x15, 0x2d, 0xe1, 0x33, 0x5e, 0x7c, 0xb4, 0x1b, 0xbb, 0x71, 0x2f,
	0x42, 0xcb, 0x30, 0x1e, 0xd1, 0x5f, 0x35, 0xeb, 0x82, 0x75, 0x65, 0xcc, 0xe1, 0x5f, 0xe8, 0x45,
	0x98, 0xe8, 0xe0, 0x28, 0x72, 0x0f, 0x71, 0x6d, 0xe4, 0x82, 0x75, 0x65, 0xea, 0x46, 0xfd, 0x1a,
	0xed, 0x86, 0x00, 0x71, 0x3b, 0x0c, 0x83, 0xf0, 0x1e, 0x2b, 0xe1, 0x88, 0xa2, 0xf6, 0x7d, 0x58,
	0xdf, 0x3a, 0xc2, 0xcd, 0xe3, 0xdd, 0xe3, 0xde, 0xa6, 0xdf, 0x7a, 0x03, 0xf7, 0x77, 0xc2, 0xe0,
	0x8b, 0xb8, 0x19, 0x73, 0xcc, 0xd0, 0x3c, 0x54, 0xa2, 0xe3, 0x1e, 0x6d, 0x6a, 0xd2, 0x21, 0x3f,
	0xd1, 0x06, 0x40, 0x97, 0x95, 0x69, 0x78, 0x2d, 0xda, 0xd4, 0xa4, 0x33, 0xc9, 0x53, 0xb6, 0x5b,
	0xf6, 0xe7, 0xa0, 0xb6, 0x75, 0xe4, 0xfa, 0x87, 0x78, 0x2b, 0x68, 0xe1, 0x6d, 0xff, 0x7e, 0xd8,
	0xc2, 0xa1, 0x00, 0xb6, 0x0a, 0xd5, 0x80, 0x7c, 0x93, 0x8a, 0x0c, 0xe2, 0x04, 0xfd, 0xde, 0x6e,
	0xa1, 0x27, 0x60, 0xf6, 0x18, 0xf7, 0x1b, 0xdd, 0x30, 0x68, 0xf5, 0x54, 0xc8, 0xd3, 0xc7, 0x14,
	0x25, 0x92, 0xb8, 0xdd, 0xb2, 0x7f, 0xc3, 0x82, 0x55, 0x03, 0x74, 0xd6, 0xc1, 0x47, 0x4b, 0x19,
	0xf4, 0x04, 0x8c, 0x51, 0xe4, 0x6a, 0x15, 0x5a, 0x67, 0xf6, 0x9a, 0x18, 0x59, 0xd6, 0x28, 0xcb,
	0xb4, 0x7f, 0xc9, 0x82, 0xb5, 0xbb, 0x38, 0xde, 0x69, 0xbb, 0xf1, 0x41, 0x10, 0x76, 0xde, 0xc0,
	0xfd, 0xad, 0xa0, 0xe7, 0xc7, 0x43, 0xc2, 0x69, 0x09, 0xc6, 0x9a, 0x04, 0x3c, 0xc5, 0x69, 0xcc,
	0x61, 0x1f, 0xf6, 0x33, 0x80, 0xde, 0xc0, 0xfd, 0x3b, 0x41, 0xa8, 0x11, 0xfb, 0x2c, 0x8c, 0x13,
	0x8a, 0x4a, 0x52, 0x8f, 0x1d, 0xe3, 0xfe, 0x76, 0xcb, 0xfe, 0xb6, 0x05, 0x1b, 0x77, 0x71, 0x9c,
	0xad, 0x30, 0x24, 0x94, 0xcf, 0x41, 0xe5, 0x18, 0xf7, 0x39, 0x11, 0xa7, 0x25, 0x11, 0xdf, 0xc0,
	0x7d, 0x87, 0x64, 0x10, 0x02, 0xd6, 0x15, 0xea, 0x39, 0x38, 0xc2, 0xe1, 0x09, 0x1e, 0x12, 0x32,
	0x09, 0x4d, 0x2a, 0x2a, 0x4d, 0xfe, 0xd4, 0x82, 0x55, 0x13, 0x0e, 0x8c, 0x90, 0x03, 0xb1, 0x26,
	0x3a, 0x0f, 0x53, 0x1d, 0x1c, 0x36, 0x8f, 0x5c, 0x3f, 0x4e, 0xe0, 0x83, 0x48, 0x62, 0x05, 0xba,
	0xbc, 0x0d, 0x52, 0x60, 0x94, 0x15, 0x10, 0x49, 0xdb, 0x2d, 0x32, 0xd5, 0xe2, 0xb8, 0x5d, 0x1b,
	0xa3, 0xfd, 0x24, 0x3f, 0xb5, 0xf9, 0x32, 0xae, 0xcd, 0x17, 0x82, 0x72, 0x4d, 0x41, 0x39, 0xba,
	0xe3, 0xb5, 0x87, 0x45, 0xb4, 0xcb, 0xb4, 0xff, 0x11, 0x21, 0x40, 0x13, 0x47, 0x11, 0x6e, 0x71,
	0xee, 0x9b, 0x21, 0xa9, 0x3b, 0x22, 0x91, 0xf4, 0x2f, 0x0e, 0x62, 0xb7, 0xdd, 0x60, 0x1c, 0x3a,
	0x4a, 0xcb, 0x00, 0x4d, 0xa2, 0x53, 0xc2, 0xfe, 0x9e, 0x05, 0x2b, 0x59, 0x94, 0x19, 0x8d, 0x11,
	0x8c, 0x1e, 0x78, 0x6d, 0x4c, 0xf1, 0x9d, 0x76, 0xe8, 0xef, 0xc7, 0x45, 0x77, 0xfb, 0x97, 0x2d,
	0xa8, 0x1b, 0xa7, 0x70, 0xde, 0xf0, 0x5b, 0xe5, 0x68, 0x8c, 0x94, 0xa1, 0x51, 0xc9, 0xa0, 0xf1,
	0x0d, 0x38, 0xeb, 0xe0, 0x4e, 0x70, 0x82, 0x05, 0x22, 0x8f, 0x1b, 0x81, 0xef, 0x58, 0x54, 0x8e,
	0x70, 0x90, 0x43, 0x62, 0xa6, 0xa7, 0x61, 0x82, 0x77, 0x84, 0x8b, 0x84, 0x79, 0x56, 0x4b, 0x69,
	0x58, 0x14, 0xb0, 0xff, 0x70, 0x02, 0xce, 0x6f, 0x85, 0xd8, 0x8d, 0xf1, 0xfd, 0xf0, 0x41, 0xb7,
	0xe5, 0xc6, 0x58, 0x45, 0x8f, 0x11, 0x67, 0x0b, 0x46, 0x7d, 0xb7, 0x43, 0x18, 0xa7, 0x72, 0x65,
	0xea, 0xc6, 0x75, 0x06, 0xac, 0xa4, 0xd2, 0xb5, 0xb7, 0xdc, 0x0e, 0xbe, 0xed, 0xc7, 0x61, 0xdf,
	0xa1, 0x95, 0x4b, 0x96, 0x34, 0xf4, 0x0e, 0x4c, 0xb5, 0x70, 0xd4, 0x0c, 0xbd, 0x6e, 0xec, 0x05,
	0x7e, 0xad, 0x42, 0x9b, 0x7a, 0x79, 0xb0, 0xa6, 0x6e, 0x25, 0x15, 0x59, 0x8b, 0x2a, 0x28, 0x84,
	0x61, 0xbe, 0x1d, 0xf8, 0x87, 0x0d, 0x15, 0xfc, 0x28, 0x05, 0xff, 0xea, 0x60, 0xe0, 0xdf, 0x0c,
	0xfc, 0xc3, 0x4c, 0x13, 0x73, 0x6d, 0x3d, 0x55, 0x2c, 0xe2, 0x63, 0xc9, 0x22, 0x7e, 0x8d, 0x2c,
	0x24, 0x27, 0x38, 0xa4, 0x62, 0x65, 0xea, 0x46, 0x4d, 0xca, 0xe5, 0xed, 0x8e, 0x4b, 0x16, 0xd7,
	0x76, 0x1b, 0x37, 0x49, 0x55, 0x87, 0x15, 0x23, 0x10, 0x7a, 0x61, 0xbb, 0x36, 0xc1, 0x20, 0xf4,
	0xc2, 0x36, 0xba, 0x0a, 0xf3, 0x2d, 0x7c, 0xe0, 0xf6, 0xda, 0x71, 0xa3, 0xd9, 0x0b, 0x43, 0xec,
	0x37, 0xfb, 0xb5, 0x2a, 0xcd, 0x9e, 0xe3, 0xe9, 0x5b, 0x3c, 0x39, 0xcd, 0x9a, 0x93, 0x19, 0xd6,
	0x9c, 0x85, 0x11, 0xaf, 0x55, 0x03, 0x9a, 0x3e, 0xe2, 0xb5, 0x08, 0xcb, 0x05, 0xfb, 0x84, 0xf8,
	0xb5, 0x29, 0x9a, 0xc6, 0xbf, 0xd0, 0x7d, 0xa8, 0x76, 0x70, 0xec, 0xb6, 0xdc, 0xd8, 0xad, 0x4d,
	0x53, 0x32, 0xbd, 0x30, 0x18, 0x99, 0xee, 0xf1, 0x5a, 0x8c, 0x3e, 0x12, 0x08, 0xfa, 0x08, 0x4c,
	0x8a, 0x09, 0x10, 0xd5, 0x66, 0x28, 0xc4, 0x45, 0x06, 0x51, 0x4c, 0xc2, 0x9d, 0xd0, 0x6b, 0x62,
	0x27, 0x29, 0x85, 0x6a, 0x84, 0x81, 0xbd, 0xa6, 0xe7, 0x1f, 0xd6, 0x66, 0x99, 0x48, 0xe6, 0x9f,
	0xf5, 0x8f, 0xc2, 0xa4, 0x64, 0x2c, 0x42, 0x30, 0xb2, 0xec, 0x71, 0xbd, 0xe9, 0x18, 0xf7, 0xc9,
	0xda, 0x7d, 0xe2, 0xb6, 0x7b, 0x98, 0xf3, 0x17, 0xfb, 0x78, 0x75, 0xe4, 0x15, 0xab, 0xfe, 0x49,
	0x98, 0x4f, 0x8f, 0xe1, 0xa9, 0xea, 0xdf, 0x84, 0x25, 0x13, 0x1f, 0x9c, 0x0a, 0xc6, 0xc7, 0x60,
	0x46, 0x23, 0xd2, 0x69, 0x2a, 0xdb, 0x4d, 0xa8, 0x3f, 0xf0, 0x77, 0x7a, 0xfb, 0x6d, 0x2f, 0x3a,
	0xca, 0x4e, 0xd1, 0x47, 0x23, 0xbf, 0x6c, 0x17, 0x6a, 0xc3, 0x6e, 0xe2, 0x16, 0x2c, 0xbd, 0xe9,
	0x45, 0x72, 0x25, 0x88, 0x04, 0xf8, 0x25, 0x18, 0x6b, 0x7b, 0x1d, 0x2f, 0xe6, 0x12, 0x90, 0x7d,
	0x50, 0x2e, 0x3d, 0x38, 0x88, 0x70, 0x4c, 0x21, 0x8d, 0x39, 0xfc, 0xcb, 0xfe, 0x8f, 0x16, 0x9c,
	0x4d, 0x81, 0x19, 0x96, 0x32, 0xc8, 0xb0, 0xaa, 0x98, 0xb1, 0x1a, 0x55, 0xb1, 0x4a, 0x54, 0xc7,
	0x31, 0x45, 0x75, 0x44, 0xcf, 0xaa, 0x13, 0x60, 0x9c, 0x4e, 0x80, 0x59, 0x7d, 0x02, 0x28, 0xbc,
	0x6f, 0xff, 0x27, 0x0b, 0x56, 0x48, 0xcf, 0x92, 0x01, 0x78, 0x2c, 0x7d, 0xab, 0x98, 0xfb, 0x56,
	0x31, 0xf7, 0xad, 0x92, 0xf4, 0xad, 0xca, 0x19, 0x42, 0x74, 0x2d, 0xbb, 0xd6, 0xc8, 0x12, 0xf6,
	0xbf, 0xb6, 0x60, 0x39, 0xd3, 0x37, 0xa9, 0x9c, 0xf0, 0x35, 0x86, 0x30, 0x0c, 0x5b, 0x32, 0xb8,
	0x48, 0x1d, 0x49, 0x44, 0xea, 0xe9, 0x50, 0x4e, 0xf1, 0xe2, 0x58, 0x46, 0x26, 0xea, 0x6b, 0xd2,
	0x78, 0x7a, 0x4d, 0xaa, 0xc1, 0x04, 0xf6, 0xdd, 0xfd, 0x36, 0x6e, 0x71, 0xa1, 0x2c, 0x3e, 0xed,
	0xff, 0x6c, 0xc1, 0xd2, 0x8e, 0xdb, 0xef, 0x60, 0x3f, 0x66, 0x62, 0x51, 0x74, 0xe3, 0x15, 0x18,
	0xa5, 0x92, 0x93, 0x2d, 0x95, 0x4f, 0xf0, 0x61, 0x36, 0x94, 0xbc, 0x76, 0x4b, 0x8a, 0x4a, 0x5a,
	0x83, 0xca, 0xe7, 0x2e, 0xd7, 0x18, 0x46, 0xbc, 0x2e, 0x7a, 0x0a, 0xe6, 0xdc, 0x66, 0x13, 0x77,
	0xe3, 0x46, 0xdb, 0xf5, 0x0f, 0x7b, 0x64, 0x6c, 0x99, 0x5a, 0x35, 0xcb, 0x92, 0xdf, 0xe4, 0xa9,
	0xa4, 0x13, 0xbd, 0x08, 0x87, 0x0d, 0xf7, 0x10, 0xf3, 0xd1, 0x99, 0x74, 0x26, 0x49, 0xca, 0x26,
	0x49, 0x20, 0x12, 0xf3, 0xd6, 0x43, 0x09, 0x9c, 0x3f, 0xb6, 0xe0, 0x6c, 0x0a, 0xf3, 0xa1, 0xb0,
	0xe1, 0x45, 0x98, 0x0e, 0x71, 0xcb, 0x0b, 0xc9, 0x28, 0x90, 0xf5, 0x8f, 0x91, 0x60, 0x4a, 0xa4,
	0x3d, 0x08, 0xdb, 0xe8, 0x12, 0xcc, 0xf8, 0x18, 0xb7, 0x1a, 0x22, 0x8d, 0x52, 0xa2, 0xea, 0x4c,
	0x93, 0x44, 0x87, 0xa7, 0xd9, 0xff, 0xbc, 0x02, 0x75, 0x8e, 0xef, 0x9d, 0x20, 0xec, 0xbc, 0x1e,
	0x05, 0x3e, 0xe9, 0xf8, 0x00, 0xfb, 0x62, 0xd2, 0x9f, 0xe6, 0x11, 0xee, 0x08, 0x22, 0xf0, 0x2f,
	0xc2, 0x93, 0x47, 0x41, 0x14, 0x73, 0x8c, 0xe8, 0x6f, 0x52, 0xb6, 0x1d, 0x34, 0xdd, 0xb6, 0x18,
	0x0d, 0xfe, 0xc5, 0x87, 0x6f, 0x4c, 0x0e, 0x9f, 0x3e, 0x2a, 0xe3, 0xa9, 0x51, 0x21, 0x60, 0x9a,
	0x41, 0x70, 0xec, 0x61, 0xce, 0x59, 0xfc, 0x8b, 0xb0, 0x5c, 0x88, 0x0f, 0x70, 0x88, 0x43, 0xbe,
	0xd0, 0x8b, 0x4f, 0xc2, 0xcc, 0x5e, 0xd4, 0xc0, 0x9d, 0x7d, 0xdc, 0x6a, 0x61, 0xb6, 0xc0, 0x57,
	0x1d, 0xf0, 0xa2, 0xdb, 0x3c, 0x85, 0x28, 0x0b, 0x5e, 0x14, 0xf5, 0x70, 0xd8, 0x60, 0x55, 0xfc,
	0x26, 0xe6, 0xcb, 0xfd, 0x1c, 0x4b, 0x77, 0x44, 0x32, 0xba, 0x01, 0x67, 0xd3, 0x45, 0x1b, 0x71,
	0xbf, 0x8b, 0xb9, 0x2a, 0xb0, 0x98, 0x2a, 0xbf, 0xd7, 0xef, 0x32, 0x36, 0x8b, 0x3b, 0x8d, 0x28,
	0xe8, 0x85, 0x4d, 0x5c, 0x9b, 0xe6, 0x1d, 0x8a, 0x3b, 0xbb, 0x34, 0x41, 0x64, 0x77, 0x70, 0xcb,
	0xeb, 0x75, 0x6a, 0x33, 0x32, 0xfb, 0x1e, 0x4d, 0x20, 0x83, 0x4c, 0xb2, 0x9b, 0x6e, 0xa7, 0xeb,
	0x7a, 0x87, 0x3e, 0x5f, 0xd6, 0xa7, 0x7a, 0x71, 0x67, 0x8b, 0x27, 0xd9, 0x5f, 0x33, 0x0e, 0x1f,
	0x37, 0x95, 0x18, 0xe5, 0xc3, 0x79, 0x98, 0xea, 0x85, 0xed, 0x46, 0xd4, 0x6b, 0x92, 0xed, 0x91,
	0x58, 0x6b, 0x7a, 0x61, 0x7b, 0x97, 0xa5, 0x90, 0x31, 0x27, 0x05, 0x0e, 0x5c, 0x4f, 0xb0, 0xd5,
	0x44, 0x2f, 0x6c, 0xdf, 0x71, 0xbd, 0x36, 0x57, 0x87, 0x46, 0x85, 0x3a, 0x64, 0xff, 0xc3, 0x2a,
	0x2c, 0x1a, 0x9a, 0xe7, 0xe5, 0x2c, 0xa9, 0x36, 0xd5, 0x60, 0xc2, 0x6d, 0x32, 0x41, 0xc8, 0xda,
	0x13, 0x9f, 0x68, 0x05, 0x26, 0x8e, 0xdc, 0xa8, 0x71, 0xe2, 0x32, 0x86, 0xa9, 0x3a, 0xe3, 0x47,
	0x6e, 0xf4, 0xb6, 0x4b, 0xcd, 0x3b, 0x24, 0x91, 0xb4, 0x65, 0x39, 0xe4, 0x27, 0x19, 0x7d, 0xb7,
	0x23, 0x85, 0xa9, 0xe5, 0xf0, 0x2f, 0x42, 0x25, 0xb6, 0xbd, 0xe3, 0xb9, 0xe3, 0x34, 0x97, 0x6d,
	0xf9, 0x36, 0x59, 0x91, 0x3a, 0x54, 0xa5, 0x2a, 0xc8, 0x58, 0x47, 0x7e, 0xa3, 0x57, 0xa9, 0xde,
	0x4f, 0x75, 0xba, 0x2a, 0x9d, 0x7f, 0x17, 0x34, 0xf9, 0x63, 0x20, 0xab, 0x23, 0x2a, 0xa0, 0xd7,
	0x61, 0xae, 0xcb, 0x8a, 0x35, 0x3a, 0x38, 0x3e, 0x0a, 0x5a, 0x51, 0x6d, 0x92, 0xca, 0xb0, 0x8b,
	0x52, 0x6d, 0x55, 0xc0, 0xf0, 0x9f, 0xf7, 0x68, 0x49, 0x67, 0xb6, 0xab, 0x7e, 0x46, 0x44, 0xa6,
	0xc4, 0xc1, 0x31, 0xf6, 0x39, 0x3b, 0xb1, 0x0f, 0xf4, 0x31, 0xa8, 0xb3, 0x19, 0xd1, 0x6a, 0x85,
	0x38, 0x8a, 0x1a, 0x44, 0xea, 0x35, 0x42, 0xfc, 0xa5, 0x9e, 0x17, 0xe2, 0x16, 0x65, 0xa8, 0xaa,
	0xb3, 0x42, 0x67, 0x08, 0x2b, 0x20, 0x26, 0x2f, 0xc9, 0x46, 0x2f, 0xc1, 0x34, 0xad, 0xec, 0x75,
	0x69, 0x3d, 0xca, 0x60, 0x44, 0x8f, 0x14, 0xb8, 0x3d, 0x88, 0x70, 0xb8, 0xdd, 0xa5, 0x55, 0xe8,
	0xbc, 0x63, 0xbf, 0xd1, 0x15, 0x18, 0xf3, 0x62, 0xdc, 0x89, 0x6a, 0xb3, 0xb4, 0x2f, 0x48, 0xb7,
	0x2f, 0x6d, 0xc7, 0xb8, 0xe3, 0xb0, 0x02, 0x04, 0x67, 0xdc, 0x21, 0x7c, 0x32, 0xcf, 0x70, 0xa6,
	0x1f, 0xe8, 0x82, 0xbe, 0x2b, 0x59, 0x60, 0x5c, 0xab, 0xee, 0x2e, 0x5e, 0x81, 0x1a, 0x1d, 0xfe,
	0xb0, 0xdf, 0xe0, 0x54, 0x88, 0x1a, 0x6e, 0xbb, 0x1d, 0xbc, 0x8f, 0x5b, 0x35, 0x44, 0xfb, 0xb4,
	0xcc, 0xf3, 0x39, 0xcd, 0xa2, 0x4d, 0x96, 0x8b, 0x5e, 0x04, 0x91, 0xd3, 0x68, 0x52, 0x73, 0x9b,
	0xac, 0xb7, 0x48, 0xeb, 0x2d, 0xf1, 0x5c, 0x66, 0x8b, 0x13, 0xb5, 0x34, 0x65, 0x62, 0xa9, 0x44,
	0x99, 0x20, 0xb3, 0x86, 0xac, 0x1e, 0xb5, 0xb3, 0x6c, 0xd6, 0x90, 0xdf, 0xe8, 0x79, 0x58, 0xf2,
	0x08, 0x8e, 0x21, 0x76, 0x5b, 0x7d, 0xc5, 0xe0, 0xb0, 0x4c, 0x5b, 0x45, 0x5e, 0xb4, 0xc9, 0xb2,
	0x34, 0xab, 0x43, 0x88, 0x9b, 0xd8, 0xeb, 0x32, 0x01, 0xbd, 0xc2, 0xe6, 0x19, 0x4f, 0x22, 0xf2,
	0x19, 0xc1, 0x28, 0x15, 0x1f, 0x35, 0xd6, 0x0c, 0xf9, 0x4d, 0xd6, 0xaf, 0xe6, 0x91, 0x1b, 0x1e,
	0xe2, 0x64, 0xeb, 0xb2, 0xca, 0xd6, 0x2f, 0x96, 0x2c, 0x77, 0x2e, 0x97, 0x60, 0x86, 0x17, 0xe4,
	0x5c, 0x5f, 0xa7, 0x5c, 0x3f, 0xcd, 0x12, 0x39, 0xdb, 0xbf, 0x00, 0xcb, 0x27, 0x6e, 0xdc, 0xf0,
	0xfc, 0x46, 0x1a, 0xe8, 0x1a, 0x2d, 0xbd, 0x78, 0xe2, 0xc6, 0xdb, 0xfe, 0x96, 0x0e, 0x79, 0x15,
	0xaa, 0xa4, 0x52, 0xe8, 0xc6, 0xb8, 0xb6, 0x4e, 0x8b, 0x4d, 0x9c, 0xb8, 0xb1, 0xe3, 0xc6, 0x18,
	0xad, 0xc1, 0x24, 0xc9, 0xea, 0xba, 0x7d, 0x1c, 0xd6, 0x36, 0xd8, 0x3c, 0x3a, 0x71, 0xe3, 0x1d,
	0xf2, 0x4d, 0x30, 0xf2, 0x22, 0xa1, 0xe8, 0x92, 0x71, 0x3f, 0xc7, 0x96, 0x1b, 0x2f, 0xda, 0x91,
	0x69, 0xf6, 0x9f, 0x59, 0xb0, 0x66, 0x5c, 0x6e, 0x86, 0xb2, 0x48, 0x3e, 0x07, 0xa3, 0x84, 0x4f,
	0xf9, 0x7e, 0x7e, 0x35, 0x77, 0x5e, 0x3b, 0xb4, 0x98, 0xb2, 0xbc, 0x8c, 0xaa, 0xcb, 0x8b, 0xed,
	0x49, 0xb5, 0xe5, 0xad, 0x20, 0xf6, 0x0e, 0xfa, 0x03, 0x2c, 0x8e, 0x74, 0x45, 0xa2, 0xa5, 0x28,
	0xbe, 0xd3, 0x8e, 0xf8, 0x44, 0xeb, 0x30, 0x19, 0x79, 0x87, 0xbe, 0x1b, 0xf7, 0x42, 0xcc, 0xc5,
	0x6b, 0x92, 0x60, 0xdf, 0x96, 0xda, 0x83, 0x68, 0xaa, 0x84, 0x30, 0x64, 0x06, 0x92, 0xbe, 0x0b,
	0x4d, 0x84, 0x7e, 0xd8, 0x7f, 0x6d, 0xc1, 0xc2, 0x7d, 0x7f, 0x3f, 0x70, 0xc3, 0x96, 0xe7, 0x1f,
	0x0a, 0x7c, 0xd3, 0x52, 0xf9, 0x2a, 0x8c, 0x92, 0x59, 0xcf, 0x29, 0x7a, 0x56, 0x4e, 0xf3, 0x7b,
	0x5c, 0xd7, 0x23, 0xe2, 0xc1, 0xa1, 0x45, 0xd0, 0xcb, 0x30, 0xd1, 0x0c, 0x3a, 0x5d, 0xd7, 0x17,
	0xf6, 0xd2, 0xf5, 0x4c, 0xe9, 0x2d, 0x96, 0xbf, 0xed, 0x1f, 0x04, 0x8e, 0x28, 0x8c, 0x5e, 0x84,
	0x6a, 0x33, 0xf0, 0x63, 0x97, 0x68, 0xba, 0xb3, 0xa9, 0x0d, 0x7d, 0x52, 0x91, 0x16, 0x70, 0x64,
	0x49, 0x74, 0x03, 0x26, 0xf6, 0x5d, 0xff, 0x98, 0xec, 0x64, 0xe7, 0x72, 0x2a, 0xdd, 0x64, 0xf9,
	0x8e, 0x28, 0x68, 0x5f, 0x84, 0xb9, 0x3b, 0x9e, 0xdf, 0xba, 0xd9, 0xdf, 0x6e, 0xe5, 0xf4, 0xd7,
	0xfe, 0xbd, 0x51, 0x58, 0x16, 0xf5, 0x89, 0x42, 0xad, 0x90, 0xc6, 0xb4, 0x50, 0xae, 0xc1, 0xa4,
	0x17, 0x35, 0xc8, 0xd8, 0xe0, 0x16, 0xdf, 0x48, 0x55, 0xbd, 0x68, 0x97, 0x7e, 0xa3, 0x8f, 0xc0,
	0xd9, 0xb6, 0x1b, 0xd1, 0xb9, 0x10, 0xf4, 0x62, 0x22, 0x5e, 0x71, 0xe3, 0x20, 0x0c, 0x3a, 0x5c,
	0xc7, 0x46, 0x24, 0x73, 0x87, 0xe6, 0xdd, 0x72, 0x63, 0x7c, 0x27, 0x0c, 0x3a, 0xe8, 0x39, 0x58,
	0xcc, 0x54, 0x89, 0x03, 0xae, 0x7d, 0xcf, 0xeb, 0x15, 0xf6, 0x02, 0xf4, 0x2c, 0x20, 0xb5, 0xb8,
	0xb6, 0xf4, 0x29, 0xa5, 0xf9, 0x54, 0x47, 0x30, 0x1a, 0x05, 0x61, 0x4c, 0xb7, 0x13, 0x93, 0x0e,
	0xfd, 0x9d, 0xe8, 0xfd, 0x13, 0x66, 0xbd, 0xbf, 0xaa, 0xe9, 0xfd, 0x17, 0x61, 0xfa, 0x4b, 0x3d,
	0xaf, 0x79, 0xdc, 0x88, 0xb0, 0x1b, 0x36, 0x8f, 0xb8, 0x31, 0x64, 0x8a, 0xa6, 0xed, 0xd2, 0x24,
	0xb2, 0x8c, 0x32, 0xb6, 0xc3, 0x51, 0x0d, 0x2e, 0x54, 0x08, 0x41, 0xc4, 0x37, 0x11, 0xcc, 0x21,
	0x3e, 0xf4, 0xa2, 0x38, 0x74, 0xc9, 0x4c, 0x57, 0x28, 0x32, 0x45, 0x9b, 0x59, 0x52, 0x73, 0x25,
	0x4d, 0x9e, 0x87, 0xa5, 0x6c, 0xad, 0x38, 0xa0, 0x0b, 0x5b, 0xc5, 0x41, 0xe9, 0x3a, 0x8c, 0x2c,
	0x54, 0x86, 0x9e, 0xe0, 0x96, 0xd2, 0xc6, 0x0c, 0x23, 0xa2, 0xc8, 0x91, 0xf0, 0xaf, 0xc0, 0xbc,
	0x5e, 0x3a, 0x0e, 0x28, 0x1f, 0x56, 0x9c, 0x59, 0xb5, 0xec, 0x5e, 0x60, 0xbf, 0x03, 0x2b, 0x19,
	0xde, 0xe0, 0x73, 0x4f, 0x6e, 0xe2, 0x2c, 0x75, 0x13, 0xf7, 0x94, 0x58, 0x25, 0x47, 0xe8, 0x7a,
	0xb2, 0x90, 0x61, 0x51, 0xbe, 0x48, 0xda, 0xbf, 0x66, 0xc1, 0x9a, 0xe4, 0x75, 0xba, 0x2c, 0xb1,
	0xf3, 0x32, 0xc1, 0x7b, 0xa9, 0x0d, 0x97, 0x95, 0xd9, 0x70, 0xad, 0xc0, 0x04, 0x5b, 0xc6, 0x85,
	0x65, 0x60, 0x9c, 0x2e, 0xd6, 0x2d, 0x45, 0x28, 0x54, 0x34, 0xa1, 0x50, 0x4b, 0xa4, 0x25, 0x93,
	0x64, 0xf2, 0x50, 0xed, 0x1b, 0xb0, 0x48, 0x05, 0x8b, 0xd7, 0xa4, 0x34, 0xfd, 0xe0, 0x28, 0x10,
	0xad, 0xc5, 0x8b, 0xdb, 0x42, 0x94, 0xb1, 0x8f, 0x02, 0x04, 0x1c, 0x98, 0x51, 0x11, 0x88, 0x72,
	0x88, 0xfb, 0x8c, 0x4e, 0xdc, 0x44, 0x36, 0x69, 0xd8, 0x73, 0x02, 0xff, 0x23, 0x0b, 0xea, 0x7c,
	0xcc, 0x1e, 0x6d, 0xe7, 0xb8, 0x04, 0xe8, 0x47, 0x62, 0x11, 0x61, 0x12, 0x80, 0x7e, 0x27, 0xb3,
	0x6b, 0xd4, 0x3c, 0xbb, 0xc6, 0xb4, 0xd9, 0x65, 0x98, 0x9f, 0xf6, 0x21, 0xac, 0x73, 0xb4, 0x05,
	0x7b, 0x68, 0x1a, 0x22, 0xba, 0x9b, 0xd5, 0x2e, 0xd9, 0x0e, 0xf9, 0x5c, 0x86, 0xd7, 0x0a, 0x55,
	0x4b, 0xdb, 0x87, 0xf3, 0x77, 0x71, 0x6c, 0x2e, 0x3b, 0x28, 0x91, 0x9e, 0x86, 0x05, 0x1d, 0x99,
	0x84, 0x5c, 0x73, 0x5a, 0x73, 0xdb, 0x2d, 0xfb, 0x0f, 0x2c, 0xb8, 0x90, 0xdf, 0xe0, 0x50, 0x96,
	0xfa, 0x1b, 0xda, 0x52, 0x5f, 0x46, 0x20, 0x5a, 0xd6, 0xfe, 0x55, 0x0b, 0x2e, 0x92, 0x01, 0x30,
	0x96, 0x19, 0x7c, 0x7a, 0x5e, 0x83, 0xc5, 0x14, 0x65, 0xe8, 0x52, 0xc2, 0x68, 0xb3, 0xa0, 0xd1,
	0xe6, 0x2d, 0x97, 0x6d, 0x90, 0x29, 0x2b, 0x54, 0x14, 0x56, 0xf8, 0x2f, 0x23, 0xb0, 0x7e, 0x9a,
	0xf1, 0xc9, 0x1e, 0xa2, 0xec, 0xc2, 0xac, 0x8e, 0x05, 0x27, 0xc5, 0xb3, 0xc5, 0xa4, 0xd8, 0x6e,
	0x61, 0x5f, 0x99, 0x32, 0x33, 0x1a, 0xba, 0x68, 0x1b, 0xa0, 0x19, 0x74, 0x3a, 0x5e, 0x14, 0x31,
	0xfb, 0x3f, 0x01, 0x78, 0xb5, 0x18, 0xe0, 0x96, 0x2c, 0x1f, 0x39, 0x4a, 0x65, 0xf4, 0x06, 0x4c,
	0x79, 0x7e, 0x8c, 0x0f, 0x99, 0x30, 0xa7, 0xb3, 0xa3, 0x14, 0xd6, 0x76, 0x52, 0xc1, 0x51, 0x6b,
	0xf3, 0x89, 0xe9, 0x36, 0x63, 0xef, 0x04, 0xd3, 0xfd, 0x5e, 0x95, 0x4c, 0xcc, 0x4d, 0xfa, 0xad,
	0x4e, 0xe7, 0x09, 0x75, 0x3a, 0xdb, 0x7f, 0xc7, 0x82, 0x8d, 0xff, 0xd3, 0x79, 0xf2, 0xff, 0xb7,
	0x60, 0x51, 0x99, 0x3a, 0x43, 0x3b, 0x38, 0x55, 0x31, 0x33, 0x2c, 0x5d, 0x0c, 0x99, 0x7d, 0x58,
	0xbe, 0x8b, 0xe3, 0x87, 0x92, 0xa9, 0x4f, 0xc1, 0x9c, 0xaf, 0xd4, 0x4b, 0x78, 0x76, 0x56, 0x4d,
	0xde, 0x6e, 0xd9, 0xff, 0xca, 0x82, 0x45, 0x61, 0x29, 0x3b, 0xe8, 0xf9, 0xad, 0xc1, 0x2c, 0x4f,
	0x5c, 0x1b, 0x1a, 0xd1, 0x0c, 0x01, 0x1b, 0x00, 0x4d, 0x02, 0x29, 0x08, 0x93, 0x63, 0xc4, 0x49,
	0x9e, 0xc2, 0xaa, 0x85, 0xd8, 0x8d, 0x38, 0x23, 0x4f, 0x3a, 0xfc, 0x8b, 0x6f, 0x5c, 0xd8, 0x0e,
	0x69, 0xdf, 0x6d, 0x1e, 0x53, 0xde, 0xa4, 0x1b, 0x97, 0x2d, 0x99, 0x96, 0xee, 0xf0, 0x78, 0xc6,
	0x42, 0xff, 0x6b, 0x16, 0x2c, 0xe9, 0xfd, 0x18, 0xca, 0xc8, 0x5d, 0xd2, 0x46, 0x6e, 0x4e, 0x8e,
	0x1c, 0x6f, 0x94, 0x8d, 0xdb, 0xd7, 0x01, 0x11, 0xb9, 0xc6, 0xd2, 0xa2, 0x01, 0x28, 0x5a, 0x2a,
	0x5d, 0x4e, 0xa5, 0x4a, 0xda, 0x0e, 0x2c, 0x6a, 0xed, 0x17, 0xea, 0x51, 0x97, 0xf5, 0xa5, 0x3e,
	0xd3, 0x25, 0xbe, 0xc8, 0x1f, 0xc3, 0xfc, 0x5d, 0x1c, 0x0f, 0xcc, 0x23, 0x6b, 0x30, 0x19, 0xd2,
	0xb2, 0x49, 0x7f, 0xaa, 0x2c, 0x61, 0x80, 0x93, 0x79, 0xfb, 0xf3, 0x30, 0xb7, 0xe5, 0xb6, 0xdb,
	0x64, 0xe4, 0x45, 0x5b, 0x35, 0x98, 0x38, 0x72, 0xfd, 0x56, 0x1b, 0x87, 0xa2, 0x29, 0xfe, 0x49,
	0xe4, 0xf9, 0x7e, 0xd0, 0xea, 0xf3, 0x8d, 0x1e, 0xfd, 0x5d, 0xb2, 0xcb, 0x3b, 0x82, 0x0d, 0x65,
	0x17, 0x4a, 0x76, 0xa0, 0x4c, 0x2f, 0x1c, 0xa4, 0x63, 0xc2, 0x38, 0x31, 0xa2, 0x18, 0x27, 0x14,
	0xf3, 0x5a, 0x45, 0x33, 0xaf, 0xd9, 0x9f, 0x87, 0x27, 0x94, 0x96, 0xc8, 0x86, 0x8e, 0xb5, 0x94,
	0x3e, 0xc9, 0x2f, 0x68, 0xb0, 0x0e, 0x55, 0x61, 0x1a, 0x11, 0x84, 0x14, 0xdf, 0xf6, 0x1f, 0x59,
	0x70, 0xc1, 0x08, 0xff, 0x4d, 0x37, 0xd9, 0x5b, 0x9d, 0xb2, 0x33, 0x43, 0x32, 0xe9, 0xdb, 0xff,
	0xc1, 0x82, 0xa7, 0xcd, 0xb4, 0x60, 0x89, 0x9b, 0x8c, 0x64, 0x83, 0xf1, 0x56, 0x5a, 0x05, 0xaa,
	0x76, 0xf8, 0x6a, 0x9a, 0x3f, 0x16, 0xbc, 0x63, 0xa3, 0x45, 0x1d, 0x1b, 0x1b, 0xa0, 0x63, 0x69,
	0xab, 0xb8, 0xfd, 0xc7, 0x56, 0x0e, 0x3b, 0x0d, 0x49, 0x04, 0x7d, 0x52, 0x13, 0x41, 0x4f, 0x9b,
	0x2c, 0x9d, 0x59, 0x1c, 0xa8, 0xd5, 0x90, 0x49, 0xa7, 0x6f, 0x5b, 0xb0, 0xce, 0xcd, 0x64, 0x37,
	0x59, 0x55, 0x6e, 0xbb, 0x1c, 0xcc, 0xae, 0xc2, 0x0d, 0x7c, 0xc2, 0x90, 0xcc, 0x3f, 0xd1, 0x3c,
	0x54, 0xbe, 0x22, 0xc9, 0x4b, 0x7e, 0x66, 0x0e, 0x17, 0x12, 0xf3, 0xce, 0xb8, 0x66, 0xde, 0xf9,
	0xbb, 0x15, 0xb8, 0x98, 0x83, 0x4f, 0x82, 0xbb, 0x6a, 0xa8, 0x1e, 0x31, 0x19, 0xaa, 0x2b, 0x26,
	0x43, 0xf5, 0x68, 0xa1, 0xa1, 0x7a, 0xac, 0xd8, 0x50, 0x3d, 0x9e, 0x32, 0x54, 0x4b, 0xb3, 0xec,
	0x44, 0x99, 0x59, 0xd6, 0x60, 0x45, 0xac, 0x0e, 0x66, 0x45, 0x9c, 0x3c, 0x95, 0x15, 0x11, 0xf2,
	0xad, 0x88, 0xf9, 0x76, 0xda, 0xa9, 0x02, 0x3b, 0xad, 0x6a, 0x7b, 0x9c, 0xd6, 0x6c, 0x8f, 0xf6,
	0x5f, 0x10, 0x2e, 0x2f, 0x1a, 0xa5, 0x47, 0xcc, 0xe5, 0x1f, 0xd3, 0xb8, 0xfc, 0x29, 0x6e, 0x3b,
	0x2c, 0x63, 0x93, 0x12, 0x4b, 0xe2, 0x0e, 0x2c, 0x29, 0xca, 0xdd, 0xcd, 0xfe, 0x07, 0xde, 0xa2,
	0xda, 0x3f, 0x92, 0x7e, 0xa7, 0x02, 0xaa, 0x7a, 0x7c, 0x57, 0x0a, 0xf7, 0x45, 0x58, 0x26, 0x5c,
	0x2d, 0x0b, 0xe9, 0x8b, 0x56, 0xd5, 0x59, 0x3a, 0x72, 0x23, 0x01, 0x78, 0x57, 0xe4, 0x91, 0xbd,
	0x20, 0xa9, 0xd5, 0x8d, 0xba, 0x4a, 0x05, 0x76, 0xba, 0x38, 0x77, 0xe4, 0x46, 0x3b, 0x51, 0x57,
	0x96, 0xb5, 0x7f, 0xcb, 0x82, 0xba, 0x09, 0xc1, 0x0f, 0x53, 0xaf, 0xfd, 0xb6, 0x05, 0xcb, 0x3a,
	0x4e, 0x1f, 0x2e, 0x3e, 0xbf, 0x63, 0xc1, 0xba, 0x8e, 0x8f, 0xb0, 0x10, 0x7d, 0x98, 0x58, 0x7d,
	0x8f, 0x8c, 0x1c, 0xd5, 0x68, 0xf5, 0x1d, 0xc0, 0x50, 0x70, 0xba, 0xaa, 0xe1, 0x94, 0x63, 0xef,
	0x61, 0x78, 0x7d, 0xc7, 0x82, 0x3a, 0x15, 0x79, 0x0c, 0x39, 0x3e, 0x27, 0x87, 0x84, 0x97, 0xad,
	0xe1, 0x95, 0x76, 0xb5, 0x66, 0x08, 0xb5, 0x61, 0x63, 0x37, 0x99, 0xd5, 0xbb, 0x2f, 0x6c, 0x1e,
	0x86, 0x18, 0x93, 0xa5, 0xf0, 0x34, 0xc6, 0x95, 0xe8, 0x85, 0x86, 0x2b, 0xea, 0xa9, 0x06, 0x84,
	0xb9, 0x28, 0x81, 0xf7, 0x96, 0xdb, 0xc1, 0xf6, 0xff, 0xb0, 0x60, 0x36, 0x71, 0x05, 0xd9, 0xf6,
	0x0f, 0x82, 0x8c, 0x61, 0xbf, 0xc4, 0x6b, 0x50, 0x18, 0xbb, 0x2b, 0x8a, 0xb1, 0x3b, 0x75, 0x66,
	0x37, 0x9a, 0x3d, 0xb3, 0xbb, 0x6a, 0xf0, 0x08, 0x64, 0x8b, 0x6b, 0xc6, 0xab, 0x6f, 0x19, 0xc6,
	0xbd, 0x8e, 0x7b, 0x88, 0x23, 0x6e, 0xee, 0xe2, 0x5f, 0xe8, 0x25, 0xf5, 0x18, 0x8e, 0xad, 0x62,
	0x2b, 0x06, 0xa7, 0x36, 0x7a, 0x84, 0xa0, 0x38, 0xf7, 0x60, 0x58, 0xc8, 0xe4, 0x67, 0xfa, 0x2c,
	0x3a, 0x35, 0xa2, 0x74, 0xea, 0x59, 0x18, 0xeb, 0x92, 0x0a, 0x7c, 0xf4, 0x96, 0xa5, 0x10, 0x27,
	0x94, 0x4b, 0x9a, 0x62, 0x85, 0xec, 0x6f, 0xc0, 0x7c, 0x3a, 0x4b, 0x59, 0xca, 0x2d, 0x6d, 0x29,
	0x57, 0xd7, 0xe9, 0x91, 0xd4, 0x3a, 0x4d, 0xf7, 0x99, 0x87, 0xcc, 0x1f, 0x93, 0xef, 0x33, 0xc9,
	0x17, 0xf7, 0x45, 0x38, 0xe0, 0xfb, 0x0a, 0x2e, 0x2f, 0xc1, 0x8b, 0xee, 0xf0, 0x14, 0xfb, 0x0f,
	0xab, 0x00, 0xc9, 0xc8, 0x66, 0x7a, 0x58, 0xba, 0x49, 0xd3, 0x87, 0xbd, 0x92, 0x1e, 0xf6, 0xc4,
	0x77, 0x71, 0x54, 0xf3, 0x5d, 0x34, 0xf9, 0x60, 0x32, 0x5a, 0x32, 0xdf, 0xa4, 0x7a, 0xda, 0x37,
	0x29, 0xe3, 0xa5, 0x6a, 0xf2, 0xb8, 0x9c, 0x30, 0x7b, 0x5c, 0x2a, 0xde, 0x41, 0x55, 0x4a, 0x00,
	0xf1, 0xa9, 0x7b, 0x3c, 0x4e, 0x0e, 0xe4, 0xf1, 0xb8, 0xa5, 0x33, 0x2d, 0xf0, 0xa3, 0xf7, 0x34,
	0xba, 0xc5, 0x9e, 0xae, 0x3b, 0x06, 0xbe, 0x9e, 0xa2, 0x90, 0x2e, 0x67, 0x20, 0x0d, 0xe6, 0xd4,
	0xfa, 0x0b, 0xdc, 0x0e, 0x81, 0x5b, 0x0d, 0x37, 0xa6, 0x7a, 0x0c, 0x25, 0x22, 0xbd, 0xa7, 0x73,
	0x4d, 0xdc, 0xd3, 0xb9, 0xb6, 0x27, 0xee, 0xe9, 0x70, 0x1b, 0x05, 0x6e, 0x6d, 0xc6, 0xa4, 0x6a,
	0x8f, 0x7a, 0x8a, 0xd2, 0xaa, 0x33, 0xe5, 0x55, 0x79, 0xe9, 0xcd, 0x38, 0x71, 0x9c, 0x9d, 0x3d,
	0x95, 0xe3, 0xec, 0x5c, 0xe2, 0x38, 0xfb, 0xaa, 0xe2, 0xc4, 0x3a, 0xcf, 0x0d, 0xcd, 0x69, 0x0a,
	0xe4, 0xf9, 0xab, 0xd6, 0x60, 0xa2, 0x85, 0xdb, 0x38, 0xc6, 0x2d, 0x7a, 0xde, 0x5f, 0x75, 0xc4,
	0x27, 0xfa, 0x04, 0x4c, 0x77, 0x99, 0x77, 0x24, 0xeb, 0x14, 0x2a, 0xed, 0xd4, 0x94, 0x2c, 0xbf,
	0x19, 0xab, 0x5e, 0xad, 0x8b, 0xff, 0xcf, 0xab, 0x95, 0x39, 0x99, 0xfd, 0xcc, 0x82, 0x19, 0x6d,
	0x52, 0x0c, 0x24, 0x0d, 0x9f, 0x83, 0x71, 0x2a, 0xe8, 0x22, 0xee, 0x27, 0x9e, 0x2c, 0xb2, 0xaa,
	0xd8, 0x73, 0x78, 0x21, 0xa2, 0x8b, 0xe3, 0x5e, 0xdb, 0xa5, 0xce, 0x0b, 0xfc, 0x10, 0x87, 0x7c,
	0x3f, 0x08, 0xdb, 0xe8, 0x32, 0xcc, 0x52, 0xdb, 0x2b, 0x33, 0xed, 0x91, 0x02, 0x4c, 0x78, 0xcc,
	0x24, 0xa9, 0xa4, 0x98, 0xb4, 0xf7, 0x8c, 0xab, 0x77, 0x82, 0xde, 0x81, 0xaa, 0xc0, 0x7d, 0x20,
	0xb4, 0x11, 0x8c, 0x7a, 0x4d, 0x29, 0x4c, 0xe9, 0x6f, 0x02, 0x99, 0xdd, 0x80, 0x62, 0x9e, 0xa4,
	0xfc, 0xc6, 0xd3, 0xff, 0x9c, 0x80, 0x89, 0xc7, 0x2d, 0x3c, 0x85, 0x13, 0xc7, 0x98, 0xe2, 0xc4,
	0xc1, 0x05, 0xea, 0x78, 0x22, 0x50, 0x9f, 0xe1, 0xfd, 0xd2, 0xd7, 0xbc, 0x53, 0x48, 0xd3, 0x6a,
	0xa9, 0x34, 0x9d, 0xd4, 0xa5, 0x69, 0x32, 0xd8, 0x30, 0xc8, 0x60, 0xbf, 0xa6, 0x4b, 0xd2, 0x29,
	0x75, 0xf6, 0x0f, 0x26, 0x46, 0xef, 0x19, 0xc4, 0x28, 0xf3, 0x84, 0xb7, 0x75, 0x30, 0x0f, 0x23,
	0x43, 0x67, 0x1e, 0x5e, 0x86, 0xce, 0x9e, 0x46, 0x86, 0x26, 0x8a, 0xcb, 0x9c, 0xa6, 0xb8, 0x70,
	0x59, 0x39, 0x9f, 0xc8, 0xca, 0x8f, 0x2a, 0xb2, 0x72, 0x81, 0x76, 0x73, 0x4d, 0xef, 0xe6, 0x00,
	0x82, 0x12, 0xe9, 0x82, 0x32, 0x57, 0xd2, 0xa1, 0x8b, 0x30, 0xcd, 0x47, 0x8f, 0x39, 0x1c, 0x2e,
	0x31, 0xed, 0x8c, 0xa7, 0xed, 0xf5, 0xbb, 0xf8, 0xff, 0x62, 0x61, 0xf8, 0x97, 0x16, 0xb3, 0x36,
	0xff, 0xcd, 0xf6, 0x8d, 0xbe, 0xc7, 0x6e, 0x7a, 0xf1, 0x3e, 0xa4, 0x6f, 0x4c, 0xea, 0x60, 0xad,
	0x34, 0xd8, 0x79, 0xa8, 0x78, 0x2d, 0x66, 0x40, 0x9f, 0x74, 0xc8, 0x4f, 0xfb, 0xb7, 0x2d, 0xa8,
	0xb1, 0xbb, 0x94, 0xca, 0x3e, 0x41, 0x31, 0x65, 0x0b, 0x23, 0x9a, 0xa5, 0x1b, 0xd1, 0x06, 0xbb,
	0xd8, 0x56, 0x87, 0xaa, 0xb4, 0x58, 0x32, 0x41, 0x29, 0xbf, 0x35, 0xc5, 0x78, 0x54, 0x57, 0x8c,
	0xed, 0x1f, 0x5b, 0xb0, 0x6a, 0x40, 0x6a, 0x28, 0xfb, 0xb6, 0x97, 0x60, 0x4a, 0xe9, 0x09, 0xdf,
	0x00, 0x2c, 0xa5, 0xd5, 0x19, 0x8a, 0x00, 0x24, 0x9d, 0xb3, 0x77, 0xc4, 0x15, 0xd4, 0x47, 0x36,
	0x12, 0xbf, 0x62, 0xf1, 0xab, 0x1b, 0xe9, 0x6b, 0x09, 0xda, 0xd5, 0x8d, 0x8a, 0xf9, 0xea, 0x86,
	0x76, 0x91, 0x80, 0xda, 0x09, 0x05, 0x9f, 0xd2, 0x0f, 0x74, 0x55, 0xb9, 0x48, 0x30, 0x46, 0xa5,
	0xd0, 0x8c, 0x26, 0x85, 0x94, 0x5b, 0x04, 0x9b, 0x30, 0xcb, 0xfb, 0xf0, 0xb0, 0x4b, 0xa4, 0xfd,
	0x26, 0xac, 0x72, 0x10, 0x09, 0x81, 0xc4, 0xae, 0xf7, 0xf4, 0xd0, 0x2e, 0xc1, 0x42, 0x06, 0x5a,
	0xc6, 0x65, 0xeb, 0x93, 0x80, 0xb6, 0x3f, 0xf2, 0xca, 0x5b, 0x7b, 0xf8, 0xcb, 0x31, 0xf3, 0x41,
	0x22, 0xb3, 0x45, 0x1e, 0x1b, 0x58, 0xca, 0xb1, 0x81, 0x51, 0x40, 0xd8, 0xdf, 0xb2, 0xe0, 0x2c,
	0xb7, 0xf2, 0x8b, 0xdb, 0xe3, 0x43, 0xba, 0x92, 0xad, 0x9a, 0x09, 0xe6, 0xd5, 0xc5, 0x96, 0xb6,
	0xca, 0x0c, 0x05, 0xbb, 0xb0, 0xc0, 0x26, 0xb9, 0x7a, 0x8f, 0xbd, 0xd4, 0x38, 0x50, 0x72, 0xad,
	0xfd, 0x1f, 0x27, 0xf2, 0x8f, 0xa4, 0x0c, 0xee, 0xb7, 0x20, 0x19, 0x70, 0xc4, 0x7c, 0x4b, 0xa7,
	0xa2, 0xdd, 0xd2, 0x49, 0xbb, 0x87, 0x8d, 0x16, 0xbb, 0x87, 0x8d, 0xa5, 0xdc, 0xc3, 0x4c, 0xfe,
	0x2f, 0x7b, 0x72, 0x66, 0x70, 0xc4, 0x0b, 0xcf, 0x09, 0x9f, 0xd4, 0xcf, 0x09, 0xb3, 0x34, 0xe6,
	0x07, 0x85, 0x5f, 0x84, 0xe9, 0xbd, 0xe0, 0x18, 0xcb, 0xa3, 0xea, 0x27, 0xb9, 0x97, 0xa3, 0x45,
	0x87, 0x26, 0xb1, 0x9a, 0xd3, 0x42, 0x8a, 0x8b, 0xe3, 0x0d, 0xa8, 0x46, 0x38, 0x8e, 0x3d, 0xff,
	0x30, 0xe2, 0x23, 0xbf, 0xac, 0x97, 0xdd, 0xe5, 0xb9, 0x8e, 0x2c, 0x67, 0x47, 0x30, 0xc3, 0xdb,
	0x1a, 0xd6, 0x5d, 0x23, 0xe6, 0x12, 0x5e, 0x51, 0x5c, 0xc2, 0xed, 0x13, 0xb8, 0x44, 0x03, 0x23,
	0xe8, 0x7c, 0x24, 0x2d, 0xae, 0xca, 0xfa, 0x47, 0x8f, 0x25, 0xf9, 0x24, 0xa1, 0xc7, 0x92, 0x25,
	0x86, 0xa1, 0xe2, 0x53, 0xcb, 0x18, 0x9e, 0x28, 0x6e, 0x77, 0x18, 0x34, 0xb0, 0x7f, 0x34, 0x0a,
	0x0b, 0x84, 0x4b, 0xa8, 0x14, 0x8e, 0xf2, 0x5c, 0x59, 0x6b, 0x89, 0x13, 0x3f, 0x93, 0xbd, 0xd2,
	0x45, 0xff, 0xb2, 0xc1, 0x2f, 0x86, 0x14, 0x48, 0x79, 0xba, 0x28, 0x6b, 0xe2, 0x28, 0x03, 0x20,
	0xd6, 0xc4, 0xa4, 0x3b, 0x63, 0x4c, 0x27, 0x4c, 0x9c, 0xec, 0xc4, 0x41, 0xdf, 0xb8, 0x7e, 0xd0,
	0x77, 0x01, 0xa6, 0xbb, 0x1d, 0xc5, 0x39, 0x91, 0x9d, 0x99, 0x43, 0xb7, 0x23, 0xdd, 0x12, 0xd7,
	0x01, 0x44, 0x89, 0x38, 0xe0, 0x87, 0xe7, 0x55, 0x96, 0xbf, 0x17, 0x50, 0x57, 0x2b, 0x3e, 0x4a,
	0x09, 0x90, 0x49, 0x5a, 0x68, 0x8e, 0x67, 0x48, 0x48, 0x4f, 0xc2, 0x9c, 0x56, 0x36, 0x0e, 0xe8,
	0xa9, 0x4c, 0xc5, 0x99, 0x51, 0x4a, 0xee, 0x05, 0x99, 0xe9, 0x3b, 0x95, 0x9d, 0xbe, 0x52, 0x1e,
	0x4c, 0x9b, 0x17, 0xa4, 0x19, 0xa3, 0x43, 0xdb, 0xac, 0xe2, 0x70, 0x5a, 0x27, 0x4a, 0x31, 0x93,
	0x2f, 0x5c, 0x81, 0x96, 0xdf, 0x68, 0x0b, 0xce, 0x31, 0xc2, 0x35, 0x34, 0xbf, 0x90, 0x03, 0xd7,
	0x6b, 0xe3, 0x56, 0xe3, 0x20, 0x08, 0xb9, 0x76, 0xbd, 0xc6, 0x4a, 0xa9, 0x76, 0xdf, 0x3b, 0xb4,
	0xcc, 0x9d, 0x20, 0x94, 0xbb, 0xad, 0x85, 0x64, 0xb7, 0x65, 0xdf, 0x83, 0xb9, 0xbb, 0x38, 0x1e,
	0x34, 0x9a, 0x47, 0xe9, 0xb2, 0xf4, 0x00, 0x56, 0xb7, 0x23, 0x66, 0x5e, 0x76, 0xfd, 0x9b, 0x78,
	0xc7, 0xed, 0x2b, 0x6e, 0xc2, 0x25, 0xab, 0xbf, 0xda, 0xee, 0x88, 0x1e, 0x15, 0xe1, 0x3b, 0x16,
	0xd4, 0x4d, 0x70, 0x3f, 0x34, 0xa3, 0xf5, 0xd7, 0x60, 0x69, 0x17, 0x53, 0x17, 0x6f, 0xdd, 0xa9,
	0x7d, 0x03, 0x80, 0xf5, 0xa1, 0xd7, 0x4b, 0xba, 0x48, 0x53, 0x1e, 0xf4, 0xbc, 0x16, 0xba, 0x0e,
	0x8b, 0x4c, 0x65, 0xd5, 0x86, 0x91, 0x1f, 0x89, 0x22, 0x96, 0xa5, 0x8e, 0x5d, 0x72, 0x45, 0xa4,
	0xa2, 0x5c, 0x11, 0xb1, 0x03, 0x98, 0x63, 0xcd, 0x12, 0x04, 0x76, 0xdd, 0x36, 0x56, 0xee, 0x92,
	0x58, 0xea, 0x5d, 0x92, 0x7c, 0x92, 0xaa, 0x67, 0x62, 0x15, 0xcd, 0x6d, 0x13, 0xd1, 0xeb, 0x84,
	0xe2, 0xec, 0x8d, 0xfe, 0xb6, 0x7f, 0x62, 0x71, 0xcf, 0x57, 0xda, 0xe2, 0x5b, 0xf8, 0x7d, 0x87,
	0x19, 0x65, 0x9f, 0x83, 0x45, 0x71, 0x4e, 0xe9, 0x45, 0x41, 0xa3, 0x19, 0xb4, 0x70, 0xc3, 0xbd,
	0xc1, 0x71, 0x98, 0xe7, 0x59, 0xdb, 0x51, 0xb0, 0x15, 0xb4, 0xf0, 0xe6, 0x8d, 0x04, 0xc9, 0x91,
	0x3c, 0x24, 0x2b, 0xb9, 0x48, 0x8e, 0x1a, 0x91, 0x1c, 0x53, 0x90, 0xfc, 0xa7, 0x16, 0x75, 0xd4,
	0xd4, 0xfc, 0xc2, 0xe4, 0xaa, 0xc3, 0xc7, 0xc7, 0xe8, 0x87, 0x69, 0x19, 0xfd, 0x30, 0x09, 0xb3,
	0x0b, 0xe5, 0xbb, 0xe1, 0xbe, 0x20, 0x98, 0x5d, 0x24, 0x6d, 0xbe, 0x40, 0x10, 0xef, 0x34, 0x9b,
	0xb4, 0xd7, 0x02, 0xf1, 0x4e, 0xb3, 0x49, 0xfa, 0x8a, 0x9e, 0x87, 0xa5, 0xa0, 0x8b, 0x43, 0x97,
	0x34, 0xde, 0xe0, 0xee, 0xfc, 0x49, 0x2f, 0x90, 0xcc, 0x13, 0x6e, 0xff, 0x2d, 0xfb, 0x1d, 0xea,
	0xf4, 0x99, 0x83, 0x3c, 0xe7, 0xf3, 0x17, 0x61, 0xbc, 0xeb, 0x86, 0x6e, 0x47, 0x78, 0xb2, 0xae,
	0xa7, 0xbd, 0x07, 0x58, 0xbd, 0x1d, 0x5a, 0xc6, 0xe1, 0x65, 0xed, 0x2f, 0x8b, 0x23, 0x44, 0xa3,
	0x6b, 0xe4, 0x69, 0x28, 0x72, 0x4d, 0xb6, 0x9f, 0x5e, 0xe2, 0x75, 0xd0, 0xa2, 0xe5, 0x5f, 0xb6,
	0xe0, 0x82, 0xa1, 0x69, 0x8e, 0xdf, 0x43, 0x20, 0xf0, 0x62, 0x0a, 0x81, 0xc1, 0x08, 0x70, 0x1f,
	0xd6, 0x8c, 0x04, 0x28, 0x91, 0x1e, 0x35, 0x5d, 0x7a, 0x28, 0x6e, 0xd8, 0x0f, 0xe0, 0x62, 0x41,
	0xb7, 0x1e, 0x1a, 0x6c, 0x17, 0x96, 0xd8, 0x25, 0x8c, 0x77, 0xbd, 0x2e, 0xe1, 0xa2, 0xf2, 0x1d,
	0x27, 0x77, 0xdb, 0x18, 0x49, 0xdc, 0x36, 0x4e, 0xb5, 0x23, 0xb7, 0x1f, 0xc0, 0xd9, 0x54, 0x8b,
	0x26, 0x25, 0x72, 0xac, 0x54, 0x89, 0x14, 0xd5, 0xb9, 0x12, 0xf9, 0x79, 0x98, 0xd1, 0x44, 0xec,
	0x23, 0x56, 0x6a, 0xbe, 0x00, 0x4b, 0xa6, 0x02, 0x44, 0x28, 0xd0, 0xb9, 0xc8, 0x75, 0x36, 0xf2,
	0x3b, 0x9f, 0xda, 0xcc, 0x94, 0x14, 0xbb, 0x5e, 0x3b, 0x12, 0x93, 0x97, 0x7f, 0xda, 0x3f, 0x1c,
	0x81, 0x75, 0x76, 0x3a, 0xca, 0xbd, 0x9a, 0x3c, 0xff, 0x90, 0x19, 0xa2, 0x12, 0xe5, 0x90, 0x2e,
	0xa4, 0x96, 0x62, 0xb6, 0x2c, 0x10, 0xb5, 0x9a, 0x37, 0x5d, 0xa5, 0xd8, 0x9b, 0x6e, 0x34, 0xb3,
	0xd1, 0xc8, 0xbb, 0xb8, 0x59, 0xe4, 0xec, 0x92, 0xd0, 0x9b, 0xfb, 0xf0, 0x72, 0x7a, 0x0b, 0xb1,
	0xc9, 0x74, 0x26, 0xfa, 0x5b, 0xe5, 0xae, 0x49, 0x9d, 0xbb, 0x12, 0x97, 0x4f, 0x50, 0x5d, 0x3e,
	0xed, 0xef, 0x5b, 0xb0, 0x91, 0x43, 0x9f, 0xa1, 0x2c, 0xc8, 0xcf, 0x6a, 0x0b, 0x72, 0x72, 0x34,
	0x93, 0x6e, 0x9d, 0x2d, 0xcd, 0xaf, 0x8a, 0x73, 0x77, 0x27, 0xe8, 0xbb, 0xed, 0xb8, 0xef, 0xe0,
	0x6e, 0x10, 0xca, 0xfd, 0xe2, 0x3a, 0x4c, 0x0a, 0xda, 0x32, 0x29, 0x3a, 0xe9, 0x24, 0x09, 0xf6,
	0xbf, 0xb4, 0x60, 0x95, 0xfa, 0x5e, 0xaa, 0x55, 0xd5, 0x3d, 0x61, 0x17, 0x87, 0x5e, 0xd0, 0x62,
	0x3a, 0xa5, 0xc5, 0x15, 0x53, 0x9a, 0x44, 0xd5, 0xc9, 0x35, 0x98, 0xe4, 0x05, 0xe2, 0x80, 0x5b,
	0x20, 0xaa, 0x2c, 0x61, 0x2f, 0x28, 0x0f, 0x68, 0x94, 0x10, 0x6d, 0x54, 0x53, 0x95, 0xe5, 0x94,
	0x1e, 0x33, 0x4f, 0xe9, 0x71, 0x6d, 0x4a, 0xbf, 0x07, 0xcb, 0x3a, 0xf6, 0x3b, 0xee, 0xa1, 0xe7,
	0x93, 0x81, 0x36, 0x6f, 0x0c, 0x9f, 0xd5, 0xe7, 0x74, 0x22, 0xd2, 0x75, 0xf2, 0xf1, 0x99, 0xfd,
	0x03, 0x7e, 0x59, 0x24, 0x4d, 0xa0, 0xa1, 0x8c, 0xfb, 0xf3, 0x3c, 0xb0, 0x81, 0xb8, 0x33, 0xc7,
	0xaa, 0x18, 0x3b, 0xc7, 0x02, 0x1a, 0xd8, 0xbf, 0x6e, 0xc1, 0xb9, 0x0c, 0x7a, 0xfa, 0xde, 0xa7,
	0x74, 0x63, 0x4f, 0x67, 0x2b, 0xa9, 0xa7, 0xf9, 0xbe, 0x92, 0x04, 0x75, 0xd7, 0x3f, 0x90, 0x78,
	0xbd, 0x0f, 0x1b, 0xdc, 0x8f, 0x4f, 0xc5, 0x67, 0x2b, 0x08, 0x43, 0x76, 0x98, 0x98, 0x7b, 0x40,
	0x9e, 0xcc, 0xbc, 0x11, 0x6d, 0xe6, 0x7d, 0x06, 0x56, 0xee, 0xe2, 0xd8, 0xc8, 0xd8, 0x1f, 0xa8,
	0x5f, 0xf6, 0x77, 0x99, 0xc5, 0x33, 0x05, 0x79, 0x48, 0x91, 0xa2, 0xd4, 0xd9, 0x9c, 0xc7, 0x6f,
	0x6c, 0x2e, 0xff, 0x1b, 0xe9, 0xfe, 0xf4, 0xe8, 0xfb, 0x9c, 0xba, 0xff, 0x95, 0xcc, 0xb7, 0x2d,
	0x80, 0xa6, 0x1c, 0x22, 0x7e, 0x6d, 0xe3, 0x12, 0x8f, 0x47, 0x54, 0x34, 0x9a, 0x8e, 0x52, 0x2d,
	0xed, 0x3e, 0x69, 0xff, 0xcc, 0x02, 0x3b, 0x71, 0x97, 0x3a, 0xf1, 0xf0, 0xfb, 0x43, 0xe8, 0x11,
	0xf3, 0x91, 0x60, 0xfe, 0xaf, 0x3c, 0x9c, 0x1b, 0xf5, 0x91, 0xd8, 0xe4, 0x29, 0x19, 0x27, 0xda,
	0xcb, 0x30, 0xdb, 0xf2, 0xa2, 0x6e, 0x2f, 0xc6, 0x0d, 0xce, 0x6f, 0xfc, 0x28, 0x92, 0xa7, 0x3a,
	0x8c, 0xed, 0xfe, 0xc4, 0x92, 0x8e, 0xd0, 0x84, 0x02, 0x3e, 0x6e, 0x6f, 0x05, 0x51, 0xcc, 0x6e,
	0x72, 0x31, 0x57, 0xf5, 0xa1, 0x70, 0xca, 0x2f, 0x68, 0x9c, 0x72, 0x39, 0xad, 0xeb, 0x99, 0x51,
	0x61, 0x8c, 0xf3, 0xd3, 0xc4, 0xb5, 0x3a, 0x53, 0x6c, 0x68, 0x36, 0x73, 0x15, 0xdb, 0x8b, 0xa5,
	0xd8, 0x72, 0x4c, 0xff, 0xdc, 0x82, 0x27, 0xb3, 0x45, 0xd4, 0xcb, 0x94, 0x8f, 0xc9, 0x45, 0x33,
	0x1f, 0x5f, 0x0d, 0x19, 0x86, 0xf5, 0xdf, 0xb7, 0xc0, 0xce, 0x2f, 0x38, 0x24, 0x8c, 0x3f, 0xaa,
	0x61, 0x7c, 0x69, 0x00, 0x8c, 0x39, 0xb6, 0x7f, 0xcf, 0x82, 0xf3, 0xf7, 0x02, 0x1f, 0xf7, 0x6f,
	0xba, 0xcd, 0xe3, 0xc7, 0xc2, 0xba, 0x2f, 0x6a, 0xa8, 0x5e, 0x48, 0x9c, 0x04, 0x73, 0xb0, 0x60,
	0x78, 0xfe, 0xd0, 0x82, 0x35, 0x43, 0x89, 0xe1, 0x2d, 0xaf, 0x0a, 0x8e, 0xeb, 0x45, 0x38, 0x72,
	0xfc, 0xfe, 0xc8, 0x82, 0x8b, 0x5a, 0xee, 0x63, 0x60, 0xd3, 0x97, 0x35, 0x2c, 0x6d, 0x33, 0x96,
	0x06, 0x0e, 0xa5, 0xd7, 0xd5, 0x4c, 0x65, 0x1e, 0xf7, 0x75, 0x35, 0x23, 0x0e, 0x0c, 0xc7, 0x97,
	0xa1, 0x4e, 0x1d, 0x09, 0xee, 0x86, 0x41, 0xaf, 0x7b, 0x93, 0x85, 0xa7, 0x4c, 0x76, 0x19, 0xb9,
	0xdb, 0x3e, 0xfb, 0x3e, 0xac, 0x27, 0xf5, 0xb8, 0x3b, 0x83, 0x87, 0x13, 0x35, 0xec, 0xba, 0xf4,
	0xa1, 0xb3, 0x74, 0x97, 0x09, 0x51, 0x87, 0x99, 0x6f, 0x22, 0xe1, 0x5c, 0x67, 0xbb, 0xb0, 0x90,
	0xc9, 0xd4, 0x36, 0x18, 0x56, 0x6a, 0x83, 0xf1, 0x3c, 0x4c, 0xb0, 0xaa, 0x89, 0xde, 0x68, 0x6c,
	0xc2, 0x11, 0xc5, 0xec, 0x5b, 0x30, 0x9f, 0xce, 0x54, 0x7c, 0xfd, 0x2c, 0xcd, 0xd7, 0x4f, 0xbb,
	0xa7, 0xa0, 0x9a, 0x93, 0xed, 0x17, 0x60, 0x55, 0xa5, 0x18, 0x6f, 0x84, 0x13, 0x2c, 0x07, 0x9c,
	0x7d, 0x0f, 0x56, 0x1c, 0xdc, 0x0c, 0x3a, 0x1d, 0xec, 0xb7, 0x70, 0x8b, 0xb9, 0x6e, 0x24, 0x55,
	0x4e, 0xeb, 0xa1, 0x68, 0xef, 0x43, 0x2d, 0x0b, 0x8e, 0x53, 0xfe, 0x0e, 0x2c, 0x84, 0x49, 0x5e,
	0x83, 0xf9, 0x4f, 0xb2, 0x41, 0x58, 0x55, 0xae, 0x66, 0xa5, 0x6a, 0xcf, 0x87, 0xa9, 0x14, 0xfb,
	0x55, 0x58, 0x4f, 0x97, 0xda, 0x73, 0xf7, 0x93, 0xb8, 0xaa, 0x05, 0x63, 0x63, 0x7f, 0x1a, 0x36,
	0x72, 0xea, 0x72, 0x24, 0x9f, 0x87, 0xf1, 0x90, 0xe8, 0x31, 0xc2, 0x8c, 0x54, 0x53, 0x0e, 0x83,
	0x64, 0x61, 0xaa, 0xe8, 0xf0, 0x72, 0xf6, 0x2e, 0x9c, 0x55, 0x1d, 0x5f, 0x12, 0x4e, 0x7b, 0x15,
	0x66, 0xc4, 0x71, 0xb7, 0xda, 0xd7, 0x1c, 0x7f, 0x99, 0xe9, 0xae, 0xf2, 0x65, 0x7f, 0xcb, 0x82,
	0x3a, 0x0b, 0xec, 0x98, 0x82, 0xad, 0x5a, 0x8b, 0xf5, 0xb8, 0x7f, 0x93, 0x5d, 0x79, 0x8c, 0x9e,
	0xb8, 0xe8, 0x8c, 0x0c, 0xe2, 0xa2, 0x53, 0x7a, 0x69, 0xad, 0x03, 0x8b, 0x0f, 0x22, 0x1c, 0xee,
	0x84, 0xc1, 0x81, 0xd7, 0xc6, 0x3b, 0x38, 0x8c, 0x02, 0xdf, 0x6d, 0x13, 0x2c, 0x0e, 0xbc, 0x30,
	0xe2, 0x4e, 0xc5, 0x1c, 0x0b, 0x9a, 0xf2, 0x16, 0x8f, 0x72, 0x41, 0xc3, 0x4c, 0x28, 0x7e, 0x57,
	0x55, 0x92, 0x40, 0x33, 0xeb, 0x50, 0xed, 0x06, 0x91, 0x17, 0x27, 0xce, 0xac, 0xf2, 0xdb, 0xfe,
	0x2b, 0x0b, 0xe6, 0x94, 0xf6, 0x3e, 0x85, 0xdb, 0x5d, 0xb4, 0x0d, 0x17, 0x13, 0x62, 0x06, 0x9d,
	0x80, 0x9a, 0xf8, 0x5d, 0xbf, 0xd5, 0x68, 0xe1, 0x13, 0xdc, 0x0e, 0xba, 0x64, 0x91, 0xa3, 0x28,
	0x54, 0x9d, 0x73, 0x92, 0x92, 0xbc, 0xdc, 0xa6, 0xdf, 0xba, 0x95, 0x94, 0x42, 0x2f, 0xc3, 0x4a,
	0x88, 0xdb, 0xd8, 0x8d, 0x70, 0xab, 0x71, 0xe8, 0x76, 0x70, 0x02, 0x90, 0x1b, 0x9b, 0xcf, 0x8a,
	0xec, 0xbb, 0x6e, 0x07, 0x4b, 0x28, 0xe8, 0x3a, 0x2c, 0x7a, 0x7e, 0x8c, 0x43, 0x9f, 0x9a, 0x9f,
	0xdd, 0x76, 0x23, 0x72, 0xdb, 0x38, 0xe2, 0x9a, 0x24, 0xd2, 0xb2, 0xa4, 0xdd, 0x39, 0x88, 0x8f,
	0xb8, 0x2f, 0x59, 0xd5, 0x61, 0x1f, 0xf6, 0xcf, 0x2d, 0x38, 0xa7, 0xf4, 0x8e, 0x5b, 0x39, 0x89,
	0x28, 0x8c, 0xbd, 0xaf, 0x30, 0xcb, 0xf6, 0x33, 0xb0, 0xd0, 0x75, 0xbd, 0x56, 0x23, 0xea, 0xed,
	0x27, 0x2e, 0x4f, 0xac, 0x73, 0xf3, 0x24, 0x63, 0x57, 0x49, 0x47, 0xd7, 0x08, 0x5a, 0xac, 0x23,
	0x6e, 0xeb, 0x04, 0x87, 0xb1, 0x17, 0x79, 0xfc, 0xe2, 0x5b, 0xd5, 0x59, 0xf0, 0x7c, 0xd2, 0x89,
	0xcd, 0x24, 0x03, 0x3d, 0x0d, 0x0b, 0xa2, 0x7c, 0xb7, 0x47, 0x86, 0x38, 0x92, 0x9d, 0x98, 0x63,
	0xa5, 0x77, 0x44, 0x32, 0x3d, 0xe2, 0x0a, 0x71, 0xc7, 0xeb, 0x75, 0xa8, 0xe6, 0x1c, 0x45, 0xbc,
	0x2b, 0x33, 0x3c, 0x75, 0x93, 0xc5, 0xf5, 0x92, 0x1d, 0x1d, 0x53, 0x3b, 0xfa, 0xe7, 0x16, 0xac,
	0x65, 0x3b, 0x2a, 0x23, 0x44, 0xa2, 0xb3, 0x30, 0xde, 0x6d, 0x36, 0x3a, 0x6e, 0x93, 0x77, 0x6d,
	0xac, 0xdb, 0xbc, 0xe7, 0x36, 0xd1, 0x45, 0x98, 0xa6, 0xc8, 0x35, 0x03, 0x3f, 0x0a, 0xda, 0x98,
	0x77, 0x64, 0x8a, 0xa4, 0x6d, 0xb1, 0x24, 0x74, 0x09, 0x66, 0x3a, 0xc1, 0xbe, 0xd7, 0xc6, 0x64,
	0xf4, 0x85, 0x17, 0x76, 0xd5, 0x99, 0x66, 0x89, 0xb7, 0x68, 0x1a, 0xe1, 0xea, 0xf7, 0xf1, 0x7e,
	0x63, 0x3f, 0x0c, 0xde, 0x8f, 0xe4, 0x18, 0xc0, 0xfb, 0x78, 0xff, 0x26, 0x4b, 0xc9, 0xc1, 0xfa,
	0x97, 0x2a, 0x80, 0xb2, 0x58, 0x13, 0xac, 0x84, 0xa9, 0x5a, 0xe1, 0xf6, 0x29, 0x9e, 0x46, 0x59,
	0xba, 0x06, 0x13, 0xef, 0xe3, 0xfd, 0xc8, 0x8b, 0xa5, 0x39, 0x8d, 0x7f, 0xa2, 0x97, 0x61, 0xc6,
	0xf5, 0xfd, 0x9e, 0xdb, 0x6e, 0x78, 0x7e, 0x33, 0xe8, 0xe0, 0xcc, 0xfd, 0x08, 0x2a, 0x51, 0xb6,
	0xfd, 0xd8, 0x99, 0x66, 0xe5, 0xb6, 0x69, 0x31, 0xb4, 0x09, 0x8b, 0x7e, 0xaf, 0xb3, 0x8f, 0xc3,
	0x46, 0x70, 0xd0, 0xc0, 0x9d, 0x6e, 0x3b, 0xe8, 0x63, 0x1c, 0xf1, 0x6d, 0x97, 0xa1, 0xf6, 0x02,
	0x2b, 0x7d, 0xff, 0xe0, 0xb6, 0x28, 0x8b, 0xae, 0xc0, 0xfc, 0xb1, 0xe7, 0xb7, 0x08, 0x00, 0xea,
	0x42, 0xe9, 0xc5, 0x7d, 0x71, 0x17, 0x90, 0xa4, 0xdf, 0x3f, 0xd8, 0xe4, 0xa9, 0xe8, 0x53, 0x30,
	0xdd, 0x51, 0x98, 0x90, 0x47, 0xc9, 0xe5, 0x21, 0x13, 0x8b, 0x19, 0xd6, 0xd1, 0x6a, 0xa2, 0x5f,
	0xd4, 0x9d, 0xf1, 0xad, 0xc4, 0x75, 0xba, 0x80, 0x1d, 0x54, 0xb7, 0xfc, 0xff, 0x66, 0xc1, 0xbc,
	0x52, 0xf4, 0x36, 0x3d, 0x0a, 0x31, 0x9f, 0xe2, 0xac, 0xc3, 0x64, 0x33, 0xf0, 0x0f, 0xbc, 0xb0,
	0xc3, 0x43, 0xe9, 0x54, 0x9d, 0x24, 0x01, 0x7d, 0x82, 0x8c, 0x1a, 0xff, 0x68, 0xb8, 0xc2, 0x59,
	0xa7, 0xd0, 0x43, 0x58, 0x96, 0xdf, 0x8c, 0xd1, 0x55, 0x98, 0xe7, 0x9f, 0x89, 0x3f, 0x2a, 0xdb,
	0x20, 0xce, 0xa9, 0xe9, 0x0f, 0xc2, 0x36, 0xfa, 0x18, 0xd4, 0xbd, 0xa8, 0xa1, 0x95, 0xa6, 0x08,
	0x36, 0x22, 0x71, 0x65, 0xb4, 0xea, 0xac, 0x78, 0xd1, 0x96, 0x52, 0x80, 0x76, 0x6b, 0x17, 0xfb,
	0xb1, 0xfd, 0x4f, 0x2a, 0x30, 0xa5, 0xf4, 0x37, 0x73, 0x06, 0x9d, 0x1b, 0x46, 0xe4, 0x59, 0xf5,
	0x08, 0x4c, 0x2a, 0x1a, 0x69, 0xd2, 0x09, 0x5a, 0xbd, 0x04, 0xd5, 0x2e, 0x97, 0xdd, 0x9c, 0x87,
	0x56, 0x33, 0x15, 0x84, 0x70, 0x77, 0x64, 0x51, 0x74, 0x15, 0x46, 0x8f, 0x70, 0xbb, 0xcb, 0x03,
	0x2b, 0x9c, 0xcd, 0x54, 0x21, 0xf2, 0xd9, 0xa1, 0x45, 0xd0, 0x8d, 0x24, 0x98, 0x93, 0x08, 0xb2,
	0x9c, 0x33, 0xee, 0x49, 0x20, 0x27, 0xb1, 0x4c, 0x44, 0x31, 0xee, 0x8a, 0x10, 0x7a, 0x24, 0x61,
	0x37, 0xc6, 0x5d, 0x3a, 0x02, 0xd8, 0x8f, 0x43, 0xef, 0xa0, 0x77, 0x18, 0x34, 0x98, 0xcb, 0x02,
	0xf7, 0x58, 0x4d, 0xd2, 0xa9, 0xa3, 0x44, 0xca, 0xaf, 0x73, 0xf2, 0xe1, 0xfd, 0x3a, 0xe1, 0x14,
	0x7e, 0x9d, 0xf6, 0x1e, 0xd4, 0xb6, 0x82, 0x4e, 0x27, 0xf0, 0x95, 0x2e, 0x8a, 0x55, 0x5a, 0x19,
	0x36, 0x4b, 0x1b, 0xb6, 0xd2, 0xa3, 0xe2, 0x1f, 0x58, 0xb0, 0x6a, 0x00, 0x3b, 0x14, 0xe5, 0xfc,
	0x23, 0xd4, 0xc1, 0x81, 0x46, 0xa2, 0x67, 0x5c, 0xc4, 0x35, 0xe2, 0x6c, 0xfb, 0xa2, 0x9c, 0xfd,
	0x6f, 0x2d, 0x58, 0xc8, 0x64, 0xa3, 0x67, 0x12, 0x40, 0x16, 0x97, 0x50, 0xe9, 0xc1, 0x97, 0x20,
	0xd0, 0x65, 0x18, 0x0d, 0x85, 0x74, 0x57, 0x65, 0x19, 0x75, 0x9b, 0x09, 0xda, 0xd8, 0xa1, 0xd9,
	0xe8, 0x06, 0x35, 0x2b, 0x8b, 0xb0, 0x1f, 0xdc, 0xbd, 0x9c, 0x87, 0xb4, 0xdd, 0x91, 0x19, 0x8e,
	0x5a, 0x08, 0x3d, 0xa7, 0xf8, 0x0a, 0x8c, 0xe6, 0x5d, 0x44, 0x93, 0x45, 0xec, 0xfb, 0x70, 0xf6,
	0x2e, 0x3b, 0xae, 0x1e, 0x74, 0xf8, 0x98, 0xf6, 0x45, 0x8a, 0xea, 0xbe, 0x2e, 0x24, 0x85, 0xbd,
	0x36, 0xb1, 0x9c, 0x86, 0xf8, 0x58, 0x6e, 0xdb, 0x65, 0xa8, 0xcd, 0x76, 0x52, 0xff, 0xdd, 0x02,
	0xd8, 0x21, 0x15, 0xa9, 0x69, 0x6d, 0x70, 0xe1, 0x42, 0xb7, 0x0c, 0xa4, 0x4a, 0x72, 0xdb, 0x88,
	0x02, 0xe0, 0x2e, 0xcb, 0xa3, 0x89, 0xcb, 0xf2, 0x0a, 0x4c, 0x78, 0x51, 0x23, 0xc4, 0x6e, 0x8b,
	0x4b, 0xba, 0x71, 0x2f, 0x72, 0xb0, 0xdb, 0x4a, 0xcd, 0xc9, 0xf1, 0x87, 0x9f, 0x93, 0x13, 0xa7,
	0x99, 0x93, 0xef, 0xc1, 0x0a, 0xbf, 0xc0, 0x27, 0x7b, 0x5d, 0x3a, 0xa6, 0x49, 0x67, 0x47, 0x4c,
	0x9d, 0xad, 0xc8, 0xce, 0xda, 0xd7, 0x61, 0x85, 0x4b, 0x71, 0x42, 0x6a, 0x26, 0x60, 0x93, 0x98,
	0xd9, 0x4c, 0x44, 0x59, 0xaa, 0x57, 0xd5, 0xf7, 0x2c, 0x22, 0x23, 0xd2, 0x35, 0x86, 0xc2, 0x11,
	0xcf, 0xa4, 0xe7, 0x72, 0xc1, 0x14, 0xb4, 0xbf, 0x0e, 0xcb, 0x6f, 0xbb, 0xf1, 0x5e, 0xe8, 0xfa,
	0x91, 0x4b, 0x0d, 0xb3, 0x72, 0x7b, 0x61, 0xc3, 0x0c, 0xbd, 0x2c, 0x2d, 0x8d, 0xa9, 0x5c, 0xdb,
	0x39, 0x71, 0x63, 0x27, 0x63, 0xed, 0x1f, 0x31, 0x5b, 0xfb, 0x2b, 0x46, 0x9f, 0x9e, 0x51, 0xc5,
	0x49, 0xef, 0x3d, 0x58, 0x52, 0x1b, 0x37, 0x9f, 0xc5, 0xc8, 0xf3, 0xd5, 0x6b, 0xfa, 0x59, 0x4c,
	0x4d, 0x77, 0x3d, 0x79, 0xdb, 0xc3, 0xef, 0xd3, 0x48, 0xe9, 0x4d, 0x71, 0x1a, 0xf3, 0x5d, 0x4b,
	0x07, 0x3f, 0x24, 0x8a, 0x5f, 0xd3, 0xce, 0x61, 0x78, 0x15, 0x53, 0xb7, 0xf8, 0x29, 0x4c, 0x00,
	0x0b, 0x6f, 0x0b, 0x2a, 0x46, 0xe5, 0x87, 0xd8, 0x1f, 0x9c, 0xca, 0x7b, 0x80, 0x92, 0x06, 0x4b,
	0x68, 0x7c, 0x45, 0xa7, 0x71, 0xe2, 0xd1, 0x28, 0x21, 0x08, 0xea, 0xfe, 0xa6, 0xa5, 0x82, 0x1d,
	0xde, 0xd9, 0xa6, 0x42, 0x5b, 0xae, 0x4a, 0x64, 0x3b, 0xc3, 0x29, 0xfb, 0x3a, 0xd4, 0xf8, 0x85,
	0xdd, 0x2c, 0x81, 0xaf, 0xf1, 0xb3, 0x5d, 0xab, 0x54, 0x8c, 0x30, 0x77, 0x99, 0x3b, 0xb0, 0xce,
	0x76, 0xdf, 0x12, 0x94, 0x1e, 0x58, 0x2f, 0x2d, 0x43, 0x93, 0x7e, 0x8f, 0xa8, 0xc7, 0x25, 0xf6,
	0x9f, 0x5a, 0xf0, 0x9c, 0x72, 0x2d, 0x3f, 0x09, 0x9c, 0x49, 0xb4, 0xa0, 0x36, 0x8e, 0xb1, 0x7a,
	0x63, 0x7d, 0x9b, 0xdf, 0xef, 0x57, 0x28, 0x98, 0x1c, 0xbc, 0xbc, 0x04, 0x63, 0x44, 0x41, 0x12,
	0xce, 0x1d, 0xe7, 0x8d, 0x41, 0x32, 0xe9, 0x6d, 0x0f, 0xa2, 0x37, 0x45, 0x0e, 0x2b, 0x8d, 0x9e,
	0x87, 0xa5, 0x26, 0xcf, 0xa0, 0x0a, 0x56, 0xd4, 0x50, 0xdf, 0x52, 0x42, 0x22, 0x8f, 0xd6, 0x61,
	0x2f, 0xd6, 0xfc, 0x85, 0x05, 0x57, 0x07, 0x46, 0xf9, 0x11, 0x0f, 0xf8, 0x5d, 0x6d, 0x41, 0xe3,
	0xef, 0x5c, 0x9c, 0x8a, 0x7e, 0x7c, 0xc9, 0xfb, 0x2b, 0xf6, 0xe0, 0x93, 0xa8, 0xb7, 0xe7, 0x86,
	0xde, 0xc1, 0x81, 0xe3, 0xc6, 0x58, 0x3d, 0xea, 0x3c, 0x0a, 0x3a, 0xb8, 0xa1, 0x19, 0xc5, 0x80,
	0x24, 0x71, 0xfb, 0xdb, 0x45, 0x98, 0xa6, 0xd1, 0x68, 0x45, 0x09, 0x36, 0xb0, 0x53, 0x34, 0x8d,
	0x17, 0xd9, 0x00, 0xe8, 0x78, 0xbe, 0x08, 0x70, 0xc1, 0xc2, 0x74, 0x4c, 0x76, 0x3c, 0x7f, 0x53,
	0x06, 0x8d, 0xea, 0xb8, 0x5f, 0x6e, 0x68, 0x01, 0x3b, 0x26, 0x3b, 0xee, 0x97, 0x79, 0xf6, 0x2b,
	0x50, 0x93, 0x4a, 0x20, 0xf7, 0x79, 0x0a, 0xfc, 0xa8, 0xa1, 0xdc, 0xf9, 0x5a, 0x16, 0xf9, 0xf7,
	0x65, 0xf6, 0x5e, 0xbf, 0x8b, 0xed, 0x9f, 0x8f, 0xc2, 0xa5, 0xbc, 0xde, 0x25, 0xa4, 0x88, 0xd0,
	0x27, 0x60, 0x82, 0x3b, 0x09, 0x71, 0xd3, 0xd3, 0xa5, 0x0c, 0xd7, 0x28, 0x75, 0xf9, 0x49, 0x81,
	0x23, 0xea, 0xa0, 0xd7, 0xc8, 0x92, 0x78, 0xd0, 0xf3, 0x5b, 0x5c, 0x1c, 0x5c, 0x29, 0xaa, 0x2d,
	0xfc, 0xb1, 0xe8, 0x20, 0xf0, 0x7a, 0xe8, 0x53, 0x00, 0x4a, 0xf0, 0xab, 0xca, 0x29, 0xa1, 0x28,
	0x75, 0xd1, 0x3d, 0x18, 0x67, 0xd1, 0x4a, 0xf9, 0x53, 0x31, 0x2f, 0x65, 0x78, 0x23, 0x8f, 0x0a,
	0xd7, 0x58, 0x30, 0x53, 0xe6, 0x05, 0xc1, 0x81, 0xa0, 0x26, 0xcc, 0x76, 0x3c, 0xdf, 0xeb, 0xb8,
	0x6d, 0x1e, 0x04, 0x95, 0xdf, 0x71, 0xf8, 0xf8, 0xe0, 0x60, 0xef, 0xb1, 0xfa, 0x2a, 0xf4, 0x99,
	0x8e, 0x9a, 0xa6, 0xb9, 0xc0, 0x8d, 0x6b, 0x2e, 0x70, 0xf5, 0x26, 0x4c, 0x29, 0x15, 0x0d, 0x97,
	0x92, 0x3e, 0xa9, 0xde, 0x39, 0x38, 0x0d, 0xd1, 0x94, 0xbb, 0x4f, 0xaf, 0x01, 0xca, 0x22, 0x59,
	0x76, 0x01, 0x6a, 0x44, 0xbd, 0x00, 0xf5, 0x27, 0x16, 0x9c, 0x2b, 0xa6, 0xc5, 0x23, 0x16, 0x00,
	0xbf, 0x28, 0x16, 0xa0, 0x0a, 0x0f, 0xe2, 0x37, 0xe8, 0x70, 0x88, 0x75, 0xe9, 0xfb, 0x96, 0x16,
	0x31, 0xc1, 0x3c, 0xf1, 0x8b, 0x4f, 0x91, 0x53, 0x92, 0x61, 0x24, 0x23, 0x19, 0x8a, 0x26, 0x6e,
	0xa5, 0x70, 0xe2, 0xb6, 0x58, 0x58, 0x4e, 0xe6, 0x74, 0xc1, 0xd5, 0x15, 0x55, 0xf8, 0x9b, 0xbd,
	0x50, 0x4e, 0xab, 0xf9, 0x1c, 0xc0, 0x86, 0xd2, 0x4a, 0xe8, 0x9d, 0x28, 0x6f, 0x45, 0x14, 0x34,
	0x73, 0x5d, 0x6f, 0x66, 0xd5, 0xd0, 0x0c, 0x87, 0xc5, 0xdb, 0xf9, 0xb1, 0x05, 0xb5, 0xbc, 0xee,
	0x3c, 0xfa, 0x83, 0xae, 0x6d, 0xf5, 0xa0, 0x8b, 0x56, 0x29, 0x22, 0xa5, 0x43, 0xcb, 0xdb, 0x3f,
	0xe1, 0x3e, 0x4b, 0x46, 0x5a, 0x3c, 0xfa, 0x13, 0xd8, 0x6d, 0xf5, 0x04, 0x36, 0x8d, 0x63, 0x76,
	0x20, 0x38, 0x92, 0x7b, 0xec, 0x11, 0x16, 0xe1, 0x8a, 0x53, 0x3a, 0x50, 0x4f, 0xe8, 0x03, 0x95,
	0x79, 0xa4, 0x51, 0xea, 0xbf, 0x28, 0x0b, 0xf6, 0xd1, 0x1f, 0x93, 0x6e, 0xab, 0xc7, 0xa4, 0xa9,
	0x3e, 0x1b, 0x3a, 0xfb, 0x5d, 0xb6, 0x39, 0xa6, 0xf9, 0x43, 0x65, 0x99, 0x3c, 0xc7, 0xb8, 0xf4,
	0xa4, 0x61, 0x0a, 0xc3, 0xdf, 0xb2, 0xa8, 0xf7, 0x10, 0x43, 0x6b, 0xa8, 0x6c, 0x92, 0x8e, 0x1c,
	0x9f, 0x3b, 0xcb, 0x18, 0x62, 0x0e, 0xc5, 0xeb, 0x96, 0x1b, 0x1d, 0x51, 0xd5, 0xe7, 0x9e, 0xeb,
	0x0d, 0x1e, 0x29, 0x73, 0x19, 0xc6, 0x99, 0x87, 0x9d, 0xd0, 0x4a, 0xd9, 0x97, 0xfd, 0xb7, 0x99,
	0x43, 0x53, 0x0a, 0xe8, 0xe3, 0x8b, 0x93, 0x9f, 0x6a, 0x58, 0xf1, 0x69, 0x7a, 0x87, 0xaa, 0x6d,
	0x32, 0xff, 0xa6, 0x1b, 0xe1, 0x53, 0xfa, 0x00, 0xe5, 0xf5, 0xf9, 0x47, 0x6c, 0x29, 0x33, 0x82,
	0x1e, 0xd6, 0xc6, 0x50, 0xe9, 0x79, 0x3d, 0xd5, 0xf3, 0xa4, 0xf9, 0x88, 0x77, 0xfd, 0xcf, 0x98,
	0xde, 0x2d, 0x4b, 0x38, 0xf8, 0x04, 0xfb, 0x3d, 0x7c, 0xab, 0xef, 0xbb, 0x1d, 0xaf, 0x19, 0x0d,
	0x15, 0xd7, 0xb4, 0xf3, 0x88, 0x8e, 0xab, 0x8e, 0x89, 0x36, 0x5e, 0xff, 0xc2, 0x82, 0x75, 0x59,
	0x8e, 0xe9, 0xb5, 0x64, 0x96, 0x7f, 0xc6, 0x8b, 0x8f, 0xb6, 0x8e, 0xdc, 0x90, 0xde, 0x91, 0x62,
	0xfa, 0x2f, 0x0f, 0x38, 0x20, 0xce, 0x92, 0x67, 0x58, 0x2a, 0x3b, 0x9f, 0x8f, 0x69, 0xc0, 0x42,
	0x56, 0xac, 0x1b, 0xe2, 0x13, 0x2f, 0xe0, 0x1b, 0x29, 0xcb, 0xe1, 0xb5, 0x77, 0x78, 0xaa, 0x76,
	0xb6, 0x5b, 0x49, 0x9d, 0xbb, 0xbf, 0x00, 0x63, 0x44, 0x63, 0x14, 0x2a, 0xe2, 0x46, 0xaa, 0x1b,
	0x14, 0x21, 0x82, 0xdd, 0x9d, 0x76, 0xe0, 0xc6, 0x0e, 0x2b, 0x6b, 0xdf, 0x86, 0x95, 0x9c, 0x12,
	0x74, 0xef, 0xed, 0xee, 0xe3, 0xb6, 0xbc, 0x46, 0x4b, 0x3e, 0x74, 0x6d, 0xc9, 0x12, 0xb7, 0x41,
	0x7f, 0x6a, 0xc1, 0x13, 0x06, 0xb6, 0xde, 0x0b, 0x62, 0xb7, 0xad, 0x5a, 0x03, 0x68, 0x5c, 0xbc,
	0x0c, 0x3d, 0x2a, 0xce, 0x74, 0x53, 0x25, 0xc7, 0x65, 0x98, 0x6d, 0x66, 0xa9, 0x51, 0x71, 0x58,
	0x55, 0x49, 0x0c, 0xd9, 0xe1, 0xca, 0x29, 0x3a, 0xfc, 0xd3, 0x11, 0x58, 0x34, 0x60, 0x8a, 0xee,
	0xc2, 0xcc, 0x61, 0x18, 0x44, 0x51, 0x23, 0x64, 0xc3, 0xcd, 0xf7, 0xca, 0x76, 0x0a, 0xa8, 0x61,
	0x90, 0x9d, 0x69, 0x5a, 0x91, 0xb3, 0x09, 0x7a, 0x91, 0x45, 0x2d, 0x1c, 0x19, 0xb8, 0x3a, 0x8d,
	0x6c, 0xf8, 0x59, 0x40, 0x2c, 0x82, 0x61, 0xac, 0x50, 0x4b, 0x06, 0x82, 0xcc, 0x13, 0x1b, 0x19,
	0xfa, 0x3a, 0x0b, 0x71, 0x86, 0xe4, 0x2f, 0xc3, 0xa8, 0x1b, 0x76, 0x7b, 0xdc, 0x16, 0x3c, 0x08,
	0x46, 0xb4, 0xbc, 0xfd, 0x15, 0xd8, 0x28, 0x9c, 0x03, 0x85, 0x4e, 0x20, 0x9f, 0xd0, 0x17, 0xe9,
	0xa7, 0x06, 0x98, 0x53, 0x4a, 0x9c, 0x45, 0xfb, 0xff, 0xb3, 0xe0, 0x62, 0x69, 0xe1, 0x1c, 0x0e,
	0xcd, 0x0b, 0x62, 0x5c, 0x34, 0x77, 0xa4, 0xa6, 0x31, 0xaa, 0x68, 0x1a, 0xf6, 0xdb, 0x60, 0xa7,
	0x91, 0x50, 0x3c, 0x71, 0xd8, 0x00, 0x74, 0x0b, 0xac, 0x57, 0x39, 0x98, 0xd8, 0xef, 0xc0, 0x95,
	0x12, 0xb8, 0x92, 0x77, 0x4f, 0xd7, 0x47, 0xfb, 0x5b, 0x23, 0x70, 0xbe, 0x04, 0x74, 0xe1, 0xb0,
	0xbd, 0x0a, 0x95, 0x38, 0xe8, 0xca, 0x0d, 0xaf, 0x71, 0xd0, 0xb2, 0x24, 0x70, 0x48, 0x25, 0x32,
	0xb5, 0xf9, 0x63, 0xc0, 0x7c, 0x6a, 0x33, 0x8b, 0x00, 0x8b, 0xcc, 0xa9, 0x4c, 0x6d, 0x56, 0x48,
	0x4e, 0x6d, 0x66, 0x18, 0x60, 0x55, 0xe5, 0xd4, 0xbe, 0x25, 0xa6, 0x36, 0xdb, 0x97, 0x5e, 0x1b,
	0x08, 0x13, 0x49, 0x34, 0x31, 0xd7, 0x3f, 0xa5, 0x48, 0x67, 0xea, 0x92, 0xb0, 0x17, 0xb4, 0x5c,
	0x65, 0xe4, 0x4c, 0x81, 0x2c, 0x24, 0x27, 0x8c, 0xa8, 0x9c, 0xb0, 0x05, 0x67, 0xb3, 0x72, 0x65,
	0xdb, 0x1f, 0x48, 0x48, 0x56, 0x84, 0x90, 0xfc, 0xf7, 0x16, 0xac, 0xe6, 0xe2, 0x43, 0xe4, 0x06,
	0x21, 0xbd, 0xa5, 0x46, 0x76, 0x29, 0xc2, 0x3e, 0x87, 0xe8, 0xac, 0xc5, 0x32, 0xa2, 0x33, 0xbb,
	0x69, 0x8a, 0xe8, 0x1f, 0xd1, 0x17, 0x90, 0xb5, 0x3c, 0x79, 0xba, 0xed, 0x4b, 0x69, 0xfa, 0xef,
	0x2c, 0x58, 0x4e, 0x90, 0xa4, 0x4f, 0xaf, 0x45, 0x7f, 0x93, 0xfb, 0xf3, 0x5f, 0x2d, 0x58, 0x32,
	0x29, 0x29, 0x68, 0x17, 0x10, 0x5f, 0x18, 0x1a, 0xfb, 0xfd, 0x86, 0x3a, 0xdf, 0x65, 0x34, 0xb3,
	0x12, 0xee, 0x74, 0xe6, 0xc3, 0x54, 0x3a, 0x7a, 0x0d, 0xa6, 0xa8, 0x0f, 0x4d, 0x23, 0x26, 0x94,
	0x90, 0xa6, 0xcd, 0x62, 0x52, 0x39, 0x10, 0xc9, 0x14, 0xf4, 0x32, 0x4c, 0xb0, 0x17, 0xf0, 0x84,
	0x57, 0xc4, 0x7a, 0xba, 0xb6, 0x3a, 0x26, 0x8e, 0x28, 0x6c, 0xff, 0x33, 0x0b, 0xd6, 0xc4, 0x19,
	0x11, 0x7d, 0x19, 0x27, 0x68, 0xf6, 0xd4, 0xb8, 0x8a, 0xa9, 0xa0, 0x85, 0x56, 0x36, 0x68, 0x61,
	0x69, 0xd8, 0xa7, 0x74, 0xb4, 0xe9, 0x75, 0x98, 0xf4, 0x7c, 0x2f, 0xf6, 0xdc, 0x38, 0x08, 0xf9,
	0xe1, 0x59, 0x92, 0x80, 0x9e, 0x05, 0xe4, 0x45, 0x0d, 0xb7, 0x17, 0x07, 0x8d, 0x43, 0xec, 0x63,
	0xe5, 0x2d, 0x83, 0xaa, 0x33, 0xef, 0x45, 0x9b, 0xbd, 0x38, 0xb8, 0x2b, 0xd3, 0xed, 0xdf, 0xb1,
	0x60, 0x39, 0x8d, 0xf8, 0x90, 0x0e, 0x94, 0x54, 0xcd, 0x70, 0x45, 0x75, 0x2b, 0x56, 0x1b, 0x67,
	0xda, 0xe0, 0xf7, 0x2d, 0x71, 0x37, 0xec, 0xb1, 0xe0, 0xf6, 0x5c, 0x62, 0x2c, 0xaa, 0x14, 0x21,
	0xc7, 0x97, 0xd4, 0xdf, 0x1e, 0x81, 0x35, 0xee, 0x52, 0x67, 0x1c, 0xf2, 0x67, 0x01, 0x89, 0xf7,
	0x93, 0x78, 0x4e, 0xb2, 0xc3, 0x98, 0xef, 0x6a, 0x55, 0xb6, 0x5b, 0x84, 0x41, 0x14, 0x4d, 0x45,
	0x58, 0x87, 0x95, 0xa4, 0xdc, 0x2b, 0x14, 0x17, 0x61, 0xfa, 0xc0, 0xf5, 0xda, 0xbd, 0x10, 0x33,
	0xd3, 0x20, 0x0f, 0x77, 0xc1, 0xd3, 0xe8, 0x0d, 0xd9, 0xa7, 0x60, 0x4e, 0x14, 0x11, 0x74, 0xe1,
	0x3e, 0x3b, 0x3c, 0x59, 0xdc, 0xea, 0xbb, 0x0e, 0x8b, 0xa2, 0xa0, 0x8a, 0x0d, 0xb3, 0x36, 0x22,
	0x9e, 0xa5, 0x28, 0x43, 0x9c, 0x29, 0x27, 0xe4, 0xd5, 0x0b, 0x8f, 0xee, 0x04, 0x1f, 0x05, 0x41,
	0x4a, 0x7d, 0x1a, 0x7e, 0xce, 0x62, 0xf4, 0xe8, 0x6d, 0x45, 0x0f, 0xd7, 0x98, 0x7a, 0xde, 0xa2,
	0x5e, 0x07, 0x2b, 0xbd, 0x47, 0xb6, 0x06, 0x93, 0x49, 0xe0, 0x03, 0xa6, 0xeb, 0x54, 0x5b, 0x22,
	0xe2, 0xc1, 0x0a, 0x4c, 0x88, 0x48, 0x07, 0xfc, 0x89, 0x9d, 0x16, 0x0b, 0x71, 0x20, 0x4f, 0xe1,
	0xc6, 0xcd, 0xa7, 0x70, 0x13, 0xda, 0xcd, 0xa6, 0x2f, 0xc0, 0x4a, 0xaa, 0x93, 0x25, 0xc7, 0x6e,
	0xcf, 0xe9, 0xba, 0x62, 0x19, 0x23, 0xff, 0x90, 0xbf, 0xdd, 0x9f, 0x26, 0xe4, 0x90, 0xbc, 0x43,
	0xd4, 0x33, 0xb8, 0x0d, 0xf9, 0xd0, 0x9d, 0xa9, 0x7b, 0xfc, 0x20, 0xee, 0xaf, 0x2d, 0xb8, 0x6c,
	0x9a, 0x68, 0x32, 0x9e, 0xc7, 0x43, 0x0e, 0x7a, 0x7e, 0x44, 0xe9, 0x91, 0xd3, 0x46, 0x94, 0xae,
	0x18, 0x23, 0x4a, 0xa3, 0x8f, 0x42, 0x8d, 0x3d, 0xca, 0x96, 0xe0, 0x43, 0xbd, 0x3c, 0x12, 0x77,
	0x87, 0xb3, 0x2c, 0x5f, 0x60, 0x75, 0xc7, 0x6b, 0xe3, 0x07, 0x61, 0xdb, 0xfe, 0x38, 0x65, 0xed,
	0xe4, 0x05, 0xb9, 0xb6, 0xeb, 0x27, 0x7e, 0xd4, 0x65, 0x36, 0x0b, 0xfb, 0x77, 0xd9, 0x80, 0x66,
	0xaa, 0x3f, 0x56, 0xbb, 0x58, 0xba, 0x75, 0x26, 0xd2, 0xff, 0x01, 0xbb, 0x2b, 0xa4, 0x0c, 0xc4,
	0x4e, 0xeb, 0xe0, 0x41, 0xb7, 0x1d, 0xb8, 0x2d, 0x9c, 0xf7, 0x1a, 0x1e, 0x51, 0xb0, 0x09, 0xd9,
	0x54, 0xbf, 0x5f, 0xf1, 0x4d, 0x54, 0x97, 0x10, 0xc7, 0xd8, 0xa7, 0x1e, 0x72, 0xb1, 0xc7, 0x7d,
	0x21, 0xc7, 0x9c, 0x19, 0x99, 0xba, 0xe7, 0x31, 0xdf, 0x61, 0xce, 0x19, 0xf2, 0xde, 0x6f, 0x95,
	0x25, 0x88, 0x50, 0xfd, 0x7e, 0x2c, 0x1c, 0xeb, 0xa6, 0x1d, 0xf1, 0x69, 0x7f, 0x09, 0x2e, 0x16,
	0x60, 0x3b, 0x94, 0x28, 0x32, 0xf7, 0x61, 0x91, 0x47, 0x08, 0xa1, 0xcf, 0x6f, 0x0e, 0x10, 0x28,
	0x64, 0x03, 0xc4, 0x5b, 0x9d, 0x8a, 0xfb, 0x10, 0x4f, 0xd9, 0x6e, 0xd9, 0xdf, 0xb3, 0x60, 0x49,
	0x87, 0x38, 0x14, 0x3e, 0xb8, 0x0e, 0x13, 0xbc, 0xcd, 0x4c, 0x64, 0x6c, 0xad, 0x75, 0x51, 0xca,
	0xfe, 0x15, 0x0b, 0x50, 0x12, 0x48, 0x6e, 0x68, 0x8f, 0x4f, 0xab, 0xdc, 0x99, 0x0a, 0x39, 0xc6,
	0x58, 0xf2, 0x77, 0xd9, 0xd9, 0xae, 0xe9, 0xaa, 0xc3, 0x90, 0xe2, 0x87, 0x8f, 0xd1, 0x66, 0x38,
	0x4e, 0x8b, 0xfa, 0x85, 0x00, 0x76, 0x65, 0x83, 0x95, 0xb0, 0x5f, 0x86, 0xf5, 0x1c, 0xcc, 0x8a,
	0x2f, 0x61, 0x7c, 0x15, 0x6c, 0x3d, 0x48, 0xfb, 0x3d, 0xd7, 0xef, 0x89, 0x63, 0xbb, 0xe8, 0x34,
	0x21, 0xf7, 0x3b, 0xb4, 0x22, 0x3f, 0xd4, 0x8c, 0x1a, 0x22, 0x24, 0x20, 0x17, 0x90, 0x1d, 0x15,
	0xec, 0x6d, 0x1e, 0x1f, 0xf0, 0xf7, 0x2c, 0xb8, 0x54, 0xd8, 0xfa, 0x87, 0x19, 0x29, 0xfe, 0x9b,
	0x9c, 0xe9, 0xdc, 0x7e, 0xdb, 0xf3, 0x8f, 0xa3, 0x47, 0x14, 0xd9, 0xec, 0x94, 0x57, 0x95, 0x77,
	0x60, 0x5e, 0x20, 0x50, 0xb2, 0x92, 0x67, 0x82, 0x40, 0x74, 0x59, 0xbd, 0x6b, 0xbc, 0xbe, 0x58,
	0xc2, 0x7f, 0x83, 0xbd, 0xc5, 0x95, 0x74, 0x6b, 0x58, 0xb7, 0x89, 0x95, 0xb5, 0x7b, 0x59, 0xae,
	0xdd, 0x5a, 0x4f, 0xf8, 0xa2, 0xfd, 0x04, 0x20, 0x81, 0x23, 0xa3, 0xf1, 0xcd, 0x3e, 0xdf, 0xc3,
	0xa8, 0x41, 0xf3, 0x36, 0x61, 0x56, 0x2f, 0x75, 0xfa, 0xe0, 0x7c, 0xbf, 0xaa, 0x8d, 0xe8, 0x63,
	0x0a, 0x9a, 0x97, 0x1e, 0x06, 0xc6, 0x5c, 0x7f, 0x69, 0xd1, 0x47, 0x33, 0x78, 0xe2, 0x03, 0xe7,
	0xcd, 0x87, 0xed, 0x94, 0x78, 0xd8, 0xbc, 0xe3, 0x46, 0xc7, 0xca, 0xc3, 0xe6, 0xf7, 0xdc, 0xe8,
	0x38, 0xf5, 0x4e, 0xfb, 0x68, 0xf1, 0x3b, 0xed, 0x63, 0x65, 0xef, 0xb4, 0x8f, 0x67, 0xdf, 0x69,
	0x7f, 0x9f, 0xfa, 0xaf, 0x8a, 0x4e, 0x84, 0xc3, 0x72, 0x2d, 0xcc, 0x78, 0x7d, 0xda, 0xbf, 0x6e,
	0xc1, 0x5a, 0xd2, 0xf2, 0x6e, 0xec, 0xc6, 0xcc, 0x27, 0xf8, 0xa1, 0xa9, 0x98, 0x8a, 0x21, 0x51,
	0x29, 0x8e, 0x21, 0x31, 0xaa, 0xc7, 0x90, 0xb0, 0xbf, 0xce, 0x96, 0x05, 0x86, 0x8d, 0xc9, 0xab,
	0xb1, 0x54, 0x68, 0x30, 0x84, 0x47, 0x24, 0xc2, 0xa7, 0x93, 0x12, 0xdf, 0xb3, 0x98, 0xf4, 0xcf,
	0x92, 0x63, 0x28, 0xe3, 0xf1, 0x94, 0xc6, 0xe2, 0x8b, 0x92, 0xc5, 0x95, 0x86, 0x19, 0x97, 0xff,
	0xbe, 0x05, 0x17, 0x4d, 0x78, 0xf1, 0xcb, 0x86, 0x8f, 0x45, 0xc9, 0x14, 0xc8, 0xd1, 0x36, 0x33,
	0x18, 0xfe, 0xcc, 0x82, 0xf3, 0xda, 0x8d, 0xff, 0xc7, 0xa3, 0x63, 0x3e, 0x0d, 0x0b, 0x21, 0x6b,
	0x55, 0xf1, 0x74, 0xe5, 0xd7, 0x3b, 0x42, 0x15, 0x9d, 0x42, 0x95, 0xb3, 0x0b, 0x17, 0xf2, 0x71,
	0x1f, 0x8a, 0xc6, 0xf9, 0x1a, 0x2c, 0xdf, 0xa2, 0x81, 0x9d, 0x77, 0xdd, 0x13, 0xdc, 0xda, 0xa2,
	0x06, 0xb7, 0x5c, 0xb7, 0x44, 0xfe, 0x58, 0xd0, 0x88, 0xf6, 0x58, 0xd0, 0x4f, 0x18, 0x4b, 0xdc,
	0xd7, 0x23, 0x6d, 0x79, 0x38, 0x1a, 0xe2, 0x5d, 0xe5, 0xeb, 0xba, 0xb5, 0x46, 0x39, 0xf8, 0x4e,
	0xc5, 0xfb, 0x12, 0x6b, 0xe4, 0x4f, 0x25, 0xdf, 0xd2, 0x30, 0x52, 0x9e, 0xff, 0x26, 0x99, 0x7e,
	0xd1, 0x50, 0xaf, 0x7d, 0xbf, 0xa8, 0x23, 0x79, 0x2e, 0x13, 0x42, 0x8b, 0x63, 0xc1, 0x91, 0xe0,
	0x98, 0xfe, 0xbe, 0x05, 0xb6, 0xe2, 0x74, 0x94, 0xe9, 0xd0, 0xa0, 0xf2, 0x27, 0x2f, 0x30, 0xda,
	0x48, 0x5e, 0x60, 0x34, 0xf4, 0x24, 0xcc, 0xb5, 0x02, 0x3f, 0x16, 0xcf, 0x67, 0x89, 0xd7, 0xc2,
	0xaa, 0xce, 0x0c, 0x49, 0x66, 0x0f, 0x67, 0xbd, 0xed, 0xc6, 0x54, 0xc7, 0x2b, 0xc4, 0xf0, 0xc3,
	0xd4, 0xf1, 0x9e, 0xa5, 0xbb, 0xdf, 0x3c, 0xaa, 0xa5, 0x84, 0xb2, 0xfd, 0x63, 0xb6, 0xea, 0x3c,
	0xa6, 0x2e, 0xbc, 0x90, 0x7e, 0x9d, 0xbe, 0x80, 0x6f, 0x45, 0x49, 0xfb, 0x15, 0x58, 0xe3, 0x5b,
	0xa8, 0xd4, 0x3b, 0x42, 0x65, 0x5b, 0x43, 0xfb, 0x55, 0xea, 0xed, 0xa1, 0xbe, 0x92, 0x3f, 0xf0,
	0xea, 0x65, 0xff, 0x16, 0xf3, 0xea, 0x48, 0x55, 0x1e, 0xd2, 0xda, 0x33, 0xd6, 0x23, 0xe0, 0xf9,
	0x34, 0x31, 0xdc, 0xde, 0x61, 0xf9, 0xf6, 0x01, 0xac, 0x6e, 0xfb, 0x27, 0x5e, 0x8c, 0x49, 0x46,
	0x12, 0x64, 0x60, 0xf0, 0x30, 0xc2, 0x86, 0x90, 0x88, 0x88, 0xdf, 0x1c, 0xe2, 0xaf, 0x36, 0x90,
	0xdf, 0xf4, 0x29, 0x30, 0x53, 0x43, 0xc3, 0x62, 0x6b, 0x89, 0x40, 0xfe, 0xd5, 0x25, 0xfb, 0x26,
	0x2c, 0x27, 0x28, 0x6d, 0xb6, 0x3a, 0x89, 0xe3, 0x8e, 0xf9, 0x26, 0x23, 0x52, 0x6e, 0x44, 0x89,
	0x7e, 0x7d, 0xc7, 0x82, 0x95, 0x0c, 0x90, 0x0f, 0xb3, 0x53, 0x7b, 0xb0, 0xe6, 0xe0, 0x08, 0xfb,
	0x2d, 0x86, 0xd5, 0xa3, 0x19, 0x52, 0xfb, 0x79, 0xa8, 0xa9, 0x50, 0xcb, 0x89, 0x65, 0x5f, 0xa1,
	0x5e, 0x64, 0x2a, 0xaf, 0xe7, 0xac, 0x81, 0x94, 0x84, 0x99, 0xa2, 0x1f, 0x26, 0x09, 0x2f, 0xd3,
	0xad, 0x1f, 0xed, 0x63, 0x11, 0xde, 0xdf, 0x62, 0x9b, 0x13, 0xa5, 0xdc, 0x87, 0x89, 0xf4, 0x6d,
	0x58, 0xa1, 0x11, 0x9a, 0xd9, 0x00, 0x69, 0x51, 0xb0, 0x8d, 0x97, 0x9e, 0x72, 0x06, 0xfa, 0x47,
	0x16, 0xd4, 0xb2, 0x70, 0x86, 0xd2, 0xb1, 0x15, 0x98, 0x20, 0x98, 0x2b, 0x31, 0x5c, 0xc9, 0x27,
	0x8f, 0x12, 0x45, 0x32, 0xa8, 0xbf, 0x2e, 0x37, 0x2d, 0x92, 0x04, 0xea, 0xa1, 0xfb, 0x2e, 0x2c,
	0xb2, 0x80, 0x50, 0x0c, 0xc1, 0xe2, 0x3e, 0xe6, 0xde, 0x9c, 0x93, 0x9d, 0x1f, 0x53, 0x3b, 0x4f,
	0x46, 0x54, 0x07, 0xfe, 0x61, 0x8e, 0xe8, 0x77, 0x2c, 0xba, 0x6f, 0x94, 0xfc, 0xf5, 0xa1, 0xaf,
	0x15, 0x2f, 0x69, 0x46, 0xf0, 0xe8, 0x4e, 0x10, 0xaa, 0xd3, 0x23, 0xef, 0xe2, 0x9e, 0xfd, 0x07,
	0x4c, 0x1f, 0xc8, 0xd6, 0x1b, 0x92, 0xa7, 0x9c, 0x12, 0x22, 0x51, 0x68, 0xb2, 0xb4, 0x9e, 0x40,
	0x80, 0xb7, 0xcf, 0x5e, 0x9a, 0x4b, 0xa2, 0x27, 0xde, 0x83, 0x45, 0x43, 0x89, 0x41, 0x9f, 0x29,
	0xca, 0x2c, 0x78, 0x5d, 0x11, 0x3c, 0x96, 0x50, 0xf0, 0x4e, 0x10, 0x9a, 0x24, 0xa1, 0x32, 0x03,
	0x2c, 0x6d, 0x06, 0x94, 0x6e, 0xc4, 0x4d, 0x2d, 0xbe, 0x99, 0xc4, 0xeb, 0xa3, 0x2d, 0x66, 0x04,
	0x58, 0x6e, 0x73, 0x26, 0x68, 0x57, 0xa8, 0x11, 0x88, 0x80, 0x62, 0x5b, 0x8e, 0xdc, 0xd8, 0xa1,
	0xf6, 0x4d, 0x2a, 0x2e, 0x93, 0x92, 0x7c, 0x58, 0x9f, 0x11, 0x9a, 0x7a, 0x3a, 0xa8, 0x8a, 0x28,
	0xa9, 0x7a, 0x53, 0x3d, 0x03, 0xf3, 0x6c, 0x4d, 0x09, 0xb4, 0xdb, 0xbd, 0x46, 0x74, 0xed, 0xfb,
	0xc9, 0x48, 0x0d, 0x52, 0xbe, 0xdc, 0xe2, 0xf5, 0x0a, 0x40, 0x72, 0x55, 0xd9, 0xe8, 0x73, 0xb3,
	0x0c, 0xe3, 0x3c, 0xbc, 0x06, 0x97, 0x23, 0xec, 0xcb, 0xfe, 0x4d, 0x1e, 0x07, 0x81, 0xe1, 0x31,
	0x24, 0x37, 0x55, 0xfa, 0xde, 0x73, 0xa3, 0x58, 0x64, 0x54, 0x7b, 0xfc, 0x97, 0xfd, 0x71, 0x1a,
	0x47, 0x9a, 0x39, 0x70, 0xf0, 0x0d, 0x63, 0xfa, 0x21, 0x93, 0x02, 0xfd, 0xf6, 0x07, 0x16, 0x8d,
	0xe4, 0x9c, 0x53, 0xfd, 0xb1, 0x86, 0x54, 0xd4, 0x70, 0x60, 0x3b, 0x91, 0x1b, 0xff, 0xab, 0x0f,
	0xb3, 0xfc, 0x05, 0xde, 0x5d, 0x1c, 0xd2, 0x28, 0x22, 0x9f, 0xe5, 0x87, 0x31, 0x4c, 0x93, 0xbf,
	0xd9, 0xe7, 0x66, 0x14, 0xb4, 0xa1, 0x9f, 0x96, 0xa4, 0xb2, 0xeb, 0x17, 0x18, 0x6a, 0xf9, 0x8f,
	0x89, 0xda, 0x67, 0xd0, 0x03, 0x40, 0xd9, 0x7c, 0xb4, 0x66, 0x02, 0xcc, 0x49, 0x3b, 0x10, 0xd8,
	0x26, 0xd4, 0x95, 0xf7, 0xb2, 0x5f, 0x8f, 0x02, 0xff, 0x96, 0x1b, 0xbb, 0x02, 0xfc, 0x05, 0x69,
	0x05, 0x4e, 0x97, 0x10, 0x6d, 0x5c, 0x2c, 0x28, 0x21, 0x1b, 0xf9, 0x34, 0x2c, 0x89, 0xc8, 0x72,
	0x1a, 0xf6, 0x75, 0xad, 0xb2, 0x8e, 0xfc, 0x9a, 0x31, 0x4f, 0x82, 0xdc, 0xa5, 0x2e, 0x2d, 0x34,
	0x8b, 0x3f, 0x5b, 0x69, 0x06, 0xaa, 0x05, 0x95, 0x4f, 0x01, 0x15, 0x79, 0x12, 0xe8, 0x5d, 0x98,
	0x56, 0x4f, 0xb3, 0xd0, 0xaa, 0x42, 0x40, 0xfd, 0xc4, 0xae, 0x5e, 0x37, 0x65, 0x49, 0x40, 0x9f,
	0x97, 0x87, 0x72, 0x7a, 0x87, 0x2f, 0x6a, 0xb5, 0x4c, 0xfb, 0xbd, 0x81, 0x06, 0xed, 0x45, 0x98,
	0x62, 0x47, 0xe6, 0xb4, 0x14, 0x4a, 0xdd, 0xe9, 0xa8, 0xf3, 0xe7, 0x2a, 0x6f, 0x77, 0xba, 0xb1,
	0xda, 0xbb, 0x57, 0x61, 0x96, 0xd5, 0x92, 0x6f, 0xe5, 0x64, 0x37, 0xd9, 0x79, 0x75, 0x3f, 0x05,
	0x33, 0xda, 0x83, 0xd1, 0x82, 0xca, 0xa6, 0x57, 0xa4, 0xeb, 0xab, 0x99, 0x3c, 0x05, 0xd2, 0x5b,
	0x30, 0x43, 0xe6, 0x90, 0x5c, 0x81, 0xd1, 0xba, 0xbe, 0x22, 0x92, 0xcc, 0xe4, 0xa5, 0x83, 0xfa,
	0x46, 0x4e, 0xae, 0x84, 0xb7, 0x0d, 0xb3, 0xfa, 0x79, 0x14, 0xe2, 0x11, 0x29, 0x92, 0xeb, 0x9f,
	0x02, 0xd6, 0xba, 0x1a, 0x7a, 0xd4, 0x80, 0x5a, 0x03, 0x96, 0x4c, 0xaf, 0x1f, 0x8b, 0x51, 0x93,
	0x77, 0x67, 0x69, 0x19, 0xed, 0x8a, 0x6f, 0xdd, 0x36, 0x81, 0xd6, 0x1f, 0x4f, 0xb6, 0xcf, 0xa0,
	0x18, 0xd6, 0x0a, 0xec, 0x2a, 0x88, 0x7b, 0x90, 0x96, 0x1b, 0x87, 0xea, 0x57, 0x07, 0x28, 0x29,
	0x5b, 0xfd, 0x2c, 0xa0, 0xec, 0xc3, 0xd7, 0xe8, 0xbc, 0x09, 0x63, 0x75, 0x66, 0x5f, 0xc8, 0x2f,
	0x20, 0x41, 0xbb, 0xb0, 0x6c, 0x7e, 0x71, 0x18, 0x5d, 0xca, 0x60, 0x98, 0x7d, 0x8f, 0x78, 0xa0,
	0x26, 0xb0, 0xb6, 0x77, 0x53, 0xae, 0xe8, 0x89, 0x26, 0x0a, 0x6f, 0xee, 0xd6, 0x9f, 0x18, 0xe4,
	0x52, 0xa0, 0x7d, 0x06, 0x1d, 0x6b, 0x3d, 0x31, 0x34, 0x53, 0x78, 0x4f, 0xb0, 0xfe, 0xb4, 0xe8,
	0x49, 0xf9, 0xbb, 0x34, 0x8c, 0x0f, 0x0a, 0xce, 0x50, 0x05, 0x1f, 0x94, 0x1f, 0xf2, 0x0a, 0x3e,
	0x18, 0xe0, 0x40, 0x96, 0x8a, 0x4c, 0x94, 0x7d, 0x46, 0x5b, 0xc8, 0x38, 0xfd, 0x69, 0x6d, 0x7d,
	0x78, 0x72, 0xdf, 0xde, 0xa6, 0x82, 0x61, 0xee, 0x2e, 0x8e, 0x35, 0x88, 0xeb, 0x92, 0xe4, 0x26,
	0xa0, 0xe6, 0x27, 0xb5, 0xed, 0x33, 0xe8, 0x4d, 0xf6, 0xbe, 0x8e, 0x9a, 0x2a, 0x17, 0x20, 0x3e,
	0xed, 0x4d, 0xf0, 0x16, 0xb3, 0xf8, 0x47, 0xf6, 0x19, 0x74, 0x1f, 0x96, 0xef, 0xb9, 0xe1, 0xb1,
	0x9a, 0xbc, 0xc9, 0xa2, 0x8c, 0x3c, 0x24, 0x7a, 0xc7, 0x2c, 0x5c, 0xb7, 0x20, 0xb2, 0xf6, 0x5e,
	0x41, 0x84, 0x9e, 0x4a, 0xf0, 0x34, 0x97, 0x48, 0x09, 0x0a, 0xde, 0x21, 0x63, 0x59, 0xda, 0x98,
	0x6a, 0x9c, 0xd3, 0x72, 0xd1, 0xe5, 0x0c, 0x47, 0x9b, 0x5e, 0xa3, 0xa8, 0x3f, 0x59, 0x56, 0x4c,
	0x0e, 0xe1, 0x51, 0x9a, 0x1b, 0xf5, 0xf6, 0x6c, 0x5d, 0xfa, 0x19, 0x1b, 0xbb, 0x54, 0x58, 0x46,
	0x5d, 0x5f, 0xc5, 0x42, 0x4e, 0x6f, 0x7c, 0xaf, 0xaa, 0x0c, 0xc6, 0xd2, 0x52, 0xeb, 0xab, 0x9e,
	0x25, 0x01, 0xdd, 0x82, 0x29, 0xa6, 0xdf, 0x93, 0xf4, 0x08, 0xd5, 0x12, 0xa2, 0xf2, 0xa4, 0xd4,
	0x52, 0xa4, 0xe5, 0x48, 0x28, 0x9b, 0x30, 0x49, 0x36, 0x0b, 0x0c, 0x97, 0x65, 0x49, 0xaf, 0xd3,
	0x20, 0x72, 0x8f, 0x86, 0x73, 0x64, 0xcb, 0x33, 0xc9, 0x12, 0xca, 0x08, 0xe2, 0x81, 0xaf, 0xc4,
	0xf7, 0x80, 0x0a, 0xc8, 0xb1, 0xa6, 0x8d, 0xbd, 0xc9, 0x1f, 0x33, 0x64, 0xa3, 0xd3, 0x42, 0x4f,
	0x66, 0x74, 0x2d, 0xa2, 0x72, 0xb3, 0x5c, 0x52, 0x36, 0x35, 0x1a, 0x4a, 0x39, 0x22, 0x53, 0xf9,
	0x7e, 0x2c, 0x69, 0xec, 0xab, 0x32, 0xb0, 0x33, 0x29, 0xc2, 0x7f, 0xf2, 0x97, 0x00, 0x44, 0x93,
	0xcf, 0x17, 0x34, 0xa9, 0xd7, 0x38, 0x65, 0xe3, 0xfb, 0x92, 0x70, 0x5c, 0x85, 0xde, 0x6c, 0xb5,
	0x42, 0xa2, 0x22, 0x25, 0xaf, 0xb4, 0x66, 0x33, 0xd3, 0x6d, 0x98, 0xcb, 0xc8, 0x36, 0x3e, 0x0a,
	0x67, 0xd9, 0xb0, 0xdd, 0x0f, 0xb5, 0xe8, 0x98, 0x48, 0xf7, 0x14, 0xaa, 0xeb, 0x9f, 0x8c, 0x4f,
	0xd5, 0xa7, 0x12, 0x91, 0xc2, 0x45, 0xa9, 0xd7, 0x3d, 0x05, 0x7b, 0x98, 0x5e, 0x56, 0xb4, 0xcf,
	0xa0, 0x4f, 0x02, 0x24, 0x4e, 0x50, 0x68, 0x49, 0xec, 0x40, 0xd4, 0xe7, 0x0f, 0xeb, 0x35, 0xc9,
	0x78, 0x29, 0x67, 0x29, 0xfb, 0x0c, 0xfa, 0x38, 0xcc, 0xb0, 0xc3, 0xbb, 0x62, 0x10, 0x39, 0x4a,
	0xdb, 0x03, 0xe6, 0x36, 0x92, 0x7a, 0x41, 0x52, 0xc8, 0xd4, 0xfc, 0x67, 0x3e, 0x4b, 0x3a, 0x75,
	0x17, 0xe6, 0x93, 0xba, 0x2c, 0xd2, 0x68, 0x0e, 0x5e, 0x6b, 0xd9, 0x87, 0xee, 0x23, 0x4d, 0x15,
	0x5c, 0x34, 0x44, 0x2d, 0x15, 0xf8, 0xe5, 0x07, 0x34, 0x15, 0xfd, 0xd5, 0xb6, 0x72, 0xf6, 0x19,
	0xf4, 0x1a, 0xcc, 0x68, 0x6f, 0x2c, 0xa2, 0xcc, 0xdb, 0x7c, 0x02, 0x23, 0xe3, 0x53, 0x8c, 0x54,
	0xae, 0x40, 0xf2, 0x30, 0xa2, 0x50, 0x24, 0x33, 0x4f, 0x25, 0x96, 0x41, 0x49, 0xd8, 0x87, 0xbe,
	0x27, 0x98, 0x62, 0x1f, 0xf5, 0x71, 0xc4, 0x14, 0xa5, 0xb5, 0xe7, 0x07, 0x29, 0xa0, 0x64, 0xf8,
	0x3f, 0x10, 0x46, 0xaf, 0xc0, 0x14, 0x9b, 0x09, 0x2c, 0xf8, 0x1d, 0xe2, 0x81, 0x87, 0x14, 0xc3,
	0xac, 0xa0, 0xa9, 0x66, 0x64, 0xb5, 0xcf, 0xa0, 0xf7, 0x61, 0xbd, 0x48, 0xa9, 0x41, 0x57, 0x07,
	0x51, 0x7c, 0x1e, 0x46, 0x47, 0x7a, 0x8d, 0x72, 0x99, 0xb6, 0xef, 0x16, 0x78, 0x73, 0x3e, 0x67,
	0x50, 0x73, 0xf6, 0xe8, 0x72, 0x11, 0x35, 0x5a, 0x0f, 0x94, 0x45, 0xb4, 0xc8, 0x38, 0xa1, 0x2c,
	0xa2, 0x85, 0x46, 0x08, 0x3a, 0x53, 0x41, 0x96, 0x22, 0xbb, 0x23, 0x81, 0x54, 0x92, 0x28, 0x60,
	0xce, 0xa7, 0x10, 0xee, 0xdb, 0x67, 0xd0, 0x4b, 0x30, 0xc3, 0xd8, 0x5d, 0x00, 0xc8, 0x14, 0x32,
	0x56, 0xbb, 0x0b, 0xb3, 0xfa, 0xed, 0x78, 0xb1, 0xec, 0xa4, 0x1e, 0xa2, 0xab, 0xaf, 0xeb, 0xc9,
	0xfa, 0x55, 0x7a, 0xba, 0x89, 0x9a, 0x4b, 0xdd, 0x67, 0xcf, 0x83, 0xb4, 0x91, 0x82, 0xa4, 0xdf,
	0x7e, 0xb7, 0xcf, 0xa0, 0x1d, 0x58, 0xbc, 0xe3, 0xf9, 0xad, 0xcd, 0x76, 0x5b, 0x8d, 0xb6, 0x20,
	0x38, 0x37, 0xf3, 0x82, 0x62, 0xfd, 0x5c, 0x71, 0x78, 0x06, 0xfb, 0x0c, 0x72, 0xd8, 0x63, 0x4e,
	0x09, 0x44, 0x8e, 0x61, 0x2e, 0xc8, 0xf3, 0x25, 0xd1, 0x14, 0xe8, 0x44, 0x9f, 0xd1, 0x60, 0xe6,
	0x03, 0xab, 0xe5, 0x85, 0x29, 0x60, 0x3b, 0xab, 0xec, 0x5b, 0x7a, 0x62, 0x67, 0x95, 0xfb, 0x7a,
	0x9f, 0xd0, 0xab, 0xf3, 0x9f, 0xe1, 0xb3, 0xcf, 0xa0, 0xdb, 0x74, 0xc3, 0x9d, 0x38, 0x87, 0x2a,
	0x26, 0x24, 0x2d, 0x3d, 0x99, 0xbe, 0x59, 0x47, 0x53, 0xba, 0x00, 0xcd, 0x0b, 0x39, 0x2a, 0x21,
	0x99, 0x8a, 0xe6, 0xd5, 0xff, 0x34, 0xdd, 0x7d, 0x19, 0x42, 0xab, 0x4b, 0xd3, 0x50, 0x6e, 0xd4,
	0xf5, 0x3c, 0x90, 0xbb, 0xf4, 0x84, 0xcd, 0x14, 0x75, 0xdd, 0x38, 0xbf, 0xed, 0x74, 0x3b, 0xd9,
	0x28, 0xed, 0xf6, 0x19, 0x74, 0x90, 0xf2, 0xf2, 0x15, 0x2f, 0xd3, 0x0b, 0x9f, 0x5a, 0x31, 0x28,
	0xb9, 0xde, 0xb6, 0x03, 0xb6, 0xb3, 0x4f, 0x0d, 0x9a, 0xe9, 0xa0, 0xe0, 0x37, 0xfb, 0xda, 0x40,
	0xf1, 0xc5, 0xc9, 0x18, 0x27, 0x5d, 0xf0, 0x7b, 0x5e, 0xdc, 0xf3, 0x82, 0x36, 0xb6, 0x02, 0xff,
	0x04, 0x87, 0xd4, 0x2c, 0xfc, 0x81, 0xdb, 0xc0, 0xec, 0x91, 0x1a, 0x53, 0x70, 0x73, 0xa1, 0x81,
	0x15, 0x45, 0x4d, 0x17, 0x1a, 0x58, 0x61, 0x74, 0x74, 0xa6, 0xe5, 0x19, 0x5d, 0x9c, 0x45, 0x1b,
	0x45, 0xfe, 0xcf, 0xf5, 0x4b, 0x85, 0x65, 0x94, 0x45, 0x12, 0x69, 0x0f, 0x48, 0xb2, 0x68, 0xda,
	0x75, 0xb9, 0x6b, 0xcf, 0x3c, 0x2d, 0x99, 0xa7, 0x2e, 0xbd, 0x41, 0x4d, 0x00, 0x49, 0xf1, 0xe4,
	0x71, 0xc6, 0x87, 0x00, 0xf6, 0xae, 0xb8, 0x31, 0x28, 0x75, 0x4f, 0x6d, 0x53, 0x95, 0xf3, 0xde,
	0x9f, 0x30, 0xa7, 0x16, 0x3c, 0xb2, 0x67, 0x9f, 0x41, 0xdf, 0xb4, 0xe0, 0xb9, 0x02, 0xe0, 0x5c,
	0x65, 0xf2, 0x02, 0xf9, 0x52, 0xb0, 0xd8, 0x39, 0x94, 0xbd, 0x20, 0x58, 0x7f, 0xaa, 0xb4, 0x9c,
	0x44, 0xa2, 0x07, 0x76, 0xfa, 0x95, 0x45, 0x43, 0xc3, 0xc9, 0x3a, 0x5b, 0xf4, 0x98, 0xa4, 0xb2,
	0xce, 0x16, 0x3e, 0xdb, 0x68, 0x9f, 0x41, 0x7d, 0xb8, 0xcc, 0x55, 0xa2, 0x47, 0xd3, 0xf2, 0x29,
	0x7a, 0xfc, 0x35, 0x78, 0xaa, 0x80, 0xea, 0x7b, 0x44, 0x8f, 0x19, 0x22, 0xbd, 0x03, 0xe1, 0x2f,
	0x9a, 0xd3, 0xe4, 0x23, 0xa7, 0x74, 0x04, 0xe7, 0x0d, 0x94, 0x7e, 0x98, 0x36, 0x4f, 0xd1, 0xcb,
	0xd7, 0xd9, 0xba, 0x2c, 0x9f, 0x51, 0x14, 0x53, 0xcf, 0xf4, 0x9a, 0xa3, 0x50, 0x7a, 0x8d, 0xef,
	0x2e, 0x52, 0xe1, 0x73, 0xee, 0x2e, 0x8e, 0x37, 0xdb, 0xed, 0xbc, 0x77, 0x83, 0x8c, 0xeb, 0xcd,
	0xd3, 0xfa, 0xb9, 0x43, 0xd1, 0x23, 0x4d, 0xf6, 0x19, 0xf4, 0x25, 0xe1, 0xd4, 0x6c, 0x6e, 0xe0,
	0x4a, 0xf9, 0xdb, 0x45, 0xfa, 0xb8, 0x94, 0xbd, 0xb4, 0x64, 0x9f, 0x41, 0x5f, 0xa4, 0x46, 0xe4,
	0xdc, 0x26, 0xcb, 0x9f, 0x4b, 0x3a, 0x45, 0x5b, 0xef, 0xc2, 0x39, 0x8d, 0x07, 0x06, 0x69, 0x2e,
	0x88, 0x62, 0x56, 0xa7, 0x64, 0xb7, 0xf6, 0x4d, 0x76, 0xba, 0x67, 0x1c, 0x1f, 0x69, 0xcb, 0xbf,
	0x36, 0xe8, 0x63, 0x4a, 0xbc, 0xad, 0x67, 0xf3, 0xba, 0x66, 0x7a, 0x5f, 0x87, 0x6e, 0x6f, 0x36,
	0x8c, 0xe3, 0x27, 0x11, 0x78, 0x7a, 0x90, 0xb7, 0x91, 0x78, 0xe3, 0x57, 0xca, 0x1a, 0x57, 0x1a,
	0xee, 0xd2, 0xc8, 0x73, 0x05, 0x0d, 0x0f, 0xf2, 0x28, 0xd3, 0xa9, 0x5a, 0x7c, 0x0f, 0x2e, 0xe4,
	0x8d, 0xa5, 0x6c, 0xf4, 0xe1, 0x47, 0xf3, 0x1d, 0x7a, 0xa7, 0x71, 0xb3, 0xdd, 0x36, 0xbc, 0x79,
	0x64, 0x9c, 0x67, 0x5c, 0x76, 0x94, 0x3c, 0x26, 0x45, 0xa7, 0x31, 0x3d, 0x00, 0x30, 0x80, 0xbd,
	0x54, 0xf8, 0xd0, 0x92, 0x7e, 0x40, 0x59, 0xf0, 0x18, 0x94, 0x7d, 0x06, 0x7d, 0x8e, 0x59, 0xff,
	0x0d, 0x6d, 0x14, 0x3e, 0xe6, 0x34, 0x18, 0xf0, 0x07, 0xb0, 0xca, 0x48, 0x68, 0x82, 0xff, 0xf0,
	0x14, 0x8f, 0xa8, 0xe8, 0x49, 0x53, 0x5c, 0x0e, 0xe5, 0xd5, 0x01, 0xde, 0x77, 0xd2, 0xe5, 0x73,
	0xe9, 0x7b, 0x54, 0xd4, 0x56, 0x5c, 0x4b, 0x0f, 0x86, 0x6c, 0xf1, 0x72, 0xc9, 0x4b, 0x4d, 0x29,
	0x5b, 0x71, 0xd1, 0x8b, 0x52, 0xf4, 0x68, 0xa9, 0xb6, 0x9b, 0xd7, 0x52, 0xc9, 0x9b, 0x50, 0x83,
	0x36, 0xf1, 0x19, 0x58, 0x33, 0x0c, 0xcc, 0x23, 0x98, 0x0c, 0xfb, 0xc2, 0xf0, 0x98, 0x7a, 0x57,
	0x55, 0xa8, 0xbd, 0x45, 0x4f, 0xe2, 0x0a, 0xe4, 0x0b, 0x9f, 0x85, 0xa5, 0x96, 0xe7, 0x59, 0x3d,
	0x6c, 0x3c, 0x5a, 0x93, 0xab, 0x71, 0x36, 0x3c, 0xbd, 0x62, 0x01, 0x30, 0x44, 0x9a, 0xa7, 0xb6,
	0xb8, 0x55, 0x5d, 0xb9, 0x51, 0x21, 0x67, 0xe3, 0x82, 0x97, 0xc2, 0xdb, 0x85, 0xf9, 0x74, 0x14,
	0x73, 0xb1, 0x6b, 0xc9, 0x89, 0x87, 0x2e, 0x76, 0x2d, 0x79, 0xc1, 0xcf, 0xe9, 0x01, 0xed, 0x7c,
	0x3a, 0x54, 0xbb, 0x04, 0x6a, 0x0e, 0xe1, 0x7e, 0x4a, 0xa3, 0xd3, 0xe7, 0x60, 0xd1, 0xf0, 0xe2,
	0x2d, 0xd2, 0x0e, 0xc2, 0x4c, 0xaf, 0x4d, 0xd6, 0x4b, 0x4b, 0x30, 0x6b, 0x41, 0xf6, 0xc1, 0x57,
	0xa4, 0x18, 0x2b, 0x8c, 0x6f, 0xe5, 0xd6, 0x2f, 0xe4, 0x17, 0x50, 0xa9, 0x9d, 0x7e, 0x73, 0x14,
	0x25, 0x96, 0x1a, 0x23, 0xc6, 0xe7, 0xf2, 0xb2, 0x55, 0xf3, 0xac, 0xe1, 0x95, 0x4e, 0x74, 0x21,
	0xf7, 0x01, 0xcf, 0x92, 0x59, 0xf1, 0x79, 0x58, 0xc9, 0x79, 0x51, 0x16, 0x3d, 0x91, 0xd3, 0x47,
	0xdd, 0x14, 0x63, 0x88, 0x97, 0xae, 0xa0, 0xfb, 0x05, 0x58, 0x2b, 0x78, 0x16, 0x54, 0x1c, 0xaa,
	0x96, 0xbf, 0x1c, 0x9a, 0x87, 0xfe, 0x6d, 0xa8, 0x6d, 0xf6, 0xe2, 0x80, 0xf9, 0x64, 0xa6, 0x06,
	0xd1, 0xb4, 0xc0, 0xe5, 0x6c, 0x0c, 0x8f, 0xa1, 0x96, 0x77, 0x03, 0x48, 0xe8, 0xd3, 0x25, 0xb7,
	0x9b, 0x84, 0xfe, 0x56, 0x76, 0x91, 0x88, 0x9e, 0xce, 0x92, 0xb5, 0x33, 0x89, 0x70, 0x2e, 0x03,
	0xdd, 0x18, 0x31, 0xce, 0xc4, 0x4c, 0xd7, 0x98, 0x61, 0x45, 0x83, 0x74, 0x27, 0x08, 0x85, 0x25,
	0x68, 0x25, 0x5b, 0xad, 0x1c, 0xde, 0xdb, 0x74, 0x21, 0x91, 0x59, 0x5a, 0x08, 0xb6, 0x75, 0x59,
	0xcf, 0x70, 0x31, 0xaf, 0x84, 0x0b, 0x5e, 0x87, 0x85, 0x4c, 0x5c, 0x77, 0x74, 0x4e, 0x3b, 0x2f,
	0xca, 0x22, 0x9a, 0x33, 0x54, 0x0e, 0x9c, 0x35, 0xc6, 0x75, 0x17, 0x62, 0xbc, 0x28, 0xe8, 0x7b,
	0xfe, 0x19, 0xc5, 0xe2, 0x96, 0xdb, 0x6e, 0x6e, 0xd2, 0x87, 0x9b, 0xf6, 0x7a, 0xa1, 0x1f, 0x9c,
	0x90, 0x09, 0x70, 0x0a, 0x06, 0xfa, 0x2a, 0xbd, 0xe8, 0x54, 0x1c, 0xe4, 0x7c, 0x30, 0xf7, 0x8b,
	0xeb, 0xa7, 0x0c, 0x99, 0x4e, 0xe7, 0x70, 0x4d, 0x5f, 0x26, 0xde, 0xc0, 0x7d, 0x71, 0x36, 0x75,
	0x59, 0x95, 0x81, 0xd9, 0xfc, 0x14, 0x57, 0xa8, 0x19, 0x12, 0xfc, 0x7d, 0xba, 0xa8, 0x25, 0x59,
	0x92, 0x17, 0x88, 0x64, 0x50, 0x92, 0x53, 0xd6, 0xe8, 0x4c, 0xae, 0x04, 0xf8, 0x26, 0x35, 0xa3,
	0x2a, 0x48, 0x9e, 0xd7, 0x0e, 0xaa, 0x92, 0x0c, 0xa9, 0x3b, 0x14, 0xa1, 0xb7, 0x07, 0xf3, 0x6c,
	0xfd, 0x3f, 0x0d, 0xc0, 0x0d, 0xc3, 0x30, 0x7e, 0xc6, 0x8b, 0x8f, 0x18, 0xbb, 0xd0, 0x4e, 0x2f,
	0x50, 0x9b, 0x77, 0x74, 0xa4, 0x80, 0x15, 0x2c, 0x9b, 0xce, 0x18, 0x84, 0x8a, 0xbb, 0xb0, 0xf8,
	0xc0, 0xcf, 0x82, 0x14, 0xe7, 0x6a, 0xfe, 0x43, 0x01, 0xfd, 0x02, 0x15, 0x25, 0x0a, 0x95, 0xe5,
	0x59, 0x4a, 0x62, 0xa7, 0x33, 0xe4, 0x0e, 0x3c, 0x52, 0x6f, 0xc3, 0x82, 0x06, 0x81, 0x3a, 0x3c,
	0x9f, 0x33, 0x80, 0xa6, 0xbe, 0xd2, 0xba, 0xa5, 0xdf, 0x90, 0xaf, 0x1c, 0x6d, 0x4c, 0x93, 0x1d,
	0x9e, 0x7c, 0x47, 0x4e, 0x3d, 0x71, 0x93, 0xaf, 0x89, 0xe9, 0x06, 0x85, 0x54, 0x9e, 0x42, 0x02,
	0xea, 0x03, 0x7f, 0xe2, 0x7a, 0x6d, 0x77, 0xbf, 0x4d, 0x98, 0x80, 0xbd, 0x82, 0xa0, 0x9e, 0xa8,
	0xf2, 0x6a, 0x6f, 0x60, 0x66, 0x0d, 0x4f, 0xed, 0x42, 0x8c, 0x25, 0x14, 0x37, 0xc9, 0x59, 0x26,
	0xc3, 0x09, 0xe4, 0x3b, 0x44, 0xf1, 0x12, 0x11, 0x74, 0x92, 0x3a, 0x34, 0x3d, 0xb5, 0x86, 0x67,
	0xb3, 0x15, 0x2d, 0x11, 0x18, 0x71, 0x6e, 0xf6, 0xb7, 0x6f, 0xa1, 0x64, 0x7c, 0xd3, 0xc3, 0xa3,
	0x8d, 0x61, 0x2a, 0x53, 0x3f, 0xf0, 0x70, 0x70, 0x84, 0xc3, 0x13, 0xac, 0x14, 0x93, 0xb6, 0xf5,
	0x04, 0x0d, 0x5e, 0x28, 0xa5, 0xc2, 0x98, 0x0a, 0x28, 0xa6, 0x86, 0x95, 0x3b, 0x9e, 0xef, 0x45,
	0x47, 0x0e, 0x6e, 0x61, 0xdc, 0x51, 0xe1, 0x7f, 0x60, 0xb4, 0xf7, 0x60, 0x65, 0xcb, 0xf5, 0x9b,
	0xb8, 0x7d, 0x1a, 0xd8, 0xa5, 0xf3, 0xf6, 0x6d, 0x58, 0x60, 0x4a, 0xd0, 0x56, 0xd0, 0xc2, 0xdb,
	0x3e, 0x83, 0x77, 0x4e, 0xd5, 0x8e, 0x94, 0x8c, 0x14, 0xc7, 0x1a, 0xf2, 0x15, 0x22, 0x2f, 0x67,
	0xe3, 0x2d, 0xa7, 0x54, 0x3a, 0x53, 0x88, 0x67, 0x45, 0xa5, 0x33, 0x06, 0x6b, 0xa6, 0x46, 0xdb,
	0x8b, 0xa5, 0x51, 0x83, 0xcb, 0x5a, 0xb9, 0x9e, 0xcd, 0x2e, 0x8c, 0x3e, 0x2c, 0x7d, 0xf8, 0x0c,
	0x91, 0x02, 0x15, 0xd9, 0x91, 0x1f, 0xc6, 0x59, 0xf1, 0xe1, 0x2b, 0x08, 0xc8, 0xcc, 0xfd, 0x37,
	0x0d, 0x01, 0xe5, 0x84, 0xff, 0x66, 0x41, 0x04, 0xbf, 0xba, 0x5d, 0x54, 0x44, 0x19, 0x99, 0x25,
	0x53, 0xa8, 0x2a, 0xd1, 0x40, 0x41, 0xbc, 0x38, 0xb1, 0x5f, 0x2a, 0x00, 0x8d, 0xb2, 0x51, 0xba,
	0xd0, 0x79, 0xd5, 0xc0, 0x6a, 0x08, 0x84, 0x56, 0xbf, 0x90, 0x5f, 0x40, 0x59, 0x0e, 0x16, 0x32,
	0xf9, 0x8a, 0x64, 0x7d, 0x38, 0x7c, 0x31, 0x3d, 0xa4, 0x4a, 0x65, 0xeb, 0x4a, 0x71, 0x59, 0x13,
	0x83, 0x6c, 0x6c, 0x7c, 0x58, 0xcd, 0x0d, 0xd1, 0xa4, 0xf8, 0x43, 0x15, 0x46, 0x9c, 0x12, 0xf6,
	0x8d, 0xd2, 0x58, 0x4f, 0xf6, 0x19, 0x74, 0x07, 0x56, 0x89, 0x92, 0x6f, 0xe2, 0x83, 0x53, 0x29,
	0x69, 0x6c, 0x38, 0x53, 0x51, 0xb2, 0x94, 0xe1, 0x34, 0x07, 0xff, 0x52, 0x86, 0x33, 0x27, 0xbc,
	0x17, 0x3d, 0x08, 0x50, 0x7d, 0xc4, 0x84, 0x4c, 0x15, 0x0e, 0x5b, 0x4f, 0x17, 0x39, 0x6c, 0xf1,
	0xb2, 0xa7, 0x74, 0xd5, 0x7a, 0x0f, 0xce, 0xd2, 0xed, 0xf3, 0xee, 0x71, 0x6f, 0xd3, 0x6f, 0xb1,
	0x85, 0x96, 0x7a, 0xa3, 0xd8, 0xca, 0xde, 0x3a, 0x9d, 0x39, 0xb0, 0x14, 0xbd, 0x05, 0x53, 0x4a,
	0x6c, 0x1b, 0x54, 0x53, 0x99, 0x46, 0x8d, 0xe2, 0xa3, 0x78, 0x95, 0xa7, 0x03, 0xe1, 0x24, 0x8e,
	0x56, 0xfc, 0xba, 0xc5, 0x92, 0x16, 0xbc, 0x26, 0xa5, 0xdd, 0x64, 0xc3, 0xc9, 0x50, 0x2c, 0x16,
	0xb6, 0xfd, 0x66, 0xc8, 0x33, 0xde, 0xf6, 0x22, 0x2f, 0x96, 0xb8, 0x64, 0x23, 0xdd, 0xe4, 0x8d,
	0xfa, 0xeb, 0xec, 0xd0, 0x5e, 0x46, 0x88, 0x51, 0xbc, 0xe4, 0x33, 0x61, 0x63, 0xea, 0x6b, 0x99,
	0xbc, 0xb0, 0xad, 0x6f, 0x3e, 0x32, 0xa7, 0x4d, 0xfc, 0x2e, 0x89, 0x88, 0x8f, 0x21, 0xb9, 0x74,
	0xd0, 0x5e, 0xde, 0x91, 0xfe, 0x44, 0x85, 0x84, 0x2a, 0x1d, 0xb3, 0x2f, 0xa8, 0xf1, 0x88, 0x48,
	0x2a, 0x8d, 0xac, 0x8d, 0x2e, 0xa6, 0x9b, 0xce, 0x44, 0x79, 0xa9, 0xdb, 0x45, 0x45, 0x24, 0x9e,
	0x87, 0xcc, 0x45, 0x20, 0x29, 0x91, 0xb8, 0x1d, 0x0c, 0xd0, 0xc6, 0x53, 0xf9, 0x45, 0xb4, 0x28,
	0x26, 0xd2, 0x9c, 0xa9, 0x35, 0xe4, 0xe0, 0x03, 0x1c, 0x86, 0x38, 0x7c, 0xc4, 0x2d, 0xb5, 0xd4,
	0xe0, 0x41, 0xac, 0xa5, 0x5b, 0x6e, 0x8c, 0x1f, 0x71, 0x2b, 0xcd, 0xf4, 0xc0, 0xdc, 0xec, 0x3f,
	0x88, 0x3b, 0x8f, 0xb8, 0x91, 0xcf, 0x31, 0x9f, 0x90, 0x6c, 0xe8, 0x1c, 0x65, 0x35, 0xcf, 0x0f,
	0xac, 0x53, 0xb2, 0x7f, 0xdf, 0x81, 0xb9, 0x54, 0xb8, 0x12, 0xb1, 0x05, 0x34, 0x47, 0x31, 0x29,
	0x67, 0xd6, 0x77, 0xe9, 0xc9, 0x84, 0x39, 0x7a, 0x89, 0x51, 0xa4, 0x27, 0xa4, 0x28, 0x0e, 0x79,
	0x42, 0x35, 0xf6, 0xc5, 0xcd, 0x56, 0x2b, 0x73, 0x91, 0x23, 0x3f, 0xec, 0x43, 0x39, 0xba, 0xef,
	0xd1, 0x21, 0xcc, 0x80, 0xbc, 0x90, 0x87, 0x54, 0x3f, 0xbb, 0xc5, 0x28, 0xb8, 0x0b, 0xf2, 0xae,
	0x88, 0xaa, 0x6a, 0x88, 0x92, 0x52, 0x42, 0x8c, 0xe2, 0xd0, 0x2a, 0x94, 0x2f, 0x6a, 0xbb, 0x99,
	0x62, 0x1c, 0x74, 0x49, 0x6c, 0x94, 0x72, 0xb2, 0x30, 0x0b, 0xa7, 0x16, 0xae, 0x42, 0x51, 0x54,
	0x4d, 0x31, 0x30, 0x14, 0x75, 0xd8, 0x18, 0xe5, 0xc2, 0x3e, 0x83, 0x6e, 0x52, 0x79, 0x9d, 0x5c,
	0x6a, 0x36, 0x52, 0x20, 0x91, 0xd3, 0xd9, 0xdb, 0xcf, 0xdc, 0x07, 0x2c, 0x13, 0x4b, 0x42, 0xfa,
	0x80, 0xe5, 0x85, 0xb3, 0x90, 0x3e, 0x60, 0xb9, 0x61, 0x28, 0xd8, 0x5c, 0x48, 0x85, 0x73, 0x10,
	0x73, 0xc1, 0x1c, 0x2a, 0x42, 0x50, 0x31, 0x27, 0x06, 0x04, 0x1d, 0xfe, 0x25, 0x53, 0x40, 0x06,
	0x21, 0x20, 0x0a, 0x82, 0x35, 0x94, 0x8f, 0xd0, 0x1e, 0x2c, 0x64, 0xc2, 0x32, 0xa0, 0x73, 0x59,
	0xc0, 0x26, 0x8c, 0xf3, 0xa1, 0xde, 0x85, 0x69, 0xf5, 0x16, 0xbc, 0xf0, 0xa5, 0x35, 0x5c, 0xbb,
	0x17, 0x82, 0xc5, 0x74, 0x69, 0x9e, 0x1f, 0x48, 0xa4, 0x62, 0x09, 0xc8, 0xb3, 0x03, 0x73, 0xac,
	0x02, 0x79, 0x20, 0x91, 0x13, 0x82, 0x40, 0x4e, 0xd6, 0xf4, 0x6d, 0x72, 0x94, 0x55, 0xe3, 0x52,
	0x17, 0xd4, 0x95, 0xc9, 0x9a, 0x77, 0x15, 0x9d, 0xae, 0x19, 0xab, 0xb9, 0xd7, 0xb6, 0x75, 0x17,
	0x93, 0xfc, 0x7b, 0xdd, 0x83, 0x2c, 0xe6, 0xcb, 0xe6, 0xab, 0xda, 0x42, 0x9c, 0x17, 0x5e, 0xe4,
	0x1e, 0x54, 0xc1, 0x13, 0x17, 0xad, 0x15, 0x05, 0x2f, 0x75, 0x9f, 0x5b, 0x51, 0xf0, 0xd2, 0xf7,
	0xb7, 0xe9, 0x5c, 0x40, 0xfc, 0xac, 0x4e, 0x25, 0x42, 0xea, 0x36, 0xbd, 0x72, 0x03, 0xbb, 0x1c,
	0xaf, 0xd7, 0xc5, 0x4a, 0x93, 0x74, 0x98, 0xdf, 0x01, 0x49, 0xdf, 0xfe, 0x1e, 0x04, 0xd6, 0x62,
	0x3a, 0x6a, 0x48, 0xd0, 0xc6, 0x45, 0xe8, 0x29, 0x8f, 0xaf, 0xab, 0xf7, 0xb5, 0x29, 0xbd, 0xe6,
	0xb5, 0x48, 0x1e, 0x04, 0x50, 0x1e, 0x62, 0xf9, 0x50, 0x3e, 0x4b, 0xf5, 0x8d, 0xec, 0xb3, 0xdb,
	0xe7, 0xf2, 0x9e, 0xeb, 0x4e, 0xd9, 0x27, 0xf2, 0x9e, 0x13, 0xb7, 0xcf, 0xdc, 0xfc, 0xf8, 0xbb,
	0xaf, 0x1e, 0x7a, 0xf1, 0x51, 0x6f, 0xff, 0x5a, 0x33, 0xe8, 0x5c, 0xef, 0xba, 0xfd, 0xa8, 0xd7,
	0xc5, 0xa1, 0xfc, 0xf1, 0x1c, 0x97, 0xf4, 0xcf, 0x51, 0x0b, 0x4f, 0x78, 0xbd, 0x7b, 0x7c, 0x78,
	0x9d, 0x3e, 0x9d, 0x7a, 0x9d, 0x40, 0xde, 0x1f, 0xa7, 0xbf, 0x5f, 0xf8, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xde, 0x1f, 0x6b, 0x23, 0x47, 0xe0, 0x00, 0x00,
}
