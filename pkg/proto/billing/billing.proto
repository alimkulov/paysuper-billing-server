syntax = "proto3";

option go_package = "github.com/paysuper/paysuper-billing-server/pkg/proto/billing";
package billing;

import "google/protobuf/timestamp.proto";

message Name {
    // @inject_tag: bson:"EN" json:"EN" structure:"EN"
    string en = 1;
    // @inject_tag: bson:"RU" json:"RU" structure:"RU"
    string ru = 2;
}

message OrderCreateRequest {
    // @inject_tag: query:"PO_PROJECT_ID" form:"PO_PROJECT_ID" json:"project" validate:"omitempty,hexadecimal"
    string project_id = 1;
    // @inject_tag: query:"PO_SIGNATURE" form:"PO_SIGNATURE" validate:"omitempty,alphanum"
    string signature = 2;
    // @inject_tag: query:"PO_AMOUNT" form:"PO_AMOUNT" json:"amount" validate:"omitempty,numeric,gte=0"
    double amount = 3;
    // @inject_tag: query:"PO_CURRENCY" form:"PO_CURRENCY" json:"currency" validate:"omitempty,alpha,len=3"
    string currency = 4;
    // @inject_tag: "PO_ACCOUNT" form:"PO_ACCOUNT" json:"account"`
    string account = 5;
    // @inject_tag: query:"PO_ORDER_ID" form:"PO_ORDER_ID" json:"order_id" validate:"omitempty,max=255"
    string order_id = 6;
    // @inject_tag: query:"PO_DESCRIPTION" form:"PO_DESCRIPTION" json:"description" validate:"omitempty,max=255"
    string description = 7;
    // @inject_tag: query:"PO_PAYMENT_METHOD" form:"PO_PAYMENT_METHOD" json:"payment_method" validate:"omitempty,max=255"
    string payment_method = 8;
    // @inject_tag: query:"PO_URL_VERIFY" form:"PO_URL_VERIFY" json:"url_verify" validate:"omitempty,url"
    string url_verify = 9;
    // @inject_tag: query:"PO_URL_NOTIFY" form:"PO_URL_NOTIFY" json:"url_notify" validate:"omitempty,url"
    string url_notify = 10;
    // @inject_tag: query:"PO_URL_SUCCESS" form:"PO_URL_SUCCESS" json:"url_success" validate:"omitempty,url"
    string url_success = 11;
    // @inject_tag: query:"PO_URL_FAIL" form:"PO_URL_FAIL" json:"url_fail" validate:"omitempty,url"
    string url_fail = 12;
    // @inject_tag: query:"PO_PAYER_EMAIL" form:"PO_PAYER_EMAIL" json:"payer_email" validate:"omitempty,email"
    string payer_email = 13;
    // @inject_tag: query:"PO_PAYER_PHONE" form:"PO_PAYER_PHONE" json:"payer_phone" validate:"omitempty,max=255"
    string payer_phone = 14;
    // @inject_tag: query:"PO_REGION" form:"PO_REGION" json:"region" validate:"omitempty,alpha,len=2"
    string region = 15;
    string payer_ip = 16;
    map<string, string> other = 17;
    // @inject_tag: json:"-"
    map<string, string> raw_params = 18;
    // @inject_tag: json:"-"
    string raw_body = 19; //`json:"-"`
    // @inject_tag: json:"-"
    bool is_json = 20;
    // @inject_tag: json:"-"
    string language = 21;
    // @inject_tag: json:"products" validate:"omitempty,gte=1,dive,hexadecimal,len=24"
    repeated string products = 22;
    // @inject_tag: json:"-"
    map<string, string> metadata = 23;
    // @inject_tag: json:"-"
    map<string, string> private_metadata = 24;
    // @inject_tag: json:"receipt_number"
    string receipt_number = 25; // payer receipt number from create order request
    // @inject_tag: json:"receipt_url"
    string receipt_url = 26; // payer receipt url from create order request
    // @inject_tag: json:"issuer_url"
    string issuer_url = 27;
    // @inject_tag: json:"is_embedded"
    bool is_embedded = 28;

    string token = 29;
    OrderUser user = 30;

    // @inject_tag: json:"order" validate:"omitempty,uuid"
    string psp_order_uuid = 31;
}

message Project {
    // @inject_tag: json:"id" validate:"omitempty,hexadecimal,len=24"
    string id = 1;
    // @inject_tag: json:"merchant_id" validate:"required,hexadecimal,len=24"
    string merchant_id = 2;
    // @inject_tag: json:"name" validate:"required"
    map<string, string> name = 3;
    // @inject_tag: json:"image" validate:"omitempty,url"
    string image = 4;
    //@inject_tag: json:"callback_currency" validate:"omitempty,len=3"
    string callback_currency = 5;
    //@inject_tag: json:"callback_protocol" validate:"omitempty,oneof=default empty"
    string callback_protocol = 6;
    //@inject_tag: json:"create_order_allowed_urls" validate:"omitempty,dive,url"
    repeated string create_order_allowed_urls = 7;
    //@inject_tag: json:"allow_dynamic_notify_urls"
    bool allow_dynamic_notify_urls = 8;
    //@inject_tag: json:"allow_dynamic_redirect_urls"
    bool allow_dynamic_redirect_urls = 9;
    //@inject_tag: json:"limits_currency" validate:"omitempty,len=3"
    string limits_currency = 10;
    // @inject_tag: json:"min_payment_amount" validate:"omitempty,numeric,gte=0"
    double min_payment_amount = 11;
    // @inject_tag: json:"max_payment_amount" validate:"omitempty,numeric,gte=0"
    double max_payment_amount = 12;
    // @inject_tag: json:"notify_emails" validate:"omitempty,dive,email"
    repeated string notify_emails = 13;
    // @inject_tag: json:"is_products_checkout"
    bool is_products_checkout = 14;
    // @inject_tag: json:"secret_key" validate:"omitempty,max=255"
    string secret_key = 15;
    // @inject_tag: json:"signature_required"
    bool signature_required = 16;
    // @inject_tag: json:"send_notify_email"
    bool send_notify_email = 17;
    // @inject_tag: json:"url_check_account" validate:"omitempty,url"
    string url_check_account = 18;
    // @inject_tag: json:"url_process_payment" validate:"omitempty,url"
    string url_process_payment = 19;
    // @inject_tag: json:"url_redirect_fail" validate:"omitempty,url"
    string url_redirect_fail = 20;
    // @inject_tag: json:"url_redirect_success" validate:"omitempty,url"
    string url_redirect_success = 21;
    // @inject_tag: json:"status" validate:"omitempty,numeric,oneof=0 1 2 3 4"
    int32 status = 22;
    // @inject_tag: json:"created_at"
    google.protobuf.Timestamp created_at = 23;
    // @inject_tag: json:"updated_at"
    google.protobuf.Timestamp updated_at = 24;
    // @inject_tag: json:"products_count"
    int32 products_count = 25;
    // @inject_tag: json:"url_chargeback_payment" validate:"omitempty,url"
    string url_chargeback_payment = 26;
    // @inject_tag: json:"url_cancel_payment" validate:"omitempty,url"
    string url_cancel_payment = 27;
    // @inject_tag: json:"url_fraud_payment" validate:"omitempty,url"
    string url_fraud_payment = 28;
    // @inject_tag: json:"url_refund_payment" validate:"omitempty,url"
    string url_refund_payment = 29;
}

message ProjectOrder {
    string id = 1;
    string merchant_id = 2;
    map<string, string> name = 3;
    string url_success = 4;
    string url_fail = 5;
    repeated string notify_emails = 6;
    string secret_key = 7;
    bool send_notify_email = 8;
    string url_check_account = 9;
    string url_process_payment = 10;
    string callback_protocol = 11;
    string url_chargeback_payment = 12;
    string url_cancel_payment = 13;
    string url_fraud_payment = 14;
    string url_refund_payment = 15;
    int32 status = 16;
}

message MerchantContact {
    // @inject_tag: validate:"required" json:"authorized"
    MerchantContactAuthorized authorized = 1;
    // @inject_tag: validate:"required" json:"technical"
    MerchantContactTechnical technical = 2;
}

message MerchantContactTechnical {
    // @inject_tag: json:"name"
    string name = 1;
    // @inject_tag: validate:"omitempty,email" json:"email"
    string email = 2;
    // @inject_tag: validate:"omitempty,phone" json:"phone"
    string phone = 3;
}

message MerchantContactAuthorized {
    // @inject_tag: json:"name"
    string name = 1;
    // @inject_tag: validate:"omitempty,email" json:"email"
    string email = 2;
    // @inject_tag: validate:"omitempty,phone" json:"phone"
    string phone = 3;
    // @inject_tag: json:"position"
    string position = 4;
}

message MerchantBanking {
    // @inject_tag: json:"currency"
    Currency currency = 1;
    // @inject_tag: json:"name"
    string name = 2;
    // @inject_tag: json:"address"
    string address = 3;
    // @inject_tag: json:"account_number"
    string account_number = 4;
    // @inject_tag: json:"swift"
    string swift = 5;
    // @inject_tag: json:"details"
    string details = 6;
}

message MerchantLastPayout {
    // @inject_tag: json:"date"
    google.protobuf.Timestamp date = 1;
    // @inject_tag: json:"amount"
    double amount = 2;
}

message MerchantUser {
    // @inject_tag: json:"id" validate:"required"
    string id = 1;
    // @inject_tag: json:"email" validate:"required,email"
    string email = 2;
}

message Merchant {
    // @inject_tag: bson:"_id"
    string id = 1;
    // @inject_tag: json:"user"
    MerchantUser user = 2;
    // @inject_tag: json:"name"
    string name = 4;
    // @inject_tag: json:"alternative_name"
    string alternative_name = 5;
    // @inject_tag: json:"website"
    string website = 6;
    // @inject_tag: json:"country"
    string country = 7;
    // @inject_tag: json:"state"
    string state = 8;
    // @inject_tag: json:"zip"
    string zip = 9;
    // @inject_tag: json:"city"
    string city = 10;
    // @inject_tag: json:"address"
    string address = 11;
    // @inject_tag: json:"address_additional"
    string address_additional = 12;
    // @inject_tag: json:"registration_number"
    string registration_number = 13;
    // @inject_tag: json:"tax_id"
    string tax_id = 14;
    // @inject_tag: json:"contacts"
    MerchantContact contacts = 15;
    // @inject_tag: json:"banking"
    MerchantBanking banking = 16;
    // @inject_tag: json:"status"
    int32 status = 17;
    // @inject_tag: json:"created_at"
    google.protobuf.Timestamp created_at = 18;
    // @inject_tag: json:"updated_at"
    google.protobuf.Timestamp updated_at = 19;
    // @inject_tag: json:"first_payment_at"
    google.protobuf.Timestamp first_payment_at = 20;
    // @inject_tag: json:"-"
    bool is_vat_enabled = 21;
    // @inject_tag: json:"-"
    bool is_commission_to_user_enabled = 22;
    // @inject_tag: json:"has_merchant_signature"
    bool has_merchant_signature = 23;
    // @inject_tag: json:"has_psp_signature"
    bool has_psp_signature = 24;
    // @inject_tag: json:"last_payout"
    MerchantLastPayout last_payout = 25;
    // @inject_tag: json:"is_signed"
    bool is_signed = 26;
    // @inject_tag: json:"payment_methods"
    map<string, MerchantPaymentMethod> payment_methods = 28;
    // @inject_tag: json:"agreement_type"
    int32 agreement_type = 29;
    // @inject_tag: json:"agreement_sent_via_mail"
    bool agreement_sent_via_mail = 30;
    // @inject_tag: json:"mail_tracking_link"
    string mail_tracking_link = 31;
    // @inject_tag: json:"-"
    string s3_agreement_name = 32;
    // @inject_tag: json:"payout_cost_amount" bson:"payout_cost_amount" validate:"numeric,gte=0"
    double payout_cost_amount = 33;
    //@inject_tag: json:"payout_cost_currency" bson:"payout_cost_currency" validate:"required,alpha,len=3"
    string payout_cost_currency = 34;
    // @inject_tag: json:"min_payout_amount" bson:"min_payout_amount" validate:"numeric,gte=0"
    double min_payout_amount = 35;
    // @inject_tag: json:"rolling_reserve_amount" bson:"rolling_reserve_amount" validate:"numeric,gte=0,lte=100"
    double rolling_reserve_threshold = 36;
    // @inject_tag: json:"rolling_reserve_days" bson:"rolling_reserve_days" validate:"numeric,gte=0"
    int32 rolling_reserve_days = 37;
    // @inject_tag: json:"rolling_reserve_chargeback_transactions_threshold" bson:"rolling_reserve_chargeback_transactions_threshold" validate:"numeric,gte=0,lte=100"
    double rolling_reserve_chargeback_transactions_threshold = 38;
    // @inject_tag: json:"item_min_cost_amount" bson:"item_min_cost_amount" validate:"numeric,gte=0"
    double item_min_cost_amount = 39;
    //@inject_tag: json:"item_min_cost_currency" bson:"item_min_cost_currency" validate:"required,alpha,len=3"
    string item_min_cost_currency = 40;
}

message SystemNotificationStatuses {
    int32 from = 1;
    int32 to = 2;
}

message Notification {
    string id = 1;
    string title = 2;
    string message = 3;
    string merchant_id = 4;
    string user_id = 5;
    bool is_system = 6;
    bool is_read = 7;
    SystemNotificationStatuses statuses = 8;
    google.protobuf.Timestamp created_at = 9;
    google.protobuf.Timestamp updated_at = 10;
}

message OrderPlatformFee {
    float amount = 1;
    string currency = 2;
    float effective_rate = 3;
}

message OrderTax {
    string type = 1;
    double rate = 2;
    double amount = 3;
    string currency = 4;
}

message OrderBillingAddress {
    // @inject_tag: validate:"omitempty,alpha,len=2"
    string country = 1;
    string city = 2;
    // @inject_tag: bson:"postal_code"
    string postal_code = 3;
    string state = 4;
}

message OrderUser {
    // @inject_tag: json:"id"
    string id = 1;
    // @inject_tag: json:"object"
    string object = 2;
    // @inject_tag: json:"external_id" bson:"external_id"
    string external_id = 3;
    // @inject_tag: json:"name"
    string name = 4;
    // @inject_tag: json:"email" validate:"omitempty,email"
    string email = 5;
    // @inject_tag: json:"email_verified" bson:"email_verified"
    bool email_verified = 6;
    // @inject_tag: json:"phone" validate:"omitempty,phone"
    string phone = 7;
    // @inject_tag: json:"phone_verified" bson:"phone_verified"
    bool phone_verified = 8;
    // @inject_tag: json:"ip" validate:"omitempty,ip"
    string ip = 9;
    // @inject_tag: json:"locale" validate:"omitempty,alpha,len=2"
    string locale = 10;
    // @inject_tag: json:"address"
    OrderBillingAddress address = 11;
    // @inject_tag: json:"metadata"
    map<string, string> metadata = 12;
    // @inject_tag: json:"-"
    string tech_email = 13;
    //@inject_tag: json:"notify_new_region" bson:"notify_new_region"
    bool notify_new_region = 14;
    //@inject_tag: json:"notify_new_region_email" bson:"notify_new_region_email"
    string notify_new_region_email = 15;
}

message OrderPaymentRoyaltyData {
    // @inject_tag: bson:"royalty_cur"
    string royalty_cur = 1;
    // @inject_tag: json:"-" bson:"ex_rate_payment_to_royalty_instant"
    double ex_rate_payment_to_royalty_instant = 2;
    // @inject_tag: bson:"ex_rate_payment_to_royalty_prediction"
    double ex_rate_payment_to_royalty_prediction = 3;
    // @inject_tag: bson:"ex_rate_payment_to_vat"
    double ex_rate_payment_to_vat = 4;
    // @inject_tag: bson:"vat"
    double vat = 5;
    // @inject_tag: bson:"gross_in_royalty_cur_prediction"
    double gross_in_royalty_cur_prediction = 6;
    // @inject_tag: bson:"overall_cut_rate"
    double overall_cut_rate = 7;
    // @inject_tag: bson:"overall_fee"
    double overall_fee = 8;
    // @inject_tag: bson:"overall_deduction_prediction"
    double overall_deduction_prediction = 9;
    // @inject_tag: json:"-" bson:"ex_rate_vat_to_royalty_instant"
    double ex_rate_vat_to_royalty_instant = 10;
    // @inject_tag: bson:"ex_rate_vat_to_royalty_prediction"
    double ex_rate_vat_to_royalty_prediction = 11;
    // @inject_tag: bson:"vat_in_royalty_cur_prediction"
    double vat_in_royalty_cur_prediction = 12;
    // @inject_tag: bson:"royalty_prediction"
    double royalty_prediction = 13;
    // @inject_tag: bson:"cost_fee_cur"
    string cost_fee_cur = 14;
    // @inject_tag: bson:"cost_rate_public"
    double cost_rate_public = 15;
    // @inject_tag: bson:"cost_fee_public"
    double cost_fee_public = 16;
    // @inject_tag: json:"-" bson:"ex_rate_cost_fee_to_royalty_instant"
    double ex_rate_cost_fee_to_royalty_instant = 17;
    // @inject_tag: bson:"ex_rate_cost_fee_to_royalty_prediction"
    double ex_rate_cost_fee_to_royalty_prediction = 18;
    // @inject_tag: bson:"cost_public_rate_amount_prediction"
    double cost_public_rate_amount_prediction = 19;
    // @inject_tag: bson:"cost_public_prediction"
    double cost_public_prediction = 20;
    // @inject_tag: bson:"pay_super_cut_amount_prediction"
    double pay_super_cut_amount_prediction = 21;
    // @inject_tag: bson:"pay_super_cut_rate_prediction"
    double pay_super_cut_rate_prediction = 22;
    // @inject_tag: json:"-" bson:"cost_rate"
    double cost_rate = 23;
    // @inject_tag: json:"-" bson:"cost_fee"
    double cost_fee = 24;
    // @inject_tag: json:"-" bson:"cost_prediction"
    double cost_prediction = 25;
    // @inject_tag: json:"-" bson:"cost_delta_prediction"
    double cost_delta_prediction = 26;
    // @inject_tag: json:"-" bson:"pay_super_revenue_prediction"
    double pay_super_revenue_prediction = 27;
    // @inject_tag: json:"-" bson:"ex_rate_payment_to_royalty_raw"
    double ex_rate_payment_to_royalty_raw = 28;
    // @inject_tag: bson:"ex_rate_payment_to_royalty_actual"
    double ex_rate_payment_to_royalty_actual = 29;
    // @inject_tag: json:"-" bson:"ex_rate_cost_fee_to_royalty_raw"
    double ex_rate_cost_fee_to_royalty_raw = 30;
    // @inject_tag: bson:"ex_rate_cost_fee_to_royalty_actual"
    double ex_rate_cost_fee_to_royalty_actual = 31;
    // @inject_tag: bson:"ex_rate_vat_to_royalty_actual"
    double ex_rate_vat_to_royalty_actual = 32;
    // @inject_tag: bson:"gross_in_royalty_cur"
    double gross_in_royalty_cur = 33;
    // @inject_tag: bson:"vat_in_royalty_cur"
    double vat_in_royalty_cur = 34;
    // @inject_tag: bson:"overall_deduction"
    double overall_deduction = 35;
    // @inject_tag: bson:"royalty"
    double royalty = 36;
    // @inject_tag: bson:"cost_public_rate_amount"
    double cost_public_rate_amount = 37;
    // @inject_tag: bson:"cost_public"
    double cost_public = 38;
    // @inject_tag: bson:"pay_super_cut_amount"
    double pay_super_cut_amount = 39;
    // @inject_tag: bson:"pay_super_cut_rate"
    double pay_super_cut_rate = 40;
    // @inject_tag: json:"-" bson:"cost"
    double cost = 41;
    // @inject_tag: json:"-" bson:"pay_super_revenue"
    double pay_super_revenue = 42;
}

message Order {
    // @inject_tag: json:"-" bson:"_id"
    string id = 1; // unique internal order identifier in Protocol One
    // @inject_tag: json:"id" bson:"uuid"
    string uuid = 2; // unique public order identifier in Protocol One
    // @inject_tag: json:"transaction" bson:"pm_order_id"
    string transaction = 3; // unique order id in payment system
    // @inject_tag: json:"object" bson:"object"
    string object = 4;
    // @inject_tag: json:"status" bson:"status"
    string status = 5;
    // @inject_tag: json:"-" bson:"private_status"
    int32 private_status = 6; // order status
    // @inject_tag: json:"description" bson:"description"
    string description = 7;
    // @inject_tag: bson:"created_at" bson:"created_at"
    google.protobuf.Timestamp created_at = 8;
    // @inject_tag: json:"-" bson:"updated_at"
    google.protobuf.Timestamp updated_at = 9; // date of last update order data
    //@inject_tag: json:"canceled_at" bson:"canceled_at"
    google.protobuf.Timestamp canceled_at = 10;
    //@inject_tag: json:"canceled" bson:"canceled"
    bool canceled = 11;
    //@inject_tag: json:"cancellation_reason" bson:"cancellation_reason"
    string cancellation_reason = 12;
    //@inject_tag: json:"refunded" bson:"refunded"
    bool refunded = 13;
    //@inject_tag: json:"refunded_at" bson:"refunded_at"
    google.protobuf.Timestamp refunded_at = 14;
    // @inject_tag: json:"receipt_email" bson:"receipt_email"
    string receipt_email = 15;
    // @inject_tag: json:"receipt_phone" bson:"receipt_phone"
    string receipt_phone = 16;
    // @inject_tag: json:"receipt_number" bson:"receipt_number"
    string receipt_number = 17;
    // @inject_tag: json:"receipt_url" bson:"receipt_url"
    string receipt_url = 18;
    //@inject_tag: json:"agreement_version" bson:"agreement_version" validate:"required"
    string agreement_version = 19;
    //@inject_tag: json:"agreement_accepted" bson:"agreement_accepted" validate:"required"
    bool agreement_accepted = 20;
    //@inject_tag: json:"notify_sale" bson:"notify_sale" validate:"required"
    bool notify_sale = 21;
    //@inject_tag: json:"notify_sale_email" bson:"notify_sale_email"
    string notify_sale_email = 22;
    //@inject_tag: json:"issuer" bson:"issuer" validate:"required"
    OrderIssuer issuer = 23;
    //@inject_tag: json:"amount" bson:"total_payment_amount"
    double total_payment_amount = 24; // total amount to payment with all commissions
    //@inject_tag: json:"currency" bson:"currency" validate:"required,alpha,len=3"
    string currency = 25;
    //@inject_tag: json:"user" bson:"user"
    OrderUser user = 26;
    // @inject_tag: json:"payout" bson:"payout"
    OrderFee payout = 27;
    // @inject_tag: json:"platform_fee" bson:"project_fee_amount"
    OrderFee platform_fee = 28; // fee is charged with the project for the operation
    //@inject_tag: json:"billing_address" bson:"billing_address"
    OrderBillingAddress billing_address = 29; // user billing address entered in payment form
    //@inject_tag: json:"tax" bson:"tax"
    OrderTax tax = 30;
    // @inject_tag: json:"method" bson:"payment_method"
    PaymentMethodOrder payment_method = 31; // payment method unique identifier
    // @inject_tag: json:"items" bson:"items" validate="omitempty,gte=1,dive"
    repeated OrderItem items = 32;
    //@inject_tag: json:"refund" bson:"refund" validate:"omitempty,dive"
    OrderNotificationRefund refund = 33;
    // @inject_tag: json:"metadata" bson:"metadata"
    map<string, string> metadata = 34;
    // @inject_tag: json:"-" bson:"private_metadata"
    map<string, string> private_metadata = 35;
    // @inject_tag: json:"-" bson:"project"
    ProjectOrder project = 36; // object described main entities of project in Protocol One payment solution
    // @inject_tag: json:"-" bson:"project_order_id"
    string project_order_id = 37; // unique order identifier in project. if was send in create order process
    // @inject_tag: json:"-" bson:"project_account"
    string project_account = 38; // user unique account in project
    // @inject_tag: json:"-" bson:"project_income_amount"
    double project_income_amount = 39; // order amount received from project
    // @inject_tag: json:"-" bson:"project_income_currency"
    Currency project_income_currency = 40; // order currency received from project
    // @inject_tag: json:"-" bson:"project_outcome_amount"
    double project_outcome_amount = 41; // order amount send to project in notification request
    // @inject_tag: json:"-" bson:"project_outcome_currency"
    Currency project_outcome_currency = 42; // order currency send to project in notification request
    // @inject_tag: json:"-" bson:"project_last_requested_at"
    google.protobuf.Timestamp project_last_requested_at = 43; // date of last notification request to project
    // @inject_tag: json:"-" bson:"project_params"
    map<string, string> project_params = 44; // any project params which received from project in request of create of order
    // @inject_tag: json:"-" bson:"pm_outcome_amount"
    double payment_method_outcome_amount = 45; // order amount send to payment system
    // @inject_tag: json:"-" bson:"pm_outcome_currency"
    Currency payment_method_outcome_currency = 46; // order currency send to payment system
    // @inject_tag: json:"-" bson:"pm_income_amount"
    double payment_method_income_amount = 47; // order amount received from payment system in notification request
    // @inject_tag: json:"-" bson:"pm_income_currency"
    Currency payment_method_income_currency = 48; // order currency received from payment system in notification request
    // @inject_tag: json:"-" bson:"pm_order_close_date"
    google.protobuf.Timestamp payment_method_order_closed_at = 49; // date of ended payment operation in payment system
    // @inject_tag: json:"-" bson:"created_by_json"
    bool is_json_request = 50; // is order create by json request
    // @inject_tag: json:"-" bson:"private_amount" validate:"required,numeric,gt=0"
    double order_amount = 51;
    // @inject_tag: json:"-" bson:"amount_psp_ac"
    double amount_in_psp_accounting_currency = 52; // operation amount in accounting currency of PSP
    // @inject_tag: json:"-" bson:"amount_in_merchant_ac"
    double amount_in_merchant_accounting_currency = 53; // received from project operation amount in project owner (merchant) accounting currency
    // @inject_tag: json:"-" bson:"amount_out_merchant_ac"
    double amount_out_merchant_accounting_currency = 54; // received from payment system operation amount in project owner (merchant) accounting currency
    // @inject_tag: json:"-" bson:"amount_ps_ac"
    double amount_in_payment_system_accounting_currency = 55; // operation amount in payment system accounting currency
    // @inject_tag: json:"-" bson:"pm_account"
    string payment_method_payer_account = 56; // account of payer in payment system
    // @inject_tag: json:"-" bson:"pm_txn_params"
    map<string, string> payment_method_txn_params = 57; // any params received in request of payment system about payment
    // @inject_tag: json:"-" bson:"payment_requisites"
    map<string, string> payment_requisites = 58;
    // @inject_tag: json:"-" bson:"psp_fee_amount"
    OrderFeePsp psp_fee_amount = 59; // PSP (P1) fee amount
    // @inject_tag: json:"-" bson:"to_payer_fee_amount"
    OrderFee to_payer_fee_amount = 60; // value of fee which added to payer amount
    // @inject_tag: json:"-" bson:"ps_fee_amount"
    OrderFeePaymentSystem payment_system_fee_amount = 61; // payment system fee for payment operation
    // @inject_tag: json:"-" bson:"expire_date_to_form_input"
    google.protobuf.Timestamp expire_date_to_form_input = 62;
    // @inject_tag: json:"-" bson:"user_address_data_required"
    bool user_address_data_required = 63;
    // @inject_tag: json:"-" bson:"products" validate:"omitempty,gte=1,dive,hexadecimal,len=24"
    repeated string products = 64;
    // @inject_tag: json:"-" bson:"is_notifications_sent"
    map<string, bool> is_notifications_sent = 65;

    // @inject_tag: json:"-" bson:"country_restriction"
    CountryRestriction country_restriction = 66;

    // @inject_tag: json:"-"
    OrderPaymentRoyaltyData payment_royalty_data = 67;
}

message CountryRestriction {
    //@inject_tag: json:"iso_code_a2" bson:"iso_code_a2" validate:"alpha,len=2"
    string iso_code_a2 = 1;
    //@inject_tag: json:"payments_allowed" bson:"payments_allowed"
    bool payments_allowed = 2;
    //@inject_tag: json:"change_allowed" bson:"change_allowed"
    bool change_allowed = 3;
}

message OrderItem {
    //@inject_tag: validate:"required,hexadecimal,len=24" json:"id" bson:"_id"
    string id = 1;
    //@inject_tag: validate:"required" json:"object" bson:"object"
    string object = 2;
    //@inject_tag: validate:"required" json:"sku" bson:"sku"
    string sku = 3;
    //@inject_tag: validate:"required" json:"name" bson:"name"
    string name = 4;
    //@inject_tag: validate:"required" json:"description" bson:"description"
    string description = 5;
    // @inject_tag: validate:"required,numeric,gt=0" json:"amount" bson:"amount"
    double amount = 6;
    //@inject_tag: validate:"required,alpha,len=3" json:"currency" bson:"currency"
    string currency = 7;
    //@inject_tag: validate:"dive,omitempty,uri" json:"images" bson:"images"
    repeated string images = 8;
    //@inject_tag: validate:"omitempty,url" json:"url" bson:"url"
    string url = 9;
    //@inject_tag: json:"metadata" bson:"metadata"
    map<string, string> metadata = 10;
    //@inject_tag: json:"created_at" bson:"created_at"
    google.protobuf.Timestamp created_at = 11;
    //@inject_tag: json:"updated_at" bson:"updated_at"
    google.protobuf.Timestamp updated_at = 12;
}

message OrderPaginate {
    // @inject_tag: json:"count"
    int32 count = 1; // total count of selected orders
    // @inject_tag: json:"items"
    repeated Order items = 2; // array of selected orders
}

message Currency {
    // @inject_tag: bson:"code_int"
    int32 code_int = 1;
    // @inject_tag: bson:"code_a3"
    string code_a3 = 2;
    // @inject_tag: bson:"name"
    Name name = 4;
    // @inject_tag: bson:"is_active"
    bool is_active = 5;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 6;
    // @inject_tag: bson:"updated_at"
    google.protobuf.Timestamp updated_at = 7;
}

message PaymentMethodOrder {
    // @inject_tag: json:"-" bson:"_id"
    string id = 1;
    // @inject_tag: json:"title" bson:"name"
    string name = 2;
    // @inject_tag: bson:"external_id" json:"external_id"
    string external_id = 3;
    // @inject_tag: bson:"params"
    PaymentMethodParams params = 4;
    // @inject_tag: bson:"payment_system_id" json:"payment_system_id"
    string payment_system_id = 5;
    // @inject_tag: json:"type" bson:"group_alias"
    string group = 6;
    // @inject_tag: json:"saved" bson:"saved"
    bool saved = 7;
    //@inject_tag: json:"fee" bson:"fee"
    OrderFee fee = 8;
    //@inject_tag: json:"card" bson:"card"
    PaymentMethodCard card = 9;
    //@inject_tag: json:"wallet" bson:"wallet"
    PaymentMethodWallet wallet = 10;
    //@inject_tag: json:"crypto_currency" bson:"crypto_currency"
    PaymentMethodCrypto crypto_currency = 11;
}

message PaymentMethodParams {
    // @inject_tag: bson:"currency" json:"currency" validate:"required,alpha,len=3"
    string currency = 1;
    // @inject_tag: bson:"terminal_id" json:"terminal_id" validate:"omitempty,alphanum"
    string terminal_id = 2;
    // @inject_tag: bson:"secret" json:"secret" validate:"omitempty"
    string secret = 3;
    // @inject_tag: bson:"secret_callback" json:"secret_callback" validate:"omitempty"
    string secret_callback = 5;
}

message PaymentSystem {
    // @inject_tag: bson:"_id" structure:"_id,bsonobjectid"
    string id = 1;
    string name = 2;
    // @inject_tag: bson:"country" structure:"country"
    string Country = 3;
    // @inject_tag: bson:"accounting_currency" structure:"accounting_currency"
    Currency accounting_currency = 4;
    // @inject_tag: bson:"accounting_period" structure:"accounting_period"
    string accounting_period = 5;
    // @inject_tag: bson:"is_active" structure:"is_active"
    bool is_active = 6;
    // @inject_tag: bson:"created_at" structure:"created_at,timestamp"
    google.protobuf.Timestamp created_at = 7;
    // @inject_tag: bson:"updated_at" structure:"updated_at,timestamp"
    google.protobuf.Timestamp updated_at = 8;
    // @inject_tag: bson:"handler" json:"handler" validate:"omitempty,alphanum"
    string handler = 9;
}

message PaymentMethodCard {
    //@inject_tag: json:"first6" bson:"first6"
    string first6 = 1;
    //@inject_tag: json:"last4" bson:"last4"
    string last4 = 2;
    //@inject_tag: json:"masked" bson:"masked"
    string masked = 3;
    //@inject_tag: json:"expiry_month" bson:"expiry_month"
    string expiry_month = 4;
    //@inject_tag: json:"expiry_year" bson:"expiry_year"
    string expiry_year = 5;
    //@inject_tag: json:"brand" bson:"brand"
    string brand = 6;
    //@inject_tag: json:"fingerprint" bson:"fingerprint"
    string fingerprint = 7;
    //@inject_tag: json:"secure3d" bson:"secure3d"
    bool secure3d = 8;
}

message PaymentMethodWallet {
    //@inject_tag: json:"brand" bson:"brand"
    string brand = 1;
    //@inject_tag: json:"account" bson:"account"
    string account = 2;
}

message PaymentMethodCrypto {
    //@inject_tag: json:"brand" bson:"brand"
    string brand = 1;
    //@inject_tag: json:"address" bson:"address"
    string address = 2;
}

message OrderFee {
    // @inject_tag: json:"-" bson:"amount_payment_method_currency" validate:"required,numeric,gte=0"
    double AmountPaymentMethodCurrency = 1; // amount of fee of payment system in payment currency
    // @inject_tag: json:"amount" bson:"amount_merchant_currency" validate:"required,numeric,gte=0"
    double AmountMerchantCurrency = 2; // amount of fee of payment system in accounting currency of merchant
    // @inject_tag: json:"currency" bson:"merchant_currency" validate:"required,alpha,len=3"
    string merchant_currency_a3 = 3;
    // @inject_tag: json:"effective_rate" bson:"effective_rate_merchant_currency"
    double effective_rate_merchant_currency = 4;
}

message OrderFeePsp {
    // @inject_tag: bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"
    double AmountPaymentMethodCurrency = 1; // amount of fee of payment system in payment currency
    // @inject_tag: bson:"amount_merchant_currency" structure:"amount_merchant_currency"
    double AmountMerchantCurrency = 2; // amount of fee of payment system in accounting currency of merchant
    // @inject_tag: bson:"amount_psp_currency" structure:"amount_psp_currency"
    double AmountPspCurrency = 3; // amount of fee of PSP (P1) in PSP (P1) accounting currencies
}

// Contain information about payment system commission in other currencies
message OrderFeePaymentSystem {
    // @inject_tag: bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"
    double AmountPaymentMethodCurrency = 1; // amount of fee of payment system in payment currency
    // @inject_tag: bson:"amount_merchant_currency" structure:"amount_merchant_currency"
    double AmountMerchantCurrency = 2; // amount of fee of payment system in accounting currency of merchant
    // @inject_tag: bson:"amount_payment_system_currency" structure:"amount_payment_system_currency"
    double AmountPaymentSystemCurrency = 3; // amount of fee of payment system in accounting currency of payment system
}

message ProjectPaymentMethod {
    // @inject_tag: bson:"_id"
    string id = 1;
    // @inject_tag: bson:"terminal"
    string terminal = 2;
    // @inject_tag: bson:"password"
    string password = 3;
    // @inject_tag: bson:"callback_password"
    string callback_password = 4;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 5;
}

message CurrencyRate {
    // @inject_tag: bson:"_id"
    string id = 1;
    // @inject_tag: bson:"currency_from"
    int32 currency_from = 2;
    // @inject_tag: bson:"currency_to"
    int32 currency_to = 3;
    // @inject_tag: bson:"rate"
    double rate = 4;
    // @inject_tag: bson:"is_active"
    bool is_active = 5;
    // @inject_tag: bson:"date"
    google.protobuf.Timestamp date = 6;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 7;
}

message PaymentMethod {
    // @inject_tag: bson:"_id" json:"id" validate:"omitempty,hexadecimal,len=24"
    string id = 1;
    // @inject_tag: bson:"name" json:"name" validate:"required,omitempty,alphanum"
    string name = 2;
    // @inject_tag: bson:"group_alias" json:"group_alias" validate:"omitempty,alphanum"
    string group = 3;
    // @inject_tag: bson:"external_id" json:"external_id" validate:"omitempty,alphanum"
    string external_id = 5;
    // @inject_tag: bson:"currencies" json:"currencies" validate:"omitempty,numeric,dive,gte=0"
    repeated int32 currencies = 6;
    // @inject_tag: bson:"min_payment_amount" json:"min_payment_amount" validate:"omitempty,numeric,gte=0"
    double min_payment_amount = 7;
    // @inject_tag: bson:"max_payment_amount" json:"max_payment_amount" validate:"omitempty,numeric,gte=0"
    double max_payment_amount = 8;
    // @inject_tag: bson:"type" json:"type" validate:"omitempty,alpha,gte=0"
    string type = 9;
    // @inject_tag: bson:"account_regexp" json:"account_regexp" validate:"omitempty"
    string account_regexp = 10;
    // @inject_tag: bson:"is_active" json:"is_active" validate:"omitempty"
    bool is_active = 11;
    // @inject_tag: bson:"payment_system_id" json:"payment_system_id" validate:"required,hexadecimal,len=24"
    string payment_system_id = 12;
    // @inject_tag: bson:"test_settings" json:"test_settings" validate:"omitempty"
    map<string,PaymentMethodParams>  test_settings = 13;
    // @inject_tag: bson:"production_settings" json:"production_settings" validate:"omitempty"
    map<string,PaymentMethodParams> production_settings = 14;
    // @inject_tag: bson:"created_at" json:"max_payment_amount" validate:"omitempty"
    google.protobuf.Timestamp created_at = 15;
    // @inject_tag: bson:"updated_at" json:"max_payment_amount" validate:"omitempty"
    google.protobuf.Timestamp updated_at = 16;
}

message Vat {
    // @inject_tag: bson:"_id"
    string id = 1;
    // @inject_tag: bson:"country"
    string country = 2;
    // @inject_tag: bson:"subdivision_code"
    string subdivision = 3;
    // @inject_tag: bson:"vat"
    double vat = 4;
    // @inject_tag: bson:"is_active"
    bool is_active = 5;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 8;
    // @inject_tag: bson:"updated_at"
    google.protobuf.Timestamp updated_at = 9;
}

message Commission {
    // @inject_tag: bson:"_id"
    string id = 1;
    // @inject_tag: bson:"pm_id"
    string payment_method_id = 2;
    // @inject_tag: bson:"project_id"
    string project_id = 3;
    // @inject_tag: bson:"pm_commission"
    double payment_method_commission = 4;
    // @inject_tag: bson:"psp_commission"
    double psp_commission = 5;
    // @inject_tag: bson:"total_commission_to_user"
    double total_commission_to_user = 6;
    // @inject_tag: bson:"start_date"
    google.protobuf.Timestamp start_date = 7;
    // @inject_tag: bson:"created_at"
    google.protobuf.Timestamp created_at = 8;
    // @inject_tag: bson:"updated_at"
    google.protobuf.Timestamp updated_at = 9;
}

message CardExpire {
    // @inject_tag: bson:"month"
    string month = 1;
    // @inject_tag: bson:"year"
    string year = 2;
}

message SavedCard {
    string id = 1;
    string pan = 2;
    string card_holder = 3;
    CardExpire expire = 4;
}

message PaymentFormPaymentMethod {
    string id = 1;
    string name = 2;
    string type = 3;
    // @inject_tag: json:"group_alias"
    string group = 4;
    string account_regexp = 5;
    // @inject_tag: json:"has_saved_cards"
    bool has_saved_cards = 6;
    // @inject_tag: json:"saved_cards,omitempty"
    repeated SavedCard saved_cards = 7;
}

message MerchantPaymentMethodPerTransactionCommission {
    // @inject_tag: validate:"omitempty,numeric,gte=0" json:"fee"
    double fee = 1;
    // @inject_tag: json:"currency"
    string currency = 2;
}

message MerchantPaymentMethodCommissions {
    // @inject_tag: validate:"omitempty,numeric,gte=0,lte=100" json:"fee"
    double fee = 1;
    // @inject_tag: validate:"required" json:"per_transaction"
    MerchantPaymentMethodPerTransactionCommission per_transaction = 2;
}

message MerchantPaymentMethodIntegration {
    // @inject_tag: json:"terminal_id"
    string terminal_id = 1;
    // @inject_tag: json:"terminal_password"
    string terminal_password = 2;
    // @inject_tag: json:"terminal_callback_password"
    string terminal_callback_password = 3;
    // @inject_tag: json:"integrated"
    bool integrated = 4;
}

message MerchantPaymentMethodIdentification {
    // @inject_tag: validate:"required,hexadecimal,len=24" json:"id"
    string id = 1;
    // @inject_tag: validate:"required" json:"name"
    string name = 2;
}

message MerchantPaymentMethod {
    MerchantPaymentMethodIdentification payment_method = 3;
    MerchantPaymentMethodCommissions commission = 4;
    MerchantPaymentMethodIntegration integration = 5;
    bool is_active = 6;
}

message RefundPayerData {
    string country = 1;
    string zip = 2;
    string state = 3;
}

message RefundOrder {
    string id = 1;
    string uuid = 2;
}

message Refund {
    string id = 1;
    RefundOrder order = 2;
    string external_id = 3;
    double amount = 4;
    string creatorId = 5;
    string reason = 6;
    Currency currency = 7;
    int32 status = 8;
    google.protobuf.Timestamp created_at = 9;
    google.protobuf.Timestamp updated_at = 10;
    RefundPayerData payer_data = 11;
    float sales_tax = 12;
}

message MerchantPaymentMethodHistory {
    // @inject_tag: validate:"required,hexadecimal,len=24"
    string id = 1;
    // @inject_tag: validate:"required,hexadecimal,len=24"
    string merchant_id = 2;
    // @inject_tag: validate:"required"
    MerchantPaymentMethod paymentMethod = 3;
    // @inject_tag: json:"created_at" validate:"required"
    google.protobuf.Timestamp created_at = 4;
    // @inject_tag: validate:"required,hexadecimal,len=24"
    string user_id = 5;
}

message CustomerIdentity {
    string merchant_id = 1;
    string project_id = 2;
    string type = 3;
    string value = 4;
    bool verified = 5;
    google.protobuf.Timestamp created_at = 6;
}

message CustomerIpHistory {
    bytes ip = 1;
    google.protobuf.Timestamp created_at = 2;
}

message CustomerAddressHistory {
    string country = 1;
    string city = 2;
    string postal_code = 3;
    string state = 4;
    google.protobuf.Timestamp created_at = 5;
}

message CustomerStringValueHistory {
    string value = 1;
    google.protobuf.Timestamp created_at = 2;
}

message Customer {
    string id = 1;
    string tech_email = 2;
    string external_id = 3;
    string email = 4;
    bool email_verified = 5;
    string phone = 6;
    bool phone_verified = 7;
    string name = 8;
    bytes ip = 9;
    string locale = 10;
    string accept_language = 11;
    // @inject_tag: json:"-"
    string user_agent = 12;
    OrderBillingAddress address = 13;
    repeated CustomerIdentity identity = 14;
    // @inject_tag: json:"-"
    repeated CustomerIpHistory ip_history = 15;
    // @inject_tag: json:"-"
    repeated CustomerAddressHistory address_history = 16;
    // @inject_tag: json:"-"
    repeated CustomerStringValueHistory locale_history = 17;
    // @inject_tag: json:"-"
    repeated CustomerStringValueHistory accept_language_history = 18;
    // @inject_tag: json:"metadata"
    map<string, string> metadata = 19;
    // @inject_tag: json:"-"
    google.protobuf.Timestamp created_at = 20;
    // @inject_tag: json:"-"
    google.protobuf.Timestamp updated_at = 21;
    //@inject_tag: json:"notify_sale" bson:"notify_sale"
    bool notify_sale = 22;
    //@inject_tag: json:"notify_sale_email" bson:"notify_sale_email"
    string notify_sale_email = 23;
    //@inject_tag: json:"notify_new_region" bson:"notify_new_region"
    bool notify_new_region = 24;
    //@inject_tag: json:"notify_new_region_email" bson:"notify_new_region_email"
    string notify_new_region_email = 25;
}

message TokenUserEmailValue {
    //@inject_tag: validate:"omitempty,email"
    string value = 1;
    bool verified = 2;
}

message TokenUserPhoneValue {
    //@inject_tag: validate:"omitempty,phone"
    string value = 1;
    bool verified = 2;
}

message TokenUserIpValue {
    //@inject_tag: validate:"omitempty,ip"
    string value = 1;
}

message TokenUserLocaleValue {
    //@inject_tag: validate:"omitempty,alpha,len=2"
    string value = 1;
}

message TokenUserValue {
    string value = 1;
}

message TokenUser {
    string id = 1;
    TokenUserEmailValue email = 2;
    TokenUserPhoneValue phone = 4;
    TokenUserValue name = 6;
    TokenUserIpValue ip = 7;
    TokenUserLocaleValue locale = 8;
    OrderBillingAddress address = 9;
    map<string, string> metadata = 10;
    //@inject_tag: json:"-"
    string user_agent = 11;
    //@inject_tag: json:"-"
    string accept_language = 12;
}

message TokenSettingsReturnUrl {
    //@inject_tag: validate:"omitempty,url"
    string success = 1;
    //@inject_tag: validate:"omitempty,url"
    string fail = 2;
}

message TokenSettingsItem {
    //@inject_tag: validate:"required"
    string sku = 1;
    //@inject_tag: validate:"required,numeric,gt=0"
    double amount = 5;
    //@inject_tag: validate:"required,alpha,len=3"
    string currency = 4;
}

message TokenSettings {
    //@inject_tag: json:"project_id" validate:"required,hexadecimal,len=24"
    string project_id = 2;
    //@inject_tag: json:"return_url"
    TokenSettingsReturnUrl return_url = 3;
    //@inject_tag: json:"currency" validate:"omitempty,alpha,len=3"
    string currency = 4;
    //@inject_tag: json:"amount" validate:"omitempty,numeric,gt=0"
    double amount = 5;
    //@inject_tag: json:"payment_method"
    string payment_method = 6;
    //@inject_tag: json:"items"
    repeated TokenSettingsItem items = 7;
    //@inject_tag: json:"description"
    string description = 8;
    //@inject_tag: json:"products_ids"
    repeated string products_ids = 9;
    //@inject_tag: json:"metadata"
    map<string, string> metadata = 10;
}

message OrderIssuer {
    //@inject_tag: json:"url"
    string url = 1;
    //@inject_tag: json:"embedded"
    bool embedded = 2;
}

message OrderNotificationRefund {
    //@inject_tag: validate:"required,numeric,gt=0" json:"amount"
    double amount = 1;
    //@inject_tag: validate:"required,alpha,len=3" json:"currency"
    string currency = 2;
    //@inject_tag: json:"reason"
    string reason = 3;
    //@inject_tag: json:"code"
    string code = 4;
    //@inject_tag: json:"receipt_number"
    string receipt_number = 5;
    //@inject_tag: json:"receipt_url"
    string receipt_url = 6;
}

message GetCountryRequest {
    //@inject_tag: validate:"required,alpha,len=2"
    string iso_code = 1;
}

message Country {
    //@inject_tag: json:"-" bson:"_id" validate:"omitempty,hexadecimal,len=24"
    string id = 1;
    //@inject_tag: json:"iso_code_a2" bson:"iso_code_a2" validate:"required,alpha,len=2"
    string iso_code_a2 = 2;
    //@inject_tag: json:"region" bson:"region" validate:"required"
    string region = 3;
    //@inject_tag: json:"currency" bson:"currency" validate:"required,alpha,len=3"
    string currency = 4;
    //@inject_tag: json:"payments_allowed" bson:"payments_allowed"
    bool payments_allowed = 5;
    //@inject_tag: json:"change_allowed" bson:"change_allowed"
    bool change_allowed = 6;
    //@inject_tag: json:"vat_enabled" bson:"vat_enabled"
    bool vat_enabled = 7;
    //@inject_tag: json:"vat_currency" bson:"vat_currency" validate:"omitempty,alpha,len=3"
    string vat_currency = 8;
    //@inject_tag: json:"price_group_id" bson:"price_group_id" validate:"required,hexadecimal,len=24"
    string price_group_id = 9;
    //@inject_tag: json:"-" bson:"created_at"
    google.protobuf.Timestamp created_at = 11;
    //@inject_tag: json:"-" bson:"updated_at"
    google.protobuf.Timestamp updated_at = 12;
}

message CountriesList {
    repeated Country countries = 1;
}

message GetPriceGroupRequest {
    //@inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
    string id = 1;
}

message PriceGroup {
    //@inject_tag: json:"id" bson:"_id" validate:"required,hexadecimal,len=24"
    string id = 1;
    //@inject_tag: json:"currency" bson:"currency" validate:"required,alpha,len=3"
    string currency = 2;
    //@inject_tag: json:"is_simple" bson:"is_simple"
    bool is_simple = 3;
    //@inject_tag: json:"region" bson:"region" validate:"omitempty,alpha"
    string region = 4;
    //@inject_tag: json:"created_at" bson:"created_at"
    google.protobuf.Timestamp created_at = 5;
    //@inject_tag: json:"updated_at" bson:"updated_at"
    google.protobuf.Timestamp updated_at = 6;
}

message ZipCodeState {
    //@inject_tag: bson:"code"
    string code = 1;
    //@inject_tag: bson:"name"
    string name = 2;
}

message ZipCode {
    string zip = 1;
    string country = 2;
    string city = 3;
    ZipCodeState state = 4;
    google.protobuf.Timestamp created_at = 5;
}

message CurrencyList {
    repeated Currency currency = 1;
}

message GetCurrencyRequest {
    //@inject_tag: validate:"omitempty,numeric,gt=0"
    int32 currency_int = 1;
    //@inject_tag: validate:"omitempty,alpha"
    string currency_code = 2;
}

message PaymentChannelCostSystem {
    //@inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
    string id = 1;
    //@inject_tag: json:"name" bson:"name" validate:"required,alpha"
    string name = 2;
    //@inject_tag: json:"region" bson:"region" validate:"required,alpha"
    string region = 3;
    //@inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
    string country = 4;
    // @inject_tag: json:"percent" bson:"percent" validate:"numeric,gte=0,lte=100"
    double percent = 5;
    // @inject_tag: json:"fix_amount" bson:"fix_amount" validate:"numeric,gte=0"
    double fix_amount = 6;
    //@inject_tag: json:"fix_amount_currency" bson:"fix_amount_currency" validate:"required,alpha,len=3"
    string fix_amount_currency = 7;
    //@inject_tag: json:"created_at" bson:"created_at"
    google.protobuf.Timestamp created_at = 8;
    //@inject_tag: json:"updated_at" bson:"updated_at"
    google.protobuf.Timestamp updated_at = 9;
    // @inject_tag: json:"is_active" bson:"is_active"
    bool is_active = 10;
}

message PaymentChannelCostSystemRequest {
    //@inject_tag: json:"name" bson:"name" validate:"required,alpha"
    string name = 1;
    //@inject_tag: json:"region" bson:"region" validate:"required,alpha"
    string region = 2;
    //@inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
    string country = 3;
}

message PaymentChannelCostSystemList {
    repeated PaymentChannelCostSystem items = 1;
}

message PaymentChannelCostMerchant {
    //@inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
    string id = 1;
    //@inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
    string merchant_id = 2;
    //@inject_tag: json:"name" bson:"name" validate:"required,alpha"
    string name = 3;
    //@inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
    string payout_currency = 4;
    // @inject_tag: json:"min_amount" bson:"min_amount" validate:"required,numeric,gte=0"
    double min_amount = 5;
    //@inject_tag: json:"region" bson:"region" validate:"required,alpha"
    string region = 6;
    //@inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
    string country = 7;
    // @inject_tag: json:"method_percent" bson:"method_percent" validate:"numeric,gte=0,lte=100"
    double method_percent = 8;
    // @inject_tag: json:"method_fix_amount" bson:"method_fix_amount" validate:"numeric,gte=0"
    double method_fix_amount = 9;
    // @inject_tag: json:"ps_percent" bson:"ps_percent" validate:"numeric,gte=0,lte=100"
    double ps_percent = 10;
    // @inject_tag: json:"ps_fixed_fee" bson:"ps_fixed_fee" validate:"numeric,gte=0"
    double ps_fixed_fee = 11;
    // @inject_tag: json:"ps_fixed_fee_currency" bson:"ps_fixed_fee_currency" validate:"required,alpha,len=3"
    string ps_fixed_fee_currency = 12;
    //@inject_tag: json:"created_at" bson:"created_at"
    google.protobuf.Timestamp created_at = 13;
    //@inject_tag: json:"updated_at" bson:"updated_at"
    google.protobuf.Timestamp updated_at = 14;
    // @inject_tag: json:"is_active" bson:"is_active"
    bool is_active = 15;
}

message PaymentChannelCostMerchantRequest {
    //@inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
    string merchant_id = 1;
    //@inject_tag: json:"name" bson:"name" validate:"required,alpha"
    string name = 2;
    //@inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
    string payout_currency = 3;
    // @inject_tag: json:"amount" bson:"amount" validate:"required,numeric,gte=0"
    double amount = 4;
    //@inject_tag: json:"region" bson:"region" validate:"required,alpha"
    string region = 5;
    //@inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
    string country = 6;
}

message PaymentChannelCostMerchantList {
    repeated PaymentChannelCostMerchant items = 1;
}

message PaymentChannelCostMerchantListRequest {
    //@inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
    string merchant_id = 1;
}

message MoneyBackCostSystem {
    //@inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
    string id = 1;
    //@inject_tag: json:"name" bson:"name" validate:"required,alpha"
    string name = 2;
    //@inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
    string payout_currency = 3;
    //@inject_tag: json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"
    string undo_reason = 4;
    //@inject_tag: json:"region" bson:"region" validate:"required,alpha"
    string region = 5;
    //@inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
    string country = 6;
    // @inject_tag: json:"days_from" bson:"days_from" validate:"numeric,gte=0"
    int32 days_from = 7;
    // @inject_tag: json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"
    int32 payment_stage = 8;
    // @inject_tag: json:"percent" bson:"percent" validate:"numeric,gte=0,lte=100"
    double percent = 9;
    // @inject_tag: json:"fix_amount" bson:"fix_amount" validate:"numeric,gte=0"
    double fix_amount = 10;
    //@inject_tag: json:"created_at" bson:"created_at"
    google.protobuf.Timestamp created_at = 11;
    //@inject_tag: json:"updated_at" bson:"updated_at"
    google.protobuf.Timestamp updated_at = 12;
    // @inject_tag: json:"is_active" bson:"is_active"
    bool is_active = 13;
}

message MoneyBackCostSystemRequest {
    //@inject_tag: json:"name" bson:"name" validate:"required,alpha"
    string name = 1;
    //@inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
    string payout_currency = 2;
    //@inject_tag: json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"
    string undo_reason = 3;
    //@inject_tag: json:"region" bson:"region" validate:"required,alpha"
    string region = 4;
    //@inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
    string country = 5;
    // @inject_tag: json:"days" bson:"days" validate:"required,numeric,gte=0"
    int32 days = 6;
    // @inject_tag: json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"
    int32 payment_stage = 7;
}

message MoneyBackCostSystemList {
    repeated MoneyBackCostSystem items = 1;
}

message MoneyBackCostMerchant {
    //@inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
    string id = 1;
    //@inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
    string merchant_id = 2;
    //@inject_tag: json:"name" bson:"name" validate:"required,alpha"
    string name = 3;
    //@inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
    string payout_currency = 4;
    //@inject_tag: json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"
    string undo_reason = 5;
    //@inject_tag: json:"region" bson:"region" validate:"required,alpha"
    string region = 6;
    //@inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
    string country = 7;
    // @inject_tag: json:"days_from" bson:"days_from" validate:"numeric,gte=0"
    int32 days_from = 8;
    // @inject_tag: json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"
    int32 payment_stage = 9;
    // @inject_tag: json:"percent" bson:"percent" validate:"numeric,gte=0,lte=100"
    double percent = 10;
    // @inject_tag: json:"fix_amount" bson:"fix_amount" validate:"numeric,gte=0"
    double fix_amount = 11;
    // @inject_tag: json:"fix_amount_currency" bson:"fix_amount_currency" validate:"required,alpha,len=3"
    string fix_amount_currency = 12;
    // @inject_tag: json:"is_paid_by_merchant" bson:"is_paid_by_merchant"
    bool is_paid_by_merchant = 13;
    //@inject_tag: json:"created_at" bson:"created_at"
    google.protobuf.Timestamp created_at = 14;
    //@inject_tag: json:"updated_at" bson:"updated_at"
    google.protobuf.Timestamp updated_at = 15;
    // @inject_tag: json:"is_active" bson:"is_active"
    bool is_active = 16;
}

message MoneyBackCostMerchantRequest {
    //@inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
    string merchant_id = 1;
    //@inject_tag: json:"name" bson:"name" validate:"required,alpha"
    string name = 2;
    //@inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
    string payout_currency = 3;
    //@inject_tag: json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"
    string undo_reason = 4;
    //@inject_tag: json:"region" bson:"region" validate:"required,alpha"
    string region = 5;
    //@inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
    string country = 6;
    // @inject_tag: json:"days" bson:"days" validate:"required,numeric,gte=0"
    int32 days = 7;
    // @inject_tag: json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"
    int32 payment_stage = 8;
}

message PaymentCostDeleteRequest {
    //@inject_tag: json:"id" bson:"_id" validate:"required,hexadecimal,len=24"
    string id = 1;
}

message MoneyBackCostMerchantList {
    repeated MoneyBackCostMerchant items = 1;
}

message MoneyBackCostMerchantListRequest {
    //@inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
    string merchant_id = 1;
}

message PayoutCostSystem {
    //@inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
    string id = 1;
    // @inject_tag: json:"intrabank_cost_amount" bson:"intrabank_cost_amount" validate:"numeric,gte=0"
    double intrabank_cost_amount = 2;
    //@inject_tag: json:"intrabank_cost_currency" bson:"intrabank_cost_currency" validate:"required,alpha,len=3"
    string intrabank_cost_currency = 3;
    // @inject_tag: json:"interbank_cost_amount" bson:"interbank_cost_amount" validate:"numeric,gte=0"
    double interbank_cost_amount = 4;
    //@inject_tag: json:"interbank_cost_currency" bson:"interbank_cost_currency" validate:"required,alpha,len=3"
    string interbank_cost_currency = 5;
    // @inject_tag: json:"is_active" bson:"is_active"
    bool is_active = 6;
    //@inject_tag: json:"-" bson:"created_at"
    google.protobuf.Timestamp created_at = 7;
}

message AccountingEntry {
    string id = 1;
    string object = 2;
    string type = 3;
    string source = 4;
    string merchant_id = 5;
    double amount = 6;
    string currency = 7;
    string reason = 8;
    string status = 9;
    google.protobuf.Timestamp created_at = 10;
    google.protobuf.Timestamp available_on = 11;
}