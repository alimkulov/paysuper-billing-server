// Code generated by protoc-gen-go. DO NOT EDIT.
// source: billing/billing.proto

package billing // import "github.com/paysuper/paysuper-billing-server/pkg/proto/billing"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Name struct {
	// @inject_tag: bson:"EN" json:"EN" structure:"EN"
	En string `protobuf:"bytes,1,opt,name=en,proto3" json:"EN" bson:"EN" structure:"EN"`
	// @inject_tag: bson:"RU" json:"RU" structure:"RU"
	Ru                   string   `protobuf:"bytes,2,opt,name=ru,proto3" json:"RU" bson:"RU" structure:"RU"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Name) Reset()         { *m = Name{} }
func (m *Name) String() string { return proto.CompactTextString(m) }
func (*Name) ProtoMessage()    {}
func (*Name) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{0}
}
func (m *Name) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Name.Unmarshal(m, b)
}
func (m *Name) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Name.Marshal(b, m, deterministic)
}
func (dst *Name) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Name.Merge(dst, src)
}
func (m *Name) XXX_Size() int {
	return xxx_messageInfo_Name.Size(m)
}
func (m *Name) XXX_DiscardUnknown() {
	xxx_messageInfo_Name.DiscardUnknown(m)
}

var xxx_messageInfo_Name proto.InternalMessageInfo

func (m *Name) GetEn() string {
	if m != nil {
		return m.En
	}
	return ""
}

func (m *Name) GetRu() string {
	if m != nil {
		return m.Ru
	}
	return ""
}

type OrderCreateRequest struct {
	// @inject_tag: query:"PO_PROJECT_ID" form:"PO_PROJECT_ID" json:"project" validate:"omitempty,hexadecimal"
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project" query:"PO_PROJECT_ID" form:"PO_PROJECT_ID" validate:"omitempty,hexadecimal"`
	// @inject_tag: query:"PO_SIGNATURE" form:"PO_SIGNATURE" validate:"omitempty,alphanum"
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty" query:"PO_SIGNATURE" form:"PO_SIGNATURE" validate:"omitempty,alphanum"`
	// @inject_tag: query:"PO_AMOUNT" form:"PO_AMOUNT" json:"amount" validate:"omitempty,numeric,gte=0"
	Amount float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount" query:"PO_AMOUNT" form:"PO_AMOUNT" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: query:"PO_CURRENCY" form:"PO_CURRENCY" json:"currency" validate:"omitempty,alpha,len=3"
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency" query:"PO_CURRENCY" form:"PO_CURRENCY" validate:"omitempty,alpha,len=3"`
	// @inject_tag: "PO_ACCOUNT" form:"PO_ACCOUNT" json:"account"`
	Account string `protobuf:"bytes,5,opt,name=account,proto3" json:"account" form:"PO_ACCOUNT"`
	// @inject_tag: query:"PO_ORDER_ID" form:"PO_ORDER_ID" json:"order_id" validate:"omitempty,max=255"
	OrderId string `protobuf:"bytes,6,opt,name=order_id,json=orderId,proto3" json:"order_id" query:"PO_ORDER_ID" form:"PO_ORDER_ID" validate:"omitempty,max=255"`
	// @inject_tag: query:"PO_DESCRIPTION" form:"PO_DESCRIPTION" json:"description" validate:"omitempty,max=255"
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description" query:"PO_DESCRIPTION" form:"PO_DESCRIPTION" validate:"omitempty,max=255"`
	// @inject_tag: query:"PO_PAYMENT_METHOD" form:"PO_PAYMENT_METHOD" json:"payment_method" validate:"omitempty,max=255"
	PaymentMethod string `protobuf:"bytes,8,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method" query:"PO_PAYMENT_METHOD" form:"PO_PAYMENT_METHOD" validate:"omitempty,max=255"`
	// @inject_tag: query:"PO_URL_VERIFY" form:"PO_URL_VERIFY" json:"url_verify" validate:"omitempty,url"
	UrlVerify string `protobuf:"bytes,9,opt,name=url_verify,json=urlVerify,proto3" json:"url_verify" query:"PO_URL_VERIFY" form:"PO_URL_VERIFY" validate:"omitempty,url"`
	// @inject_tag: query:"PO_URL_NOTIFY" form:"PO_URL_NOTIFY" json:"url_notify" validate:"omitempty,url"
	UrlNotify string `protobuf:"bytes,10,opt,name=url_notify,json=urlNotify,proto3" json:"url_notify" query:"PO_URL_NOTIFY" form:"PO_URL_NOTIFY" validate:"omitempty,url"`
	// @inject_tag: query:"PO_URL_SUCCESS" form:"PO_URL_SUCCESS" json:"url_success" validate:"omitempty,url"
	UrlSuccess string `protobuf:"bytes,11,opt,name=url_success,json=urlSuccess,proto3" json:"url_success" query:"PO_URL_SUCCESS" form:"PO_URL_SUCCESS" validate:"omitempty,url"`
	// @inject_tag: query:"PO_URL_FAIL" form:"PO_URL_FAIL" json:"url_fail" validate:"omitempty,url"
	UrlFail string `protobuf:"bytes,12,opt,name=url_fail,json=urlFail,proto3" json:"url_fail" query:"PO_URL_FAIL" form:"PO_URL_FAIL" validate:"omitempty,url"`
	// @inject_tag: query:"PO_PAYER_EMAIL" form:"PO_PAYER_EMAIL" json:"payer_email" validate:"omitempty,email"
	PayerEmail string `protobuf:"bytes,13,opt,name=payer_email,json=payerEmail,proto3" json:"payer_email" query:"PO_PAYER_EMAIL" form:"PO_PAYER_EMAIL" validate:"omitempty,email"`
	// @inject_tag: query:"PO_PAYER_PHONE" form:"PO_PAYER_PHONE" json:"payer_phone" validate:"omitempty,max=255"
	PayerPhone string `protobuf:"bytes,14,opt,name=payer_phone,json=payerPhone,proto3" json:"payer_phone" query:"PO_PAYER_PHONE" form:"PO_PAYER_PHONE" validate:"omitempty,max=255"`
	// @inject_tag: query:"PO_REGION" form:"PO_REGION" json:"region" validate:"omitempty,alpha,len=2"
	Region  string            `protobuf:"bytes,15,opt,name=region,proto3" json:"region" query:"PO_REGION" form:"PO_REGION" validate:"omitempty,alpha,len=2"`
	PayerIp string            `protobuf:"bytes,16,opt,name=payer_ip,json=payerIp,proto3" json:"payer_ip,omitempty"`
	Other   map[string]string `protobuf:"bytes,17,rep,name=other,proto3" json:"other,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	RawParams map[string]string `protobuf:"bytes,18,rep,name=raw_params,json=rawParams,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	RawBody string `protobuf:"bytes,19,opt,name=raw_body,json=rawBody,proto3" json:"-"`
	// @inject_tag: json:"-"
	IsJson bool `protobuf:"varint,20,opt,name=is_json,json=isJson,proto3" json:"-"`
	// @inject_tag: json:"-"
	Language string `protobuf:"bytes,21,opt,name=language,proto3" json:"-"`
	// @inject_tag: json:"products" validate:"omitempty,gte=1,dive,hexadecimal,len=24"
	Products []string `protobuf:"bytes,22,rep,name=products,proto3" json:"products" validate:"omitempty,gte=1,dive,hexadecimal,len=24"`
	// @inject_tag: json:"-"
	Metadata map[string]string `protobuf:"bytes,23,rep,name=metadata,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	PrivateMetadata map[string]string `protobuf:"bytes,24,rep,name=private_metadata,json=privateMetadata,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"receipt_number"
	ReceiptNumber string `protobuf:"bytes,25,opt,name=receipt_number,json=receiptNumber,proto3" json:"receipt_number"`
	// @inject_tag: json:"receipt_url"
	ReceiptUrl string `protobuf:"bytes,26,opt,name=receipt_url,json=receiptUrl,proto3" json:"receipt_url"`
	// @inject_tag: json:"issuer_url"
	IssuerUrl string `protobuf:"bytes,27,opt,name=issuer_url,json=issuerUrl,proto3" json:"issuer_url"`
	// @inject_tag: json:"is_embedded"
	IsEmbedded bool       `protobuf:"varint,28,opt,name=is_embedded,json=isEmbedded,proto3" json:"is_embedded"`
	Token      string     `protobuf:"bytes,29,opt,name=token,proto3" json:"token,omitempty"`
	User       *OrderUser `protobuf:"bytes,30,opt,name=user,proto3" json:"user,omitempty"`
	// @inject_tag: json:"order" validate:"omitempty,uuid"
	PspOrderUuid         string   `protobuf:"bytes,31,opt,name=psp_order_uuid,json=pspOrderUuid,proto3" json:"order" validate:"omitempty,uuid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderCreateRequest) Reset()         { *m = OrderCreateRequest{} }
func (m *OrderCreateRequest) String() string { return proto.CompactTextString(m) }
func (*OrderCreateRequest) ProtoMessage()    {}
func (*OrderCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{1}
}
func (m *OrderCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCreateRequest.Unmarshal(m, b)
}
func (m *OrderCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCreateRequest.Marshal(b, m, deterministic)
}
func (dst *OrderCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCreateRequest.Merge(dst, src)
}
func (m *OrderCreateRequest) XXX_Size() int {
	return xxx_messageInfo_OrderCreateRequest.Size(m)
}
func (m *OrderCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCreateRequest proto.InternalMessageInfo

func (m *OrderCreateRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *OrderCreateRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *OrderCreateRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderCreateRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderCreateRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *OrderCreateRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderCreateRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *OrderCreateRequest) GetPaymentMethod() string {
	if m != nil {
		return m.PaymentMethod
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlVerify() string {
	if m != nil {
		return m.UrlVerify
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlNotify() string {
	if m != nil {
		return m.UrlNotify
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlSuccess() string {
	if m != nil {
		return m.UrlSuccess
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlFail() string {
	if m != nil {
		return m.UrlFail
	}
	return ""
}

func (m *OrderCreateRequest) GetPayerEmail() string {
	if m != nil {
		return m.PayerEmail
	}
	return ""
}

func (m *OrderCreateRequest) GetPayerPhone() string {
	if m != nil {
		return m.PayerPhone
	}
	return ""
}

func (m *OrderCreateRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *OrderCreateRequest) GetPayerIp() string {
	if m != nil {
		return m.PayerIp
	}
	return ""
}

func (m *OrderCreateRequest) GetOther() map[string]string {
	if m != nil {
		return m.Other
	}
	return nil
}

func (m *OrderCreateRequest) GetRawParams() map[string]string {
	if m != nil {
		return m.RawParams
	}
	return nil
}

func (m *OrderCreateRequest) GetRawBody() string {
	if m != nil {
		return m.RawBody
	}
	return ""
}

func (m *OrderCreateRequest) GetIsJson() bool {
	if m != nil {
		return m.IsJson
	}
	return false
}

func (m *OrderCreateRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *OrderCreateRequest) GetProducts() []string {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *OrderCreateRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *OrderCreateRequest) GetPrivateMetadata() map[string]string {
	if m != nil {
		return m.PrivateMetadata
	}
	return nil
}

func (m *OrderCreateRequest) GetReceiptNumber() string {
	if m != nil {
		return m.ReceiptNumber
	}
	return ""
}

func (m *OrderCreateRequest) GetReceiptUrl() string {
	if m != nil {
		return m.ReceiptUrl
	}
	return ""
}

func (m *OrderCreateRequest) GetIssuerUrl() string {
	if m != nil {
		return m.IssuerUrl
	}
	return ""
}

func (m *OrderCreateRequest) GetIsEmbedded() bool {
	if m != nil {
		return m.IsEmbedded
	}
	return false
}

func (m *OrderCreateRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *OrderCreateRequest) GetUser() *OrderUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *OrderCreateRequest) GetPspOrderUuid() string {
	if m != nil {
		return m.PspOrderUuid
	}
	return ""
}

type Project struct {
	// @inject_tag: json:"id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"merchant_id" validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"name" validate:"required"
	Name map[string]string `protobuf:"bytes,3,rep,name=name,proto3" json:"name" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" validate:"required"`
	// @inject_tag: json:"image" validate:"omitempty,url"
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image" validate:"omitempty,url"`
	// @inject_tag: json:"callback_currency" validate:"omitempty,len=3"
	CallbackCurrency string `protobuf:"bytes,5,opt,name=callback_currency,json=callbackCurrency,proto3" json:"callback_currency" validate:"omitempty,len=3"`
	// @inject_tag: json:"callback_protocol" validate:"omitempty,oneof=default empty"
	CallbackProtocol string `protobuf:"bytes,6,opt,name=callback_protocol,json=callbackProtocol,proto3" json:"callback_protocol" validate:"omitempty,oneof=default empty"`
	// @inject_tag: json:"create_order_allowed_urls" validate:"omitempty,dive,url"
	CreateOrderAllowedUrls []string `protobuf:"bytes,7,rep,name=create_order_allowed_urls,json=createOrderAllowedUrls,proto3" json:"create_order_allowed_urls" validate:"omitempty,dive,url"`
	// @inject_tag: json:"allow_dynamic_notify_urls"
	AllowDynamicNotifyUrls bool `protobuf:"varint,8,opt,name=allow_dynamic_notify_urls,json=allowDynamicNotifyUrls,proto3" json:"allow_dynamic_notify_urls"`
	// @inject_tag: json:"allow_dynamic_redirect_urls"
	AllowDynamicRedirectUrls bool `protobuf:"varint,9,opt,name=allow_dynamic_redirect_urls,json=allowDynamicRedirectUrls,proto3" json:"allow_dynamic_redirect_urls"`
	// @inject_tag: json:"limits_currency" validate:"omitempty,len=3"
	LimitsCurrency string `protobuf:"bytes,10,opt,name=limits_currency,json=limitsCurrency,proto3" json:"limits_currency" validate:"omitempty,len=3"`
	// @inject_tag: json:"min_payment_amount" validate:"omitempty,numeric,gte=0"
	MinPaymentAmount float64 `protobuf:"fixed64,11,opt,name=min_payment_amount,json=minPaymentAmount,proto3" json:"min_payment_amount" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: json:"max_payment_amount" validate:"omitempty,numeric,gte=0"
	MaxPaymentAmount float64 `protobuf:"fixed64,12,opt,name=max_payment_amount,json=maxPaymentAmount,proto3" json:"max_payment_amount" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: json:"notify_emails" validate:"omitempty,dive,email"
	NotifyEmails []string `protobuf:"bytes,13,rep,name=notify_emails,json=notifyEmails,proto3" json:"notify_emails" validate:"omitempty,dive,email"`
	// @inject_tag: json:"is_products_checkout"
	IsProductsCheckout bool `protobuf:"varint,14,opt,name=is_products_checkout,json=isProductsCheckout,proto3" json:"is_products_checkout"`
	// @inject_tag: json:"secret_key" validate:"omitempty,max=255"
	SecretKey string `protobuf:"bytes,15,opt,name=secret_key,json=secretKey,proto3" json:"secret_key" validate:"omitempty,max=255"`
	// @inject_tag: json:"signature_required"
	SignatureRequired bool `protobuf:"varint,16,opt,name=signature_required,json=signatureRequired,proto3" json:"signature_required"`
	// @inject_tag: json:"send_notify_email"
	SendNotifyEmail bool `protobuf:"varint,17,opt,name=send_notify_email,json=sendNotifyEmail,proto3" json:"send_notify_email"`
	// @inject_tag: json:"url_check_account" validate:"omitempty,url"
	UrlCheckAccount string `protobuf:"bytes,18,opt,name=url_check_account,json=urlCheckAccount,proto3" json:"url_check_account" validate:"omitempty,url"`
	// @inject_tag: json:"url_process_payment" validate:"omitempty,url"
	UrlProcessPayment string `protobuf:"bytes,19,opt,name=url_process_payment,json=urlProcessPayment,proto3" json:"url_process_payment" validate:"omitempty,url"`
	// @inject_tag: json:"url_redirect_fail" validate:"omitempty,url"
	UrlRedirectFail string `protobuf:"bytes,20,opt,name=url_redirect_fail,json=urlRedirectFail,proto3" json:"url_redirect_fail" validate:"omitempty,url"`
	// @inject_tag: json:"url_redirect_success" validate:"omitempty,url"
	UrlRedirectSuccess string `protobuf:"bytes,21,opt,name=url_redirect_success,json=urlRedirectSuccess,proto3" json:"url_redirect_success" validate:"omitempty,url"`
	// @inject_tag: json:"status" validate:"omitempty,numeric,oneof=0 1 2 3 4"
	Status int32 `protobuf:"varint,22,opt,name=status,proto3" json:"status" validate:"omitempty,numeric,oneof=0 1 2 3 4"`
	// @inject_tag: json:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,23,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	// @inject_tag: json:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,24,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	// @inject_tag: json:"products_count"
	ProductsCount int32 `protobuf:"varint,25,opt,name=products_count,json=productsCount,proto3" json:"products_count"`
	// @inject_tag: json:"url_chargeback_payment" validate:"omitempty,url"
	UrlChargebackPayment string `protobuf:"bytes,26,opt,name=url_chargeback_payment,json=urlChargebackPayment,proto3" json:"url_chargeback_payment" validate:"omitempty,url"`
	// @inject_tag: json:"url_cancel_payment" validate:"omitempty,url"
	UrlCancelPayment string `protobuf:"bytes,27,opt,name=url_cancel_payment,json=urlCancelPayment,proto3" json:"url_cancel_payment" validate:"omitempty,url"`
	// @inject_tag: json:"url_fraud_payment" validate:"omitempty,url"
	UrlFraudPayment string `protobuf:"bytes,28,opt,name=url_fraud_payment,json=urlFraudPayment,proto3" json:"url_fraud_payment" validate:"omitempty,url"`
	// @inject_tag: json:"url_refund_payment" validate:"omitempty,url"
	UrlRefundPayment     string   `protobuf:"bytes,29,opt,name=url_refund_payment,json=urlRefundPayment,proto3" json:"url_refund_payment" validate:"omitempty,url"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{2}
}
func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (dst *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(dst, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Project) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *Project) GetName() map[string]string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Project) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Project) GetCallbackCurrency() string {
	if m != nil {
		return m.CallbackCurrency
	}
	return ""
}

func (m *Project) GetCallbackProtocol() string {
	if m != nil {
		return m.CallbackProtocol
	}
	return ""
}

func (m *Project) GetCreateOrderAllowedUrls() []string {
	if m != nil {
		return m.CreateOrderAllowedUrls
	}
	return nil
}

func (m *Project) GetAllowDynamicNotifyUrls() bool {
	if m != nil {
		return m.AllowDynamicNotifyUrls
	}
	return false
}

func (m *Project) GetAllowDynamicRedirectUrls() bool {
	if m != nil {
		return m.AllowDynamicRedirectUrls
	}
	return false
}

func (m *Project) GetLimitsCurrency() string {
	if m != nil {
		return m.LimitsCurrency
	}
	return ""
}

func (m *Project) GetMinPaymentAmount() float64 {
	if m != nil {
		return m.MinPaymentAmount
	}
	return 0
}

func (m *Project) GetMaxPaymentAmount() float64 {
	if m != nil {
		return m.MaxPaymentAmount
	}
	return 0
}

func (m *Project) GetNotifyEmails() []string {
	if m != nil {
		return m.NotifyEmails
	}
	return nil
}

func (m *Project) GetIsProductsCheckout() bool {
	if m != nil {
		return m.IsProductsCheckout
	}
	return false
}

func (m *Project) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *Project) GetSignatureRequired() bool {
	if m != nil {
		return m.SignatureRequired
	}
	return false
}

func (m *Project) GetSendNotifyEmail() bool {
	if m != nil {
		return m.SendNotifyEmail
	}
	return false
}

func (m *Project) GetUrlCheckAccount() string {
	if m != nil {
		return m.UrlCheckAccount
	}
	return ""
}

func (m *Project) GetUrlProcessPayment() string {
	if m != nil {
		return m.UrlProcessPayment
	}
	return ""
}

func (m *Project) GetUrlRedirectFail() string {
	if m != nil {
		return m.UrlRedirectFail
	}
	return ""
}

func (m *Project) GetUrlRedirectSuccess() string {
	if m != nil {
		return m.UrlRedirectSuccess
	}
	return ""
}

func (m *Project) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Project) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Project) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Project) GetProductsCount() int32 {
	if m != nil {
		return m.ProductsCount
	}
	return 0
}

func (m *Project) GetUrlChargebackPayment() string {
	if m != nil {
		return m.UrlChargebackPayment
	}
	return ""
}

func (m *Project) GetUrlCancelPayment() string {
	if m != nil {
		return m.UrlCancelPayment
	}
	return ""
}

func (m *Project) GetUrlFraudPayment() string {
	if m != nil {
		return m.UrlFraudPayment
	}
	return ""
}

func (m *Project) GetUrlRefundPayment() string {
	if m != nil {
		return m.UrlRefundPayment
	}
	return ""
}

type ProjectOrder struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId           string            `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Name                 map[string]string `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UrlSuccess           string            `protobuf:"bytes,4,opt,name=url_success,json=urlSuccess,proto3" json:"url_success,omitempty"`
	UrlFail              string            `protobuf:"bytes,5,opt,name=url_fail,json=urlFail,proto3" json:"url_fail,omitempty"`
	NotifyEmails         []string          `protobuf:"bytes,6,rep,name=notify_emails,json=notifyEmails,proto3" json:"notify_emails,omitempty"`
	SecretKey            string            `protobuf:"bytes,7,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	SendNotifyEmail      bool              `protobuf:"varint,8,opt,name=send_notify_email,json=sendNotifyEmail,proto3" json:"send_notify_email,omitempty"`
	UrlCheckAccount      string            `protobuf:"bytes,9,opt,name=url_check_account,json=urlCheckAccount,proto3" json:"url_check_account,omitempty"`
	UrlProcessPayment    string            `protobuf:"bytes,10,opt,name=url_process_payment,json=urlProcessPayment,proto3" json:"url_process_payment,omitempty"`
	CallbackProtocol     string            `protobuf:"bytes,11,opt,name=callback_protocol,json=callbackProtocol,proto3" json:"callback_protocol,omitempty"`
	UrlChargebackPayment string            `protobuf:"bytes,12,opt,name=url_chargeback_payment,json=urlChargebackPayment,proto3" json:"url_chargeback_payment,omitempty"`
	UrlCancelPayment     string            `protobuf:"bytes,13,opt,name=url_cancel_payment,json=urlCancelPayment,proto3" json:"url_cancel_payment,omitempty"`
	UrlFraudPayment      string            `protobuf:"bytes,14,opt,name=url_fraud_payment,json=urlFraudPayment,proto3" json:"url_fraud_payment,omitempty"`
	UrlRefundPayment     string            `protobuf:"bytes,15,opt,name=url_refund_payment,json=urlRefundPayment,proto3" json:"url_refund_payment,omitempty"`
	Status               int32             `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *ProjectOrder) Reset()         { *m = ProjectOrder{} }
func (m *ProjectOrder) String() string { return proto.CompactTextString(m) }
func (*ProjectOrder) ProtoMessage()    {}
func (*ProjectOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{3}
}
func (m *ProjectOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectOrder.Unmarshal(m, b)
}
func (m *ProjectOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectOrder.Marshal(b, m, deterministic)
}
func (dst *ProjectOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectOrder.Merge(dst, src)
}
func (m *ProjectOrder) XXX_Size() int {
	return xxx_messageInfo_ProjectOrder.Size(m)
}
func (m *ProjectOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectOrder proto.InternalMessageInfo

func (m *ProjectOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectOrder) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ProjectOrder) GetName() map[string]string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ProjectOrder) GetUrlSuccess() string {
	if m != nil {
		return m.UrlSuccess
	}
	return ""
}

func (m *ProjectOrder) GetUrlFail() string {
	if m != nil {
		return m.UrlFail
	}
	return ""
}

func (m *ProjectOrder) GetNotifyEmails() []string {
	if m != nil {
		return m.NotifyEmails
	}
	return nil
}

func (m *ProjectOrder) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *ProjectOrder) GetSendNotifyEmail() bool {
	if m != nil {
		return m.SendNotifyEmail
	}
	return false
}

func (m *ProjectOrder) GetUrlCheckAccount() string {
	if m != nil {
		return m.UrlCheckAccount
	}
	return ""
}

func (m *ProjectOrder) GetUrlProcessPayment() string {
	if m != nil {
		return m.UrlProcessPayment
	}
	return ""
}

func (m *ProjectOrder) GetCallbackProtocol() string {
	if m != nil {
		return m.CallbackProtocol
	}
	return ""
}

func (m *ProjectOrder) GetUrlChargebackPayment() string {
	if m != nil {
		return m.UrlChargebackPayment
	}
	return ""
}

func (m *ProjectOrder) GetUrlCancelPayment() string {
	if m != nil {
		return m.UrlCancelPayment
	}
	return ""
}

func (m *ProjectOrder) GetUrlFraudPayment() string {
	if m != nil {
		return m.UrlFraudPayment
	}
	return ""
}

func (m *ProjectOrder) GetUrlRefundPayment() string {
	if m != nil {
		return m.UrlRefundPayment
	}
	return ""
}

func (m *ProjectOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type MerchantContact struct {
	// @inject_tag: validate:"required" json:"authorized"
	Authorized *MerchantContactAuthorized `protobuf:"bytes,1,opt,name=authorized,proto3" json:"authorized" validate:"required"`
	// @inject_tag: validate:"required" json:"technical"
	Technical            *MerchantContactTechnical `protobuf:"bytes,2,opt,name=technical,proto3" json:"technical" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                    `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                     `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantContact) Reset()         { *m = MerchantContact{} }
func (m *MerchantContact) String() string { return proto.CompactTextString(m) }
func (*MerchantContact) ProtoMessage()    {}
func (*MerchantContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{4}
}
func (m *MerchantContact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantContact.Unmarshal(m, b)
}
func (m *MerchantContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantContact.Marshal(b, m, deterministic)
}
func (dst *MerchantContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantContact.Merge(dst, src)
}
func (m *MerchantContact) XXX_Size() int {
	return xxx_messageInfo_MerchantContact.Size(m)
}
func (m *MerchantContact) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantContact.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantContact proto.InternalMessageInfo

func (m *MerchantContact) GetAuthorized() *MerchantContactAuthorized {
	if m != nil {
		return m.Authorized
	}
	return nil
}

func (m *MerchantContact) GetTechnical() *MerchantContactTechnical {
	if m != nil {
		return m.Technical
	}
	return nil
}

type MerchantContactTechnical struct {
	// @inject_tag: json:"name" validate:"required,company_name,max=60"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" validate:"required,company_name,max=60"`
	// @inject_tag: json:"email" validate:"required,email,max=100"
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email" validate:"required,email,max=100"`
	// @inject_tag: json:"phone" validate:"required,numeric,max=20"
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone" validate:"required,numeric,max=20"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantContactTechnical) Reset()         { *m = MerchantContactTechnical{} }
func (m *MerchantContactTechnical) String() string { return proto.CompactTextString(m) }
func (*MerchantContactTechnical) ProtoMessage()    {}
func (*MerchantContactTechnical) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{5}
}
func (m *MerchantContactTechnical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantContactTechnical.Unmarshal(m, b)
}
func (m *MerchantContactTechnical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantContactTechnical.Marshal(b, m, deterministic)
}
func (dst *MerchantContactTechnical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantContactTechnical.Merge(dst, src)
}
func (m *MerchantContactTechnical) XXX_Size() int {
	return xxx_messageInfo_MerchantContactTechnical.Size(m)
}
func (m *MerchantContactTechnical) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantContactTechnical.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantContactTechnical proto.InternalMessageInfo

func (m *MerchantContactTechnical) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantContactTechnical) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *MerchantContactTechnical) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type MerchantContactAuthorized struct {
	// @inject_tag: json:"name" validate:"required,company_name,max=60"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" validate:"required,company_name,max=60"`
	// @inject_tag: json:"email" validate:"required,email,max=100"
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email" validate:"required,email,max=100"`
	// @inject_tag: json:"phone" validate:"required,numeric,max=20"
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone" validate:"required,numeric,max=20"`
	// @inject_tag: json:"position" validate:"required,company_name,max=30"
	Position             string   `protobuf:"bytes,4,opt,name=position,proto3" json:"position" validate:"required,company_name,max=30"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantContactAuthorized) Reset()         { *m = MerchantContactAuthorized{} }
func (m *MerchantContactAuthorized) String() string { return proto.CompactTextString(m) }
func (*MerchantContactAuthorized) ProtoMessage()    {}
func (*MerchantContactAuthorized) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{6}
}
func (m *MerchantContactAuthorized) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantContactAuthorized.Unmarshal(m, b)
}
func (m *MerchantContactAuthorized) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantContactAuthorized.Marshal(b, m, deterministic)
}
func (dst *MerchantContactAuthorized) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantContactAuthorized.Merge(dst, src)
}
func (m *MerchantContactAuthorized) XXX_Size() int {
	return xxx_messageInfo_MerchantContactAuthorized.Size(m)
}
func (m *MerchantContactAuthorized) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantContactAuthorized.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantContactAuthorized proto.InternalMessageInfo

func (m *MerchantContactAuthorized) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantContactAuthorized) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *MerchantContactAuthorized) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *MerchantContactAuthorized) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

type MerchantBanking struct {
	// @inject_tag: json:"currency" validate:"required,alpha,len=3"
	Currency string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"name" validate:"required,city,max=60"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" validate:"required,city,max=60"`
	// @inject_tag: json:"address" validate:"required,max=60"
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address" validate:"required,max=60"`
	// @inject_tag: json:"account_number" bson:"account_number" validate:"required,numeric,max=30"
	AccountNumber string `protobuf:"bytes,4,opt,name=account_number,json=accountNumber,proto3" json:"account_number" bson:"account_number" validate:"required,numeric,max=30"`
	// @inject_tag: json:"swift" validate:"required,swift"
	Swift string `protobuf:"bytes,5,opt,name=swift,proto3" json:"swift" validate:"required,swift"`
	// @inject_tag: json:"details"
	Details string `protobuf:"bytes,6,opt,name=details,proto3" json:"details"`
	// @inject_tag: json:"correspondent_account" bson:"correspondent_account" validate:"omitempty,numeric,max=30"
	CorrespondentAccount string   `protobuf:"bytes,7,opt,name=correspondent_account,json=correspondentAccount,proto3" json:"correspondent_account" bson:"correspondent_account" validate:"omitempty,numeric,max=30"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantBanking) Reset()         { *m = MerchantBanking{} }
func (m *MerchantBanking) String() string { return proto.CompactTextString(m) }
func (*MerchantBanking) ProtoMessage()    {}
func (*MerchantBanking) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{7}
}
func (m *MerchantBanking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantBanking.Unmarshal(m, b)
}
func (m *MerchantBanking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantBanking.Marshal(b, m, deterministic)
}
func (dst *MerchantBanking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantBanking.Merge(dst, src)
}
func (m *MerchantBanking) XXX_Size() int {
	return xxx_messageInfo_MerchantBanking.Size(m)
}
func (m *MerchantBanking) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantBanking.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantBanking proto.InternalMessageInfo

func (m *MerchantBanking) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *MerchantBanking) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantBanking) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MerchantBanking) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *MerchantBanking) GetSwift() string {
	if m != nil {
		return m.Swift
	}
	return ""
}

func (m *MerchantBanking) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *MerchantBanking) GetCorrespondentAccount() string {
	if m != nil {
		return m.CorrespondentAccount
	}
	return ""
}

type MerchantLastPayout struct {
	// @inject_tag: json:"date"
	Date *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date"`
	// @inject_tag: json:"amount"
	Amount               float64  `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantLastPayout) Reset()         { *m = MerchantLastPayout{} }
func (m *MerchantLastPayout) String() string { return proto.CompactTextString(m) }
func (*MerchantLastPayout) ProtoMessage()    {}
func (*MerchantLastPayout) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{8}
}
func (m *MerchantLastPayout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantLastPayout.Unmarshal(m, b)
}
func (m *MerchantLastPayout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantLastPayout.Marshal(b, m, deterministic)
}
func (dst *MerchantLastPayout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantLastPayout.Merge(dst, src)
}
func (m *MerchantLastPayout) XXX_Size() int {
	return xxx_messageInfo_MerchantLastPayout.Size(m)
}
func (m *MerchantLastPayout) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantLastPayout.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantLastPayout proto.InternalMessageInfo

func (m *MerchantLastPayout) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *MerchantLastPayout) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type MerchantUser struct {
	// @inject_tag: json:"id" validate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required"`
	// @inject_tag: json:"email" validate:"required,email"
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email" validate:"required,email"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantUser) Reset()         { *m = MerchantUser{} }
func (m *MerchantUser) String() string { return proto.CompactTextString(m) }
func (*MerchantUser) ProtoMessage()    {}
func (*MerchantUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{9}
}
func (m *MerchantUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantUser.Unmarshal(m, b)
}
func (m *MerchantUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantUser.Marshal(b, m, deterministic)
}
func (dst *MerchantUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantUser.Merge(dst, src)
}
func (m *MerchantUser) XXX_Size() int {
	return xxx_messageInfo_MerchantUser.Size(m)
}
func (m *MerchantUser) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantUser.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantUser proto.InternalMessageInfo

func (m *MerchantUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MerchantUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type MerchantCompanyInfo struct {
	// @inject_tag: json:"name" validate:"required,company_name,max=60"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" validate:"required,company_name,max=60"`
	// @inject_tag: json:"alternative_name" bson:"alternative_name" validate:"required,company_name,max=60"
	AlternativeName string `protobuf:"bytes,2,opt,name=alternative_name,json=alternativeName,proto3" json:"alternative_name" bson:"alternative_name" validate:"required,company_name,max=60"`
	// @inject_tag: json:"website" validate:"required,url"
	Website string `protobuf:"bytes,3,opt,name=website,proto3" json:"website" validate:"required,url"`
	// @inject_tag: json:"country" validate:"required,alpha,len=2"
	Country string `protobuf:"bytes,4,opt,name=country,proto3" json:"country" validate:"required,alpha,len=2"`
	// @inject_tag: json:"state" validate:"required"
	State string `protobuf:"bytes,5,opt,name=state,proto3" json:"state" validate:"required"`
	// @inject_tag: json:"zip" validate:"required,max=30"
	Zip string `protobuf:"bytes,6,opt,name=zip,proto3" json:"zip" validate:"required,max=30"`
	// @inject_tag: json:"city" validate:"required,city,max=60"
	City string `protobuf:"bytes,7,opt,name=city,proto3" json:"city" validate:"required,city,max=60"`
	// @inject_tag: json:"address" validate:"required,max=100"
	Address string `protobuf:"bytes,8,opt,name=address,proto3" json:"address" validate:"required,max=100"`
	// @inject_tag: json:"address_additional" bson:"address_additional" validate:"omitempty,max=100"
	AddressAdditional string `protobuf:"bytes,9,opt,name=address_additional,json=addressAdditional,proto3" json:"address_additional" bson:"address_additional" validate:"omitempty,max=100"`
	// @inject_tag: json:"registration_number" bson:"registration_number"
	RegistrationNumber string `protobuf:"bytes,10,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number" bson:"registration_number"`
	// @inject_tag: json:"tax_id" bson:"tax_id"
	TaxId                string   `protobuf:"bytes,11,opt,name=tax_id,json=taxId,proto3" json:"tax_id" bson:"tax_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantCompanyInfo) Reset()         { *m = MerchantCompanyInfo{} }
func (m *MerchantCompanyInfo) String() string { return proto.CompactTextString(m) }
func (*MerchantCompanyInfo) ProtoMessage()    {}
func (*MerchantCompanyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{10}
}
func (m *MerchantCompanyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantCompanyInfo.Unmarshal(m, b)
}
func (m *MerchantCompanyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantCompanyInfo.Marshal(b, m, deterministic)
}
func (dst *MerchantCompanyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantCompanyInfo.Merge(dst, src)
}
func (m *MerchantCompanyInfo) XXX_Size() int {
	return xxx_messageInfo_MerchantCompanyInfo.Size(m)
}
func (m *MerchantCompanyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantCompanyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantCompanyInfo proto.InternalMessageInfo

func (m *MerchantCompanyInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantCompanyInfo) GetAlternativeName() string {
	if m != nil {
		return m.AlternativeName
	}
	return ""
}

func (m *MerchantCompanyInfo) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *MerchantCompanyInfo) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *MerchantCompanyInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MerchantCompanyInfo) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *MerchantCompanyInfo) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *MerchantCompanyInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MerchantCompanyInfo) GetAddressAdditional() string {
	if m != nil {
		return m.AddressAdditional
	}
	return ""
}

func (m *MerchantCompanyInfo) GetRegistrationNumber() string {
	if m != nil {
		return m.RegistrationNumber
	}
	return ""
}

func (m *MerchantCompanyInfo) GetTaxId() string {
	if m != nil {
		return m.TaxId
	}
	return ""
}

type MerchantCompletedSteps struct {
	Company              bool     `protobuf:"varint,1,opt,name=company,proto3" json:"company,omitempty"`
	Contacts             bool     `protobuf:"varint,2,opt,name=contacts,proto3" json:"contacts,omitempty"`
	Banking              bool     `protobuf:"varint,3,opt,name=banking,proto3" json:"banking,omitempty"`
	Tariff               bool     `protobuf:"varint,4,opt,name=tariff,proto3" json:"tariff,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantCompletedSteps) Reset()         { *m = MerchantCompletedSteps{} }
func (m *MerchantCompletedSteps) String() string { return proto.CompactTextString(m) }
func (*MerchantCompletedSteps) ProtoMessage()    {}
func (*MerchantCompletedSteps) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{11}
}
func (m *MerchantCompletedSteps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantCompletedSteps.Unmarshal(m, b)
}
func (m *MerchantCompletedSteps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantCompletedSteps.Marshal(b, m, deterministic)
}
func (dst *MerchantCompletedSteps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantCompletedSteps.Merge(dst, src)
}
func (m *MerchantCompletedSteps) XXX_Size() int {
	return xxx_messageInfo_MerchantCompletedSteps.Size(m)
}
func (m *MerchantCompletedSteps) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantCompletedSteps.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantCompletedSteps proto.InternalMessageInfo

func (m *MerchantCompletedSteps) GetCompany() bool {
	if m != nil {
		return m.Company
	}
	return false
}

func (m *MerchantCompletedSteps) GetContacts() bool {
	if m != nil {
		return m.Contacts
	}
	return false
}

func (m *MerchantCompletedSteps) GetBanking() bool {
	if m != nil {
		return m.Banking
	}
	return false
}

func (m *MerchantCompletedSteps) GetTariff() bool {
	if m != nil {
		return m.Tariff
	}
	return false
}

type Merchant struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	// @inject_tag: json:"user"
	User *MerchantUser `protobuf:"bytes,2,opt,name=user,proto3" json:"user"`
	// @inject_tag: json:"company"
	Company *MerchantCompanyInfo `protobuf:"bytes,3,opt,name=company,proto3" json:"company"`
	// @inject_tag: json:"contacts"
	Contacts *MerchantContact `protobuf:"bytes,15,opt,name=contacts,proto3" json:"contacts"`
	// @inject_tag: json:"banking"
	Banking *MerchantBanking `protobuf:"bytes,16,opt,name=banking,proto3" json:"banking"`
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,17,opt,name=status,proto3" json:"status"`
	// @inject_tag: json:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	// @inject_tag: json:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	// @inject_tag: json:"first_payment_at"
	FirstPaymentAt *timestamp.Timestamp `protobuf:"bytes,20,opt,name=first_payment_at,json=firstPaymentAt,proto3" json:"first_payment_at"`
	// @inject_tag: json:"-"
	IsVatEnabled bool `protobuf:"varint,21,opt,name=is_vat_enabled,json=isVatEnabled,proto3" json:"-"`
	// @inject_tag: json:"-"
	IsCommissionToUserEnabled bool `protobuf:"varint,22,opt,name=is_commission_to_user_enabled,json=isCommissionToUserEnabled,proto3" json:"-"`
	// @inject_tag: json:"has_merchant_signature"
	HasMerchantSignature bool `protobuf:"varint,23,opt,name=has_merchant_signature,json=hasMerchantSignature,proto3" json:"has_merchant_signature"`
	// @inject_tag: json:"has_psp_signature"
	HasPspSignature bool `protobuf:"varint,24,opt,name=has_psp_signature,json=hasPspSignature,proto3" json:"has_psp_signature"`
	// @inject_tag: json:"last_payout"
	LastPayout *MerchantLastPayout `protobuf:"bytes,25,opt,name=last_payout,json=lastPayout,proto3" json:"last_payout"`
	// @inject_tag: json:"is_signed"
	IsSigned bool `protobuf:"varint,26,opt,name=is_signed,json=isSigned,proto3" json:"is_signed"`
	// @inject_tag: json:"payment_methods"
	PaymentMethods map[string]*MerchantPaymentMethod `protobuf:"bytes,28,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"agreement_type"
	AgreementType int32 `protobuf:"varint,29,opt,name=agreement_type,json=agreementType,proto3" json:"agreement_type"`
	// @inject_tag: json:"agreement_sent_via_mail"
	AgreementSentViaMail bool `protobuf:"varint,30,opt,name=agreement_sent_via_mail,json=agreementSentViaMail,proto3" json:"agreement_sent_via_mail"`
	// @inject_tag: json:"mail_tracking_link"
	MailTrackingLink string `protobuf:"bytes,31,opt,name=mail_tracking_link,json=mailTrackingLink,proto3" json:"mail_tracking_link"`
	// @inject_tag: json:"-"
	S3AgreementName string `protobuf:"bytes,32,opt,name=s3_agreement_name,json=s3AgreementName,proto3" json:"-"`
	// @inject_tag: json:"payout_cost_amount" bson:"payout_cost_amount" validate:"numeric,gte=0"
	PayoutCostAmount float64 `protobuf:"fixed64,33,opt,name=payout_cost_amount,json=payoutCostAmount,proto3" json:"payout_cost_amount" bson:"payout_cost_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"payout_cost_currency" bson:"payout_cost_currency" validate:"required,alpha,len=3"
	PayoutCostCurrency string `protobuf:"bytes,34,opt,name=payout_cost_currency,json=payoutCostCurrency,proto3" json:"payout_cost_currency" bson:"payout_cost_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"min_payout_amount" bson:"min_payout_amount" validate:"numeric,gte=0"
	MinPayoutAmount float64 `protobuf:"fixed64,35,opt,name=min_payout_amount,json=minPayoutAmount,proto3" json:"min_payout_amount" bson:"min_payout_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"rolling_reserve_amount" bson:"rolling_reserve_amount" validate:"numeric,gte=0,lte=100"
	RollingReserveThreshold float64 `protobuf:"fixed64,36,opt,name=rolling_reserve_threshold,json=rollingReserveThreshold,proto3" json:"rolling_reserve_amount" bson:"rolling_reserve_amount" validate:"numeric,gte=0,lte=100"`
	// @inject_tag: json:"rolling_reserve_days" bson:"rolling_reserve_days" validate:"numeric,gte=0"
	RollingReserveDays int32 `protobuf:"varint,37,opt,name=rolling_reserve_days,json=rollingReserveDays,proto3" json:"rolling_reserve_days" bson:"rolling_reserve_days" validate:"numeric,gte=0"`
	// @inject_tag: json:"rolling_reserve_chargeback_transactions_threshold" bson:"rolling_reserve_chargeback_transactions_threshold" validate:"numeric,gte=0,lte=100"
	RollingReserveChargebackTransactionsThreshold float64 `protobuf:"fixed64,38,opt,name=rolling_reserve_chargeback_transactions_threshold,json=rollingReserveChargebackTransactionsThreshold,proto3" json:"rolling_reserve_chargeback_transactions_threshold" bson:"rolling_reserve_chargeback_transactions_threshold" validate:"numeric,gte=0,lte=100"`
	// @inject_tag: json:"item_min_cost_amount" bson:"item_min_cost_amount" validate:"numeric,gte=0"
	ItemMinCostAmount float64 `protobuf:"fixed64,39,opt,name=item_min_cost_amount,json=itemMinCostAmount,proto3" json:"item_min_cost_amount" bson:"item_min_cost_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"item_min_cost_currency" bson:"item_min_cost_currency" validate:"required,alpha,len=3"
	ItemMinCostCurrency string `protobuf:"bytes,40,opt,name=item_min_cost_currency,json=itemMinCostCurrency,proto3" json:"item_min_cost_currency" bson:"item_min_cost_currency" validate:"required,alpha,len=3"`
	CentrifugoToken     string `protobuf:"bytes,41,opt,name=centrifugo_token,json=centrifugoToken,proto3" json:"centrifugo_token,omitempty"`
	// @inject_tag: json:"tariff"
	Tariff string `protobuf:"bytes,42,opt,name=tariff,proto3" json:"tariff"`
	// @inject_tag: json:"signature_request" bson:"signature_request"
	SignatureRequest *MerchantSignatureRequest `protobuf:"bytes,43,opt,name=signature_request,json=signatureRequest,proto3" json:"signature_request" bson:"signature_request"`
	// @inject_tag: json:"-"
	MerchantSignature string `protobuf:"bytes,44,opt,name=merchant_signature,json=merchantSignature,proto3" json:"-"`
	// @inject_tag: json:"-"
	PspSignature string `protobuf:"bytes,45,opt,name=psp_signature,json=pspSignature,proto3" json:"-"`
	// @inject_tag: json:"-"
	Steps                *MerchantCompletedSteps `protobuf:"bytes,46,opt,name=steps,proto3" json:"-"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Merchant) Reset()         { *m = Merchant{} }
func (m *Merchant) String() string { return proto.CompactTextString(m) }
func (*Merchant) ProtoMessage()    {}
func (*Merchant) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{12}
}
func (m *Merchant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Merchant.Unmarshal(m, b)
}
func (m *Merchant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Merchant.Marshal(b, m, deterministic)
}
func (dst *Merchant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Merchant.Merge(dst, src)
}
func (m *Merchant) XXX_Size() int {
	return xxx_messageInfo_Merchant.Size(m)
}
func (m *Merchant) XXX_DiscardUnknown() {
	xxx_messageInfo_Merchant.DiscardUnknown(m)
}

var xxx_messageInfo_Merchant proto.InternalMessageInfo

func (m *Merchant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Merchant) GetUser() *MerchantUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Merchant) GetCompany() *MerchantCompanyInfo {
	if m != nil {
		return m.Company
	}
	return nil
}

func (m *Merchant) GetContacts() *MerchantContact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *Merchant) GetBanking() *MerchantBanking {
	if m != nil {
		return m.Banking
	}
	return nil
}

func (m *Merchant) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Merchant) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Merchant) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Merchant) GetFirstPaymentAt() *timestamp.Timestamp {
	if m != nil {
		return m.FirstPaymentAt
	}
	return nil
}

func (m *Merchant) GetIsVatEnabled() bool {
	if m != nil {
		return m.IsVatEnabled
	}
	return false
}

func (m *Merchant) GetIsCommissionToUserEnabled() bool {
	if m != nil {
		return m.IsCommissionToUserEnabled
	}
	return false
}

func (m *Merchant) GetHasMerchantSignature() bool {
	if m != nil {
		return m.HasMerchantSignature
	}
	return false
}

func (m *Merchant) GetHasPspSignature() bool {
	if m != nil {
		return m.HasPspSignature
	}
	return false
}

func (m *Merchant) GetLastPayout() *MerchantLastPayout {
	if m != nil {
		return m.LastPayout
	}
	return nil
}

func (m *Merchant) GetIsSigned() bool {
	if m != nil {
		return m.IsSigned
	}
	return false
}

func (m *Merchant) GetPaymentMethods() map[string]*MerchantPaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

func (m *Merchant) GetAgreementType() int32 {
	if m != nil {
		return m.AgreementType
	}
	return 0
}

func (m *Merchant) GetAgreementSentViaMail() bool {
	if m != nil {
		return m.AgreementSentViaMail
	}
	return false
}

func (m *Merchant) GetMailTrackingLink() string {
	if m != nil {
		return m.MailTrackingLink
	}
	return ""
}

func (m *Merchant) GetS3AgreementName() string {
	if m != nil {
		return m.S3AgreementName
	}
	return ""
}

func (m *Merchant) GetPayoutCostAmount() float64 {
	if m != nil {
		return m.PayoutCostAmount
	}
	return 0
}

func (m *Merchant) GetPayoutCostCurrency() string {
	if m != nil {
		return m.PayoutCostCurrency
	}
	return ""
}

func (m *Merchant) GetMinPayoutAmount() float64 {
	if m != nil {
		return m.MinPayoutAmount
	}
	return 0
}

func (m *Merchant) GetRollingReserveThreshold() float64 {
	if m != nil {
		return m.RollingReserveThreshold
	}
	return 0
}

func (m *Merchant) GetRollingReserveDays() int32 {
	if m != nil {
		return m.RollingReserveDays
	}
	return 0
}

func (m *Merchant) GetRollingReserveChargebackTransactionsThreshold() float64 {
	if m != nil {
		return m.RollingReserveChargebackTransactionsThreshold
	}
	return 0
}

func (m *Merchant) GetItemMinCostAmount() float64 {
	if m != nil {
		return m.ItemMinCostAmount
	}
	return 0
}

func (m *Merchant) GetItemMinCostCurrency() string {
	if m != nil {
		return m.ItemMinCostCurrency
	}
	return ""
}

func (m *Merchant) GetCentrifugoToken() string {
	if m != nil {
		return m.CentrifugoToken
	}
	return ""
}

func (m *Merchant) GetTariff() string {
	if m != nil {
		return m.Tariff
	}
	return ""
}

func (m *Merchant) GetSignatureRequest() *MerchantSignatureRequest {
	if m != nil {
		return m.SignatureRequest
	}
	return nil
}

func (m *Merchant) GetMerchantSignature() string {
	if m != nil {
		return m.MerchantSignature
	}
	return ""
}

func (m *Merchant) GetPspSignature() string {
	if m != nil {
		return m.PspSignature
	}
	return ""
}

func (m *Merchant) GetSteps() *MerchantCompletedSteps {
	if m != nil {
		return m.Steps
	}
	return nil
}

type SystemNotificationStatuses struct {
	From                 int32    `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   int32    `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *SystemNotificationStatuses) Reset()         { *m = SystemNotificationStatuses{} }
func (m *SystemNotificationStatuses) String() string { return proto.CompactTextString(m) }
func (*SystemNotificationStatuses) ProtoMessage()    {}
func (*SystemNotificationStatuses) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{13}
}
func (m *SystemNotificationStatuses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemNotificationStatuses.Unmarshal(m, b)
}
func (m *SystemNotificationStatuses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemNotificationStatuses.Marshal(b, m, deterministic)
}
func (dst *SystemNotificationStatuses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemNotificationStatuses.Merge(dst, src)
}
func (m *SystemNotificationStatuses) XXX_Size() int {
	return xxx_messageInfo_SystemNotificationStatuses.Size(m)
}
func (m *SystemNotificationStatuses) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemNotificationStatuses.DiscardUnknown(m)
}

var xxx_messageInfo_SystemNotificationStatuses proto.InternalMessageInfo

func (m *SystemNotificationStatuses) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *SystemNotificationStatuses) GetTo() int32 {
	if m != nil {
		return m.To
	}
	return 0
}

type Notification struct {
	Id                   string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string                      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Message              string                      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	MerchantId           string                      `protobuf:"bytes,4,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	UserId               string                      `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsSystem             bool                        `protobuf:"varint,6,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`
	IsRead               bool                        `protobuf:"varint,7,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	Statuses             *SystemNotificationStatuses `protobuf:"bytes,8,opt,name=statuses,proto3" json:"statuses,omitempty"`
	CreatedAt            *timestamp.Timestamp        `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp        `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                      `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                       `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{14}
}
func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (dst *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(dst, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

func (m *Notification) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Notification) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Notification) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Notification) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *Notification) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Notification) GetIsSystem() bool {
	if m != nil {
		return m.IsSystem
	}
	return false
}

func (m *Notification) GetIsRead() bool {
	if m != nil {
		return m.IsRead
	}
	return false
}

func (m *Notification) GetStatuses() *SystemNotificationStatuses {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func (m *Notification) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Notification) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type OrderPlatformFee struct {
	Amount               float32  `protobuf:"fixed32,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	EffectiveRate        float32  `protobuf:"fixed32,3,opt,name=effective_rate,json=effectiveRate,proto3" json:"effective_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderPlatformFee) Reset()         { *m = OrderPlatformFee{} }
func (m *OrderPlatformFee) String() string { return proto.CompactTextString(m) }
func (*OrderPlatformFee) ProtoMessage()    {}
func (*OrderPlatformFee) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{15}
}
func (m *OrderPlatformFee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderPlatformFee.Unmarshal(m, b)
}
func (m *OrderPlatformFee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderPlatformFee.Marshal(b, m, deterministic)
}
func (dst *OrderPlatformFee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderPlatformFee.Merge(dst, src)
}
func (m *OrderPlatformFee) XXX_Size() int {
	return xxx_messageInfo_OrderPlatformFee.Size(m)
}
func (m *OrderPlatformFee) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderPlatformFee.DiscardUnknown(m)
}

var xxx_messageInfo_OrderPlatformFee proto.InternalMessageInfo

func (m *OrderPlatformFee) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderPlatformFee) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderPlatformFee) GetEffectiveRate() float32 {
	if m != nil {
		return m.EffectiveRate
	}
	return 0
}

type OrderTax struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Rate                 float64  `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate,omitempty"`
	Amount               float64  `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderTax) Reset()         { *m = OrderTax{} }
func (m *OrderTax) String() string { return proto.CompactTextString(m) }
func (*OrderTax) ProtoMessage()    {}
func (*OrderTax) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{16}
}
func (m *OrderTax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderTax.Unmarshal(m, b)
}
func (m *OrderTax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderTax.Marshal(b, m, deterministic)
}
func (dst *OrderTax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderTax.Merge(dst, src)
}
func (m *OrderTax) XXX_Size() int {
	return xxx_messageInfo_OrderTax.Size(m)
}
func (m *OrderTax) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderTax.DiscardUnknown(m)
}

var xxx_messageInfo_OrderTax proto.InternalMessageInfo

func (m *OrderTax) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OrderTax) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *OrderTax) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderTax) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type OrderBillingAddress struct {
	// @inject_tag: validate:"omitempty,alpha,len=2"
	Country string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty" validate:"omitempty,alpha,len=2"`
	City    string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	// @inject_tag: bson:"postal_code"
	PostalCode           string   `protobuf:"bytes,3,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty" bson:"postal_code"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderBillingAddress) Reset()         { *m = OrderBillingAddress{} }
func (m *OrderBillingAddress) String() string { return proto.CompactTextString(m) }
func (*OrderBillingAddress) ProtoMessage()    {}
func (*OrderBillingAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{17}
}
func (m *OrderBillingAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderBillingAddress.Unmarshal(m, b)
}
func (m *OrderBillingAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderBillingAddress.Marshal(b, m, deterministic)
}
func (dst *OrderBillingAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderBillingAddress.Merge(dst, src)
}
func (m *OrderBillingAddress) XXX_Size() int {
	return xxx_messageInfo_OrderBillingAddress.Size(m)
}
func (m *OrderBillingAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderBillingAddress.DiscardUnknown(m)
}

var xxx_messageInfo_OrderBillingAddress proto.InternalMessageInfo

func (m *OrderBillingAddress) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *OrderBillingAddress) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *OrderBillingAddress) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *OrderBillingAddress) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type OrderUser struct {
	// @inject_tag: json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// @inject_tag: json:"object"
	Object string `protobuf:"bytes,2,opt,name=object,proto3" json:"object"`
	// @inject_tag: json:"external_id" bson:"external_id"
	ExternalId string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id" bson:"external_id"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	// @inject_tag: json:"email" validate:"omitempty,email"
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email" validate:"omitempty,email"`
	// @inject_tag: json:"email_verified" bson:"email_verified"
	EmailVerified bool `protobuf:"varint,6,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified" bson:"email_verified"`
	// @inject_tag: json:"phone" validate:"omitempty,phone"
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone" validate:"omitempty,phone"`
	// @inject_tag: json:"phone_verified" bson:"phone_verified"
	PhoneVerified bool `protobuf:"varint,8,opt,name=phone_verified,json=phoneVerified,proto3" json:"phone_verified" bson:"phone_verified"`
	// @inject_tag: json:"ip" validate:"omitempty,ip"
	Ip string `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip" validate:"omitempty,ip"`
	// @inject_tag: json:"locale" validate:"omitempty,alpha,len=2"
	Locale string `protobuf:"bytes,10,opt,name=locale,proto3" json:"locale" validate:"omitempty,alpha,len=2"`
	// @inject_tag: json:"address"
	Address *OrderBillingAddress `protobuf:"bytes,11,opt,name=address,proto3" json:"address"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	TechEmail string `protobuf:"bytes,13,opt,name=tech_email,json=techEmail,proto3" json:"-"`
	// @inject_tag: json:"notify_new_region" bson:"notify_new_region"
	NotifyNewRegion bool `protobuf:"varint,14,opt,name=notify_new_region,json=notifyNewRegion,proto3" json:"notify_new_region" bson:"notify_new_region"`
	// @inject_tag: json:"notify_new_region_email" bson:"notify_new_region_email"
	NotifyNewRegionEmail string   `protobuf:"bytes,15,opt,name=notify_new_region_email,json=notifyNewRegionEmail,proto3" json:"notify_new_region_email" bson:"notify_new_region_email"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderUser) Reset()         { *m = OrderUser{} }
func (m *OrderUser) String() string { return proto.CompactTextString(m) }
func (*OrderUser) ProtoMessage()    {}
func (*OrderUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{18}
}
func (m *OrderUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderUser.Unmarshal(m, b)
}
func (m *OrderUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderUser.Marshal(b, m, deterministic)
}
func (dst *OrderUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderUser.Merge(dst, src)
}
func (m *OrderUser) XXX_Size() int {
	return xxx_messageInfo_OrderUser.Size(m)
}
func (m *OrderUser) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderUser.DiscardUnknown(m)
}

var xxx_messageInfo_OrderUser proto.InternalMessageInfo

func (m *OrderUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderUser) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *OrderUser) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *OrderUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrderUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *OrderUser) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *OrderUser) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *OrderUser) GetPhoneVerified() bool {
	if m != nil {
		return m.PhoneVerified
	}
	return false
}

func (m *OrderUser) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *OrderUser) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *OrderUser) GetAddress() *OrderBillingAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *OrderUser) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *OrderUser) GetTechEmail() string {
	if m != nil {
		return m.TechEmail
	}
	return ""
}

func (m *OrderUser) GetNotifyNewRegion() bool {
	if m != nil {
		return m.NotifyNewRegion
	}
	return false
}

func (m *OrderUser) GetNotifyNewRegionEmail() string {
	if m != nil {
		return m.NotifyNewRegionEmail
	}
	return ""
}

type Order struct {
	// @inject_tag: json:"-" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"-" bson:"_id"`
	// @inject_tag: json:"id" bson:"uuid"
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"id" bson:"uuid"`
	// @inject_tag: json:"transaction" bson:"pm_order_id"
	Transaction string `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction" bson:"pm_order_id"`
	// @inject_tag: json:"object" bson:"object"
	Object string `protobuf:"bytes,4,opt,name=object,proto3" json:"object" bson:"object"`
	// @inject_tag: json:"status" bson:"status"
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status" bson:"status"`
	// @inject_tag: json:"-" bson:"private_status"
	PrivateStatus int32 `protobuf:"varint,6,opt,name=private_status,json=privateStatus,proto3" json:"-" bson:"private_status"`
	// @inject_tag: json:"description" bson:"description"
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description" bson:"description"`
	// @inject_tag: bson:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at" bson:"created_at"`
	// @inject_tag: json:"-" bson:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"-" bson:"updated_at"`
	// @inject_tag: json:"canceled_at" bson:"canceled_at"
	CanceledAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=canceled_at,json=canceledAt,proto3" json:"canceled_at" bson:"canceled_at"`
	// @inject_tag: json:"canceled" bson:"canceled"
	Canceled bool `protobuf:"varint,11,opt,name=canceled,proto3" json:"canceled" bson:"canceled"`
	// @inject_tag: json:"cancellation_reason" bson:"cancellation_reason"
	CancellationReason string `protobuf:"bytes,12,opt,name=cancellation_reason,json=cancellationReason,proto3" json:"cancellation_reason" bson:"cancellation_reason"`
	// @inject_tag: json:"refunded" bson:"refunded"
	Refunded bool `protobuf:"varint,13,opt,name=refunded,proto3" json:"refunded" bson:"refunded"`
	// @inject_tag: json:"refunded_at" bson:"refunded_at"
	RefundedAt *timestamp.Timestamp `protobuf:"bytes,14,opt,name=refunded_at,json=refundedAt,proto3" json:"refunded_at" bson:"refunded_at"`
	// @inject_tag: json:"receipt_email" bson:"receipt_email"
	ReceiptEmail string `protobuf:"bytes,15,opt,name=receipt_email,json=receiptEmail,proto3" json:"receipt_email" bson:"receipt_email"`
	// @inject_tag: json:"receipt_phone" bson:"receipt_phone"
	ReceiptPhone string `protobuf:"bytes,16,opt,name=receipt_phone,json=receiptPhone,proto3" json:"receipt_phone" bson:"receipt_phone"`
	// @inject_tag: json:"receipt_number" bson:"receipt_number"
	ReceiptNumber string `protobuf:"bytes,17,opt,name=receipt_number,json=receiptNumber,proto3" json:"receipt_number" bson:"receipt_number"`
	// @inject_tag: json:"receipt_url" bson:"receipt_url"
	ReceiptUrl string `protobuf:"bytes,18,opt,name=receipt_url,json=receiptUrl,proto3" json:"receipt_url" bson:"receipt_url"`
	// @inject_tag: json:"agreement_version" bson:"agreement_version" validate:"required"
	AgreementVersion string `protobuf:"bytes,19,opt,name=agreement_version,json=agreementVersion,proto3" json:"agreement_version" bson:"agreement_version" validate:"required"`
	// @inject_tag: json:"agreement_accepted" bson:"agreement_accepted" validate:"required"
	AgreementAccepted bool `protobuf:"varint,20,opt,name=agreement_accepted,json=agreementAccepted,proto3" json:"agreement_accepted" bson:"agreement_accepted" validate:"required"`
	// @inject_tag: json:"notify_sale" bson:"notify_sale" validate:"required"
	NotifySale bool `protobuf:"varint,21,opt,name=notify_sale,json=notifySale,proto3" json:"notify_sale" bson:"notify_sale" validate:"required"`
	// @inject_tag: json:"notify_sale_email" bson:"notify_sale_email"
	NotifySaleEmail string `protobuf:"bytes,22,opt,name=notify_sale_email,json=notifySaleEmail,proto3" json:"notify_sale_email" bson:"notify_sale_email"`
	// @inject_tag: json:"issuer" bson:"issuer" validate:"required"
	Issuer *OrderIssuer `protobuf:"bytes,23,opt,name=issuer,proto3" json:"issuer" bson:"issuer" validate:"required"`
	// @inject_tag: json:"amount" bson:"total_payment_amount"
	TotalPaymentAmount float64 `protobuf:"fixed64,24,opt,name=total_payment_amount,json=totalPaymentAmount,proto3" json:"amount" bson:"total_payment_amount"`
	// @inject_tag: json:"currency" bson:"currency" validate:"required,alpha,len=3"
	Currency string `protobuf:"bytes,25,opt,name=currency,proto3" json:"currency" bson:"currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"user" bson:"user"
	User *OrderUser `protobuf:"bytes,26,opt,name=user,proto3" json:"user" bson:"user"`
	// @inject_tag: json:"billing_address" bson:"billing_address"
	BillingAddress *OrderBillingAddress `protobuf:"bytes,27,opt,name=billing_address,json=billingAddress,proto3" json:"billing_address" bson:"billing_address"`
	// @inject_tag: json:"tax" bson:"tax"
	Tax *OrderTax `protobuf:"bytes,28,opt,name=tax,proto3" json:"tax" bson:"tax"`
	// @inject_tag: json:"method" bson:"payment_method"
	PaymentMethod *PaymentMethodOrder `protobuf:"bytes,29,opt,name=payment_method,json=paymentMethod,proto3" json:"method" bson:"payment_method"`
	// @inject_tag: json:"items" bson:"items" validate="omitempty,gte=1,dive"
	Items []*OrderItem `protobuf:"bytes,30,rep,name=items,proto3" json:"items" bson:"items"`
	// @inject_tag: json:"refund" bson:"refund" validate:"omitempty,dive"
	Refund *OrderNotificationRefund `protobuf:"bytes,31,opt,name=refund,proto3" json:"refund" bson:"refund" validate:"omitempty,dive"`
	// @inject_tag: json:"metadata" bson:"metadata"
	Metadata map[string]string `protobuf:"bytes,32,rep,name=metadata,proto3" json:"metadata" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"metadata"`
	// @inject_tag: json:"-" bson:"private_metadata"
	PrivateMetadata map[string]string `protobuf:"bytes,33,rep,name=private_metadata,json=privateMetadata,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"private_metadata"`
	// @inject_tag: json:"-" bson:"project"
	Project *ProjectOrder `protobuf:"bytes,34,opt,name=project,proto3" json:"-" bson:"project"`
	// @inject_tag: json:"-" bson:"project_order_id"
	ProjectOrderId string `protobuf:"bytes,35,opt,name=project_order_id,json=projectOrderId,proto3" json:"-" bson:"project_order_id"`
	// @inject_tag: json:"-" bson:"project_account"
	ProjectAccount string `protobuf:"bytes,36,opt,name=project_account,json=projectAccount,proto3" json:"-" bson:"project_account"`
	// @inject_tag: json:"-" bson:"project_last_requested_at"
	ProjectLastRequestedAt *timestamp.Timestamp `protobuf:"bytes,37,opt,name=project_last_requested_at,json=projectLastRequestedAt,proto3" json:"-" bson:"project_last_requested_at"`
	// @inject_tag: json:"-" bson:"project_params"
	ProjectParams map[string]string `protobuf:"bytes,38,rep,name=project_params,json=projectParams,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"project_params"`
	// @inject_tag: json:"-" bson:"pm_order_close_date"
	PaymentMethodOrderClosedAt *timestamp.Timestamp `protobuf:"bytes,39,opt,name=payment_method_order_closed_at,json=paymentMethodOrderClosedAt,proto3" json:"-" bson:"pm_order_close_date"`
	// @inject_tag: json:"-" bson:"created_by_json"
	IsJsonRequest bool `protobuf:"varint,40,opt,name=is_json_request,json=isJsonRequest,proto3" json:"-" bson:"created_by_json"`
	// @inject_tag: json:"-" bson:"private_amount" validate:"required,numeric,gt=0"
	OrderAmount float64 `protobuf:"fixed64,41,opt,name=order_amount,json=orderAmount,proto3" json:"-" bson:"private_amount" validate:"required,numeric,gt=0"`
	// @inject_tag: json:"-" bson:"pm_account"
	PaymentMethodPayerAccount string `protobuf:"bytes,42,opt,name=payment_method_payer_account,json=paymentMethodPayerAccount,proto3" json:"-" bson:"pm_account"`
	// @inject_tag: json:"-" bson:"pm_txn_params"
	PaymentMethodTxnParams map[string]string `protobuf:"bytes,43,rep,name=payment_method_txn_params,json=paymentMethodTxnParams,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"pm_txn_params"`
	// @inject_tag: json:"-" bson:"payment_requisites"
	PaymentRequisites map[string]string `protobuf:"bytes,44,rep,name=payment_requisites,json=paymentRequisites,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"payment_requisites"`
	// @inject_tag: json:"-" bson:"expire_date_to_form_input"
	ExpireDateToFormInput *timestamp.Timestamp `protobuf:"bytes,45,opt,name=expire_date_to_form_input,json=expireDateToFormInput,proto3" json:"-" bson:"expire_date_to_form_input"`
	// @inject_tag: json:"-" bson:"user_address_data_required"
	UserAddressDataRequired bool `protobuf:"varint,46,opt,name=user_address_data_required,json=userAddressDataRequired,proto3" json:"-" bson:"user_address_data_required"`
	// @inject_tag: json:"-" bson:"products" validate:"omitempty,gte=1,dive,hexadecimal,len=24"
	Products []string `protobuf:"bytes,47,rep,name=products,proto3" json:"-" bson:"products" validate:"omitempty,gte=1,dive,hexadecimal,len=24"`
	// @inject_tag: json:"-" bson:"is_notifications_sent"
	IsNotificationsSent map[string]bool `protobuf:"bytes,48,rep,name=is_notifications_sent,json=isNotificationsSent,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3" bson:"is_notifications_sent"`
	// @inject_tag: json:"-" bson:"country_restriction"
	CountryRestriction *CountryRestriction `protobuf:"bytes,49,opt,name=country_restriction,json=countryRestriction,proto3" json:"-" bson:"country_restriction"`
	// @inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
	CountryCode string `protobuf:"bytes,50,opt,name=country_code,json=countryCode,proto3" json:"country" bson:"country" validate:"omitempty,alpha,len=2"`
	// @inject_tag: json:"-"
	ParentId string `protobuf:"bytes,51,opt,name=parent_id,json=parentId,proto3" json:"-"`
	// @inject_tag: json:"-"
	ParentPaymentAt *timestamp.Timestamp `protobuf:"bytes,52,opt,name=parent_payment_at,json=parentPaymentAt,proto3" json:"-"`
	// @inject_tag: json:"-"
	Type string `protobuf:"bytes,53,opt,name=type,proto3" json:"-"`
	// @inject_tag: json:"-"
	IsVatDeduction       bool     `protobuf:"varint,54,opt,name=is_vat_deduction,json=isVatDeduction,proto3" json:"-"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{19}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Order) GetTransaction() string {
	if m != nil {
		return m.Transaction
	}
	return ""
}

func (m *Order) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *Order) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Order) GetPrivateStatus() int32 {
	if m != nil {
		return m.PrivateStatus
	}
	return 0
}

func (m *Order) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Order) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Order) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Order) GetCanceledAt() *timestamp.Timestamp {
	if m != nil {
		return m.CanceledAt
	}
	return nil
}

func (m *Order) GetCanceled() bool {
	if m != nil {
		return m.Canceled
	}
	return false
}

func (m *Order) GetCancellationReason() string {
	if m != nil {
		return m.CancellationReason
	}
	return ""
}

func (m *Order) GetRefunded() bool {
	if m != nil {
		return m.Refunded
	}
	return false
}

func (m *Order) GetRefundedAt() *timestamp.Timestamp {
	if m != nil {
		return m.RefundedAt
	}
	return nil
}

func (m *Order) GetReceiptEmail() string {
	if m != nil {
		return m.ReceiptEmail
	}
	return ""
}

func (m *Order) GetReceiptPhone() string {
	if m != nil {
		return m.ReceiptPhone
	}
	return ""
}

func (m *Order) GetReceiptNumber() string {
	if m != nil {
		return m.ReceiptNumber
	}
	return ""
}

func (m *Order) GetReceiptUrl() string {
	if m != nil {
		return m.ReceiptUrl
	}
	return ""
}

func (m *Order) GetAgreementVersion() string {
	if m != nil {
		return m.AgreementVersion
	}
	return ""
}

func (m *Order) GetAgreementAccepted() bool {
	if m != nil {
		return m.AgreementAccepted
	}
	return false
}

func (m *Order) GetNotifySale() bool {
	if m != nil {
		return m.NotifySale
	}
	return false
}

func (m *Order) GetNotifySaleEmail() string {
	if m != nil {
		return m.NotifySaleEmail
	}
	return ""
}

func (m *Order) GetIssuer() *OrderIssuer {
	if m != nil {
		return m.Issuer
	}
	return nil
}

func (m *Order) GetTotalPaymentAmount() float64 {
	if m != nil {
		return m.TotalPaymentAmount
	}
	return 0
}

func (m *Order) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Order) GetUser() *OrderUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Order) GetBillingAddress() *OrderBillingAddress {
	if m != nil {
		return m.BillingAddress
	}
	return nil
}

func (m *Order) GetTax() *OrderTax {
	if m != nil {
		return m.Tax
	}
	return nil
}

func (m *Order) GetPaymentMethod() *PaymentMethodOrder {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *Order) GetItems() []*OrderItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Order) GetRefund() *OrderNotificationRefund {
	if m != nil {
		return m.Refund
	}
	return nil
}

func (m *Order) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Order) GetPrivateMetadata() map[string]string {
	if m != nil {
		return m.PrivateMetadata
	}
	return nil
}

func (m *Order) GetProject() *ProjectOrder {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *Order) GetProjectOrderId() string {
	if m != nil {
		return m.ProjectOrderId
	}
	return ""
}

func (m *Order) GetProjectAccount() string {
	if m != nil {
		return m.ProjectAccount
	}
	return ""
}

func (m *Order) GetProjectLastRequestedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ProjectLastRequestedAt
	}
	return nil
}

func (m *Order) GetProjectParams() map[string]string {
	if m != nil {
		return m.ProjectParams
	}
	return nil
}

func (m *Order) GetPaymentMethodOrderClosedAt() *timestamp.Timestamp {
	if m != nil {
		return m.PaymentMethodOrderClosedAt
	}
	return nil
}

func (m *Order) GetIsJsonRequest() bool {
	if m != nil {
		return m.IsJsonRequest
	}
	return false
}

func (m *Order) GetOrderAmount() float64 {
	if m != nil {
		return m.OrderAmount
	}
	return 0
}

func (m *Order) GetPaymentMethodPayerAccount() string {
	if m != nil {
		return m.PaymentMethodPayerAccount
	}
	return ""
}

func (m *Order) GetPaymentMethodTxnParams() map[string]string {
	if m != nil {
		return m.PaymentMethodTxnParams
	}
	return nil
}

func (m *Order) GetPaymentRequisites() map[string]string {
	if m != nil {
		return m.PaymentRequisites
	}
	return nil
}

func (m *Order) GetExpireDateToFormInput() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireDateToFormInput
	}
	return nil
}

func (m *Order) GetUserAddressDataRequired() bool {
	if m != nil {
		return m.UserAddressDataRequired
	}
	return false
}

func (m *Order) GetProducts() []string {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *Order) GetIsNotificationsSent() map[string]bool {
	if m != nil {
		return m.IsNotificationsSent
	}
	return nil
}

func (m *Order) GetCountryRestriction() *CountryRestriction {
	if m != nil {
		return m.CountryRestriction
	}
	return nil
}

func (m *Order) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *Order) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *Order) GetParentPaymentAt() *timestamp.Timestamp {
	if m != nil {
		return m.ParentPaymentAt
	}
	return nil
}

func (m *Order) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Order) GetIsVatDeduction() bool {
	if m != nil {
		return m.IsVatDeduction
	}
	return false
}

type CountryRestriction struct {
	// @inject_tag: json:"iso_code_a2" bson:"iso_code_a2" validate:"alpha,len=2"
	IsoCodeA2 string `protobuf:"bytes,1,opt,name=iso_code_a2,json=isoCodeA2,proto3" json:"iso_code_a2" bson:"iso_code_a2" validate:"alpha,len=2"`
	// @inject_tag: json:"payments_allowed" bson:"payments_allowed"
	PaymentsAllowed bool `protobuf:"varint,2,opt,name=payments_allowed,json=paymentsAllowed,proto3" json:"payments_allowed" bson:"payments_allowed"`
	// @inject_tag: json:"change_allowed" bson:"change_allowed"
	ChangeAllowed        bool     `protobuf:"varint,3,opt,name=change_allowed,json=changeAllowed,proto3" json:"change_allowed" bson:"change_allowed"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CountryRestriction) Reset()         { *m = CountryRestriction{} }
func (m *CountryRestriction) String() string { return proto.CompactTextString(m) }
func (*CountryRestriction) ProtoMessage()    {}
func (*CountryRestriction) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{20}
}
func (m *CountryRestriction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryRestriction.Unmarshal(m, b)
}
func (m *CountryRestriction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryRestriction.Marshal(b, m, deterministic)
}
func (dst *CountryRestriction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryRestriction.Merge(dst, src)
}
func (m *CountryRestriction) XXX_Size() int {
	return xxx_messageInfo_CountryRestriction.Size(m)
}
func (m *CountryRestriction) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryRestriction.DiscardUnknown(m)
}

var xxx_messageInfo_CountryRestriction proto.InternalMessageInfo

func (m *CountryRestriction) GetIsoCodeA2() string {
	if m != nil {
		return m.IsoCodeA2
	}
	return ""
}

func (m *CountryRestriction) GetPaymentsAllowed() bool {
	if m != nil {
		return m.PaymentsAllowed
	}
	return false
}

func (m *CountryRestriction) GetChangeAllowed() bool {
	if m != nil {
		return m.ChangeAllowed
	}
	return false
}

type OrderItem struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"id" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required,hexadecimal,len=24" bson:"_id"`
	// @inject_tag: validate:"required" json:"object" bson:"object"
	Object string `protobuf:"bytes,2,opt,name=object,proto3" json:"object" validate:"required" bson:"object"`
	// @inject_tag: validate:"required" json:"sku" bson:"sku"
	Sku string `protobuf:"bytes,3,opt,name=sku,proto3" json:"sku" validate:"required" bson:"sku"`
	// @inject_tag: validate:"required" json:"name" bson:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name" validate:"required" bson:"name"`
	// @inject_tag: validate:"required" json:"description" bson:"description"
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description" validate:"required" bson:"description"`
	// @inject_tag: validate:"required,numeric,gt=0" json:"amount" bson:"amount"
	Amount float64 `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount" validate:"required,numeric,gt=0" bson:"amount"`
	// @inject_tag: validate:"required,alpha,len=3" json:"currency" bson:"currency"
	Currency string `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency" validate:"required,alpha,len=3" bson:"currency"`
	// @inject_tag: validate:"dive,omitempty,uri" json:"images" bson:"images"
	Images []string `protobuf:"bytes,8,rep,name=images,proto3" json:"images" validate:"dive,omitempty,uri" bson:"images"`
	// @inject_tag: validate:"omitempty,url" json:"url" bson:"url"
	Url string `protobuf:"bytes,9,opt,name=url,proto3" json:"url" validate:"omitempty,url" bson:"url"`
	// @inject_tag: json:"metadata" bson:"metadata"
	Metadata map[string]string `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"metadata"`
	// @inject_tag: json:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at" bson:"created_at"`
	// @inject_tag: json:"updated_at" bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderItem) Reset()         { *m = OrderItem{} }
func (m *OrderItem) String() string { return proto.CompactTextString(m) }
func (*OrderItem) ProtoMessage()    {}
func (*OrderItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{21}
}
func (m *OrderItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderItem.Unmarshal(m, b)
}
func (m *OrderItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderItem.Marshal(b, m, deterministic)
}
func (dst *OrderItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderItem.Merge(dst, src)
}
func (m *OrderItem) XXX_Size() int {
	return xxx_messageInfo_OrderItem.Size(m)
}
func (m *OrderItem) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderItem.DiscardUnknown(m)
}

var xxx_messageInfo_OrderItem proto.InternalMessageInfo

func (m *OrderItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderItem) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *OrderItem) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *OrderItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrderItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *OrderItem) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderItem) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderItem) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *OrderItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *OrderItem) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *OrderItem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *OrderItem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type OrderPaginate struct {
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	// @inject_tag: json:"items"
	Items                []*Order `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderPaginate) Reset()         { *m = OrderPaginate{} }
func (m *OrderPaginate) String() string { return proto.CompactTextString(m) }
func (*OrderPaginate) ProtoMessage()    {}
func (*OrderPaginate) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{22}
}
func (m *OrderPaginate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderPaginate.Unmarshal(m, b)
}
func (m *OrderPaginate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderPaginate.Marshal(b, m, deterministic)
}
func (dst *OrderPaginate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderPaginate.Merge(dst, src)
}
func (m *OrderPaginate) XXX_Size() int {
	return xxx_messageInfo_OrderPaginate.Size(m)
}
func (m *OrderPaginate) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderPaginate.DiscardUnknown(m)
}

var xxx_messageInfo_OrderPaginate proto.InternalMessageInfo

func (m *OrderPaginate) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *OrderPaginate) GetItems() []*Order {
	if m != nil {
		return m.Items
	}
	return nil
}

type PaymentMethodOrder struct {
	// @inject_tag: json:"-" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"-" bson:"_id"`
	// @inject_tag: json:"title" bson:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"title" bson:"name"`
	// @inject_tag: bson:"external_id" json:"external_id"
	ExternalId string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id" bson:"external_id"`
	// @inject_tag: bson:"params"
	Params *PaymentMethodParams `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty" bson:"params"`
	// @inject_tag: bson:"payment_system_id" json:"payment_system_id"
	PaymentSystemId string `protobuf:"bytes,5,opt,name=payment_system_id,json=paymentSystemId,proto3" json:"payment_system_id" bson:"payment_system_id"`
	// @inject_tag: json:"type" bson:"group_alias"
	Group string `protobuf:"bytes,6,opt,name=group,proto3" json:"type" bson:"group_alias"`
	// @inject_tag: json:"saved" bson:"saved"
	Saved bool `protobuf:"varint,7,opt,name=saved,proto3" json:"saved" bson:"saved"`
	// @inject_tag: json:"card" bson:"card"
	Card *PaymentMethodCard `protobuf:"bytes,8,opt,name=card,proto3" json:"card" bson:"card"`
	// @inject_tag: json:"wallet" bson:"wallet"
	Wallet *PaymentMethodWallet `protobuf:"bytes,9,opt,name=wallet,proto3" json:"wallet" bson:"wallet"`
	// @inject_tag: json:"crypto_currency" bson:"crypto_currency"
	CryptoCurrency *PaymentMethodCrypto `protobuf:"bytes,10,opt,name=crypto_currency,json=cryptoCurrency,proto3" json:"crypto_currency" bson:"crypto_currency"`
	// @inject_tag: json:"type" bson:"group_alias"
	Handler              string   `protobuf:"bytes,11,opt,name=handler,proto3" json:"type" bson:"group_alias"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentMethodOrder) Reset()         { *m = PaymentMethodOrder{} }
func (m *PaymentMethodOrder) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodOrder) ProtoMessage()    {}
func (*PaymentMethodOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{23}
}
func (m *PaymentMethodOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodOrder.Unmarshal(m, b)
}
func (m *PaymentMethodOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodOrder.Marshal(b, m, deterministic)
}
func (dst *PaymentMethodOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodOrder.Merge(dst, src)
}
func (m *PaymentMethodOrder) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodOrder.Size(m)
}
func (m *PaymentMethodOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodOrder.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodOrder proto.InternalMessageInfo

func (m *PaymentMethodOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentMethodOrder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentMethodOrder) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *PaymentMethodOrder) GetParams() *PaymentMethodParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PaymentMethodOrder) GetPaymentSystemId() string {
	if m != nil {
		return m.PaymentSystemId
	}
	return ""
}

func (m *PaymentMethodOrder) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *PaymentMethodOrder) GetSaved() bool {
	if m != nil {
		return m.Saved
	}
	return false
}

func (m *PaymentMethodOrder) GetCard() *PaymentMethodCard {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *PaymentMethodOrder) GetWallet() *PaymentMethodWallet {
	if m != nil {
		return m.Wallet
	}
	return nil
}

func (m *PaymentMethodOrder) GetCryptoCurrency() *PaymentMethodCrypto {
	if m != nil {
		return m.CryptoCurrency
	}
	return nil
}

func (m *PaymentMethodOrder) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

type PaymentMethodParams struct {
	// @inject_tag: bson:"currency" json:"currency" validate:"required,alpha,len=3"
	Currency string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency" bson:"currency" validate:"required,alpha,len=3"`
	// @inject_tag: bson:"terminal_id" json:"terminal_id" validate:"omitempty,alphanum"
	TerminalId string `protobuf:"bytes,2,opt,name=terminal_id,json=terminalId,proto3" json:"terminal_id" bson:"terminal_id" validate:"omitempty,alphanum"`
	// @inject_tag: bson:"secret" json:"secret" validate:"omitempty"
	Secret string `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret" bson:"secret" validate:"omitempty"`
	// @inject_tag: bson:"secret_callback" json:"secret_callback" validate:"omitempty"
	SecretCallback       string   `protobuf:"bytes,5,opt,name=secret_callback,json=secretCallback,proto3" json:"secret_callback" bson:"secret_callback" validate:"omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentMethodParams) Reset()         { *m = PaymentMethodParams{} }
func (m *PaymentMethodParams) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodParams) ProtoMessage()    {}
func (*PaymentMethodParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{24}
}
func (m *PaymentMethodParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodParams.Unmarshal(m, b)
}
func (m *PaymentMethodParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodParams.Marshal(b, m, deterministic)
}
func (dst *PaymentMethodParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodParams.Merge(dst, src)
}
func (m *PaymentMethodParams) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodParams.Size(m)
}
func (m *PaymentMethodParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodParams.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodParams proto.InternalMessageInfo

func (m *PaymentMethodParams) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *PaymentMethodParams) GetTerminalId() string {
	if m != nil {
		return m.TerminalId
	}
	return ""
}

func (m *PaymentMethodParams) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *PaymentMethodParams) GetSecretCallback() string {
	if m != nil {
		return m.SecretCallback
	}
	return ""
}

type PaymentSystem struct {
	// @inject_tag: bson:"_id" structure:"_id,bsonobjectid"
	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id" structure:"_id,bsonobjectid"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: bson:"country" structure:"country"
	Country string `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty" bson:"country" structure:"country"`
	// @inject_tag: bson:"accounting_currency" structure:"accounting_currency"
	AccountingCurrency string `protobuf:"bytes,4,opt,name=accounting_currency,json=accountingCurrency,proto3" json:"accounting_currency,omitempty" bson:"accounting_currency" structure:"accounting_currency"`
	// @inject_tag: bson:"accounting_period" structure:"accounting_period"
	AccountingPeriod string `protobuf:"bytes,5,opt,name=accounting_period,json=accountingPeriod,proto3" json:"accounting_period,omitempty" bson:"accounting_period" structure:"accounting_period"`
	// @inject_tag: bson:"is_active" structure:"is_active"
	IsActive bool `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active" structure:"is_active"`
	// @inject_tag: bson:"created_at" structure:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at" structure:"created_at,timestamp"`
	// @inject_tag: bson:"updated_at" structure:"updated_at,timestamp"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at" structure:"updated_at,timestamp"`
	// @inject_tag: bson:"handler" json:"handler" validate:"omitempty,alphanum"
	Handler              string   `protobuf:"bytes,9,opt,name=handler,proto3" json:"handler" bson:"handler" validate:"omitempty,alphanum"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentSystem) Reset()         { *m = PaymentSystem{} }
func (m *PaymentSystem) String() string { return proto.CompactTextString(m) }
func (*PaymentSystem) ProtoMessage()    {}
func (*PaymentSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{25}
}
func (m *PaymentSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentSystem.Unmarshal(m, b)
}
func (m *PaymentSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentSystem.Marshal(b, m, deterministic)
}
func (dst *PaymentSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentSystem.Merge(dst, src)
}
func (m *PaymentSystem) XXX_Size() int {
	return xxx_messageInfo_PaymentSystem.Size(m)
}
func (m *PaymentSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentSystem.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentSystem proto.InternalMessageInfo

func (m *PaymentSystem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentSystem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentSystem) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *PaymentSystem) GetAccountingCurrency() string {
	if m != nil {
		return m.AccountingCurrency
	}
	return ""
}

func (m *PaymentSystem) GetAccountingPeriod() string {
	if m != nil {
		return m.AccountingPeriod
	}
	return ""
}

func (m *PaymentSystem) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *PaymentSystem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PaymentSystem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *PaymentSystem) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

type PaymentMethodCard struct {
	// @inject_tag: json:"first6" bson:"first6"
	First6 string `protobuf:"bytes,1,opt,name=first6,proto3" json:"first6" bson:"first6"`
	// @inject_tag: json:"last4" bson:"last4"
	Last4 string `protobuf:"bytes,2,opt,name=last4,proto3" json:"last4" bson:"last4"`
	// @inject_tag: json:"masked" bson:"masked"
	Masked string `protobuf:"bytes,3,opt,name=masked,proto3" json:"masked" bson:"masked"`
	// @inject_tag: json:"expiry_month" bson:"expiry_month"
	ExpiryMonth string `protobuf:"bytes,4,opt,name=expiry_month,json=expiryMonth,proto3" json:"expiry_month" bson:"expiry_month"`
	// @inject_tag: json:"expiry_year" bson:"expiry_year"
	ExpiryYear string `protobuf:"bytes,5,opt,name=expiry_year,json=expiryYear,proto3" json:"expiry_year" bson:"expiry_year"`
	// @inject_tag: json:"brand" bson:"brand"
	Brand string `protobuf:"bytes,6,opt,name=brand,proto3" json:"brand" bson:"brand"`
	// @inject_tag: json:"fingerprint" bson:"fingerprint"
	Fingerprint string `protobuf:"bytes,7,opt,name=fingerprint,proto3" json:"fingerprint" bson:"fingerprint"`
	// @inject_tag: json:"secure3d" bson:"secure3d"
	Secure3D             bool     `protobuf:"varint,8,opt,name=secure3d,proto3" json:"secure3d" bson:"secure3d"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentMethodCard) Reset()         { *m = PaymentMethodCard{} }
func (m *PaymentMethodCard) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodCard) ProtoMessage()    {}
func (*PaymentMethodCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{26}
}
func (m *PaymentMethodCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodCard.Unmarshal(m, b)
}
func (m *PaymentMethodCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodCard.Marshal(b, m, deterministic)
}
func (dst *PaymentMethodCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodCard.Merge(dst, src)
}
func (m *PaymentMethodCard) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodCard.Size(m)
}
func (m *PaymentMethodCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodCard.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodCard proto.InternalMessageInfo

func (m *PaymentMethodCard) GetFirst6() string {
	if m != nil {
		return m.First6
	}
	return ""
}

func (m *PaymentMethodCard) GetLast4() string {
	if m != nil {
		return m.Last4
	}
	return ""
}

func (m *PaymentMethodCard) GetMasked() string {
	if m != nil {
		return m.Masked
	}
	return ""
}

func (m *PaymentMethodCard) GetExpiryMonth() string {
	if m != nil {
		return m.ExpiryMonth
	}
	return ""
}

func (m *PaymentMethodCard) GetExpiryYear() string {
	if m != nil {
		return m.ExpiryYear
	}
	return ""
}

func (m *PaymentMethodCard) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *PaymentMethodCard) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

func (m *PaymentMethodCard) GetSecure3D() bool {
	if m != nil {
		return m.Secure3D
	}
	return false
}

type PaymentMethodWallet struct {
	// @inject_tag: json:"brand" bson:"brand"
	Brand string `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand" bson:"brand"`
	// @inject_tag: json:"account" bson:"account"
	Account              string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account" bson:"account"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentMethodWallet) Reset()         { *m = PaymentMethodWallet{} }
func (m *PaymentMethodWallet) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodWallet) ProtoMessage()    {}
func (*PaymentMethodWallet) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{27}
}
func (m *PaymentMethodWallet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodWallet.Unmarshal(m, b)
}
func (m *PaymentMethodWallet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodWallet.Marshal(b, m, deterministic)
}
func (dst *PaymentMethodWallet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodWallet.Merge(dst, src)
}
func (m *PaymentMethodWallet) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodWallet.Size(m)
}
func (m *PaymentMethodWallet) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodWallet.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodWallet proto.InternalMessageInfo

func (m *PaymentMethodWallet) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *PaymentMethodWallet) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

type PaymentMethodCrypto struct {
	// @inject_tag: json:"brand" bson:"brand"
	Brand string `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand" bson:"brand"`
	// @inject_tag: json:"address" bson:"address"
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address" bson:"address"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentMethodCrypto) Reset()         { *m = PaymentMethodCrypto{} }
func (m *PaymentMethodCrypto) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodCrypto) ProtoMessage()    {}
func (*PaymentMethodCrypto) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{28}
}
func (m *PaymentMethodCrypto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodCrypto.Unmarshal(m, b)
}
func (m *PaymentMethodCrypto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodCrypto.Marshal(b, m, deterministic)
}
func (dst *PaymentMethodCrypto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodCrypto.Merge(dst, src)
}
func (m *PaymentMethodCrypto) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodCrypto.Size(m)
}
func (m *PaymentMethodCrypto) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodCrypto.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodCrypto proto.InternalMessageInfo

func (m *PaymentMethodCrypto) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *PaymentMethodCrypto) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ProjectPaymentMethod struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	// @inject_tag: bson:"terminal"
	Terminal string `protobuf:"bytes,2,opt,name=terminal,proto3" json:"terminal,omitempty" bson:"terminal"`
	// @inject_tag: bson:"password"
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty" bson:"password"`
	// @inject_tag: bson:"callback_password"
	CallbackPassword string `protobuf:"bytes,4,opt,name=callback_password,json=callbackPassword,proto3" json:"callback_password,omitempty" bson:"callback_password"`
	// @inject_tag: bson:"created_at"
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *ProjectPaymentMethod) Reset()         { *m = ProjectPaymentMethod{} }
func (m *ProjectPaymentMethod) String() string { return proto.CompactTextString(m) }
func (*ProjectPaymentMethod) ProtoMessage()    {}
func (*ProjectPaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{29}
}
func (m *ProjectPaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectPaymentMethod.Unmarshal(m, b)
}
func (m *ProjectPaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectPaymentMethod.Marshal(b, m, deterministic)
}
func (dst *ProjectPaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectPaymentMethod.Merge(dst, src)
}
func (m *ProjectPaymentMethod) XXX_Size() int {
	return xxx_messageInfo_ProjectPaymentMethod.Size(m)
}
func (m *ProjectPaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectPaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectPaymentMethod proto.InternalMessageInfo

func (m *ProjectPaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectPaymentMethod) GetTerminal() string {
	if m != nil {
		return m.Terminal
	}
	return ""
}

func (m *ProjectPaymentMethod) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ProjectPaymentMethod) GetCallbackPassword() string {
	if m != nil {
		return m.CallbackPassword
	}
	return ""
}

func (m *ProjectPaymentMethod) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type PaymentMethod struct {
	// @inject_tag: bson:"_id" json:"id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: bson:"name" json:"name" validate:"required,omitempty,alphanum"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" bson:"name" validate:"required,omitempty,alphanum"`
	// @inject_tag: bson:"group_alias" json:"group_alias" validate:"omitempty,alphanum"
	Group string `protobuf:"bytes,3,opt,name=group,proto3" json:"group_alias" bson:"group_alias" validate:"omitempty,alphanum"`
	// @inject_tag: bson:"external_id" json:"external_id" validate:"omitempty,alphanum"
	ExternalId string `protobuf:"bytes,5,opt,name=external_id,json=externalId,proto3" json:"external_id" bson:"external_id" validate:"omitempty,alphanum"`
	// @inject_tag: bson:"currencies" json:"currencies" validate:"omitempty,numeric,dive,gte=0"
	Currencies []string `protobuf:"bytes,6,rep,name=currencies,proto3" json:"currencies" bson:"currencies" validate:"omitempty,numeric,dive,gte=0"`
	// @inject_tag: bson:"min_payment_amount" json:"min_payment_amount" validate:"omitempty,numeric,gte=0"
	MinPaymentAmount float64 `protobuf:"fixed64,7,opt,name=min_payment_amount,json=minPaymentAmount,proto3" json:"min_payment_amount" bson:"min_payment_amount" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: bson:"max_payment_amount" json:"max_payment_amount" validate:"omitempty,numeric,gte=0"
	MaxPaymentAmount float64 `protobuf:"fixed64,8,opt,name=max_payment_amount,json=maxPaymentAmount,proto3" json:"max_payment_amount" bson:"max_payment_amount" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: bson:"type" json:"type" validate:"omitempty,alpha,gte=0"
	Type string `protobuf:"bytes,9,opt,name=type,proto3" json:"type" bson:"type" validate:"omitempty,alpha,gte=0"`
	// @inject_tag: bson:"account_regexp" json:"account_regexp" validate:"omitempty"
	AccountRegexp string `protobuf:"bytes,10,opt,name=account_regexp,json=accountRegexp,proto3" json:"account_regexp" bson:"account_regexp" validate:"omitempty"`
	// @inject_tag: bson:"is_active" json:"is_active" validate:"omitempty"
	IsActive bool `protobuf:"varint,11,opt,name=is_active,json=isActive,proto3" json:"is_active" bson:"is_active" validate:"omitempty"`
	// @inject_tag: bson:"payment_system_id" json:"payment_system_id" validate:"required,hexadecimal,len=24"
	PaymentSystemId string `protobuf:"bytes,12,opt,name=payment_system_id,json=paymentSystemId,proto3" json:"payment_system_id" bson:"payment_system_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: bson:"test_settings" json:"test_settings" validate:"omitempty"
	TestSettings map[string]*PaymentMethodParams `protobuf:"bytes,13,rep,name=test_settings,json=testSettings,proto3" json:"test_settings" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"test_settings" validate:"omitempty"`
	// @inject_tag: bson:"production_settings" json:"production_settings" validate:"omitempty"
	ProductionSettings map[string]*PaymentMethodParams `protobuf:"bytes,14,rep,name=production_settings,json=productionSettings,proto3" json:"production_settings" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"production_settings" validate:"omitempty"`
	// @inject_tag: bson:"created_at" json:"max_payment_amount" validate:"omitempty"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"max_payment_amount" bson:"created_at" validate:"omitempty"`
	// @inject_tag: bson:"updated_at" json:"max_payment_amount" validate:"omitempty"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"max_payment_amount" bson:"updated_at" validate:"omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentMethod) Reset()         { *m = PaymentMethod{} }
func (m *PaymentMethod) String() string { return proto.CompactTextString(m) }
func (*PaymentMethod) ProtoMessage()    {}
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{30}
}
func (m *PaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethod.Unmarshal(m, b)
}
func (m *PaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethod.Marshal(b, m, deterministic)
}
func (dst *PaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethod.Merge(dst, src)
}
func (m *PaymentMethod) XXX_Size() int {
	return xxx_messageInfo_PaymentMethod.Size(m)
}
func (m *PaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethod proto.InternalMessageInfo

func (m *PaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentMethod) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *PaymentMethod) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *PaymentMethod) GetCurrencies() []string {
	if m != nil {
		return m.Currencies
	}
	return nil
}

func (m *PaymentMethod) GetMinPaymentAmount() float64 {
	if m != nil {
		return m.MinPaymentAmount
	}
	return 0
}

func (m *PaymentMethod) GetMaxPaymentAmount() float64 {
	if m != nil {
		return m.MaxPaymentAmount
	}
	return 0
}

func (m *PaymentMethod) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PaymentMethod) GetAccountRegexp() string {
	if m != nil {
		return m.AccountRegexp
	}
	return ""
}

func (m *PaymentMethod) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *PaymentMethod) GetPaymentSystemId() string {
	if m != nil {
		return m.PaymentSystemId
	}
	return ""
}

func (m *PaymentMethod) GetTestSettings() map[string]*PaymentMethodParams {
	if m != nil {
		return m.TestSettings
	}
	return nil
}

func (m *PaymentMethod) GetProductionSettings() map[string]*PaymentMethodParams {
	if m != nil {
		return m.ProductionSettings
	}
	return nil
}

func (m *PaymentMethod) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PaymentMethod) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Commission struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	// @inject_tag: bson:"pm_id"
	PaymentMethodId string `protobuf:"bytes,2,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty" bson:"pm_id"`
	// @inject_tag: bson:"project_id"
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" bson:"project_id"`
	// @inject_tag: bson:"pm_commission"
	PaymentMethodCommission float64 `protobuf:"fixed64,4,opt,name=payment_method_commission,json=paymentMethodCommission,proto3" json:"payment_method_commission,omitempty" bson:"pm_commission"`
	// @inject_tag: bson:"psp_commission"
	PspCommission float64 `protobuf:"fixed64,5,opt,name=psp_commission,json=pspCommission,proto3" json:"psp_commission,omitempty" bson:"psp_commission"`
	// @inject_tag: bson:"total_commission_to_user"
	TotalCommissionToUser float64 `protobuf:"fixed64,6,opt,name=total_commission_to_user,json=totalCommissionToUser,proto3" json:"total_commission_to_user,omitempty" bson:"total_commission_to_user"`
	// @inject_tag: bson:"start_date"
	StartDate *timestamp.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty" bson:"start_date"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Commission) Reset()         { *m = Commission{} }
func (m *Commission) String() string { return proto.CompactTextString(m) }
func (*Commission) ProtoMessage()    {}
func (*Commission) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{31}
}
func (m *Commission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commission.Unmarshal(m, b)
}
func (m *Commission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commission.Marshal(b, m, deterministic)
}
func (dst *Commission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commission.Merge(dst, src)
}
func (m *Commission) XXX_Size() int {
	return xxx_messageInfo_Commission.Size(m)
}
func (m *Commission) XXX_DiscardUnknown() {
	xxx_messageInfo_Commission.DiscardUnknown(m)
}

var xxx_messageInfo_Commission proto.InternalMessageInfo

func (m *Commission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Commission) GetPaymentMethodId() string {
	if m != nil {
		return m.PaymentMethodId
	}
	return ""
}

func (m *Commission) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *Commission) GetPaymentMethodCommission() float64 {
	if m != nil {
		return m.PaymentMethodCommission
	}
	return 0
}

func (m *Commission) GetPspCommission() float64 {
	if m != nil {
		return m.PspCommission
	}
	return 0
}

func (m *Commission) GetTotalCommissionToUser() float64 {
	if m != nil {
		return m.TotalCommissionToUser
	}
	return 0
}

func (m *Commission) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *Commission) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Commission) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CardExpire struct {
	// @inject_tag: bson:"month"
	Month string `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty" bson:"month"`
	// @inject_tag: bson:"year"
	Year                 string   `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty" bson:"year"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CardExpire) Reset()         { *m = CardExpire{} }
func (m *CardExpire) String() string { return proto.CompactTextString(m) }
func (*CardExpire) ProtoMessage()    {}
func (*CardExpire) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{32}
}
func (m *CardExpire) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardExpire.Unmarshal(m, b)
}
func (m *CardExpire) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardExpire.Marshal(b, m, deterministic)
}
func (dst *CardExpire) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardExpire.Merge(dst, src)
}
func (m *CardExpire) XXX_Size() int {
	return xxx_messageInfo_CardExpire.Size(m)
}
func (m *CardExpire) XXX_DiscardUnknown() {
	xxx_messageInfo_CardExpire.DiscardUnknown(m)
}

var xxx_messageInfo_CardExpire proto.InternalMessageInfo

func (m *CardExpire) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *CardExpire) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

type SavedCard struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pan                  string      `protobuf:"bytes,2,opt,name=pan,proto3" json:"pan,omitempty"`
	CardHolder           string      `protobuf:"bytes,3,opt,name=card_holder,json=cardHolder,proto3" json:"card_holder,omitempty"`
	Expire               *CardExpire `protobuf:"bytes,4,opt,name=expire,proto3" json:"expire,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte      `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32       `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *SavedCard) Reset()         { *m = SavedCard{} }
func (m *SavedCard) String() string { return proto.CompactTextString(m) }
func (*SavedCard) ProtoMessage()    {}
func (*SavedCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{33}
}
func (m *SavedCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavedCard.Unmarshal(m, b)
}
func (m *SavedCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavedCard.Marshal(b, m, deterministic)
}
func (dst *SavedCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavedCard.Merge(dst, src)
}
func (m *SavedCard) XXX_Size() int {
	return xxx_messageInfo_SavedCard.Size(m)
}
func (m *SavedCard) XXX_DiscardUnknown() {
	xxx_messageInfo_SavedCard.DiscardUnknown(m)
}

var xxx_messageInfo_SavedCard proto.InternalMessageInfo

func (m *SavedCard) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SavedCard) GetPan() string {
	if m != nil {
		return m.Pan
	}
	return ""
}

func (m *SavedCard) GetCardHolder() string {
	if m != nil {
		return m.CardHolder
	}
	return ""
}

func (m *SavedCard) GetExpire() *CardExpire {
	if m != nil {
		return m.Expire
	}
	return nil
}

type PaymentFormPaymentMethod struct {
	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"group_alias"
	Group         string `protobuf:"bytes,4,opt,name=group,proto3" json:"group_alias"`
	AccountRegexp string `protobuf:"bytes,5,opt,name=account_regexp,json=accountRegexp,proto3" json:"account_regexp,omitempty"`
	// @inject_tag: json:"has_saved_cards"
	HasSavedCards bool `protobuf:"varint,6,opt,name=has_saved_cards,json=hasSavedCards,proto3" json:"has_saved_cards"`
	// @inject_tag: json:"saved_cards,omitempty"
	SavedCards           []*SavedCard `protobuf:"bytes,7,rep,name=saved_cards,json=savedCards,proto3" json:"saved_cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte       `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32        `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentFormPaymentMethod) Reset()         { *m = PaymentFormPaymentMethod{} }
func (m *PaymentFormPaymentMethod) String() string { return proto.CompactTextString(m) }
func (*PaymentFormPaymentMethod) ProtoMessage()    {}
func (*PaymentFormPaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{34}
}
func (m *PaymentFormPaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentFormPaymentMethod.Unmarshal(m, b)
}
func (m *PaymentFormPaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentFormPaymentMethod.Marshal(b, m, deterministic)
}
func (dst *PaymentFormPaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentFormPaymentMethod.Merge(dst, src)
}
func (m *PaymentFormPaymentMethod) XXX_Size() int {
	return xxx_messageInfo_PaymentFormPaymentMethod.Size(m)
}
func (m *PaymentFormPaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentFormPaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentFormPaymentMethod proto.InternalMessageInfo

func (m *PaymentFormPaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetAccountRegexp() string {
	if m != nil {
		return m.AccountRegexp
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetHasSavedCards() bool {
	if m != nil {
		return m.HasSavedCards
	}
	return false
}

func (m *PaymentFormPaymentMethod) GetSavedCards() []*SavedCard {
	if m != nil {
		return m.SavedCards
	}
	return nil
}

type MerchantPaymentMethodPerTransactionCommission struct {
	// @inject_tag: validate:"omitempty,numeric,gte=0" json:"fee"
	Fee float64 `protobuf:"fixed64,1,opt,name=fee,proto3" json:"fee" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: json:"currency"
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantPaymentMethodPerTransactionCommission) Reset() {
	*m = MerchantPaymentMethodPerTransactionCommission{}
}
func (m *MerchantPaymentMethodPerTransactionCommission) String() string {
	return proto.CompactTextString(m)
}
func (*MerchantPaymentMethodPerTransactionCommission) ProtoMessage() {}
func (*MerchantPaymentMethodPerTransactionCommission) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{35}
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Marshal(b, m, deterministic)
}
func (dst *MerchantPaymentMethodPerTransactionCommission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Merge(dst, src)
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Size(m)
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission proto.InternalMessageInfo

func (m *MerchantPaymentMethodPerTransactionCommission) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *MerchantPaymentMethodPerTransactionCommission) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type MerchantPaymentMethodCommissions struct {
	// @inject_tag: validate:"omitempty,numeric,gte=0,lte=100" json:"fee"
	Fee float64 `protobuf:"fixed64,1,opt,name=fee,proto3" json:"fee" validate:"omitempty,numeric,gte=0,lte=100"`
	// @inject_tag: validate:"required" json:"per_transaction"
	PerTransaction       *MerchantPaymentMethodPerTransactionCommission `protobuf:"bytes,2,opt,name=per_transaction,json=perTransaction,proto3" json:"per_transaction" validate:"required"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                                         `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                                          `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantPaymentMethodCommissions) Reset()         { *m = MerchantPaymentMethodCommissions{} }
func (m *MerchantPaymentMethodCommissions) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodCommissions) ProtoMessage()    {}
func (*MerchantPaymentMethodCommissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{36}
}
func (m *MerchantPaymentMethodCommissions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodCommissions.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodCommissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodCommissions.Marshal(b, m, deterministic)
}
func (dst *MerchantPaymentMethodCommissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodCommissions.Merge(dst, src)
}
func (m *MerchantPaymentMethodCommissions) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodCommissions.Size(m)
}
func (m *MerchantPaymentMethodCommissions) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodCommissions.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodCommissions proto.InternalMessageInfo

func (m *MerchantPaymentMethodCommissions) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *MerchantPaymentMethodCommissions) GetPerTransaction() *MerchantPaymentMethodPerTransactionCommission {
	if m != nil {
		return m.PerTransaction
	}
	return nil
}

type MerchantPaymentMethodIntegration struct {
	// @inject_tag: json:"terminal_id"
	TerminalId string `protobuf:"bytes,1,opt,name=terminal_id,json=terminalId,proto3" json:"terminal_id"`
	// @inject_tag: json:"terminal_password"
	TerminalPassword string `protobuf:"bytes,2,opt,name=terminal_password,json=terminalPassword,proto3" json:"terminal_password"`
	// @inject_tag: json:"terminal_callback_password"
	TerminalCallbackPassword string `protobuf:"bytes,3,opt,name=terminal_callback_password,json=terminalCallbackPassword,proto3" json:"terminal_callback_password"`
	// @inject_tag: json:"integrated"
	Integrated           bool     `protobuf:"varint,4,opt,name=integrated,proto3" json:"integrated"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantPaymentMethodIntegration) Reset()         { *m = MerchantPaymentMethodIntegration{} }
func (m *MerchantPaymentMethodIntegration) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodIntegration) ProtoMessage()    {}
func (*MerchantPaymentMethodIntegration) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{37}
}
func (m *MerchantPaymentMethodIntegration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodIntegration.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodIntegration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodIntegration.Marshal(b, m, deterministic)
}
func (dst *MerchantPaymentMethodIntegration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodIntegration.Merge(dst, src)
}
func (m *MerchantPaymentMethodIntegration) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodIntegration.Size(m)
}
func (m *MerchantPaymentMethodIntegration) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodIntegration.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodIntegration proto.InternalMessageInfo

func (m *MerchantPaymentMethodIntegration) GetTerminalId() string {
	if m != nil {
		return m.TerminalId
	}
	return ""
}

func (m *MerchantPaymentMethodIntegration) GetTerminalPassword() string {
	if m != nil {
		return m.TerminalPassword
	}
	return ""
}

func (m *MerchantPaymentMethodIntegration) GetTerminalCallbackPassword() string {
	if m != nil {
		return m.TerminalCallbackPassword
	}
	return ""
}

func (m *MerchantPaymentMethodIntegration) GetIntegrated() bool {
	if m != nil {
		return m.Integrated
	}
	return false
}

type MerchantPaymentMethodIdentification struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required" json:"name"
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantPaymentMethodIdentification) Reset()         { *m = MerchantPaymentMethodIdentification{} }
func (m *MerchantPaymentMethodIdentification) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodIdentification) ProtoMessage()    {}
func (*MerchantPaymentMethodIdentification) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{38}
}
func (m *MerchantPaymentMethodIdentification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodIdentification.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodIdentification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodIdentification.Marshal(b, m, deterministic)
}
func (dst *MerchantPaymentMethodIdentification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodIdentification.Merge(dst, src)
}
func (m *MerchantPaymentMethodIdentification) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodIdentification.Size(m)
}
func (m *MerchantPaymentMethodIdentification) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodIdentification.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodIdentification proto.InternalMessageInfo

func (m *MerchantPaymentMethodIdentification) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MerchantPaymentMethodIdentification) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MerchantPaymentMethod struct {
	PaymentMethod        *MerchantPaymentMethodIdentification `protobuf:"bytes,3,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	Commission           *MerchantPaymentMethodCommissions    `protobuf:"bytes,4,opt,name=commission,proto3" json:"commission,omitempty"`
	Integration          *MerchantPaymentMethodIntegration    `protobuf:"bytes,5,opt,name=integration,proto3" json:"integration,omitempty"`
	IsActive             bool                                 `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantPaymentMethod) Reset()         { *m = MerchantPaymentMethod{} }
func (m *MerchantPaymentMethod) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethod) ProtoMessage()    {}
func (*MerchantPaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{39}
}
func (m *MerchantPaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethod.Unmarshal(m, b)
}
func (m *MerchantPaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethod.Marshal(b, m, deterministic)
}
func (dst *MerchantPaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethod.Merge(dst, src)
}
func (m *MerchantPaymentMethod) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethod.Size(m)
}
func (m *MerchantPaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethod proto.InternalMessageInfo

func (m *MerchantPaymentMethod) GetPaymentMethod() *MerchantPaymentMethodIdentification {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *MerchantPaymentMethod) GetCommission() *MerchantPaymentMethodCommissions {
	if m != nil {
		return m.Commission
	}
	return nil
}

func (m *MerchantPaymentMethod) GetIntegration() *MerchantPaymentMethodIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

func (m *MerchantPaymentMethod) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type RefundPayerData struct {
	Country              string   `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	Zip                  string   `protobuf:"bytes,2,opt,name=zip,proto3" json:"zip,omitempty"`
	State                string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *RefundPayerData) Reset()         { *m = RefundPayerData{} }
func (m *RefundPayerData) String() string { return proto.CompactTextString(m) }
func (*RefundPayerData) ProtoMessage()    {}
func (*RefundPayerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{40}
}
func (m *RefundPayerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundPayerData.Unmarshal(m, b)
}
func (m *RefundPayerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundPayerData.Marshal(b, m, deterministic)
}
func (dst *RefundPayerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundPayerData.Merge(dst, src)
}
func (m *RefundPayerData) XXX_Size() int {
	return xxx_messageInfo_RefundPayerData.Size(m)
}
func (m *RefundPayerData) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundPayerData.DiscardUnknown(m)
}

var xxx_messageInfo_RefundPayerData proto.InternalMessageInfo

func (m *RefundPayerData) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *RefundPayerData) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *RefundPayerData) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type RefundOrder struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *RefundOrder) Reset()         { *m = RefundOrder{} }
func (m *RefundOrder) String() string { return proto.CompactTextString(m) }
func (*RefundOrder) ProtoMessage()    {}
func (*RefundOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{41}
}
func (m *RefundOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundOrder.Unmarshal(m, b)
}
func (m *RefundOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundOrder.Marshal(b, m, deterministic)
}
func (dst *RefundOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundOrder.Merge(dst, src)
}
func (m *RefundOrder) XXX_Size() int {
	return xxx_messageInfo_RefundOrder.Size(m)
}
func (m *RefundOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundOrder.DiscardUnknown(m)
}

var xxx_messageInfo_RefundOrder proto.InternalMessageInfo

func (m *RefundOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RefundOrder) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type Refund struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OriginalOrder        *RefundOrder         `protobuf:"bytes,2,opt,name=original_order,json=originalOrder,proto3" json:"original_order,omitempty"`
	ExternalId           string               `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Amount               float64              `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatorId            string               `protobuf:"bytes,5,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	Reason               string               `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Currency             string               `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	Status               int32                `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PayerData            *RefundPayerData     `protobuf:"bytes,11,opt,name=payer_data,json=payerData,proto3" json:"payer_data,omitempty"`
	SalesTax             float32              `protobuf:"fixed32,12,opt,name=sales_tax,json=salesTax,proto3" json:"sales_tax,omitempty"`
	IsChargeback         bool                 `protobuf:"varint,13,opt,name=is_chargeback,json=isChargeback,proto3" json:"is_chargeback,omitempty"`
	CreatedOrderId       string               `protobuf:"bytes,14,opt,name=created_order_id,json=createdOrderId,proto3" json:"created_order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Refund) Reset()         { *m = Refund{} }
func (m *Refund) String() string { return proto.CompactTextString(m) }
func (*Refund) ProtoMessage()    {}
func (*Refund) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{42}
}
func (m *Refund) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Refund.Unmarshal(m, b)
}
func (m *Refund) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Refund.Marshal(b, m, deterministic)
}
func (dst *Refund) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Refund.Merge(dst, src)
}
func (m *Refund) XXX_Size() int {
	return xxx_messageInfo_Refund.Size(m)
}
func (m *Refund) XXX_DiscardUnknown() {
	xxx_messageInfo_Refund.DiscardUnknown(m)
}

var xxx_messageInfo_Refund proto.InternalMessageInfo

func (m *Refund) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Refund) GetOriginalOrder() *RefundOrder {
	if m != nil {
		return m.OriginalOrder
	}
	return nil
}

func (m *Refund) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Refund) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Refund) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

func (m *Refund) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Refund) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Refund) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Refund) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Refund) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Refund) GetPayerData() *RefundPayerData {
	if m != nil {
		return m.PayerData
	}
	return nil
}

func (m *Refund) GetSalesTax() float32 {
	if m != nil {
		return m.SalesTax
	}
	return 0
}

func (m *Refund) GetIsChargeback() bool {
	if m != nil {
		return m.IsChargeback
	}
	return false
}

func (m *Refund) GetCreatedOrderId() string {
	if m != nil {
		return m.CreatedOrderId
	}
	return ""
}

type MerchantPaymentMethodHistory struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty" validate:"required,hexadecimal,len=24"`
	// @inject_tag: validate:"required"
	PaymentMethod *MerchantPaymentMethod `protobuf:"bytes,3,opt,name=paymentMethod,proto3" json:"paymentMethod,omitempty" validate:"required"`
	// @inject_tag: json:"created_at" validate:"required"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at" validate:"required"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	UserId               string   `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" validate:"required,hexadecimal,len=24"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantPaymentMethodHistory) Reset()         { *m = MerchantPaymentMethodHistory{} }
func (m *MerchantPaymentMethodHistory) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodHistory) ProtoMessage()    {}
func (*MerchantPaymentMethodHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{43}
}
func (m *MerchantPaymentMethodHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodHistory.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodHistory.Marshal(b, m, deterministic)
}
func (dst *MerchantPaymentMethodHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodHistory.Merge(dst, src)
}
func (m *MerchantPaymentMethodHistory) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodHistory.Size(m)
}
func (m *MerchantPaymentMethodHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodHistory.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodHistory proto.InternalMessageInfo

func (m *MerchantPaymentMethodHistory) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MerchantPaymentMethodHistory) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *MerchantPaymentMethodHistory) GetPaymentMethod() *MerchantPaymentMethod {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *MerchantPaymentMethodHistory) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *MerchantPaymentMethodHistory) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type CustomerIdentity struct {
	MerchantId           string               `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	ProjectId            string               `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Type                 string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Value                string               `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Verified             bool                 `protobuf:"varint,5,opt,name=verified,proto3" json:"verified,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CustomerIdentity) Reset()         { *m = CustomerIdentity{} }
func (m *CustomerIdentity) String() string { return proto.CompactTextString(m) }
func (*CustomerIdentity) ProtoMessage()    {}
func (*CustomerIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{44}
}
func (m *CustomerIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerIdentity.Unmarshal(m, b)
}
func (m *CustomerIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerIdentity.Marshal(b, m, deterministic)
}
func (dst *CustomerIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerIdentity.Merge(dst, src)
}
func (m *CustomerIdentity) XXX_Size() int {
	return xxx_messageInfo_CustomerIdentity.Size(m)
}
func (m *CustomerIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerIdentity proto.InternalMessageInfo

func (m *CustomerIdentity) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *CustomerIdentity) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *CustomerIdentity) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CustomerIdentity) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CustomerIdentity) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *CustomerIdentity) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type CustomerIpHistory struct {
	Ip                   []byte               `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CustomerIpHistory) Reset()         { *m = CustomerIpHistory{} }
func (m *CustomerIpHistory) String() string { return proto.CompactTextString(m) }
func (*CustomerIpHistory) ProtoMessage()    {}
func (*CustomerIpHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{45}
}
func (m *CustomerIpHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerIpHistory.Unmarshal(m, b)
}
func (m *CustomerIpHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerIpHistory.Marshal(b, m, deterministic)
}
func (dst *CustomerIpHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerIpHistory.Merge(dst, src)
}
func (m *CustomerIpHistory) XXX_Size() int {
	return xxx_messageInfo_CustomerIpHistory.Size(m)
}
func (m *CustomerIpHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerIpHistory.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerIpHistory proto.InternalMessageInfo

func (m *CustomerIpHistory) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *CustomerIpHistory) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type CustomerAddressHistory struct {
	Country              string               `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	City                 string               `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	PostalCode           string               `protobuf:"bytes,3,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	State                string               `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CustomerAddressHistory) Reset()         { *m = CustomerAddressHistory{} }
func (m *CustomerAddressHistory) String() string { return proto.CompactTextString(m) }
func (*CustomerAddressHistory) ProtoMessage()    {}
func (*CustomerAddressHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{46}
}
func (m *CustomerAddressHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerAddressHistory.Unmarshal(m, b)
}
func (m *CustomerAddressHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerAddressHistory.Marshal(b, m, deterministic)
}
func (dst *CustomerAddressHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerAddressHistory.Merge(dst, src)
}
func (m *CustomerAddressHistory) XXX_Size() int {
	return xxx_messageInfo_CustomerAddressHistory.Size(m)
}
func (m *CustomerAddressHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerAddressHistory.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerAddressHistory proto.InternalMessageInfo

func (m *CustomerAddressHistory) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *CustomerAddressHistory) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *CustomerAddressHistory) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *CustomerAddressHistory) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *CustomerAddressHistory) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type CustomerStringValueHistory struct {
	Value                string               `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CustomerStringValueHistory) Reset()         { *m = CustomerStringValueHistory{} }
func (m *CustomerStringValueHistory) String() string { return proto.CompactTextString(m) }
func (*CustomerStringValueHistory) ProtoMessage()    {}
func (*CustomerStringValueHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{47}
}
func (m *CustomerStringValueHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerStringValueHistory.Unmarshal(m, b)
}
func (m *CustomerStringValueHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerStringValueHistory.Marshal(b, m, deterministic)
}
func (dst *CustomerStringValueHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerStringValueHistory.Merge(dst, src)
}
func (m *CustomerStringValueHistory) XXX_Size() int {
	return xxx_messageInfo_CustomerStringValueHistory.Size(m)
}
func (m *CustomerStringValueHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerStringValueHistory.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerStringValueHistory proto.InternalMessageInfo

func (m *CustomerStringValueHistory) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CustomerStringValueHistory) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type Customer struct {
	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TechEmail      string `protobuf:"bytes,2,opt,name=tech_email,json=techEmail,proto3" json:"tech_email,omitempty"`
	ExternalId     string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Email          string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	EmailVerified  bool   `protobuf:"varint,5,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Phone          string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	PhoneVerified  bool   `protobuf:"varint,7,opt,name=phone_verified,json=phoneVerified,proto3" json:"phone_verified,omitempty"`
	Name           string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Ip             []byte `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip,omitempty"`
	Locale         string `protobuf:"bytes,10,opt,name=locale,proto3" json:"locale,omitempty"`
	AcceptLanguage string `protobuf:"bytes,11,opt,name=accept_language,json=acceptLanguage,proto3" json:"accept_language,omitempty"`
	// @inject_tag: json:"-"
	UserAgent string               `protobuf:"bytes,12,opt,name=user_agent,json=userAgent,proto3" json:"-"`
	Address   *OrderBillingAddress `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	Identity  []*CustomerIdentity  `protobuf:"bytes,14,rep,name=identity,proto3" json:"identity,omitempty"`
	// @inject_tag: json:"-"
	IpHistory []*CustomerIpHistory `protobuf:"bytes,15,rep,name=ip_history,json=ipHistory,proto3" json:"-"`
	// @inject_tag: json:"-"
	AddressHistory []*CustomerAddressHistory `protobuf:"bytes,16,rep,name=address_history,json=addressHistory,proto3" json:"-"`
	// @inject_tag: json:"-"
	LocaleHistory []*CustomerStringValueHistory `protobuf:"bytes,17,rep,name=locale_history,json=localeHistory,proto3" json:"-"`
	// @inject_tag: json:"-"
	AcceptLanguageHistory []*CustomerStringValueHistory `protobuf:"bytes,18,rep,name=accept_language_history,json=acceptLanguageHistory,proto3" json:"-"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,19,rep,name=metadata,proto3" json:"metadata" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"-"`
	// @inject_tag: json:"-"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"-"`
	// @inject_tag: json:"notify_sale" bson:"notify_sale"
	NotifySale bool `protobuf:"varint,22,opt,name=notify_sale,json=notifySale,proto3" json:"notify_sale" bson:"notify_sale"`
	// @inject_tag: json:"notify_sale_email" bson:"notify_sale_email"
	NotifySaleEmail string `protobuf:"bytes,23,opt,name=notify_sale_email,json=notifySaleEmail,proto3" json:"notify_sale_email" bson:"notify_sale_email"`
	// @inject_tag: json:"notify_new_region" bson:"notify_new_region"
	NotifyNewRegion bool `protobuf:"varint,24,opt,name=notify_new_region,json=notifyNewRegion,proto3" json:"notify_new_region" bson:"notify_new_region"`
	// @inject_tag: json:"notify_new_region_email" bson:"notify_new_region_email"
	NotifyNewRegionEmail string   `protobuf:"bytes,25,opt,name=notify_new_region_email,json=notifyNewRegionEmail,proto3" json:"notify_new_region_email" bson:"notify_new_region_email"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{48}
}
func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (dst *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(dst, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Customer) GetTechEmail() string {
	if m != nil {
		return m.TechEmail
	}
	return ""
}

func (m *Customer) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *Customer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Customer) GetPhoneVerified() bool {
	if m != nil {
		return m.PhoneVerified
	}
	return false
}

func (m *Customer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Customer) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Customer) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *Customer) GetAcceptLanguage() string {
	if m != nil {
		return m.AcceptLanguage
	}
	return ""
}

func (m *Customer) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *Customer) GetAddress() *OrderBillingAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Customer) GetIdentity() []*CustomerIdentity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *Customer) GetIpHistory() []*CustomerIpHistory {
	if m != nil {
		return m.IpHistory
	}
	return nil
}

func (m *Customer) GetAddressHistory() []*CustomerAddressHistory {
	if m != nil {
		return m.AddressHistory
	}
	return nil
}

func (m *Customer) GetLocaleHistory() []*CustomerStringValueHistory {
	if m != nil {
		return m.LocaleHistory
	}
	return nil
}

func (m *Customer) GetAcceptLanguageHistory() []*CustomerStringValueHistory {
	if m != nil {
		return m.AcceptLanguageHistory
	}
	return nil
}

func (m *Customer) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Customer) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Customer) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Customer) GetNotifySale() bool {
	if m != nil {
		return m.NotifySale
	}
	return false
}

func (m *Customer) GetNotifySaleEmail() string {
	if m != nil {
		return m.NotifySaleEmail
	}
	return ""
}

func (m *Customer) GetNotifyNewRegion() bool {
	if m != nil {
		return m.NotifyNewRegion
	}
	return false
}

func (m *Customer) GetNotifyNewRegionEmail() string {
	if m != nil {
		return m.NotifyNewRegionEmail
	}
	return ""
}

type TokenUserEmailValue struct {
	// @inject_tag: validate:"omitempty,email"
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" validate:"omitempty,email"`
	Verified             bool     `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *TokenUserEmailValue) Reset()         { *m = TokenUserEmailValue{} }
func (m *TokenUserEmailValue) String() string { return proto.CompactTextString(m) }
func (*TokenUserEmailValue) ProtoMessage()    {}
func (*TokenUserEmailValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{49}
}
func (m *TokenUserEmailValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUserEmailValue.Unmarshal(m, b)
}
func (m *TokenUserEmailValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUserEmailValue.Marshal(b, m, deterministic)
}
func (dst *TokenUserEmailValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUserEmailValue.Merge(dst, src)
}
func (m *TokenUserEmailValue) XXX_Size() int {
	return xxx_messageInfo_TokenUserEmailValue.Size(m)
}
func (m *TokenUserEmailValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUserEmailValue.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUserEmailValue proto.InternalMessageInfo

func (m *TokenUserEmailValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TokenUserEmailValue) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

type TokenUserPhoneValue struct {
	// @inject_tag: validate:"omitempty,phone"
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" validate:"omitempty,phone"`
	Verified             bool     `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *TokenUserPhoneValue) Reset()         { *m = TokenUserPhoneValue{} }
func (m *TokenUserPhoneValue) String() string { return proto.CompactTextString(m) }
func (*TokenUserPhoneValue) ProtoMessage()    {}
func (*TokenUserPhoneValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{50}
}
func (m *TokenUserPhoneValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUserPhoneValue.Unmarshal(m, b)
}
func (m *TokenUserPhoneValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUserPhoneValue.Marshal(b, m, deterministic)
}
func (dst *TokenUserPhoneValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUserPhoneValue.Merge(dst, src)
}
func (m *TokenUserPhoneValue) XXX_Size() int {
	return xxx_messageInfo_TokenUserPhoneValue.Size(m)
}
func (m *TokenUserPhoneValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUserPhoneValue.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUserPhoneValue proto.InternalMessageInfo

func (m *TokenUserPhoneValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TokenUserPhoneValue) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

type TokenUserIpValue struct {
	// @inject_tag: validate:"omitempty,ip"
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" validate:"omitempty,ip"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *TokenUserIpValue) Reset()         { *m = TokenUserIpValue{} }
func (m *TokenUserIpValue) String() string { return proto.CompactTextString(m) }
func (*TokenUserIpValue) ProtoMessage()    {}
func (*TokenUserIpValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{51}
}
func (m *TokenUserIpValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUserIpValue.Unmarshal(m, b)
}
func (m *TokenUserIpValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUserIpValue.Marshal(b, m, deterministic)
}
func (dst *TokenUserIpValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUserIpValue.Merge(dst, src)
}
func (m *TokenUserIpValue) XXX_Size() int {
	return xxx_messageInfo_TokenUserIpValue.Size(m)
}
func (m *TokenUserIpValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUserIpValue.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUserIpValue proto.InternalMessageInfo

func (m *TokenUserIpValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TokenUserLocaleValue struct {
	// @inject_tag: validate:"omitempty,alpha,len=2"
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" validate:"omitempty,alpha,len=2"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *TokenUserLocaleValue) Reset()         { *m = TokenUserLocaleValue{} }
func (m *TokenUserLocaleValue) String() string { return proto.CompactTextString(m) }
func (*TokenUserLocaleValue) ProtoMessage()    {}
func (*TokenUserLocaleValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{52}
}
func (m *TokenUserLocaleValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUserLocaleValue.Unmarshal(m, b)
}
func (m *TokenUserLocaleValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUserLocaleValue.Marshal(b, m, deterministic)
}
func (dst *TokenUserLocaleValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUserLocaleValue.Merge(dst, src)
}
func (m *TokenUserLocaleValue) XXX_Size() int {
	return xxx_messageInfo_TokenUserLocaleValue.Size(m)
}
func (m *TokenUserLocaleValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUserLocaleValue.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUserLocaleValue proto.InternalMessageInfo

func (m *TokenUserLocaleValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TokenUserValue struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *TokenUserValue) Reset()         { *m = TokenUserValue{} }
func (m *TokenUserValue) String() string { return proto.CompactTextString(m) }
func (*TokenUserValue) ProtoMessage()    {}
func (*TokenUserValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{53}
}
func (m *TokenUserValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUserValue.Unmarshal(m, b)
}
func (m *TokenUserValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUserValue.Marshal(b, m, deterministic)
}
func (dst *TokenUserValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUserValue.Merge(dst, src)
}
func (m *TokenUserValue) XXX_Size() int {
	return xxx_messageInfo_TokenUserValue.Size(m)
}
func (m *TokenUserValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUserValue.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUserValue proto.InternalMessageInfo

func (m *TokenUserValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TokenUser struct {
	Id       string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email    *TokenUserEmailValue  `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone    *TokenUserPhoneValue  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Name     *TokenUserValue       `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Ip       *TokenUserIpValue     `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
	Locale   *TokenUserLocaleValue `protobuf:"bytes,8,opt,name=locale,proto3" json:"locale,omitempty"`
	Address  *OrderBillingAddress  `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	Metadata map[string]string     `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	UserAgent string `protobuf:"bytes,11,opt,name=user_agent,json=userAgent,proto3" json:"-"`
	// @inject_tag: json:"-"
	AcceptLanguage       string   `protobuf:"bytes,12,opt,name=accept_language,json=acceptLanguage,proto3" json:"-"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *TokenUser) Reset()         { *m = TokenUser{} }
func (m *TokenUser) String() string { return proto.CompactTextString(m) }
func (*TokenUser) ProtoMessage()    {}
func (*TokenUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{54}
}
func (m *TokenUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUser.Unmarshal(m, b)
}
func (m *TokenUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUser.Marshal(b, m, deterministic)
}
func (dst *TokenUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUser.Merge(dst, src)
}
func (m *TokenUser) XXX_Size() int {
	return xxx_messageInfo_TokenUser.Size(m)
}
func (m *TokenUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUser.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUser proto.InternalMessageInfo

func (m *TokenUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TokenUser) GetEmail() *TokenUserEmailValue {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *TokenUser) GetPhone() *TokenUserPhoneValue {
	if m != nil {
		return m.Phone
	}
	return nil
}

func (m *TokenUser) GetName() *TokenUserValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TokenUser) GetIp() *TokenUserIpValue {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *TokenUser) GetLocale() *TokenUserLocaleValue {
	if m != nil {
		return m.Locale
	}
	return nil
}

func (m *TokenUser) GetAddress() *OrderBillingAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *TokenUser) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *TokenUser) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *TokenUser) GetAcceptLanguage() string {
	if m != nil {
		return m.AcceptLanguage
	}
	return ""
}

type TokenSettingsReturnUrl struct {
	// @inject_tag: validate:"omitempty,url"
	Success string `protobuf:"bytes,1,opt,name=success,proto3" json:"success,omitempty" validate:"omitempty,url"`
	// @inject_tag: validate:"omitempty,url"
	Fail                 string   `protobuf:"bytes,2,opt,name=fail,proto3" json:"fail,omitempty" validate:"omitempty,url"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *TokenSettingsReturnUrl) Reset()         { *m = TokenSettingsReturnUrl{} }
func (m *TokenSettingsReturnUrl) String() string { return proto.CompactTextString(m) }
func (*TokenSettingsReturnUrl) ProtoMessage()    {}
func (*TokenSettingsReturnUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{55}
}
func (m *TokenSettingsReturnUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenSettingsReturnUrl.Unmarshal(m, b)
}
func (m *TokenSettingsReturnUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenSettingsReturnUrl.Marshal(b, m, deterministic)
}
func (dst *TokenSettingsReturnUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenSettingsReturnUrl.Merge(dst, src)
}
func (m *TokenSettingsReturnUrl) XXX_Size() int {
	return xxx_messageInfo_TokenSettingsReturnUrl.Size(m)
}
func (m *TokenSettingsReturnUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenSettingsReturnUrl.DiscardUnknown(m)
}

var xxx_messageInfo_TokenSettingsReturnUrl proto.InternalMessageInfo

func (m *TokenSettingsReturnUrl) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

func (m *TokenSettingsReturnUrl) GetFail() string {
	if m != nil {
		return m.Fail
	}
	return ""
}

type TokenSettingsItem struct {
	// @inject_tag: validate:"required"
	Sku string `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty" validate:"required"`
	// @inject_tag: validate:"required,numeric,gt=0"
	Amount float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty" validate:"required,numeric,gt=0"`
	// @inject_tag: validate:"required,alpha,len=3"
	Currency             string   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty" validate:"required,alpha,len=3"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *TokenSettingsItem) Reset()         { *m = TokenSettingsItem{} }
func (m *TokenSettingsItem) String() string { return proto.CompactTextString(m) }
func (*TokenSettingsItem) ProtoMessage()    {}
func (*TokenSettingsItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{56}
}
func (m *TokenSettingsItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenSettingsItem.Unmarshal(m, b)
}
func (m *TokenSettingsItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenSettingsItem.Marshal(b, m, deterministic)
}
func (dst *TokenSettingsItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenSettingsItem.Merge(dst, src)
}
func (m *TokenSettingsItem) XXX_Size() int {
	return xxx_messageInfo_TokenSettingsItem.Size(m)
}
func (m *TokenSettingsItem) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenSettingsItem.DiscardUnknown(m)
}

var xxx_messageInfo_TokenSettingsItem proto.InternalMessageInfo

func (m *TokenSettingsItem) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *TokenSettingsItem) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TokenSettingsItem) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type TokenSettings struct {
	// @inject_tag: json:"project_id" validate:"required,hexadecimal,len=24"
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"return_url"
	ReturnUrl *TokenSettingsReturnUrl `protobuf:"bytes,3,opt,name=return_url,json=returnUrl,proto3" json:"return_url"`
	// @inject_tag: json:"currency" validate:"omitempty,alpha,len=3"
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency" validate:"omitempty,alpha,len=3"`
	// @inject_tag: json:"amount" validate:"omitempty,numeric,gt=0"
	Amount float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount" validate:"omitempty,numeric,gt=0"`
	// @inject_tag: json:"payment_method"
	PaymentMethod string `protobuf:"bytes,6,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method"`
	// @inject_tag: json:"items"
	Items []*TokenSettingsItem `protobuf:"bytes,7,rep,name=items,proto3" json:"items"`
	// @inject_tag: json:"description"
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description"`
	// @inject_tag: json:"products_ids"
	ProductsIds []string `protobuf:"bytes,9,rep,name=products_ids,json=productsIds,proto3" json:"products_ids"`
	// @inject_tag: json:"metadata"
	Metadata             map[string]string `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *TokenSettings) Reset()         { *m = TokenSettings{} }
func (m *TokenSettings) String() string { return proto.CompactTextString(m) }
func (*TokenSettings) ProtoMessage()    {}
func (*TokenSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{57}
}
func (m *TokenSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenSettings.Unmarshal(m, b)
}
func (m *TokenSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenSettings.Marshal(b, m, deterministic)
}
func (dst *TokenSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenSettings.Merge(dst, src)
}
func (m *TokenSettings) XXX_Size() int {
	return xxx_messageInfo_TokenSettings.Size(m)
}
func (m *TokenSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TokenSettings proto.InternalMessageInfo

func (m *TokenSettings) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *TokenSettings) GetReturnUrl() *TokenSettingsReturnUrl {
	if m != nil {
		return m.ReturnUrl
	}
	return nil
}

func (m *TokenSettings) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TokenSettings) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TokenSettings) GetPaymentMethod() string {
	if m != nil {
		return m.PaymentMethod
	}
	return ""
}

func (m *TokenSettings) GetItems() []*TokenSettingsItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TokenSettings) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TokenSettings) GetProductsIds() []string {
	if m != nil {
		return m.ProductsIds
	}
	return nil
}

func (m *TokenSettings) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type OrderIssuer struct {
	// @inject_tag: json:"url"
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url"`
	// @inject_tag: json:"embedded"
	Embedded             bool     `protobuf:"varint,2,opt,name=embedded,proto3" json:"embedded"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderIssuer) Reset()         { *m = OrderIssuer{} }
func (m *OrderIssuer) String() string { return proto.CompactTextString(m) }
func (*OrderIssuer) ProtoMessage()    {}
func (*OrderIssuer) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{58}
}
func (m *OrderIssuer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderIssuer.Unmarshal(m, b)
}
func (m *OrderIssuer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderIssuer.Marshal(b, m, deterministic)
}
func (dst *OrderIssuer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderIssuer.Merge(dst, src)
}
func (m *OrderIssuer) XXX_Size() int {
	return xxx_messageInfo_OrderIssuer.Size(m)
}
func (m *OrderIssuer) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderIssuer.DiscardUnknown(m)
}

var xxx_messageInfo_OrderIssuer proto.InternalMessageInfo

func (m *OrderIssuer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *OrderIssuer) GetEmbedded() bool {
	if m != nil {
		return m.Embedded
	}
	return false
}

type OrderNotificationRefund struct {
	// @inject_tag: validate:"required,numeric,gt=0" json:"amount"
	Amount float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount" validate:"required,numeric,gt=0"`
	// @inject_tag: validate:"required,alpha,len=3" json:"currency"
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"reason"
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason"`
	// @inject_tag: json:"code"
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code"`
	// @inject_tag: json:"receipt_number"
	ReceiptNumber string `protobuf:"bytes,5,opt,name=receipt_number,json=receiptNumber,proto3" json:"receipt_number"`
	// @inject_tag: json:"receipt_url"
	ReceiptUrl           string   `protobuf:"bytes,6,opt,name=receipt_url,json=receiptUrl,proto3" json:"receipt_url"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderNotificationRefund) Reset()         { *m = OrderNotificationRefund{} }
func (m *OrderNotificationRefund) String() string { return proto.CompactTextString(m) }
func (*OrderNotificationRefund) ProtoMessage()    {}
func (*OrderNotificationRefund) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{59}
}
func (m *OrderNotificationRefund) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderNotificationRefund.Unmarshal(m, b)
}
func (m *OrderNotificationRefund) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderNotificationRefund.Marshal(b, m, deterministic)
}
func (dst *OrderNotificationRefund) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderNotificationRefund.Merge(dst, src)
}
func (m *OrderNotificationRefund) XXX_Size() int {
	return xxx_messageInfo_OrderNotificationRefund.Size(m)
}
func (m *OrderNotificationRefund) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderNotificationRefund.DiscardUnknown(m)
}

var xxx_messageInfo_OrderNotificationRefund proto.InternalMessageInfo

func (m *OrderNotificationRefund) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderNotificationRefund) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderNotificationRefund) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *OrderNotificationRefund) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *OrderNotificationRefund) GetReceiptNumber() string {
	if m != nil {
		return m.ReceiptNumber
	}
	return ""
}

func (m *OrderNotificationRefund) GetReceiptUrl() string {
	if m != nil {
		return m.ReceiptUrl
	}
	return ""
}

type GetCountryRequest struct {
	// @inject_tag: validate:"required,alpha,len=2"
	IsoCode              string   `protobuf:"bytes,1,opt,name=iso_code,json=isoCode,proto3" json:"iso_code,omitempty" validate:"required,alpha,len=2"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *GetCountryRequest) Reset()         { *m = GetCountryRequest{} }
func (m *GetCountryRequest) String() string { return proto.CompactTextString(m) }
func (*GetCountryRequest) ProtoMessage()    {}
func (*GetCountryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{60}
}
func (m *GetCountryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCountryRequest.Unmarshal(m, b)
}
func (m *GetCountryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCountryRequest.Marshal(b, m, deterministic)
}
func (dst *GetCountryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCountryRequest.Merge(dst, src)
}
func (m *GetCountryRequest) XXX_Size() int {
	return xxx_messageInfo_GetCountryRequest.Size(m)
}
func (m *GetCountryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCountryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCountryRequest proto.InternalMessageInfo

func (m *GetCountryRequest) GetIsoCode() string {
	if m != nil {
		return m.IsoCode
	}
	return ""
}

type CountryVatThreshold struct {
	// @inject_tag: json:"year" bson:"year" validate:"numeric,gte=0"
	Year float64 `protobuf:"fixed64,1,opt,name=year,proto3" json:"year" bson:"year" validate:"numeric,gte=0"`
	// @inject_tag: json:"world" bson:"world" validate:"numeric,gte=0"
	World                float64  `protobuf:"fixed64,2,opt,name=world,proto3" json:"world" bson:"world" validate:"numeric,gte=0"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CountryVatThreshold) Reset()         { *m = CountryVatThreshold{} }
func (m *CountryVatThreshold) String() string { return proto.CompactTextString(m) }
func (*CountryVatThreshold) ProtoMessage()    {}
func (*CountryVatThreshold) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{61}
}
func (m *CountryVatThreshold) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryVatThreshold.Unmarshal(m, b)
}
func (m *CountryVatThreshold) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryVatThreshold.Marshal(b, m, deterministic)
}
func (dst *CountryVatThreshold) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryVatThreshold.Merge(dst, src)
}
func (m *CountryVatThreshold) XXX_Size() int {
	return xxx_messageInfo_CountryVatThreshold.Size(m)
}
func (m *CountryVatThreshold) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryVatThreshold.DiscardUnknown(m)
}

var xxx_messageInfo_CountryVatThreshold proto.InternalMessageInfo

func (m *CountryVatThreshold) GetYear() float64 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *CountryVatThreshold) GetWorld() float64 {
	if m != nil {
		return m.World
	}
	return 0
}

type Country struct {
	// @inject_tag: json:"-" bson:"_id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"-" bson:"_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"iso_code_a2" bson:"iso_code_a2" validate:"required,alpha,len=2"
	IsoCodeA2 string `protobuf:"bytes,2,opt,name=iso_code_a2,json=isoCodeA2,proto3" json:"iso_code_a2" bson:"iso_code_a2" validate:"required,alpha,len=2"`
	// @inject_tag: json:"region" bson:"region" validate:"required"
	Region string `protobuf:"bytes,3,opt,name=region,proto3" json:"region" bson:"region" validate:"required"`
	// @inject_tag: json:"currency" bson:"currency" validate:"required,alpha,len=3"
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency" bson:"currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"payments_allowed" bson:"payments_allowed"
	PaymentsAllowed bool `protobuf:"varint,5,opt,name=payments_allowed,json=paymentsAllowed,proto3" json:"payments_allowed" bson:"payments_allowed"`
	// @inject_tag: json:"change_allowed" bson:"change_allowed"
	ChangeAllowed bool `protobuf:"varint,6,opt,name=change_allowed,json=changeAllowed,proto3" json:"change_allowed" bson:"change_allowed"`
	// @inject_tag: json:"vat_enabled" bson:"vat_enabled"
	VatEnabled bool `protobuf:"varint,7,opt,name=vat_enabled,json=vatEnabled,proto3" json:"vat_enabled" bson:"vat_enabled"`
	// @inject_tag: json:"vat_currency" bson:"vat_currency" validate:"omitempty,alpha,len=3"
	VatCurrency string `protobuf:"bytes,8,opt,name=vat_currency,json=vatCurrency,proto3" json:"vat_currency" bson:"vat_currency" validate:"omitempty,alpha,len=3"`
	// @inject_tag: json:"price_group_id" bson:"price_group_id" validate:"required,hexadecimal,len=24"
	PriceGroupId string `protobuf:"bytes,9,opt,name=price_group_id,json=priceGroupId,proto3" json:"price_group_id" bson:"price_group_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"vat_threshold" bson:"vat_threshold" validate:"required,dive"
	VatThreshold *CountryVatThreshold `protobuf:"bytes,10,opt,name=vat_threshold,json=vatThreshold,proto3" json:"vat_threshold" bson:"vat_threshold" validate:"required,dive"`
	// @inject_tag: json:"vat_period_month" bson:"vat_period_month" validate:"numeric,gte=0,lte=12"
	VatPeriodMonth int32 `protobuf:"varint,11,opt,name=vat_period_month,json=vatPeriodMonth,proto3" json:"vat_period_month" bson:"vat_period_month" validate:"numeric,gte=0,lte=12"`
	// @inject_tag: json:"vat_deadline_days" bson:"vat_deadline_days" validate:"numeric,gte=0"
	VatDeadlineDays int32 `protobuf:"varint,12,opt,name=vat_deadline_days,json=vatDeadlineDays,proto3" json:"vat_deadline_days" bson:"vat_deadline_days" validate:"numeric,gte=0"`
	// @inject_tag: json:"vat_store_years" bson:"vat_store_years" validate:"numeric,gte=0"
	VatStoreYears int32 `protobuf:"varint,13,opt,name=vat_store_years,json=vatStoreYears,proto3" json:"vat_store_years" bson:"vat_store_years" validate:"numeric,gte=0"`
	// @inject_tag: json:"vat_currency_rates_policy" bson:"vat_currency_rates_policy" validate:"omitempty,oneof=on-day last-day mid-month"
	VatCurrencyRatesPolicy string `protobuf:"bytes,14,opt,name=vat_currency_rates_policy,json=vatCurrencyRatesPolicy,proto3" json:"vat_currency_rates_policy" bson:"vat_currency_rates_policy" validate:"omitempty,oneof=on-day last-day mid-month"`
	// @inject_tag: json:"vat_currency_rates_source" bson:"vat_currency_rates_source" validate:"alpha"
	VatCurrencyRatesSource string `protobuf:"bytes,15,opt,name=vat_currency_rates_source,json=vatCurrencyRatesSource,proto3" json:"vat_currency_rates_source" bson:"vat_currency_rates_source" validate:"alpha"`
	// @inject_tag: json:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at" bson:"created_at"`
	// @inject_tag: json:"updated_at" bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Country) Reset()         { *m = Country{} }
func (m *Country) String() string { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()    {}
func (*Country) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{62}
}
func (m *Country) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Country.Unmarshal(m, b)
}
func (m *Country) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Country.Marshal(b, m, deterministic)
}
func (dst *Country) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Country.Merge(dst, src)
}
func (m *Country) XXX_Size() int {
	return xxx_messageInfo_Country.Size(m)
}
func (m *Country) XXX_DiscardUnknown() {
	xxx_messageInfo_Country.DiscardUnknown(m)
}

var xxx_messageInfo_Country proto.InternalMessageInfo

func (m *Country) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Country) GetIsoCodeA2() string {
	if m != nil {
		return m.IsoCodeA2
	}
	return ""
}

func (m *Country) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Country) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Country) GetPaymentsAllowed() bool {
	if m != nil {
		return m.PaymentsAllowed
	}
	return false
}

func (m *Country) GetChangeAllowed() bool {
	if m != nil {
		return m.ChangeAllowed
	}
	return false
}

func (m *Country) GetVatEnabled() bool {
	if m != nil {
		return m.VatEnabled
	}
	return false
}

func (m *Country) GetVatCurrency() string {
	if m != nil {
		return m.VatCurrency
	}
	return ""
}

func (m *Country) GetPriceGroupId() string {
	if m != nil {
		return m.PriceGroupId
	}
	return ""
}

func (m *Country) GetVatThreshold() *CountryVatThreshold {
	if m != nil {
		return m.VatThreshold
	}
	return nil
}

func (m *Country) GetVatPeriodMonth() int32 {
	if m != nil {
		return m.VatPeriodMonth
	}
	return 0
}

func (m *Country) GetVatDeadlineDays() int32 {
	if m != nil {
		return m.VatDeadlineDays
	}
	return 0
}

func (m *Country) GetVatStoreYears() int32 {
	if m != nil {
		return m.VatStoreYears
	}
	return 0
}

func (m *Country) GetVatCurrencyRatesPolicy() string {
	if m != nil {
		return m.VatCurrencyRatesPolicy
	}
	return ""
}

func (m *Country) GetVatCurrencyRatesSource() string {
	if m != nil {
		return m.VatCurrencyRatesSource
	}
	return ""
}

func (m *Country) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Country) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CountriesList struct {
	Countries            []*Country `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte     `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32      `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *CountriesList) Reset()         { *m = CountriesList{} }
func (m *CountriesList) String() string { return proto.CompactTextString(m) }
func (*CountriesList) ProtoMessage()    {}
func (*CountriesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{63}
}
func (m *CountriesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountriesList.Unmarshal(m, b)
}
func (m *CountriesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountriesList.Marshal(b, m, deterministic)
}
func (dst *CountriesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountriesList.Merge(dst, src)
}
func (m *CountriesList) XXX_Size() int {
	return xxx_messageInfo_CountriesList.Size(m)
}
func (m *CountriesList) XXX_DiscardUnknown() {
	xxx_messageInfo_CountriesList.DiscardUnknown(m)
}

var xxx_messageInfo_CountriesList proto.InternalMessageInfo

func (m *CountriesList) GetCountries() []*Country {
	if m != nil {
		return m.Countries
	}
	return nil
}

type GetPriceGroupRequest struct {
	// @inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *GetPriceGroupRequest) Reset()         { *m = GetPriceGroupRequest{} }
func (m *GetPriceGroupRequest) String() string { return proto.CompactTextString(m) }
func (*GetPriceGroupRequest) ProtoMessage()    {}
func (*GetPriceGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{64}
}
func (m *GetPriceGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPriceGroupRequest.Unmarshal(m, b)
}
func (m *GetPriceGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPriceGroupRequest.Marshal(b, m, deterministic)
}
func (dst *GetPriceGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPriceGroupRequest.Merge(dst, src)
}
func (m *GetPriceGroupRequest) XXX_Size() int {
	return xxx_messageInfo_GetPriceGroupRequest.Size(m)
}
func (m *GetPriceGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPriceGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPriceGroupRequest proto.InternalMessageInfo

func (m *GetPriceGroupRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PriceGroup struct {
	// @inject_tag: json:"id" bson:"_id" validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"currency" bson:"currency" validate:"required,alpha,len=3"
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency" bson:"currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"region" bson:"region" validate:"omitempty,alpha"
	Region string `protobuf:"bytes,3,opt,name=region,proto3" json:"region" bson:"region" validate:"omitempty,alpha"`
	// @inject_tag: validate:"required,numeric,gte=0" bson:"inflation_rate" json:"-"
	InflationRate float64 `protobuf:"fixed64,4,opt,name=inflation_rate,json=inflationRate,proto3" json:"-" validate:"required,numeric,gte=0" bson:"inflation_rate"`
	// @inject_tag: validate:"required,numeric" bson:"fraction" json:"-"
	Fraction float64 `protobuf:"fixed64,5,opt,name=fraction,proto3" json:"-" validate:"required,numeric" bson:"fraction"`
	// @inject_tag: json:"-" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"-" bson:"created_at"`
	// @inject_tag: json:"-" bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"-" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PriceGroup) Reset()         { *m = PriceGroup{} }
func (m *PriceGroup) String() string { return proto.CompactTextString(m) }
func (*PriceGroup) ProtoMessage()    {}
func (*PriceGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{65}
}
func (m *PriceGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceGroup.Unmarshal(m, b)
}
func (m *PriceGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceGroup.Marshal(b, m, deterministic)
}
func (dst *PriceGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceGroup.Merge(dst, src)
}
func (m *PriceGroup) XXX_Size() int {
	return xxx_messageInfo_PriceGroup.Size(m)
}
func (m *PriceGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceGroup.DiscardUnknown(m)
}

var xxx_messageInfo_PriceGroup proto.InternalMessageInfo

func (m *PriceGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PriceGroup) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *PriceGroup) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PriceGroup) GetInflationRate() float64 {
	if m != nil {
		return m.InflationRate
	}
	return 0
}

func (m *PriceGroup) GetFraction() float64 {
	if m != nil {
		return m.Fraction
	}
	return 0
}

func (m *PriceGroup) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PriceGroup) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type ZipCodeState struct {
	// @inject_tag: bson:"code"
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty" bson:"code"`
	// @inject_tag: bson:"name"
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *ZipCodeState) Reset()         { *m = ZipCodeState{} }
func (m *ZipCodeState) String() string { return proto.CompactTextString(m) }
func (*ZipCodeState) ProtoMessage()    {}
func (*ZipCodeState) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{66}
}
func (m *ZipCodeState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZipCodeState.Unmarshal(m, b)
}
func (m *ZipCodeState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZipCodeState.Marshal(b, m, deterministic)
}
func (dst *ZipCodeState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZipCodeState.Merge(dst, src)
}
func (m *ZipCodeState) XXX_Size() int {
	return xxx_messageInfo_ZipCodeState.Size(m)
}
func (m *ZipCodeState) XXX_DiscardUnknown() {
	xxx_messageInfo_ZipCodeState.DiscardUnknown(m)
}

var xxx_messageInfo_ZipCodeState proto.InternalMessageInfo

func (m *ZipCodeState) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ZipCodeState) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ZipCode struct {
	Zip                  string               `protobuf:"bytes,1,opt,name=zip,proto3" json:"zip,omitempty"`
	Country              string               `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	City                 string               `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	State                *ZipCodeState        `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *ZipCode) Reset()         { *m = ZipCode{} }
func (m *ZipCode) String() string { return proto.CompactTextString(m) }
func (*ZipCode) ProtoMessage()    {}
func (*ZipCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{67}
}
func (m *ZipCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZipCode.Unmarshal(m, b)
}
func (m *ZipCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZipCode.Marshal(b, m, deterministic)
}
func (dst *ZipCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZipCode.Merge(dst, src)
}
func (m *ZipCode) XXX_Size() int {
	return xxx_messageInfo_ZipCode.Size(m)
}
func (m *ZipCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ZipCode.DiscardUnknown(m)
}

var xxx_messageInfo_ZipCode proto.InternalMessageInfo

func (m *ZipCode) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *ZipCode) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *ZipCode) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *ZipCode) GetState() *ZipCodeState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ZipCode) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type PaymentChannelCostSystem struct {
	// @inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"name" bson:"name" validate:"required,alpha"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" bson:"name" validate:"required,alpha"`
	// @inject_tag: json:"region" bson:"region" validate:"required"
	Region string `protobuf:"bytes,3,opt,name=region,proto3" json:"region" bson:"region" validate:"required"`
	// @inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
	Country string `protobuf:"bytes,4,opt,name=country,proto3" json:"country" bson:"country" validate:"omitempty,alpha,len=2"`
	// @inject_tag: json:"percent" bson:"percent" validate:"numeric,gte=0,lte=1"
	Percent float64 `protobuf:"fixed64,5,opt,name=percent,proto3" json:"percent" bson:"percent" validate:"numeric,gte=0,lte=1"`
	// @inject_tag: json:"fix_amount" bson:"fix_amount" validate:"numeric,gte=0"
	FixAmount float64 `protobuf:"fixed64,6,opt,name=fix_amount,json=fixAmount,proto3" json:"fix_amount" bson:"fix_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"fix_amount_currency" bson:"fix_amount_currency" validate:"required,alpha,len=3"
	FixAmountCurrency string `protobuf:"bytes,7,opt,name=fix_amount_currency,json=fixAmountCurrency,proto3" json:"fix_amount_currency" bson:"fix_amount_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at" bson:"created_at"`
	// @inject_tag: json:"updated_at" bson:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at" bson:"updated_at"`
	// @inject_tag: json:"is_active" bson:"is_active"
	IsActive             bool     `protobuf:"varint,10,opt,name=is_active,json=isActive,proto3" json:"is_active" bson:"is_active"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentChannelCostSystem) Reset()         { *m = PaymentChannelCostSystem{} }
func (m *PaymentChannelCostSystem) String() string { return proto.CompactTextString(m) }
func (*PaymentChannelCostSystem) ProtoMessage()    {}
func (*PaymentChannelCostSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{68}
}
func (m *PaymentChannelCostSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentChannelCostSystem.Unmarshal(m, b)
}
func (m *PaymentChannelCostSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentChannelCostSystem.Marshal(b, m, deterministic)
}
func (dst *PaymentChannelCostSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentChannelCostSystem.Merge(dst, src)
}
func (m *PaymentChannelCostSystem) XXX_Size() int {
	return xxx_messageInfo_PaymentChannelCostSystem.Size(m)
}
func (m *PaymentChannelCostSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentChannelCostSystem.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentChannelCostSystem proto.InternalMessageInfo

func (m *PaymentChannelCostSystem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentChannelCostSystem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentChannelCostSystem) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PaymentChannelCostSystem) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *PaymentChannelCostSystem) GetPercent() float64 {
	if m != nil {
		return m.Percent
	}
	return 0
}

func (m *PaymentChannelCostSystem) GetFixAmount() float64 {
	if m != nil {
		return m.FixAmount
	}
	return 0
}

func (m *PaymentChannelCostSystem) GetFixAmountCurrency() string {
	if m != nil {
		return m.FixAmountCurrency
	}
	return ""
}

func (m *PaymentChannelCostSystem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PaymentChannelCostSystem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *PaymentChannelCostSystem) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type PaymentChannelCostSystemRequest struct {
	// @inject_tag: json:"name" bson:"name" validate:"required,alpha"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" bson:"name" validate:"required,alpha"`
	// @inject_tag: json:"region" bson:"region" validate:"required"
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region" bson:"region" validate:"required"`
	// @inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
	Country              string   `protobuf:"bytes,3,opt,name=country,proto3" json:"country" bson:"country" validate:"omitempty,alpha,len=2"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentChannelCostSystemRequest) Reset()         { *m = PaymentChannelCostSystemRequest{} }
func (m *PaymentChannelCostSystemRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentChannelCostSystemRequest) ProtoMessage()    {}
func (*PaymentChannelCostSystemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{69}
}
func (m *PaymentChannelCostSystemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentChannelCostSystemRequest.Unmarshal(m, b)
}
func (m *PaymentChannelCostSystemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentChannelCostSystemRequest.Marshal(b, m, deterministic)
}
func (dst *PaymentChannelCostSystemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentChannelCostSystemRequest.Merge(dst, src)
}
func (m *PaymentChannelCostSystemRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentChannelCostSystemRequest.Size(m)
}
func (m *PaymentChannelCostSystemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentChannelCostSystemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentChannelCostSystemRequest proto.InternalMessageInfo

func (m *PaymentChannelCostSystemRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentChannelCostSystemRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PaymentChannelCostSystemRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type PaymentChannelCostSystemList struct {
	Items                []*PaymentChannelCostSystem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                      `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                       `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentChannelCostSystemList) Reset()         { *m = PaymentChannelCostSystemList{} }
func (m *PaymentChannelCostSystemList) String() string { return proto.CompactTextString(m) }
func (*PaymentChannelCostSystemList) ProtoMessage()    {}
func (*PaymentChannelCostSystemList) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{70}
}
func (m *PaymentChannelCostSystemList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentChannelCostSystemList.Unmarshal(m, b)
}
func (m *PaymentChannelCostSystemList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentChannelCostSystemList.Marshal(b, m, deterministic)
}
func (dst *PaymentChannelCostSystemList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentChannelCostSystemList.Merge(dst, src)
}
func (m *PaymentChannelCostSystemList) XXX_Size() int {
	return xxx_messageInfo_PaymentChannelCostSystemList.Size(m)
}
func (m *PaymentChannelCostSystemList) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentChannelCostSystemList.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentChannelCostSystemList proto.InternalMessageInfo

func (m *PaymentChannelCostSystemList) GetItems() []*PaymentChannelCostSystem {
	if m != nil {
		return m.Items
	}
	return nil
}

type PaymentChannelCostMerchant struct {
	// @inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"name" bson:"name" validate:"required,alpha"
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" bson:"name" validate:"required,alpha"`
	// @inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
	PayoutCurrency string `protobuf:"bytes,4,opt,name=payout_currency,json=payoutCurrency,proto3" json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"min_amount" bson:"min_amount" validate:"required,numeric,gte=0"
	MinAmount float64 `protobuf:"fixed64,5,opt,name=min_amount,json=minAmount,proto3" json:"min_amount" bson:"min_amount" validate:"required,numeric,gte=0"`
	// @inject_tag: json:"region" bson:"region" validate:"required"
	Region string `protobuf:"bytes,6,opt,name=region,proto3" json:"region" bson:"region" validate:"required"`
	// @inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
	Country string `protobuf:"bytes,7,opt,name=country,proto3" json:"country" bson:"country" validate:"omitempty,alpha,len=2"`
	// @inject_tag: json:"method_percent" bson:"method_percent" validate:"numeric,gte=0,lte=11"
	MethodPercent float64 `protobuf:"fixed64,8,opt,name=method_percent,json=methodPercent,proto3" json:"method_percent" bson:"method_percent" validate:"numeric,gte=0,lte=11"`
	// @inject_tag: json:"method_fix_amount" bson:"method_fix_amount" validate:"numeric,gte=0"
	MethodFixAmount float64 `protobuf:"fixed64,9,opt,name=method_fix_amount,json=methodFixAmount,proto3" json:"method_fix_amount" bson:"method_fix_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"method_fix_amount_currency" bson:"method_fix_amount_currency" validate:"required,alpha,len=3"
	MethodFixAmountCurrency string `protobuf:"bytes,10,opt,name=method_fix_amount_currency,json=methodFixAmountCurrency,proto3" json:"method_fix_amount_currency" bson:"method_fix_amount_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"ps_percent" bson:"ps_percent" validate:"numeric,gte=0,lte=1"
	PsPercent float64 `protobuf:"fixed64,11,opt,name=ps_percent,json=psPercent,proto3" json:"ps_percent" bson:"ps_percent" validate:"numeric,gte=0,lte=1"`
	// @inject_tag: json:"ps_fixed_fee" bson:"ps_fixed_fee" validate:"numeric,gte=0"
	PsFixedFee float64 `protobuf:"fixed64,12,opt,name=ps_fixed_fee,json=psFixedFee,proto3" json:"ps_fixed_fee" bson:"ps_fixed_fee" validate:"numeric,gte=0"`
	// @inject_tag: json:"ps_fixed_fee_currency" bson:"ps_fixed_fee_currency" validate:"required,alpha,len=3"
	PsFixedFeeCurrency string `protobuf:"bytes,13,opt,name=ps_fixed_fee_currency,json=psFixedFeeCurrency,proto3" json:"ps_fixed_fee_currency" bson:"ps_fixed_fee_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at" bson:"created_at"`
	// @inject_tag: json:"updated_at" bson:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at" bson:"updated_at"`
	// @inject_tag: json:"is_active" bson:"is_active"
	IsActive             bool     `protobuf:"varint,16,opt,name=is_active,json=isActive,proto3" json:"is_active" bson:"is_active"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentChannelCostMerchant) Reset()         { *m = PaymentChannelCostMerchant{} }
func (m *PaymentChannelCostMerchant) String() string { return proto.CompactTextString(m) }
func (*PaymentChannelCostMerchant) ProtoMessage()    {}
func (*PaymentChannelCostMerchant) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{71}
}
func (m *PaymentChannelCostMerchant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentChannelCostMerchant.Unmarshal(m, b)
}
func (m *PaymentChannelCostMerchant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentChannelCostMerchant.Marshal(b, m, deterministic)
}
func (dst *PaymentChannelCostMerchant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentChannelCostMerchant.Merge(dst, src)
}
func (m *PaymentChannelCostMerchant) XXX_Size() int {
	return xxx_messageInfo_PaymentChannelCostMerchant.Size(m)
}
func (m *PaymentChannelCostMerchant) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentChannelCostMerchant.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentChannelCostMerchant proto.InternalMessageInfo

func (m *PaymentChannelCostMerchant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentChannelCostMerchant) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *PaymentChannelCostMerchant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentChannelCostMerchant) GetPayoutCurrency() string {
	if m != nil {
		return m.PayoutCurrency
	}
	return ""
}

func (m *PaymentChannelCostMerchant) GetMinAmount() float64 {
	if m != nil {
		return m.MinAmount
	}
	return 0
}

func (m *PaymentChannelCostMerchant) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PaymentChannelCostMerchant) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *PaymentChannelCostMerchant) GetMethodPercent() float64 {
	if m != nil {
		return m.MethodPercent
	}
	return 0
}

func (m *PaymentChannelCostMerchant) GetMethodFixAmount() float64 {
	if m != nil {
		return m.MethodFixAmount
	}
	return 0
}

func (m *PaymentChannelCostMerchant) GetMethodFixAmountCurrency() string {
	if m != nil {
		return m.MethodFixAmountCurrency
	}
	return ""
}

func (m *PaymentChannelCostMerchant) GetPsPercent() float64 {
	if m != nil {
		return m.PsPercent
	}
	return 0
}

func (m *PaymentChannelCostMerchant) GetPsFixedFee() float64 {
	if m != nil {
		return m.PsFixedFee
	}
	return 0
}

func (m *PaymentChannelCostMerchant) GetPsFixedFeeCurrency() string {
	if m != nil {
		return m.PsFixedFeeCurrency
	}
	return ""
}

func (m *PaymentChannelCostMerchant) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PaymentChannelCostMerchant) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *PaymentChannelCostMerchant) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type PaymentChannelCostMerchantRequest struct {
	// @inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"name" bson:"name" validate:"required,alpha"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" bson:"name" validate:"required,alpha"`
	// @inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
	PayoutCurrency string `protobuf:"bytes,3,opt,name=payout_currency,json=payoutCurrency,proto3" json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"amount" bson:"amount" validate:"required,numeric,gte=0"
	Amount float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount" bson:"amount" validate:"required,numeric,gte=0"`
	// @inject_tag: json:"region" bson:"region" validate:"required"
	Region string `protobuf:"bytes,5,opt,name=region,proto3" json:"region" bson:"region" validate:"required"`
	// @inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
	Country              string   `protobuf:"bytes,6,opt,name=country,proto3" json:"country" bson:"country" validate:"omitempty,alpha,len=2"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentChannelCostMerchantRequest) Reset()         { *m = PaymentChannelCostMerchantRequest{} }
func (m *PaymentChannelCostMerchantRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentChannelCostMerchantRequest) ProtoMessage()    {}
func (*PaymentChannelCostMerchantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{72}
}
func (m *PaymentChannelCostMerchantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentChannelCostMerchantRequest.Unmarshal(m, b)
}
func (m *PaymentChannelCostMerchantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentChannelCostMerchantRequest.Marshal(b, m, deterministic)
}
func (dst *PaymentChannelCostMerchantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentChannelCostMerchantRequest.Merge(dst, src)
}
func (m *PaymentChannelCostMerchantRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentChannelCostMerchantRequest.Size(m)
}
func (m *PaymentChannelCostMerchantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentChannelCostMerchantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentChannelCostMerchantRequest proto.InternalMessageInfo

func (m *PaymentChannelCostMerchantRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *PaymentChannelCostMerchantRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentChannelCostMerchantRequest) GetPayoutCurrency() string {
	if m != nil {
		return m.PayoutCurrency
	}
	return ""
}

func (m *PaymentChannelCostMerchantRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PaymentChannelCostMerchantRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PaymentChannelCostMerchantRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type PaymentChannelCostMerchantList struct {
	Items                []*PaymentChannelCostMerchant `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                        `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                         `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentChannelCostMerchantList) Reset()         { *m = PaymentChannelCostMerchantList{} }
func (m *PaymentChannelCostMerchantList) String() string { return proto.CompactTextString(m) }
func (*PaymentChannelCostMerchantList) ProtoMessage()    {}
func (*PaymentChannelCostMerchantList) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{73}
}
func (m *PaymentChannelCostMerchantList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentChannelCostMerchantList.Unmarshal(m, b)
}
func (m *PaymentChannelCostMerchantList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentChannelCostMerchantList.Marshal(b, m, deterministic)
}
func (dst *PaymentChannelCostMerchantList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentChannelCostMerchantList.Merge(dst, src)
}
func (m *PaymentChannelCostMerchantList) XXX_Size() int {
	return xxx_messageInfo_PaymentChannelCostMerchantList.Size(m)
}
func (m *PaymentChannelCostMerchantList) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentChannelCostMerchantList.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentChannelCostMerchantList proto.InternalMessageInfo

func (m *PaymentChannelCostMerchantList) GetItems() []*PaymentChannelCostMerchant {
	if m != nil {
		return m.Items
	}
	return nil
}

type PaymentChannelCostMerchantListRequest struct {
	// @inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
	MerchantId           string   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentChannelCostMerchantListRequest) Reset()         { *m = PaymentChannelCostMerchantListRequest{} }
func (m *PaymentChannelCostMerchantListRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentChannelCostMerchantListRequest) ProtoMessage()    {}
func (*PaymentChannelCostMerchantListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{74}
}
func (m *PaymentChannelCostMerchantListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentChannelCostMerchantListRequest.Unmarshal(m, b)
}
func (m *PaymentChannelCostMerchantListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentChannelCostMerchantListRequest.Marshal(b, m, deterministic)
}
func (dst *PaymentChannelCostMerchantListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentChannelCostMerchantListRequest.Merge(dst, src)
}
func (m *PaymentChannelCostMerchantListRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentChannelCostMerchantListRequest.Size(m)
}
func (m *PaymentChannelCostMerchantListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentChannelCostMerchantListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentChannelCostMerchantListRequest proto.InternalMessageInfo

func (m *PaymentChannelCostMerchantListRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type MoneyBackCostSystem struct {
	// @inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"name" bson:"name" validate:"required,alpha"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" bson:"name" validate:"required,alpha"`
	// @inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
	PayoutCurrency string `protobuf:"bytes,3,opt,name=payout_currency,json=payoutCurrency,proto3" json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"
	UndoReason string `protobuf:"bytes,4,opt,name=undo_reason,json=undoReason,proto3" json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"`
	// @inject_tag: json:"region" bson:"region" validate:"required"
	Region string `protobuf:"bytes,5,opt,name=region,proto3" json:"region" bson:"region" validate:"required"`
	// @inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
	Country string `protobuf:"bytes,6,opt,name=country,proto3" json:"country" bson:"country" validate:"omitempty,alpha,len=2"`
	// @inject_tag: json:"days_from" bson:"days_from" validate:"numeric,gte=0"
	DaysFrom int32 `protobuf:"varint,7,opt,name=days_from,json=daysFrom,proto3" json:"days_from" bson:"days_from" validate:"numeric,gte=0"`
	// @inject_tag: json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"
	PaymentStage int32 `protobuf:"varint,8,opt,name=payment_stage,json=paymentStage,proto3" json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"`
	// @inject_tag: json:"percent" bson:"percent" validate:"numeric,gte=0,lte=1"
	Percent float64 `protobuf:"fixed64,9,opt,name=percent,proto3" json:"percent" bson:"percent" validate:"numeric,gte=0,lte=1"`
	// @inject_tag: json:"fix_amount" bson:"fix_amount" validate:"numeric,gte=0"
	FixAmount float64 `protobuf:"fixed64,10,opt,name=fix_amount,json=fixAmount,proto3" json:"fix_amount" bson:"fix_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at" bson:"created_at"`
	// @inject_tag: json:"updated_at" bson:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at" bson:"updated_at"`
	// @inject_tag: json:"is_active" bson:"is_active"
	IsActive             bool     `protobuf:"varint,13,opt,name=is_active,json=isActive,proto3" json:"is_active" bson:"is_active"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MoneyBackCostSystem) Reset()         { *m = MoneyBackCostSystem{} }
func (m *MoneyBackCostSystem) String() string { return proto.CompactTextString(m) }
func (*MoneyBackCostSystem) ProtoMessage()    {}
func (*MoneyBackCostSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{75}
}
func (m *MoneyBackCostSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoneyBackCostSystem.Unmarshal(m, b)
}
func (m *MoneyBackCostSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoneyBackCostSystem.Marshal(b, m, deterministic)
}
func (dst *MoneyBackCostSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoneyBackCostSystem.Merge(dst, src)
}
func (m *MoneyBackCostSystem) XXX_Size() int {
	return xxx_messageInfo_MoneyBackCostSystem.Size(m)
}
func (m *MoneyBackCostSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_MoneyBackCostSystem.DiscardUnknown(m)
}

var xxx_messageInfo_MoneyBackCostSystem proto.InternalMessageInfo

func (m *MoneyBackCostSystem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MoneyBackCostSystem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MoneyBackCostSystem) GetPayoutCurrency() string {
	if m != nil {
		return m.PayoutCurrency
	}
	return ""
}

func (m *MoneyBackCostSystem) GetUndoReason() string {
	if m != nil {
		return m.UndoReason
	}
	return ""
}

func (m *MoneyBackCostSystem) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *MoneyBackCostSystem) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *MoneyBackCostSystem) GetDaysFrom() int32 {
	if m != nil {
		return m.DaysFrom
	}
	return 0
}

func (m *MoneyBackCostSystem) GetPaymentStage() int32 {
	if m != nil {
		return m.PaymentStage
	}
	return 0
}

func (m *MoneyBackCostSystem) GetPercent() float64 {
	if m != nil {
		return m.Percent
	}
	return 0
}

func (m *MoneyBackCostSystem) GetFixAmount() float64 {
	if m != nil {
		return m.FixAmount
	}
	return 0
}

func (m *MoneyBackCostSystem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *MoneyBackCostSystem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *MoneyBackCostSystem) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type MoneyBackCostSystemRequest struct {
	// @inject_tag: json:"name" bson:"name" validate:"required,alpha"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" bson:"name" validate:"required,alpha"`
	// @inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
	PayoutCurrency string `protobuf:"bytes,2,opt,name=payout_currency,json=payoutCurrency,proto3" json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"
	UndoReason string `protobuf:"bytes,3,opt,name=undo_reason,json=undoReason,proto3" json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"`
	// @inject_tag: json:"region" bson:"region" validate:"required"
	Region string `protobuf:"bytes,4,opt,name=region,proto3" json:"region" bson:"region" validate:"required"`
	// @inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
	Country string `protobuf:"bytes,5,opt,name=country,proto3" json:"country" bson:"country" validate:"omitempty,alpha,len=2"`
	// @inject_tag: json:"days" bson:"days" validate:"required,numeric,gte=0"
	Days int32 `protobuf:"varint,6,opt,name=days,proto3" json:"days" bson:"days" validate:"required,numeric,gte=0"`
	// @inject_tag: json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"
	PaymentStage         int32    `protobuf:"varint,7,opt,name=payment_stage,json=paymentStage,proto3" json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MoneyBackCostSystemRequest) Reset()         { *m = MoneyBackCostSystemRequest{} }
func (m *MoneyBackCostSystemRequest) String() string { return proto.CompactTextString(m) }
func (*MoneyBackCostSystemRequest) ProtoMessage()    {}
func (*MoneyBackCostSystemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{76}
}
func (m *MoneyBackCostSystemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoneyBackCostSystemRequest.Unmarshal(m, b)
}
func (m *MoneyBackCostSystemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoneyBackCostSystemRequest.Marshal(b, m, deterministic)
}
func (dst *MoneyBackCostSystemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoneyBackCostSystemRequest.Merge(dst, src)
}
func (m *MoneyBackCostSystemRequest) XXX_Size() int {
	return xxx_messageInfo_MoneyBackCostSystemRequest.Size(m)
}
func (m *MoneyBackCostSystemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoneyBackCostSystemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoneyBackCostSystemRequest proto.InternalMessageInfo

func (m *MoneyBackCostSystemRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MoneyBackCostSystemRequest) GetPayoutCurrency() string {
	if m != nil {
		return m.PayoutCurrency
	}
	return ""
}

func (m *MoneyBackCostSystemRequest) GetUndoReason() string {
	if m != nil {
		return m.UndoReason
	}
	return ""
}

func (m *MoneyBackCostSystemRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *MoneyBackCostSystemRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *MoneyBackCostSystemRequest) GetDays() int32 {
	if m != nil {
		return m.Days
	}
	return 0
}

func (m *MoneyBackCostSystemRequest) GetPaymentStage() int32 {
	if m != nil {
		return m.PaymentStage
	}
	return 0
}

type MoneyBackCostSystemList struct {
	Items                []*MoneyBackCostSystem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                 `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                  `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MoneyBackCostSystemList) Reset()         { *m = MoneyBackCostSystemList{} }
func (m *MoneyBackCostSystemList) String() string { return proto.CompactTextString(m) }
func (*MoneyBackCostSystemList) ProtoMessage()    {}
func (*MoneyBackCostSystemList) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{77}
}
func (m *MoneyBackCostSystemList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoneyBackCostSystemList.Unmarshal(m, b)
}
func (m *MoneyBackCostSystemList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoneyBackCostSystemList.Marshal(b, m, deterministic)
}
func (dst *MoneyBackCostSystemList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoneyBackCostSystemList.Merge(dst, src)
}
func (m *MoneyBackCostSystemList) XXX_Size() int {
	return xxx_messageInfo_MoneyBackCostSystemList.Size(m)
}
func (m *MoneyBackCostSystemList) XXX_DiscardUnknown() {
	xxx_messageInfo_MoneyBackCostSystemList.DiscardUnknown(m)
}

var xxx_messageInfo_MoneyBackCostSystemList proto.InternalMessageInfo

func (m *MoneyBackCostSystemList) GetItems() []*MoneyBackCostSystem {
	if m != nil {
		return m.Items
	}
	return nil
}

type MoneyBackCostMerchant struct {
	// @inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"name" bson:"name" validate:"required,alpha"
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" bson:"name" validate:"required,alpha"`
	// @inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
	PayoutCurrency string `protobuf:"bytes,4,opt,name=payout_currency,json=payoutCurrency,proto3" json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"
	UndoReason string `protobuf:"bytes,5,opt,name=undo_reason,json=undoReason,proto3" json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"`
	// @inject_tag: json:"region" bson:"region" validate:"required"
	Region string `protobuf:"bytes,6,opt,name=region,proto3" json:"region" bson:"region" validate:"required"`
	// @inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
	Country string `protobuf:"bytes,7,opt,name=country,proto3" json:"country" bson:"country" validate:"omitempty,alpha,len=2"`
	// @inject_tag: json:"days_from" bson:"days_from" validate:"numeric,gte=0"
	DaysFrom int32 `protobuf:"varint,8,opt,name=days_from,json=daysFrom,proto3" json:"days_from" bson:"days_from" validate:"numeric,gte=0"`
	// @inject_tag: json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"
	PaymentStage int32 `protobuf:"varint,9,opt,name=payment_stage,json=paymentStage,proto3" json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"`
	// @inject_tag: json:"percent" bson:"percent" validate:"numeric,gte=0,lte=1"
	Percent float64 `protobuf:"fixed64,10,opt,name=percent,proto3" json:"percent" bson:"percent" validate:"numeric,gte=0,lte=1"`
	// @inject_tag: json:"fix_amount" bson:"fix_amount" validate:"numeric,gte=0"
	FixAmount float64 `protobuf:"fixed64,11,opt,name=fix_amount,json=fixAmount,proto3" json:"fix_amount" bson:"fix_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"fix_amount_currency" bson:"fix_amount_currency" validate:"required,alpha,len=3"
	FixAmountCurrency string `protobuf:"bytes,12,opt,name=fix_amount_currency,json=fixAmountCurrency,proto3" json:"fix_amount_currency" bson:"fix_amount_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"is_paid_by_merchant" bson:"is_paid_by_merchant"
	IsPaidByMerchant bool `protobuf:"varint,13,opt,name=is_paid_by_merchant,json=isPaidByMerchant,proto3" json:"is_paid_by_merchant" bson:"is_paid_by_merchant"`
	// @inject_tag: json:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at" bson:"created_at"`
	// @inject_tag: json:"updated_at" bson:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at" bson:"updated_at"`
	// @inject_tag: json:"is_active" bson:"is_active"
	IsActive             bool     `protobuf:"varint,16,opt,name=is_active,json=isActive,proto3" json:"is_active" bson:"is_active"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MoneyBackCostMerchant) Reset()         { *m = MoneyBackCostMerchant{} }
func (m *MoneyBackCostMerchant) String() string { return proto.CompactTextString(m) }
func (*MoneyBackCostMerchant) ProtoMessage()    {}
func (*MoneyBackCostMerchant) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{78}
}
func (m *MoneyBackCostMerchant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoneyBackCostMerchant.Unmarshal(m, b)
}
func (m *MoneyBackCostMerchant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoneyBackCostMerchant.Marshal(b, m, deterministic)
}
func (dst *MoneyBackCostMerchant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoneyBackCostMerchant.Merge(dst, src)
}
func (m *MoneyBackCostMerchant) XXX_Size() int {
	return xxx_messageInfo_MoneyBackCostMerchant.Size(m)
}
func (m *MoneyBackCostMerchant) XXX_DiscardUnknown() {
	xxx_messageInfo_MoneyBackCostMerchant.DiscardUnknown(m)
}

var xxx_messageInfo_MoneyBackCostMerchant proto.InternalMessageInfo

func (m *MoneyBackCostMerchant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MoneyBackCostMerchant) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *MoneyBackCostMerchant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MoneyBackCostMerchant) GetPayoutCurrency() string {
	if m != nil {
		return m.PayoutCurrency
	}
	return ""
}

func (m *MoneyBackCostMerchant) GetUndoReason() string {
	if m != nil {
		return m.UndoReason
	}
	return ""
}

func (m *MoneyBackCostMerchant) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *MoneyBackCostMerchant) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *MoneyBackCostMerchant) GetDaysFrom() int32 {
	if m != nil {
		return m.DaysFrom
	}
	return 0
}

func (m *MoneyBackCostMerchant) GetPaymentStage() int32 {
	if m != nil {
		return m.PaymentStage
	}
	return 0
}

func (m *MoneyBackCostMerchant) GetPercent() float64 {
	if m != nil {
		return m.Percent
	}
	return 0
}

func (m *MoneyBackCostMerchant) GetFixAmount() float64 {
	if m != nil {
		return m.FixAmount
	}
	return 0
}

func (m *MoneyBackCostMerchant) GetFixAmountCurrency() string {
	if m != nil {
		return m.FixAmountCurrency
	}
	return ""
}

func (m *MoneyBackCostMerchant) GetIsPaidByMerchant() bool {
	if m != nil {
		return m.IsPaidByMerchant
	}
	return false
}

func (m *MoneyBackCostMerchant) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *MoneyBackCostMerchant) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *MoneyBackCostMerchant) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type MoneyBackCostMerchantRequest struct {
	// @inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"name" bson:"name" validate:"required,alpha"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" bson:"name" validate:"required,alpha"`
	// @inject_tag: json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"
	PayoutCurrency string `protobuf:"bytes,3,opt,name=payout_currency,json=payoutCurrency,proto3" json:"payout_currency" bson:"payout_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"
	UndoReason string `protobuf:"bytes,4,opt,name=undo_reason,json=undoReason,proto3" json:"undo_reason" bson:"undo_reason" validate:"required,alpha,oneof=refund reversal chargeback"`
	// @inject_tag: json:"region" bson:"region" validate:"required"
	Region string `protobuf:"bytes,5,opt,name=region,proto3" json:"region" bson:"region" validate:"required"`
	// @inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
	Country string `protobuf:"bytes,6,opt,name=country,proto3" json:"country" bson:"country" validate:"omitempty,alpha,len=2"`
	// @inject_tag: json:"days" bson:"days" validate:"required,numeric,gte=0"
	Days int32 `protobuf:"varint,7,opt,name=days,proto3" json:"days" bson:"days" validate:"required,numeric,gte=0"`
	// @inject_tag: json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"
	PaymentStage         int32    `protobuf:"varint,8,opt,name=payment_stage,json=paymentStage,proto3" json:"payment_stage" bson:"payment_stage" validate:"numeric,gte=1"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MoneyBackCostMerchantRequest) Reset()         { *m = MoneyBackCostMerchantRequest{} }
func (m *MoneyBackCostMerchantRequest) String() string { return proto.CompactTextString(m) }
func (*MoneyBackCostMerchantRequest) ProtoMessage()    {}
func (*MoneyBackCostMerchantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{79}
}
func (m *MoneyBackCostMerchantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoneyBackCostMerchantRequest.Unmarshal(m, b)
}
func (m *MoneyBackCostMerchantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoneyBackCostMerchantRequest.Marshal(b, m, deterministic)
}
func (dst *MoneyBackCostMerchantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoneyBackCostMerchantRequest.Merge(dst, src)
}
func (m *MoneyBackCostMerchantRequest) XXX_Size() int {
	return xxx_messageInfo_MoneyBackCostMerchantRequest.Size(m)
}
func (m *MoneyBackCostMerchantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoneyBackCostMerchantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoneyBackCostMerchantRequest proto.InternalMessageInfo

func (m *MoneyBackCostMerchantRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *MoneyBackCostMerchantRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MoneyBackCostMerchantRequest) GetPayoutCurrency() string {
	if m != nil {
		return m.PayoutCurrency
	}
	return ""
}

func (m *MoneyBackCostMerchantRequest) GetUndoReason() string {
	if m != nil {
		return m.UndoReason
	}
	return ""
}

func (m *MoneyBackCostMerchantRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *MoneyBackCostMerchantRequest) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *MoneyBackCostMerchantRequest) GetDays() int32 {
	if m != nil {
		return m.Days
	}
	return 0
}

func (m *MoneyBackCostMerchantRequest) GetPaymentStage() int32 {
	if m != nil {
		return m.PaymentStage
	}
	return 0
}

type PaymentCostDeleteRequest struct {
	// @inject_tag: json:"id" bson:"_id" validate:"required,hexadecimal,len=24"
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"required,hexadecimal,len=24"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PaymentCostDeleteRequest) Reset()         { *m = PaymentCostDeleteRequest{} }
func (m *PaymentCostDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentCostDeleteRequest) ProtoMessage()    {}
func (*PaymentCostDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{80}
}
func (m *PaymentCostDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentCostDeleteRequest.Unmarshal(m, b)
}
func (m *PaymentCostDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentCostDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *PaymentCostDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentCostDeleteRequest.Merge(dst, src)
}
func (m *PaymentCostDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentCostDeleteRequest.Size(m)
}
func (m *PaymentCostDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentCostDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentCostDeleteRequest proto.InternalMessageInfo

func (m *PaymentCostDeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MoneyBackCostMerchantList struct {
	Items                []*MoneyBackCostMerchant `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MoneyBackCostMerchantList) Reset()         { *m = MoneyBackCostMerchantList{} }
func (m *MoneyBackCostMerchantList) String() string { return proto.CompactTextString(m) }
func (*MoneyBackCostMerchantList) ProtoMessage()    {}
func (*MoneyBackCostMerchantList) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{81}
}
func (m *MoneyBackCostMerchantList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoneyBackCostMerchantList.Unmarshal(m, b)
}
func (m *MoneyBackCostMerchantList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoneyBackCostMerchantList.Marshal(b, m, deterministic)
}
func (dst *MoneyBackCostMerchantList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoneyBackCostMerchantList.Merge(dst, src)
}
func (m *MoneyBackCostMerchantList) XXX_Size() int {
	return xxx_messageInfo_MoneyBackCostMerchantList.Size(m)
}
func (m *MoneyBackCostMerchantList) XXX_DiscardUnknown() {
	xxx_messageInfo_MoneyBackCostMerchantList.DiscardUnknown(m)
}

var xxx_messageInfo_MoneyBackCostMerchantList proto.InternalMessageInfo

func (m *MoneyBackCostMerchantList) GetItems() []*MoneyBackCostMerchant {
	if m != nil {
		return m.Items
	}
	return nil
}

type MoneyBackCostMerchantListRequest struct {
	// @inject_tag: json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"
	MerchantId           string   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id" bson:"merchant_id" validate:"required,hexadecimal,len=24"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MoneyBackCostMerchantListRequest) Reset()         { *m = MoneyBackCostMerchantListRequest{} }
func (m *MoneyBackCostMerchantListRequest) String() string { return proto.CompactTextString(m) }
func (*MoneyBackCostMerchantListRequest) ProtoMessage()    {}
func (*MoneyBackCostMerchantListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{82}
}
func (m *MoneyBackCostMerchantListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoneyBackCostMerchantListRequest.Unmarshal(m, b)
}
func (m *MoneyBackCostMerchantListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoneyBackCostMerchantListRequest.Marshal(b, m, deterministic)
}
func (dst *MoneyBackCostMerchantListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoneyBackCostMerchantListRequest.Merge(dst, src)
}
func (m *MoneyBackCostMerchantListRequest) XXX_Size() int {
	return xxx_messageInfo_MoneyBackCostMerchantListRequest.Size(m)
}
func (m *MoneyBackCostMerchantListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoneyBackCostMerchantListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoneyBackCostMerchantListRequest proto.InternalMessageInfo

func (m *MoneyBackCostMerchantListRequest) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

type PayoutCostSystem struct {
	// @inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"intrabank_cost_amount" bson:"intrabank_cost_amount" validate:"numeric,gte=0"
	IntrabankCostAmount float64 `protobuf:"fixed64,2,opt,name=intrabank_cost_amount,json=intrabankCostAmount,proto3" json:"intrabank_cost_amount" bson:"intrabank_cost_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"intrabank_cost_currency" bson:"intrabank_cost_currency" validate:"required,alpha,len=3"
	IntrabankCostCurrency string `protobuf:"bytes,3,opt,name=intrabank_cost_currency,json=intrabankCostCurrency,proto3" json:"intrabank_cost_currency" bson:"intrabank_cost_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"interbank_cost_amount" bson:"interbank_cost_amount" validate:"numeric,gte=0"
	InterbankCostAmount float64 `protobuf:"fixed64,4,opt,name=interbank_cost_amount,json=interbankCostAmount,proto3" json:"interbank_cost_amount" bson:"interbank_cost_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"interbank_cost_currency" bson:"interbank_cost_currency" validate:"required,alpha,len=3"
	InterbankCostCurrency string `protobuf:"bytes,5,opt,name=interbank_cost_currency,json=interbankCostCurrency,proto3" json:"interbank_cost_currency" bson:"interbank_cost_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"is_active" bson:"is_active"
	IsActive bool `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active" bson:"is_active"`
	// @inject_tag: json:"-" bson:"created_at"
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"-" bson:"created_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PayoutCostSystem) Reset()         { *m = PayoutCostSystem{} }
func (m *PayoutCostSystem) String() string { return proto.CompactTextString(m) }
func (*PayoutCostSystem) ProtoMessage()    {}
func (*PayoutCostSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{83}
}
func (m *PayoutCostSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayoutCostSystem.Unmarshal(m, b)
}
func (m *PayoutCostSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayoutCostSystem.Marshal(b, m, deterministic)
}
func (dst *PayoutCostSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayoutCostSystem.Merge(dst, src)
}
func (m *PayoutCostSystem) XXX_Size() int {
	return xxx_messageInfo_PayoutCostSystem.Size(m)
}
func (m *PayoutCostSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_PayoutCostSystem.DiscardUnknown(m)
}

var xxx_messageInfo_PayoutCostSystem proto.InternalMessageInfo

func (m *PayoutCostSystem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PayoutCostSystem) GetIntrabankCostAmount() float64 {
	if m != nil {
		return m.IntrabankCostAmount
	}
	return 0
}

func (m *PayoutCostSystem) GetIntrabankCostCurrency() string {
	if m != nil {
		return m.IntrabankCostCurrency
	}
	return ""
}

func (m *PayoutCostSystem) GetInterbankCostAmount() float64 {
	if m != nil {
		return m.InterbankCostAmount
	}
	return 0
}

func (m *PayoutCostSystem) GetInterbankCostCurrency() string {
	if m != nil {
		return m.InterbankCostCurrency
	}
	return ""
}

func (m *PayoutCostSystem) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *PayoutCostSystem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type AccountingEntrySource struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *AccountingEntrySource) Reset()         { *m = AccountingEntrySource{} }
func (m *AccountingEntrySource) String() string { return proto.CompactTextString(m) }
func (*AccountingEntrySource) ProtoMessage()    {}
func (*AccountingEntrySource) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{84}
}
func (m *AccountingEntrySource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountingEntrySource.Unmarshal(m, b)
}
func (m *AccountingEntrySource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountingEntrySource.Marshal(b, m, deterministic)
}
func (dst *AccountingEntrySource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountingEntrySource.Merge(dst, src)
}
func (m *AccountingEntrySource) XXX_Size() int {
	return xxx_messageInfo_AccountingEntrySource.Size(m)
}
func (m *AccountingEntrySource) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountingEntrySource.DiscardUnknown(m)
}

var xxx_messageInfo_AccountingEntrySource proto.InternalMessageInfo

func (m *AccountingEntrySource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AccountingEntrySource) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type AccountingEntry struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Object               string                 `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Type                 string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Source               *AccountingEntrySource `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	MerchantId           string                 `protobuf:"bytes,5,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Amount               float64                `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string                 `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	Reason               string                 `protobuf:"bytes,8,opt,name=reason,proto3" json:"reason,omitempty"`
	Status               string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Country              string                 `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	OriginalAmount       float64                `protobuf:"fixed64,11,opt,name=original_amount,json=originalAmount,proto3" json:"original_amount,omitempty"`
	OriginalCurrency     string                 `protobuf:"bytes,12,opt,name=original_currency,json=originalCurrency,proto3" json:"original_currency,omitempty"`
	LocalAmount          float64                `protobuf:"fixed64,13,opt,name=local_amount,json=localAmount,proto3" json:"local_amount,omitempty"`
	LocalCurrency        string                 `protobuf:"bytes,14,opt,name=local_currency,json=localCurrency,proto3" json:"local_currency,omitempty"`
	CreatedAt            *timestamp.Timestamp   `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	AvailableOn          *timestamp.Timestamp   `protobuf:"bytes,16,opt,name=available_on,json=availableOn,proto3" json:"available_on,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                 `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                  `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *AccountingEntry) Reset()         { *m = AccountingEntry{} }
func (m *AccountingEntry) String() string { return proto.CompactTextString(m) }
func (*AccountingEntry) ProtoMessage()    {}
func (*AccountingEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{85}
}
func (m *AccountingEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountingEntry.Unmarshal(m, b)
}
func (m *AccountingEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountingEntry.Marshal(b, m, deterministic)
}
func (dst *AccountingEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountingEntry.Merge(dst, src)
}
func (m *AccountingEntry) XXX_Size() int {
	return xxx_messageInfo_AccountingEntry.Size(m)
}
func (m *AccountingEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountingEntry.DiscardUnknown(m)
}

var xxx_messageInfo_AccountingEntry proto.InternalMessageInfo

func (m *AccountingEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AccountingEntry) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *AccountingEntry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AccountingEntry) GetSource() *AccountingEntrySource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *AccountingEntry) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *AccountingEntry) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *AccountingEntry) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *AccountingEntry) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *AccountingEntry) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AccountingEntry) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *AccountingEntry) GetOriginalAmount() float64 {
	if m != nil {
		return m.OriginalAmount
	}
	return 0
}

func (m *AccountingEntry) GetOriginalCurrency() string {
	if m != nil {
		return m.OriginalCurrency
	}
	return ""
}

func (m *AccountingEntry) GetLocalAmount() float64 {
	if m != nil {
		return m.LocalAmount
	}
	return 0
}

func (m *AccountingEntry) GetLocalCurrency() string {
	if m != nil {
		return m.LocalCurrency
	}
	return ""
}

func (m *AccountingEntry) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *AccountingEntry) GetAvailableOn() *timestamp.Timestamp {
	if m != nil {
		return m.AvailableOn
	}
	return nil
}

type RoyaltyReportDetails struct {
	// @inject_tag: bson:"gross_amount"
	GrossAmount float64 `protobuf:"fixed64,1,opt,name=gross_amount,json=grossAmount,proto3" json:"gross_amount,omitempty" bson:"gross_amount"`
	// @inject_tag: bson:"transactions_count"
	TransactionsCount int32 `protobuf:"varint,2,opt,name=transactions_count,json=transactionsCount,proto3" json:"transactions_count,omitempty" bson:"transactions_count"`
	// @inject_tag: bson:"fee_amount"
	FeeAmount float64 `protobuf:"fixed64,3,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty" bson:"fee_amount"`
	// @inject_tag: bson:"vat_amount"
	VatAmount float64 `protobuf:"fixed64,4,opt,name=vat_amount,json=vatAmount,proto3" json:"vat_amount,omitempty" bson:"vat_amount"`
	// @inject_tag: bson:"payout_amount"
	PayoutAmount float64 `protobuf:"fixed64,5,opt,name=payout_amount,json=payoutAmount,proto3" json:"payout_amount,omitempty" bson:"payout_amount"`
	// @inject_tag: bson:"currency"
	Currency             string   `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty" bson:"currency"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *RoyaltyReportDetails) Reset()         { *m = RoyaltyReportDetails{} }
func (m *RoyaltyReportDetails) String() string { return proto.CompactTextString(m) }
func (*RoyaltyReportDetails) ProtoMessage()    {}
func (*RoyaltyReportDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{86}
}
func (m *RoyaltyReportDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoyaltyReportDetails.Unmarshal(m, b)
}
func (m *RoyaltyReportDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoyaltyReportDetails.Marshal(b, m, deterministic)
}
func (dst *RoyaltyReportDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoyaltyReportDetails.Merge(dst, src)
}
func (m *RoyaltyReportDetails) XXX_Size() int {
	return xxx_messageInfo_RoyaltyReportDetails.Size(m)
}
func (m *RoyaltyReportDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_RoyaltyReportDetails.DiscardUnknown(m)
}

var xxx_messageInfo_RoyaltyReportDetails proto.InternalMessageInfo

func (m *RoyaltyReportDetails) GetGrossAmount() float64 {
	if m != nil {
		return m.GrossAmount
	}
	return 0
}

func (m *RoyaltyReportDetails) GetTransactionsCount() int32 {
	if m != nil {
		return m.TransactionsCount
	}
	return 0
}

func (m *RoyaltyReportDetails) GetFeeAmount() float64 {
	if m != nil {
		return m.FeeAmount
	}
	return 0
}

func (m *RoyaltyReportDetails) GetVatAmount() float64 {
	if m != nil {
		return m.VatAmount
	}
	return 0
}

func (m *RoyaltyReportDetails) GetPayoutAmount() float64 {
	if m != nil {
		return m.PayoutAmount
	}
	return 0
}

func (m *RoyaltyReportDetails) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type RoyaltyReportCorrection struct {
	// @inject_tag: validate:"omitempty,numeric,gt=0"
	Amount               float64  `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty" validate:"omitempty,numeric,gt=0"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *RoyaltyReportCorrection) Reset()         { *m = RoyaltyReportCorrection{} }
func (m *RoyaltyReportCorrection) String() string { return proto.CompactTextString(m) }
func (*RoyaltyReportCorrection) ProtoMessage()    {}
func (*RoyaltyReportCorrection) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{87}
}
func (m *RoyaltyReportCorrection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoyaltyReportCorrection.Unmarshal(m, b)
}
func (m *RoyaltyReportCorrection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoyaltyReportCorrection.Marshal(b, m, deterministic)
}
func (dst *RoyaltyReportCorrection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoyaltyReportCorrection.Merge(dst, src)
}
func (m *RoyaltyReportCorrection) XXX_Size() int {
	return xxx_messageInfo_RoyaltyReportCorrection.Size(m)
}
func (m *RoyaltyReportCorrection) XXX_DiscardUnknown() {
	xxx_messageInfo_RoyaltyReportCorrection.DiscardUnknown(m)
}

var xxx_messageInfo_RoyaltyReportCorrection proto.InternalMessageInfo

func (m *RoyaltyReportCorrection) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *RoyaltyReportCorrection) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type RoyaltyReport struct {
	Id                   string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId           string                   `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	CreatedAt            *timestamp.Timestamp     `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp     `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PayoutId             string                   `protobuf:"bytes,5,opt,name=payout_id,json=payoutId,proto3" json:"payout_id,omitempty"`
	PayoutDate           *timestamp.Timestamp     `protobuf:"bytes,6,opt,name=payout_date,json=payoutDate,proto3" json:"payout_date,omitempty"`
	Status               string                   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	PeriodFrom           *timestamp.Timestamp     `protobuf:"bytes,8,opt,name=period_from,json=periodFrom,proto3" json:"period_from,omitempty"`
	PeriodTo             *timestamp.Timestamp     `protobuf:"bytes,9,opt,name=period_to,json=periodTo,proto3" json:"period_to,omitempty"`
	AcceptExpireAt       *timestamp.Timestamp     `protobuf:"bytes,10,opt,name=accept_expire_at,json=acceptExpireAt,proto3" json:"accept_expire_at,omitempty"`
	AcceptedAt           *timestamp.Timestamp     `protobuf:"bytes,11,opt,name=accepted_at,json=acceptedAt,proto3" json:"accepted_at,omitempty"`
	Amounts              *RoyaltyReportDetails    `protobuf:"bytes,12,opt,name=amounts,proto3" json:"amounts,omitempty"`
	Correction           *RoyaltyReportCorrection `protobuf:"bytes,13,opt,name=correction,proto3" json:"correction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *RoyaltyReport) Reset()         { *m = RoyaltyReport{} }
func (m *RoyaltyReport) String() string { return proto.CompactTextString(m) }
func (*RoyaltyReport) ProtoMessage()    {}
func (*RoyaltyReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{88}
}
func (m *RoyaltyReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoyaltyReport.Unmarshal(m, b)
}
func (m *RoyaltyReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoyaltyReport.Marshal(b, m, deterministic)
}
func (dst *RoyaltyReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoyaltyReport.Merge(dst, src)
}
func (m *RoyaltyReport) XXX_Size() int {
	return xxx_messageInfo_RoyaltyReport.Size(m)
}
func (m *RoyaltyReport) XXX_DiscardUnknown() {
	xxx_messageInfo_RoyaltyReport.DiscardUnknown(m)
}

var xxx_messageInfo_RoyaltyReport proto.InternalMessageInfo

func (m *RoyaltyReport) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RoyaltyReport) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *RoyaltyReport) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *RoyaltyReport) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *RoyaltyReport) GetPayoutId() string {
	if m != nil {
		return m.PayoutId
	}
	return ""
}

func (m *RoyaltyReport) GetPayoutDate() *timestamp.Timestamp {
	if m != nil {
		return m.PayoutDate
	}
	return nil
}

func (m *RoyaltyReport) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *RoyaltyReport) GetPeriodFrom() *timestamp.Timestamp {
	if m != nil {
		return m.PeriodFrom
	}
	return nil
}

func (m *RoyaltyReport) GetPeriodTo() *timestamp.Timestamp {
	if m != nil {
		return m.PeriodTo
	}
	return nil
}

func (m *RoyaltyReport) GetAcceptExpireAt() *timestamp.Timestamp {
	if m != nil {
		return m.AcceptExpireAt
	}
	return nil
}

func (m *RoyaltyReport) GetAcceptedAt() *timestamp.Timestamp {
	if m != nil {
		return m.AcceptedAt
	}
	return nil
}

func (m *RoyaltyReport) GetAmounts() *RoyaltyReportDetails {
	if m != nil {
		return m.Amounts
	}
	return nil
}

func (m *RoyaltyReport) GetCorrection() *RoyaltyReportCorrection {
	if m != nil {
		return m.Correction
	}
	return nil
}

type RoyaltyReportChanges struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoyaltyReportId      string               `protobuf:"bytes,2,opt,name=royalty_report_id,json=royaltyReportId,proto3" json:"royalty_report_id,omitempty"`
	Source               string               `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Ip                   string               `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Hash                 string               `protobuf:"bytes,7,opt,name=hash,proto3" json:"hash,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *RoyaltyReportChanges) Reset()         { *m = RoyaltyReportChanges{} }
func (m *RoyaltyReportChanges) String() string { return proto.CompactTextString(m) }
func (*RoyaltyReportChanges) ProtoMessage()    {}
func (*RoyaltyReportChanges) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{89}
}
func (m *RoyaltyReportChanges) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoyaltyReportChanges.Unmarshal(m, b)
}
func (m *RoyaltyReportChanges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoyaltyReportChanges.Marshal(b, m, deterministic)
}
func (dst *RoyaltyReportChanges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoyaltyReportChanges.Merge(dst, src)
}
func (m *RoyaltyReportChanges) XXX_Size() int {
	return xxx_messageInfo_RoyaltyReportChanges.Size(m)
}
func (m *RoyaltyReportChanges) XXX_DiscardUnknown() {
	xxx_messageInfo_RoyaltyReportChanges.DiscardUnknown(m)
}

var xxx_messageInfo_RoyaltyReportChanges proto.InternalMessageInfo

func (m *RoyaltyReportChanges) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RoyaltyReportChanges) GetRoyaltyReportId() string {
	if m != nil {
		return m.RoyaltyReportId
	}
	return ""
}

func (m *RoyaltyReportChanges) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *RoyaltyReportChanges) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *RoyaltyReportChanges) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *RoyaltyReportChanges) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type VatTransaction struct {
	// @inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"order_id" bson:"order_id" validate:"required,hexadecimal,len=24"
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id" bson:"order_id" validate:"required,hexadecimal,len=24"`
	// @inject_tag: json:"transaction_id" bson:"transaction_id" validate:"required"
	TransactionId string `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id" bson:"transaction_id" validate:"required"`
	// @inject_tag: json:"transaction_type" bson:"transaction_type" validate:"required,oneof=payment refund chargeback"
	TransactionType string `protobuf:"bytes,4,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type" bson:"transaction_type" validate:"required,oneof=payment refund chargeback"`
	// @inject_tag: json:"transaction_amount" bson:"transaction_amount" validate:"numeric,gte=0"
	TransactionAmount float64 `protobuf:"fixed64,5,opt,name=transaction_amount,json=transactionAmount,proto3" json:"transaction_amount" bson:"transaction_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"transaction_currency" bson:"transaction_currency" validate:"required,alpha,len=3"
	TransactionCurrency string `protobuf:"bytes,6,opt,name=transaction_currency,json=transactionCurrency,proto3" json:"transaction_currency" bson:"transaction_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"vat_amount" bson:"vat_amount" validate:"numeric,gte=0"
	VatAmount float64 `protobuf:"fixed64,7,opt,name=vat_amount,json=vatAmount,proto3" json:"vat_amount" bson:"vat_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"vat_currency" bson:"vat_currency" validate:"required,alpha,len=3"
	VatCurrency string `protobuf:"bytes,8,opt,name=vat_currency,json=vatCurrency,proto3" json:"vat_currency" bson:"vat_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"fees_amount" bson:"fees_amount" validate:"numeric,gte=0"
	FeesAmount float64 `protobuf:"fixed64,9,opt,name=fees_amount,json=feesAmount,proto3" json:"fees_amount" bson:"fees_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"fees_currency" bson:"fees_currency" validate:"required,alpha,len=3"
	FeesCurrency string `protobuf:"bytes,10,opt,name=fees_currency,json=feesCurrency,proto3" json:"fees_currency" bson:"fees_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"local_transaction_amount" bson:"local_transaction_amount" validate:"omitempty,numeric,gte=0"
	LocalTransactionAmount float64 `protobuf:"fixed64,11,opt,name=local_transaction_amount,json=localTransactionAmount,proto3" json:"local_transaction_amount" bson:"local_transaction_amount" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: json:"local_vat_amount" bson:"local_vat_amount" validate:"omitempty,numeric,gte=0"
	LocalVatAmount float64 `protobuf:"fixed64,12,opt,name=local_vat_amount,json=localVatAmount,proto3" json:"local_vat_amount" bson:"local_vat_amount" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: json:"local_fees_amount" bson:"local_fees_amount" validate:"omitempty,numeric,gte=0"
	LocalFeesAmount float64 `protobuf:"fixed64,13,opt,name=local_fees_amount,json=localFeesAmount,proto3" json:"local_fees_amount" bson:"local_fees_amount" validate:"omitempty,numeric,gte=0"`
	// @inject_tag: json:"local_currency" bson:"local_currency" validate:"required,alpha,len=3"
	LocalCurrency string `protobuf:"bytes,14,opt,name=local_currency,json=localCurrency,proto3" json:"local_currency" bson:"local_currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"local_amounts_approximate" bson:"local_amounts_alocal_amounts_approximatepproximated" validate:"required,alpha,len=3"
	LocalAmountsApproximate bool `protobuf:"varint,15,opt,name=local_amounts_approximate,json=localAmountsApproximate,proto3" json:"local_amounts_approximate" bson:"local_amounts_alocal_amounts_approximatepproximated" validate:"required,alpha,len=3"`
	// @inject_tag: json:"billing_address_criteria" bson:"billing_address_criteria" validate:"required,oneof=ip bin language customer form"
	BillingAddressCriteria string `protobuf:"bytes,16,opt,name=billing_address_criteria,json=billingAddressCriteria,proto3" json:"billing_address_criteria" bson:"billing_address_criteria" validate:"required,oneof=ip bin language customer form"`
	// @inject_tag: json:"billing_address" bson:"billing_address" validate:"required,dive"
	BillingAddress *OrderBillingAddress `protobuf:"bytes,17,opt,name=billing_address,json=billingAddress,proto3" json:"billing_address" bson:"billing_address" validate:"required,dive"`
	// @inject_tag: json:"user_id" bson:"user_id" validate:"omitempty,hexadecimal,len=24"
	UserId string `protobuf:"bytes,18,opt,name=user_id,json=userId,proto3" json:"user_id" bson:"user_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"payment_method" bson:"payment_method" validate:"required"
	PaymentMethod string `protobuf:"bytes,19,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method" bson:"payment_method" validate:"required"`
	// @inject_tag: json:"is_deduction" bson:"is_deduction"
	IsDeduction bool `protobuf:"varint,20,opt,name=is_deduction,json=isDeduction,proto3" json:"is_deduction" bson:"is_deduction"`
	// @inject_tag: json:"country" bson:"country" validate:"required,alpha,len=2"
	Country string `protobuf:"bytes,21,opt,name=country,proto3" json:"country" bson:"country" validate:"required,alpha,len=2"`
	// @inject_tag: json:"date_time" bson:"date_time"
	DateTime             *timestamp.Timestamp `protobuf:"bytes,22,opt,name=date_time,json=dateTime,proto3" json:"date_time" bson:"date_time"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *VatTransaction) Reset()         { *m = VatTransaction{} }
func (m *VatTransaction) String() string { return proto.CompactTextString(m) }
func (*VatTransaction) ProtoMessage()    {}
func (*VatTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{90}
}
func (m *VatTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VatTransaction.Unmarshal(m, b)
}
func (m *VatTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VatTransaction.Marshal(b, m, deterministic)
}
func (dst *VatTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VatTransaction.Merge(dst, src)
}
func (m *VatTransaction) XXX_Size() int {
	return xxx_messageInfo_VatTransaction.Size(m)
}
func (m *VatTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_VatTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_VatTransaction proto.InternalMessageInfo

func (m *VatTransaction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VatTransaction) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *VatTransaction) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *VatTransaction) GetTransactionType() string {
	if m != nil {
		return m.TransactionType
	}
	return ""
}

func (m *VatTransaction) GetTransactionAmount() float64 {
	if m != nil {
		return m.TransactionAmount
	}
	return 0
}

func (m *VatTransaction) GetTransactionCurrency() string {
	if m != nil {
		return m.TransactionCurrency
	}
	return ""
}

func (m *VatTransaction) GetVatAmount() float64 {
	if m != nil {
		return m.VatAmount
	}
	return 0
}

func (m *VatTransaction) GetVatCurrency() string {
	if m != nil {
		return m.VatCurrency
	}
	return ""
}

func (m *VatTransaction) GetFeesAmount() float64 {
	if m != nil {
		return m.FeesAmount
	}
	return 0
}

func (m *VatTransaction) GetFeesCurrency() string {
	if m != nil {
		return m.FeesCurrency
	}
	return ""
}

func (m *VatTransaction) GetLocalTransactionAmount() float64 {
	if m != nil {
		return m.LocalTransactionAmount
	}
	return 0
}

func (m *VatTransaction) GetLocalVatAmount() float64 {
	if m != nil {
		return m.LocalVatAmount
	}
	return 0
}

func (m *VatTransaction) GetLocalFeesAmount() float64 {
	if m != nil {
		return m.LocalFeesAmount
	}
	return 0
}

func (m *VatTransaction) GetLocalCurrency() string {
	if m != nil {
		return m.LocalCurrency
	}
	return ""
}

func (m *VatTransaction) GetLocalAmountsApproximate() bool {
	if m != nil {
		return m.LocalAmountsApproximate
	}
	return false
}

func (m *VatTransaction) GetBillingAddressCriteria() string {
	if m != nil {
		return m.BillingAddressCriteria
	}
	return ""
}

func (m *VatTransaction) GetBillingAddress() *OrderBillingAddress {
	if m != nil {
		return m.BillingAddress
	}
	return nil
}

func (m *VatTransaction) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *VatTransaction) GetPaymentMethod() string {
	if m != nil {
		return m.PaymentMethod
	}
	return ""
}

func (m *VatTransaction) GetIsDeduction() bool {
	if m != nil {
		return m.IsDeduction
	}
	return false
}

func (m *VatTransaction) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *VatTransaction) GetDateTime() *timestamp.Timestamp {
	if m != nil {
		return m.DateTime
	}
	return nil
}

type VatReport struct {
	// @inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"country" bson:"country" validate:"required,alpha,len=2"
	Country string `protobuf:"bytes,2,opt,name=country,proto3" json:"country" bson:"country" validate:"required,alpha,len=2"`
	// @inject_tag: json:"vat_rate" bson:"vat_rate" validate:"numeric,gte=0,lte=1"
	VatRate float64 `protobuf:"fixed64,3,opt,name=vat_rate,json=vatRate,proto3" json:"vat_rate" bson:"vat_rate" validate:"numeric,gte=0,lte=1"`
	// @inject_tag: json:"currency" bson:"currency" validate:"required,alpha,len=3"
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency" bson:"currency" validate:"required,alpha,len=3"`
	// @inject_tag: json:"transactions_count" bson:"transactions_count" validate:"numeric,gte=0"
	TransactionsCount int32 `protobuf:"varint,5,opt,name=transactions_count,json=transactionsCount,proto3" json:"transactions_count" bson:"transactions_count" validate:"numeric,gte=0"`
	// @inject_tag: json:"gross_revenue" bson:"gross_revenue" validate:"numeric,gte=0"
	GrossRevenue float64 `protobuf:"fixed64,6,opt,name=gross_revenue,json=grossRevenue,proto3" json:"gross_revenue" bson:"gross_revenue" validate:"numeric,gte=0"`
	// @inject_tag: json:"vat_amount" bson:"vat_amount" validate:"numeric,gte=0"
	VatAmount float64 `protobuf:"fixed64,7,opt,name=vat_amount,json=vatAmount,proto3" json:"vat_amount" bson:"vat_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"fees_amount" bson:"fees_amount" validate:"numeric,gte=0"
	FeesAmount float64 `protobuf:"fixed64,8,opt,name=fees_amount,json=feesAmount,proto3" json:"fees_amount" bson:"fees_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"deduction_amount" bson:"deduction_amount" validate:"numeric,gte=0"
	DeductionAmount float64 `protobuf:"fixed64,9,opt,name=deduction_amount,json=deductionAmount,proto3" json:"deduction_amount" bson:"deduction_amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"correction_amount" bson:"correction_amount" validate:"numeric,lte=0"
	CorrectionAmount float64 `protobuf:"fixed64,10,opt,name=correction_amount,json=correctionAmount,proto3" json:"correction_amount" bson:"correction_amount" validate:"numeric,lte=0"`
	// @inject_tag: json:"status" bson:"status" validate:"required,alpha,oneof=threshold expired pending need_to_pay paid overdue canceled"
	Status string `protobuf:"bytes,11,opt,name=status,proto3" json:"status" bson:"status" validate:"required,alpha,oneof=threshold expired pending need_to_pay paid overdue canceled"`
	// @inject_tag: json:"country_annual_turnover" bson:"country_annual_turnover" validate:"numeric,gte=0"
	CountryAnnualTurnover float64 `protobuf:"fixed64,12,opt,name=country_annual_turnover,json=countryAnnualTurnover,proto3" json:"country_annual_turnover" bson:"country_annual_turnover" validate:"numeric,gte=0"`
	// @inject_tag: json:"world_annual_turnover" bson:"world_annual_turnover" validate:"numeric,gte=0"
	WorldAnnualTurnover float64 `protobuf:"fixed64,13,opt,name=world_annual_turnover,json=worldAnnualTurnover,proto3" json:"world_annual_turnover" bson:"world_annual_turnover" validate:"numeric,gte=0"`
	// @inject_tag: json:"amounts_approximate" bson:"amounts_approximate"
	AmountsApproximate bool `protobuf:"varint,14,opt,name=amounts_approximate,json=amountsApproximate,proto3" json:"amounts_approximate" bson:"amounts_approximate"`
	// @inject_tag: json:"date_from" bson:"date_from"
	DateFrom *timestamp.Timestamp `protobuf:"bytes,15,opt,name=date_from,json=dateFrom,proto3" json:"date_from" bson:"date_from"`
	// @inject_tag: json:"date_to" bson:"date_to"
	DateTo *timestamp.Timestamp `protobuf:"bytes,16,opt,name=date_to,json=dateTo,proto3" json:"date_to" bson:"date_to"`
	// @inject_tag: json:"pay_until_date" bson:"pay_until_date"
	PayUntilDate *timestamp.Timestamp `protobuf:"bytes,17,opt,name=pay_until_date,json=payUntilDate,proto3" json:"pay_until_date" bson:"pay_until_date"`
	// @inject_tag: json:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at" bson:"created_at"`
	// @inject_tag: json:"updated_at" bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *VatReport) Reset()         { *m = VatReport{} }
func (m *VatReport) String() string { return proto.CompactTextString(m) }
func (*VatReport) ProtoMessage()    {}
func (*VatReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{91}
}
func (m *VatReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VatReport.Unmarshal(m, b)
}
func (m *VatReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VatReport.Marshal(b, m, deterministic)
}
func (dst *VatReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VatReport.Merge(dst, src)
}
func (m *VatReport) XXX_Size() int {
	return xxx_messageInfo_VatReport.Size(m)
}
func (m *VatReport) XXX_DiscardUnknown() {
	xxx_messageInfo_VatReport.DiscardUnknown(m)
}

var xxx_messageInfo_VatReport proto.InternalMessageInfo

func (m *VatReport) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VatReport) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *VatReport) GetVatRate() float64 {
	if m != nil {
		return m.VatRate
	}
	return 0
}

func (m *VatReport) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *VatReport) GetTransactionsCount() int32 {
	if m != nil {
		return m.TransactionsCount
	}
	return 0
}

func (m *VatReport) GetGrossRevenue() float64 {
	if m != nil {
		return m.GrossRevenue
	}
	return 0
}

func (m *VatReport) GetVatAmount() float64 {
	if m != nil {
		return m.VatAmount
	}
	return 0
}

func (m *VatReport) GetFeesAmount() float64 {
	if m != nil {
		return m.FeesAmount
	}
	return 0
}

func (m *VatReport) GetDeductionAmount() float64 {
	if m != nil {
		return m.DeductionAmount
	}
	return 0
}

func (m *VatReport) GetCorrectionAmount() float64 {
	if m != nil {
		return m.CorrectionAmount
	}
	return 0
}

func (m *VatReport) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *VatReport) GetCountryAnnualTurnover() float64 {
	if m != nil {
		return m.CountryAnnualTurnover
	}
	return 0
}

func (m *VatReport) GetWorldAnnualTurnover() float64 {
	if m != nil {
		return m.WorldAnnualTurnover
	}
	return 0
}

func (m *VatReport) GetAmountsApproximate() bool {
	if m != nil {
		return m.AmountsApproximate
	}
	return false
}

func (m *VatReport) GetDateFrom() *timestamp.Timestamp {
	if m != nil {
		return m.DateFrom
	}
	return nil
}

func (m *VatReport) GetDateTo() *timestamp.Timestamp {
	if m != nil {
		return m.DateTo
	}
	return nil
}

func (m *VatReport) GetPayUntilDate() *timestamp.Timestamp {
	if m != nil {
		return m.PayUntilDate
	}
	return nil
}

func (m *VatReport) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *VatReport) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type AnnualTurnover struct {
	// @inject_tag: json:"year" bson:"year" validate:"required,numeric,gte=2019"
	Year int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year" bson:"year" validate:"required,numeric,gte=2019"`
	// @inject_tag: json:"country" bson:"country" validate:"omitempty,alpha,len=2"
	Country string `protobuf:"bytes,2,opt,name=country,proto3" json:"country" bson:"country" validate:"omitempty,alpha,len=2"`
	// @inject_tag: json:"amount" bson:"amount" validate:"numeric,gte=0"
	Amount float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount" bson:"amount" validate:"numeric,gte=0"`
	// @inject_tag: json:"currency" bson:"currency" validate:"required,alpha,len=3"
	Currency             string   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency" bson:"currency" validate:"required,alpha,len=3"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *AnnualTurnover) Reset()         { *m = AnnualTurnover{} }
func (m *AnnualTurnover) String() string { return proto.CompactTextString(m) }
func (*AnnualTurnover) ProtoMessage()    {}
func (*AnnualTurnover) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{92}
}
func (m *AnnualTurnover) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnualTurnover.Unmarshal(m, b)
}
func (m *AnnualTurnover) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnualTurnover.Marshal(b, m, deterministic)
}
func (dst *AnnualTurnover) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnualTurnover.Merge(dst, src)
}
func (m *AnnualTurnover) XXX_Size() int {
	return xxx_messageInfo_AnnualTurnover.Size(m)
}
func (m *AnnualTurnover) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnualTurnover.DiscardUnknown(m)
}

var xxx_messageInfo_AnnualTurnover proto.InternalMessageInfo

func (m *AnnualTurnover) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *AnnualTurnover) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *AnnualTurnover) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *AnnualTurnover) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type OrderViewMoney struct {
	Amount               float64  `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderViewMoney) Reset()         { *m = OrderViewMoney{} }
func (m *OrderViewMoney) String() string { return proto.CompactTextString(m) }
func (*OrderViewMoney) ProtoMessage()    {}
func (*OrderViewMoney) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{93}
}
func (m *OrderViewMoney) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderViewMoney.Unmarshal(m, b)
}
func (m *OrderViewMoney) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderViewMoney.Marshal(b, m, deterministic)
}
func (dst *OrderViewMoney) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderViewMoney.Merge(dst, src)
}
func (m *OrderViewMoney) XXX_Size() int {
	return xxx_messageInfo_OrderViewMoney.Size(m)
}
func (m *OrderViewMoney) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderViewMoney.DiscardUnknown(m)
}

var xxx_messageInfo_OrderViewMoney proto.InternalMessageInfo

func (m *OrderViewMoney) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderViewMoney) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type OrderViewPublic struct {
	// @inject_tag: json:"-" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"-" bson:"_id"`
	// @inject_tag: json:"uuid" bson:"uuid"
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid" bson:"uuid"`
	// @inject_tag: json:"total_payment_amount" bson:"total_payment_amount"
	TotalPaymentAmount float64 `protobuf:"fixed64,3,opt,name=total_payment_amount,json=totalPaymentAmount,proto3" json:"total_payment_amount" bson:"total_payment_amount"`
	// @inject_tag: json:"currency" bson:"currency"
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency" bson:"currency"`
	// @inject_tag: json:"project" bson:"project"
	Project *ProjectOrder `protobuf:"bytes,5,opt,name=project,proto3" json:"project" bson:"project"`
	// @inject_tag: bson:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at" bson:"created_at"`
	// @inject_tag: json:"transaction" bson:"pm_order_id"
	Transaction string `protobuf:"bytes,7,opt,name=transaction,proto3" json:"transaction" bson:"pm_order_id"`
	// @inject_tag: json:"payment_method" bson:"payment_method"
	PaymentMethod *PaymentMethodOrder `protobuf:"bytes,8,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method" bson:"payment_method"`
	// @inject_tag: json:"country_code" bson:"country_code"
	CountryCode string `protobuf:"bytes,9,opt,name=country_code,json=countryCode,proto3" json:"country_code" bson:"country_code"`
	// @inject_tag: json:"merchant_id" bson:"merchant_id"
	MerchantId string `protobuf:"bytes,10,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id" bson:"merchant_id"`
	// @inject_tag: json:"locale" bson:"locale"
	Locale string `protobuf:"bytes,11,opt,name=locale,proto3" json:"locale" bson:"locale"`
	// @inject_tag: json:"status" bson:"status"
	Status string `protobuf:"bytes,12,opt,name=status,proto3" json:"status" bson:"status"`
	// @inject_tag: json:"transaction_date" bson:"pm_order_close_date"
	TransactionDate *timestamp.Timestamp `protobuf:"bytes,13,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date" bson:"pm_order_close_date"`
	// @inject_tag: json:"user" bson:"user"
	User *OrderUser `protobuf:"bytes,14,opt,name=user,proto3" json:"user" bson:"user"`
	// @inject_tag: json:"billing_address" bson:"billing_address"
	BillingAddress *OrderBillingAddress `protobuf:"bytes,15,opt,name=billing_address,json=billingAddress,proto3" json:"billing_address" bson:"billing_address"`
	// @inject_tag: json:"type" bson:"type"
	Type string `protobuf:"bytes,16,opt,name=type,proto3" json:"type" bson:"type"`
	// @inject_tag: json:"is_vat_deduction" bson:"is_vat_deduction"
	IsVatDeduction bool `protobuf:"varint,17,opt,name=is_vat_deduction,json=isVatDeduction,proto3" json:"is_vat_deduction" bson:"is_vat_deduction"`
	// @inject_tag: json:"gross_revenue" bson:"gross_revenue"
	GrossRevenue *OrderViewMoney `protobuf:"bytes,18,opt,name=gross_revenue,json=grossRevenue,proto3" json:"gross_revenue" bson:"gross_revenue"`
	// @inject_tag: json:"tax_fee" bson:"tax_fee"
	TaxFee *OrderViewMoney `protobuf:"bytes,19,opt,name=tax_fee,json=taxFee,proto3" json:"tax_fee" bson:"tax_fee"`
	// @inject_tag: json:"tax_fee_currency_exchange_fee" bson:"tax_fee_currency_exchange_fee"
	TaxFeeCurrencyExchangeFee *OrderViewMoney `protobuf:"bytes,20,opt,name=tax_fee_currency_exchange_fee,json=taxFeeCurrencyExchangeFee,proto3" json:"tax_fee_currency_exchange_fee" bson:"tax_fee_currency_exchange_fee"`
	// @inject_tag: json:"tax_fee_total" bson:"tax_fee_total"
	TaxFeeTotal *OrderViewMoney `protobuf:"bytes,21,opt,name=tax_fee_total,json=taxFeeTotal,proto3" json:"tax_fee_total" bson:"tax_fee_total"`
	// @inject_tag: json:"method_fee_total" bson:"method_fee_total"
	MethodFeeTotal *OrderViewMoney `protobuf:"bytes,22,opt,name=method_fee_total,json=methodFeeTotal,proto3" json:"method_fee_total" bson:"method_fee_total"`
	// @inject_tag: json:"method_fee_tariff" bson:"method_fee_tariff"
	MethodFeeTariff *OrderViewMoney `protobuf:"bytes,23,opt,name=method_fee_tariff,json=methodFeeTariff,proto3" json:"method_fee_tariff" bson:"method_fee_tariff"`
	// @inject_tag: json:"method_fixed_fee_tariff" bson:"method_fixed_fee_tariff"
	MethodFixedFeeTariff *OrderViewMoney `protobuf:"bytes,24,opt,name=method_fixed_fee_tariff,json=methodFixedFeeTariff,proto3" json:"method_fixed_fee_tariff" bson:"method_fixed_fee_tariff"`
	// @inject_tag: json:"paysuper_fixed_fee" bson:"paysuper_fixed_fee"
	PaysuperFixedFee *OrderViewMoney `protobuf:"bytes,25,opt,name=paysuper_fixed_fee,json=paysuperFixedFee,proto3" json:"paysuper_fixed_fee" bson:"paysuper_fixed_fee"`
	// @inject_tag: json:"fees_total" bson:"fees_total"
	FeesTotal *OrderViewMoney `protobuf:"bytes,26,opt,name=fees_total,json=feesTotal,proto3" json:"fees_total" bson:"fees_total"`
	// @inject_tag: json:"fees_total_local" bson:"fees_total_local"
	FeesTotalLocal *OrderViewMoney `protobuf:"bytes,27,opt,name=fees_total_local,json=feesTotalLocal,proto3" json:"fees_total_local" bson:"fees_total_local"`
	// @inject_tag: json:"net_revenue" bson:"net_revenue"
	NetRevenue *OrderViewMoney `protobuf:"bytes,28,opt,name=net_revenue,json=netRevenue,proto3" json:"net_revenue" bson:"net_revenue"`
	// @inject_tag: json:"refund_gross_revenue" bson:"refund_gross_revenue"
	RefundGrossRevenue *OrderViewMoney `protobuf:"bytes,29,opt,name=refund_gross_revenue,json=refundGrossRevenue,proto3" json:"refund_gross_revenue" bson:"refund_gross_revenue"`
	// @inject_tag: json:"method_refund_fee_tariff" bson:"method_refund_fee_tariff"
	MethodRefundFeeTariff *OrderViewMoney `protobuf:"bytes,30,opt,name=method_refund_fee_tariff,json=methodRefundFeeTariff,proto3" json:"method_refund_fee_tariff" bson:"method_refund_fee_tariff"`
	// @inject_tag: json:"merchant_refund_fixed_fee_tariff" bson:"merchant_refund_fixed_fee_tariff"
	MerchantRefundFixedFeeTariff *OrderViewMoney `protobuf:"bytes,31,opt,name=merchant_refund_fixed_fee_tariff,json=merchantRefundFixedFeeTariff,proto3" json:"merchant_refund_fixed_fee_tariff" bson:"merchant_refund_fixed_fee_tariff"`
	// @inject_tag: json:"refund_tax_fee" bson:"refund_tax_fee"
	RefundTaxFee *OrderViewMoney `protobuf:"bytes,32,opt,name=refund_tax_fee,json=refundTaxFee,proto3" json:"refund_tax_fee" bson:"refund_tax_fee"`
	// @inject_tag: json:"refund_tax_fee_currency_exchange_fee" bson:"refund_tax_fee_currency_exchange_fee"
	RefundTaxFeeCurrencyExchangeFee *OrderViewMoney `protobuf:"bytes,33,opt,name=refund_tax_fee_currency_exchange_fee,json=refundTaxFeeCurrencyExchangeFee,proto3" json:"refund_tax_fee_currency_exchange_fee" bson:"refund_tax_fee_currency_exchange_fee"`
	// @inject_tag: json:"paysuper_refund_tax_fee_currency_exchange_fee" bson:"paysuper_refund_tax_fee_currency_exchange_fee"
	PaysuperRefundTaxFeeCurrencyExchangeFee *OrderViewMoney `protobuf:"bytes,34,opt,name=paysuper_refund_tax_fee_currency_exchange_fee,json=paysuperRefundTaxFeeCurrencyExchangeFee,proto3" json:"paysuper_refund_tax_fee_currency_exchange_fee" bson:"paysuper_refund_tax_fee_currency_exchange_fee"`
	// @inject_tag: json:"refund_reverse_revenue" bson:"refund_reverse_revenue"
	RefundReverseRevenue *OrderViewMoney `protobuf:"bytes,35,opt,name=refund_reverse_revenue,json=refundReverseRevenue,proto3" json:"refund_reverse_revenue" bson:"refund_reverse_revenue"`
	// @inject_tag: json:"refund_fees_total" bson:"refund_fees_total"
	RefundFeesTotal *OrderViewMoney `protobuf:"bytes,36,opt,name=refund_fees_total,json=refundFeesTotal,proto3" json:"refund_fees_total" bson:"refund_fees_total"`
	// @inject_tag: json:"refund_fees_total_local" bson:"refund_fees_total_local"
	RefundFeesTotalLocal *OrderViewMoney `protobuf:"bytes,37,opt,name=refund_fees_total_local,json=refundFeesTotalLocal,proto3" json:"refund_fees_total_local" bson:"refund_fees_total_local"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderViewPublic) Reset()         { *m = OrderViewPublic{} }
func (m *OrderViewPublic) String() string { return proto.CompactTextString(m) }
func (*OrderViewPublic) ProtoMessage()    {}
func (*OrderViewPublic) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{94}
}
func (m *OrderViewPublic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderViewPublic.Unmarshal(m, b)
}
func (m *OrderViewPublic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderViewPublic.Marshal(b, m, deterministic)
}
func (dst *OrderViewPublic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderViewPublic.Merge(dst, src)
}
func (m *OrderViewPublic) XXX_Size() int {
	return xxx_messageInfo_OrderViewPublic.Size(m)
}
func (m *OrderViewPublic) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderViewPublic.DiscardUnknown(m)
}

var xxx_messageInfo_OrderViewPublic proto.InternalMessageInfo

func (m *OrderViewPublic) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderViewPublic) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *OrderViewPublic) GetTotalPaymentAmount() float64 {
	if m != nil {
		return m.TotalPaymentAmount
	}
	return 0
}

func (m *OrderViewPublic) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderViewPublic) GetProject() *ProjectOrder {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *OrderViewPublic) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *OrderViewPublic) GetTransaction() string {
	if m != nil {
		return m.Transaction
	}
	return ""
}

func (m *OrderViewPublic) GetPaymentMethod() *PaymentMethodOrder {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *OrderViewPublic) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *OrderViewPublic) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *OrderViewPublic) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *OrderViewPublic) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *OrderViewPublic) GetTransactionDate() *timestamp.Timestamp {
	if m != nil {
		return m.TransactionDate
	}
	return nil
}

func (m *OrderViewPublic) GetUser() *OrderUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *OrderViewPublic) GetBillingAddress() *OrderBillingAddress {
	if m != nil {
		return m.BillingAddress
	}
	return nil
}

func (m *OrderViewPublic) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OrderViewPublic) GetIsVatDeduction() bool {
	if m != nil {
		return m.IsVatDeduction
	}
	return false
}

func (m *OrderViewPublic) GetGrossRevenue() *OrderViewMoney {
	if m != nil {
		return m.GrossRevenue
	}
	return nil
}

func (m *OrderViewPublic) GetTaxFee() *OrderViewMoney {
	if m != nil {
		return m.TaxFee
	}
	return nil
}

func (m *OrderViewPublic) GetTaxFeeCurrencyExchangeFee() *OrderViewMoney {
	if m != nil {
		return m.TaxFeeCurrencyExchangeFee
	}
	return nil
}

func (m *OrderViewPublic) GetTaxFeeTotal() *OrderViewMoney {
	if m != nil {
		return m.TaxFeeTotal
	}
	return nil
}

func (m *OrderViewPublic) GetMethodFeeTotal() *OrderViewMoney {
	if m != nil {
		return m.MethodFeeTotal
	}
	return nil
}

func (m *OrderViewPublic) GetMethodFeeTariff() *OrderViewMoney {
	if m != nil {
		return m.MethodFeeTariff
	}
	return nil
}

func (m *OrderViewPublic) GetMethodFixedFeeTariff() *OrderViewMoney {
	if m != nil {
		return m.MethodFixedFeeTariff
	}
	return nil
}

func (m *OrderViewPublic) GetPaysuperFixedFee() *OrderViewMoney {
	if m != nil {
		return m.PaysuperFixedFee
	}
	return nil
}

func (m *OrderViewPublic) GetFeesTotal() *OrderViewMoney {
	if m != nil {
		return m.FeesTotal
	}
	return nil
}

func (m *OrderViewPublic) GetFeesTotalLocal() *OrderViewMoney {
	if m != nil {
		return m.FeesTotalLocal
	}
	return nil
}

func (m *OrderViewPublic) GetNetRevenue() *OrderViewMoney {
	if m != nil {
		return m.NetRevenue
	}
	return nil
}

func (m *OrderViewPublic) GetRefundGrossRevenue() *OrderViewMoney {
	if m != nil {
		return m.RefundGrossRevenue
	}
	return nil
}

func (m *OrderViewPublic) GetMethodRefundFeeTariff() *OrderViewMoney {
	if m != nil {
		return m.MethodRefundFeeTariff
	}
	return nil
}

func (m *OrderViewPublic) GetMerchantRefundFixedFeeTariff() *OrderViewMoney {
	if m != nil {
		return m.MerchantRefundFixedFeeTariff
	}
	return nil
}

func (m *OrderViewPublic) GetRefundTaxFee() *OrderViewMoney {
	if m != nil {
		return m.RefundTaxFee
	}
	return nil
}

func (m *OrderViewPublic) GetRefundTaxFeeCurrencyExchangeFee() *OrderViewMoney {
	if m != nil {
		return m.RefundTaxFeeCurrencyExchangeFee
	}
	return nil
}

func (m *OrderViewPublic) GetPaysuperRefundTaxFeeCurrencyExchangeFee() *OrderViewMoney {
	if m != nil {
		return m.PaysuperRefundTaxFeeCurrencyExchangeFee
	}
	return nil
}

func (m *OrderViewPublic) GetRefundReverseRevenue() *OrderViewMoney {
	if m != nil {
		return m.RefundReverseRevenue
	}
	return nil
}

func (m *OrderViewPublic) GetRefundFeesTotal() *OrderViewMoney {
	if m != nil {
		return m.RefundFeesTotal
	}
	return nil
}

func (m *OrderViewPublic) GetRefundFeesTotalLocal() *OrderViewMoney {
	if m != nil {
		return m.RefundFeesTotalLocal
	}
	return nil
}

type OrderViewPrivate struct {
	// @inject_tag: json:"-" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"-" bson:"_id"`
	// @inject_tag: json:"uuid" bson:"uuid"
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid" bson:"uuid"`
	// @inject_tag: json:"total_payment_amount" bson:"total_payment_amount"
	TotalPaymentAmount float64 `protobuf:"fixed64,3,opt,name=total_payment_amount,json=totalPaymentAmount,proto3" json:"total_payment_amount" bson:"total_payment_amount"`
	// @inject_tag: json:"currency" bson:"currency"
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency" bson:"currency"`
	// @inject_tag: json:"project" bson:"project"
	Project *ProjectOrder `protobuf:"bytes,5,opt,name=project,proto3" json:"project" bson:"project"`
	// @inject_tag: bson:"created_at" bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at" bson:"created_at"`
	// @inject_tag: json:"transaction" bson:"pm_order_id"
	Transaction string `protobuf:"bytes,7,opt,name=transaction,proto3" json:"transaction" bson:"pm_order_id"`
	// @inject_tag: json:"payment_method" bson:"payment_method"
	PaymentMethod *PaymentMethodOrder `protobuf:"bytes,8,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method" bson:"payment_method"`
	// @inject_tag: json:"country_code" bson:"country_code"
	CountryCode string `protobuf:"bytes,9,opt,name=country_code,json=countryCode,proto3" json:"country_code" bson:"country_code"`
	// @inject_tag: json:"merchant_id" bson:"merchant_id"
	MerchantId string `protobuf:"bytes,10,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id" bson:"merchant_id"`
	// @inject_tag: json:"locale" bson:"locale"
	Locale string `protobuf:"bytes,11,opt,name=locale,proto3" json:"locale" bson:"locale"`
	// @inject_tag: json:"status" bson:"status"
	Status string `protobuf:"bytes,12,opt,name=status,proto3" json:"status" bson:"status"`
	// @inject_tag: json:"transaction_date" bson:"pm_order_close_date"
	TransactionDate *timestamp.Timestamp `protobuf:"bytes,13,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date" bson:"pm_order_close_date"`
	// @inject_tag: json:"user" bson:"user"
	User *OrderUser `protobuf:"bytes,14,opt,name=user,proto3" json:"user" bson:"user"`
	// @inject_tag: json:"billing_address" bson:"billing_address"
	BillingAddress *OrderBillingAddress `protobuf:"bytes,15,opt,name=billing_address,json=billingAddress,proto3" json:"billing_address" bson:"billing_address"`
	// @inject_tag: json:"type" bson:"type"
	Type string `protobuf:"bytes,16,opt,name=type,proto3" json:"type" bson:"type"`
	// @inject_tag: json:"is_vat_deduction" bson:"is_vat_deduction"
	IsVatDeduction bool `protobuf:"varint,17,opt,name=is_vat_deduction,json=isVatDeduction,proto3" json:"is_vat_deduction" bson:"is_vat_deduction"`
	// @inject_tag: json:"payment_gross_revenue_local" bson:"payment_gross_revenue_local"
	PaymentGrossRevenueLocal *OrderViewMoney `protobuf:"bytes,18,opt,name=payment_gross_revenue_local,json=paymentGrossRevenueLocal,proto3" json:"payment_gross_revenue_local" bson:"payment_gross_revenue_local"`
	// @inject_tag: json:"payment_gross_revenue_origin" bson:"payment_gross_revenue_origin"
	PaymentGrossRevenueOrigin *OrderViewMoney `protobuf:"bytes,19,opt,name=payment_gross_revenue_origin,json=paymentGrossRevenueOrigin,proto3" json:"payment_gross_revenue_origin" bson:"payment_gross_revenue_origin"`
	// @inject_tag: json:"payment_gross_revenue" bson:"payment_gross_revenue"
	PaymentGrossRevenue *OrderViewMoney `protobuf:"bytes,20,opt,name=payment_gross_revenue,json=paymentGrossRevenue,proto3" json:"payment_gross_revenue" bson:"payment_gross_revenue"`
	// @inject_tag: json:"payment_tax_fee" bson:"payment_tax_fee"
	PaymentTaxFee *OrderViewMoney `protobuf:"bytes,21,opt,name=payment_tax_fee,json=paymentTaxFee,proto3" json:"payment_tax_fee" bson:"payment_tax_fee"`
	// @inject_tag: json:"payment_tax_fee_local" bson:"payment_tax_fee_local"
	PaymentTaxFeeLocal *OrderViewMoney `protobuf:"bytes,22,opt,name=payment_tax_fee_local,json=paymentTaxFeeLocal,proto3" json:"payment_tax_fee_local" bson:"payment_tax_fee_local"`
	// @inject_tag: json:"payment_tax_fee_origin" bson:"payment_tax_fee_origin"
	PaymentTaxFeeOrigin *OrderViewMoney `protobuf:"bytes,23,opt,name=payment_tax_fee_origin,json=paymentTaxFeeOrigin,proto3" json:"payment_tax_fee_origin" bson:"payment_tax_fee_origin"`
	// @inject_tag: json:"payment_tax_fee_currency_exchange_fee" bson:"payment_tax_fee_currency_exchange_fee"
	PaymentTaxFeeCurrencyExchangeFee *OrderViewMoney `protobuf:"bytes,24,opt,name=payment_tax_fee_currency_exchange_fee,json=paymentTaxFeeCurrencyExchangeFee,proto3" json:"payment_tax_fee_currency_exchange_fee" bson:"payment_tax_fee_currency_exchange_fee"`
	// @inject_tag: json:"payment_tax_fee_total" bson:"payment_tax_fee_total"
	PaymentTaxFeeTotal *OrderViewMoney `protobuf:"bytes,25,opt,name=payment_tax_fee_total,json=paymentTaxFeeTotal,proto3" json:"payment_tax_fee_total" bson:"payment_tax_fee_total"`
	// @inject_tag: json:"payment_gross_revenue_fx" bson:"payment_gross_revenue_fx"
	PaymentGrossRevenueFx *OrderViewMoney `protobuf:"bytes,26,opt,name=payment_gross_revenue_fx,json=paymentGrossRevenueFx,proto3" json:"payment_gross_revenue_fx" bson:"payment_gross_revenue_fx"`
	// @inject_tag: json:"payment_gross_revenue_fx_tax_fee" bson:"payment_gross_revenue_fx_tax_fee"
	PaymentGrossRevenueFxTaxFee *OrderViewMoney `protobuf:"bytes,27,opt,name=payment_gross_revenue_fx_tax_fee,json=paymentGrossRevenueFxTaxFee,proto3" json:"payment_gross_revenue_fx_tax_fee" bson:"payment_gross_revenue_fx_tax_fee"`
	// @inject_tag: json:"payment_gross_revenue_fx_profit" bson:"payment_gross_revenue_fx_profit"
	PaymentGrossRevenueFxProfit *OrderViewMoney `protobuf:"bytes,28,opt,name=payment_gross_revenue_fx_profit,json=paymentGrossRevenueFxProfit,proto3" json:"payment_gross_revenue_fx_profit" bson:"payment_gross_revenue_fx_profit"`
	// @inject_tag: json:"gross_revenue" bson:"gross_revenue"
	GrossRevenue *OrderViewMoney `protobuf:"bytes,29,opt,name=gross_revenue,json=grossRevenue,proto3" json:"gross_revenue" bson:"gross_revenue"`
	// @inject_tag: json:"tax_fee" bson:"tax_fee"
	TaxFee *OrderViewMoney `protobuf:"bytes,30,opt,name=tax_fee,json=taxFee,proto3" json:"tax_fee" bson:"tax_fee"`
	// @inject_tag: json:"tax_fee_currency_exchange_fee" bson:"tax_fee_currency_exchange_fee"
	TaxFeeCurrencyExchangeFee *OrderViewMoney `protobuf:"bytes,31,opt,name=tax_fee_currency_exchange_fee,json=taxFeeCurrencyExchangeFee,proto3" json:"tax_fee_currency_exchange_fee" bson:"tax_fee_currency_exchange_fee"`
	// @inject_tag: json:"tax_fee_total" bson:"tax_fee_total"
	TaxFeeTotal *OrderViewMoney `protobuf:"bytes,32,opt,name=tax_fee_total,json=taxFeeTotal,proto3" json:"tax_fee_total" bson:"tax_fee_total"`
	// @inject_tag: json:"method_fee_total" bson:"method_fee_total"
	MethodFeeTotal *OrderViewMoney `protobuf:"bytes,33,opt,name=method_fee_total,json=methodFeeTotal,proto3" json:"method_fee_total" bson:"method_fee_total"`
	// @inject_tag: json:"method_fee_tariff" bson:"method_fee_tariff"
	MethodFeeTariff *OrderViewMoney `protobuf:"bytes,34,opt,name=method_fee_tariff,json=methodFeeTariff,proto3" json:"method_fee_tariff" bson:"method_fee_tariff"`
	// @inject_tag: json:"paysuper_method_fee_tariff_self_cost" bson:"paysuper_method_fee_tariff_self_cost"
	PaysuperMethodFeeTariffSelfCost *OrderViewMoney `protobuf:"bytes,35,opt,name=paysuper_method_fee_tariff_self_cost,json=paysuperMethodFeeTariffSelfCost,proto3" json:"paysuper_method_fee_tariff_self_cost" bson:"paysuper_method_fee_tariff_self_cost"`
	// @inject_tag: json:"paysuper_method_fee_profit" bson:"paysuper_method_fee_profit"
	PaysuperMethodFeeProfit *OrderViewMoney `protobuf:"bytes,36,opt,name=paysuper_method_fee_profit,json=paysuperMethodFeeProfit,proto3" json:"paysuper_method_fee_profit" bson:"paysuper_method_fee_profit"`
	// @inject_tag: json:"method_fixed_fee_tariff" bson:"method_fixed_fee_tariff"
	MethodFixedFeeTariff *OrderViewMoney `protobuf:"bytes,37,opt,name=method_fixed_fee_tariff,json=methodFixedFeeTariff,proto3" json:"method_fixed_fee_tariff" bson:"method_fixed_fee_tariff"`
	// @inject_tag: json:"paysuper_method_fixed_fee_tariff_fx_profit" bson:"paysuper_method_fixed_fee_tariff_fx_profit"
	PaysuperMethodFixedFeeTariffFxProfit *OrderViewMoney `protobuf:"bytes,38,opt,name=paysuper_method_fixed_fee_tariff_fx_profit,json=paysuperMethodFixedFeeTariffFxProfit,proto3" json:"paysuper_method_fixed_fee_tariff_fx_profit" bson:"paysuper_method_fixed_fee_tariff_fx_profit"`
	// @inject_tag: json:"paysuper_method_fixed_fee_tariff_self_cost" bson:"paysuper_method_fixed_fee_tariff_self_cost"
	PaysuperMethodFixedFeeTariffSelfCost *OrderViewMoney `protobuf:"bytes,39,opt,name=paysuper_method_fixed_fee_tariff_self_cost,json=paysuperMethodFixedFeeTariffSelfCost,proto3" json:"paysuper_method_fixed_fee_tariff_self_cost" bson:"paysuper_method_fixed_fee_tariff_self_cost"`
	// @inject_tag: json:"paysuper_method_fixed_fee_tariff_total_profit" bson:"paysuper_method_fixed_fee_tariff_total_profit"
	PaysuperMethodFixedFeeTariffTotalProfit *OrderViewMoney `protobuf:"bytes,40,opt,name=paysuper_method_fixed_fee_tariff_total_profit,json=paysuperMethodFixedFeeTariffTotalProfit,proto3" json:"paysuper_method_fixed_fee_tariff_total_profit" bson:"paysuper_method_fixed_fee_tariff_total_profit"`
	// @inject_tag: json:"paysuper_fixed_fee" bson:"paysuper_fixed_fee"
	PaysuperFixedFee *OrderViewMoney `protobuf:"bytes,41,opt,name=paysuper_fixed_fee,json=paysuperFixedFee,proto3" json:"paysuper_fixed_fee" bson:"paysuper_fixed_fee"`
	// @inject_tag: json:"paysuper_fixed_fee_fx_profit" bson:"paysuper_fixed_fee_fx_profit"
	PaysuperFixedFeeFxProfit *OrderViewMoney `protobuf:"bytes,42,opt,name=paysuper_fixed_fee_fx_profit,json=paysuperFixedFeeFxProfit,proto3" json:"paysuper_fixed_fee_fx_profit" bson:"paysuper_fixed_fee_fx_profit"`
	// @inject_tag: json:"fees_total" bson:"fees_total"
	FeesTotal *OrderViewMoney `protobuf:"bytes,43,opt,name=fees_total,json=feesTotal,proto3" json:"fees_total" bson:"fees_total"`
	// @inject_tag: json:"fees_total_local" bson:"fees_total_local"
	FeesTotalLocal *OrderViewMoney `protobuf:"bytes,44,opt,name=fees_total_local,json=feesTotalLocal,proto3" json:"fees_total_local" bson:"fees_total_local"`
	// @inject_tag: json:"net_revenue" bson:"net_revenue"
	NetRevenue *OrderViewMoney `protobuf:"bytes,45,opt,name=net_revenue,json=netRevenue,proto3" json:"net_revenue" bson:"net_revenue"`
	// @inject_tag: json:"paysuper_method_total_profit" bson:"paysuper_method_total_profit"
	PaysuperMethodTotalProfit *OrderViewMoney `protobuf:"bytes,46,opt,name=paysuper_method_total_profit,json=paysuperMethodTotalProfit,proto3" json:"paysuper_method_total_profit" bson:"paysuper_method_total_profit"`
	// @inject_tag: json:"paysuper_total_profit" bson:"paysuper_total_profit"
	PaysuperTotalProfit *OrderViewMoney `protobuf:"bytes,47,opt,name=paysuper_total_profit,json=paysuperTotalProfit,proto3" json:"paysuper_total_profit" bson:"paysuper_total_profit"`
	// @inject_tag: json:"payment_refund_gross_revenue_local" bson:"payment_refund_gross_revenue_local"
	PaymentRefundGrossRevenueLocal *OrderViewMoney `protobuf:"bytes,48,opt,name=payment_refund_gross_revenue_local,json=paymentRefundGrossRevenueLocal,proto3" json:"payment_refund_gross_revenue_local" bson:"payment_refund_gross_revenue_local"`
	// @inject_tag: json:"payment_refund_gross_revenue_origin" bson:"payment_refund_gross_revenue_origin"
	PaymentRefundGrossRevenueOrigin *OrderViewMoney `protobuf:"bytes,49,opt,name=payment_refund_gross_revenue_origin,json=paymentRefundGrossRevenueOrigin,proto3" json:"payment_refund_gross_revenue_origin" bson:"payment_refund_gross_revenue_origin"`
	// @inject_tag: json:"payment_refund_gross_revenue" bson:"payment_refund_gross_revenue"
	PaymentRefundGrossRevenue *OrderViewMoney `protobuf:"bytes,50,opt,name=payment_refund_gross_revenue,json=paymentRefundGrossRevenue,proto3" json:"payment_refund_gross_revenue" bson:"payment_refund_gross_revenue"`
	// @inject_tag: json:"payment_refund_tax_fee" bson:"payment_refund_tax_fee"
	PaymentRefundTaxFee *OrderViewMoney `protobuf:"bytes,51,opt,name=payment_refund_tax_fee,json=paymentRefundTaxFee,proto3" json:"payment_refund_tax_fee" bson:"payment_refund_tax_fee"`
	// @inject_tag: json:"payment_refund_tax_fee_local" bson:"payment_refund_tax_fee_local"
	PaymentRefundTaxFeeLocal *OrderViewMoney `protobuf:"bytes,52,opt,name=payment_refund_tax_fee_local,json=paymentRefundTaxFeeLocal,proto3" json:"payment_refund_tax_fee_local" bson:"payment_refund_tax_fee_local"`
	// @inject_tag: json:"payment_refund_tax_fee_origin" bson:"payment_refund_tax_fee_origin"
	PaymentRefundTaxFeeOrigin *OrderViewMoney `protobuf:"bytes,53,opt,name=payment_refund_tax_fee_origin,json=paymentRefundTaxFeeOrigin,proto3" json:"payment_refund_tax_fee_origin" bson:"payment_refund_tax_fee_origin"`
	// @inject_tag: json:"payment_refund_fee_tariff" bson:"payment_refund_fee_tariff"
	PaymentRefundFeeTariff *OrderViewMoney `protobuf:"bytes,54,opt,name=payment_refund_fee_tariff,json=paymentRefundFeeTariff,proto3" json:"payment_refund_fee_tariff" bson:"payment_refund_fee_tariff"`
	// @inject_tag: json:"method_refund_fixed_fee_tariff" bson:"method_refund_fixed_fee_tariff"
	MethodRefundFixedFeeTariff *OrderViewMoney `protobuf:"bytes,55,opt,name=method_refund_fixed_fee_tariff,json=methodRefundFixedFeeTariff,proto3" json:"method_refund_fixed_fee_tariff" bson:"method_refund_fixed_fee_tariff"`
	// @inject_tag: json:"refund_gross_revenue" bson:"refund_gross_revenue"
	RefundGrossRevenue *OrderViewMoney `protobuf:"bytes,56,opt,name=refund_gross_revenue,json=refundGrossRevenue,proto3" json:"refund_gross_revenue" bson:"refund_gross_revenue"`
	// @inject_tag: json:"refund_gross_revenue_fx" bson:"refund_gross_revenue_fx"
	RefundGrossRevenueFx *OrderViewMoney `protobuf:"bytes,57,opt,name=refund_gross_revenue_fx,json=refundGrossRevenueFx,proto3" json:"refund_gross_revenue_fx" bson:"refund_gross_revenue_fx"`
	// @inject_tag: json:"method_refund_fee_tariff" bson:"method_refund_fee_tariff"
	MethodRefundFeeTariff *OrderViewMoney `protobuf:"bytes,58,opt,name=method_refund_fee_tariff,json=methodRefundFeeTariff,proto3" json:"method_refund_fee_tariff" bson:"method_refund_fee_tariff"`
	// @inject_tag: json:"paysuper_method_refund_fee_tariff_profit" bson:"paysuper_method_refund_fee_tariff_profit"
	PaysuperMethodRefundFeeTariffProfit *OrderViewMoney `protobuf:"bytes,59,opt,name=paysuper_method_refund_fee_tariff_profit,json=paysuperMethodRefundFeeTariffProfit,proto3" json:"paysuper_method_refund_fee_tariff_profit" bson:"paysuper_method_refund_fee_tariff_profit"`
	// @inject_tag: json:"paysuper_method_refund_fixed_fee_tariff_self_cost" bson:"paysuper_method_refund_fixed_fee_tariff_self_cost"
	PaysuperMethodRefundFixedFeeTariffSelfCost *OrderViewMoney `protobuf:"bytes,60,opt,name=paysuper_method_refund_fixed_fee_tariff_self_cost,json=paysuperMethodRefundFixedFeeTariffSelfCost,proto3" json:"paysuper_method_refund_fixed_fee_tariff_self_cost" bson:"paysuper_method_refund_fixed_fee_tariff_self_cost"`
	// @inject_tag: json:"merchant_refund_fixed_fee_tariff" bson:"merchant_refund_fixed_fee_tariff"
	MerchantRefundFixedFeeTariff *OrderViewMoney `protobuf:"bytes,61,opt,name=merchant_refund_fixed_fee_tariff,json=merchantRefundFixedFeeTariff,proto3" json:"merchant_refund_fixed_fee_tariff" bson:"merchant_refund_fixed_fee_tariff"`
	// @inject_tag: json:"paysuper_method_refund_fixed_fee_tariff_profit" bson:"paysuper_method_refund_fixed_fee_tariff_profit"
	PaysuperMethodRefundFixedFeeTariffProfit *OrderViewMoney `protobuf:"bytes,62,opt,name=paysuper_method_refund_fixed_fee_tariff_profit,json=paysuperMethodRefundFixedFeeTariffProfit,proto3" json:"paysuper_method_refund_fixed_fee_tariff_profit" bson:"paysuper_method_refund_fixed_fee_tariff_profit"`
	// @inject_tag: json:"refund_tax_fee" bson:"refund_tax_fee"
	RefundTaxFee *OrderViewMoney `protobuf:"bytes,63,opt,name=refund_tax_fee,json=refundTaxFee,proto3" json:"refund_tax_fee" bson:"refund_tax_fee"`
	// @inject_tag: json:"refund_tax_fee_currency_exchange_fee" bson:"refund_tax_fee_currency_exchange_fee"
	RefundTaxFeeCurrencyExchangeFee *OrderViewMoney `protobuf:"bytes,64,opt,name=refund_tax_fee_currency_exchange_fee,json=refundTaxFeeCurrencyExchangeFee,proto3" json:"refund_tax_fee_currency_exchange_fee" bson:"refund_tax_fee_currency_exchange_fee"`
	// @inject_tag: json:"paysuper_refund_tax_fee_currency_exchange_fee" bson:"paysuper_refund_tax_fee_currency_exchange_fee"
	PaysuperRefundTaxFeeCurrencyExchangeFee *OrderViewMoney `protobuf:"bytes,65,opt,name=paysuper_refund_tax_fee_currency_exchange_fee,json=paysuperRefundTaxFeeCurrencyExchangeFee,proto3" json:"paysuper_refund_tax_fee_currency_exchange_fee" bson:"paysuper_refund_tax_fee_currency_exchange_fee"`
	// @inject_tag: json:"refund_tax_fee_total" bson:"refund_tax_fee_total"
	RefundTaxFeeTotal *OrderViewMoney `protobuf:"bytes,66,opt,name=refund_tax_fee_total,json=refundTaxFeeTotal,proto3" json:"refund_tax_fee_total" bson:"refund_tax_fee_total"`
	// @inject_tag: json:"refund_reverse_revenue" bson:"refund_reverse_revenue"
	RefundReverseRevenue *OrderViewMoney `protobuf:"bytes,67,opt,name=refund_reverse_revenue,json=refundReverseRevenue,proto3" json:"refund_reverse_revenue" bson:"refund_reverse_revenue"`
	// @inject_tag: json:"refund_fees_total" bson:"refund_fees_total"
	RefundFeesTotal *OrderViewMoney `protobuf:"bytes,68,opt,name=refund_fees_total,json=refundFeesTotal,proto3" json:"refund_fees_total" bson:"refund_fees_total"`
	// @inject_tag: json:"refund_fees_total_local" bson:"refund_fees_total_local"
	RefundFeesTotalLocal *OrderViewMoney `protobuf:"bytes,69,opt,name=refund_fees_total_local,json=refundFeesTotalLocal,proto3" json:"refund_fees_total_local" bson:"refund_fees_total_local"`
	// @inject_tag: json:"paysuper_refund_total_profit" bson:"paysuper_refund_total_profit"
	PaysuperRefundTotalProfit *OrderViewMoney `protobuf:"bytes,70,opt,name=paysuper_refund_total_profit,json=paysuperRefundTotalProfit,proto3" json:"paysuper_refund_total_profit" bson:"paysuper_refund_total_profit"`
	XXX_NoUnkeyedLiteral      struct{}        `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized          []byte          `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache             int32           `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *OrderViewPrivate) Reset()         { *m = OrderViewPrivate{} }
func (m *OrderViewPrivate) String() string { return proto.CompactTextString(m) }
func (*OrderViewPrivate) ProtoMessage()    {}
func (*OrderViewPrivate) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{95}
}
func (m *OrderViewPrivate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderViewPrivate.Unmarshal(m, b)
}
func (m *OrderViewPrivate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderViewPrivate.Marshal(b, m, deterministic)
}
func (dst *OrderViewPrivate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderViewPrivate.Merge(dst, src)
}
func (m *OrderViewPrivate) XXX_Size() int {
	return xxx_messageInfo_OrderViewPrivate.Size(m)
}
func (m *OrderViewPrivate) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderViewPrivate.DiscardUnknown(m)
}

var xxx_messageInfo_OrderViewPrivate proto.InternalMessageInfo

func (m *OrderViewPrivate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderViewPrivate) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *OrderViewPrivate) GetTotalPaymentAmount() float64 {
	if m != nil {
		return m.TotalPaymentAmount
	}
	return 0
}

func (m *OrderViewPrivate) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderViewPrivate) GetProject() *ProjectOrder {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *OrderViewPrivate) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *OrderViewPrivate) GetTransaction() string {
	if m != nil {
		return m.Transaction
	}
	return ""
}

func (m *OrderViewPrivate) GetPaymentMethod() *PaymentMethodOrder {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *OrderViewPrivate) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *OrderViewPrivate) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *OrderViewPrivate) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *OrderViewPrivate) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *OrderViewPrivate) GetTransactionDate() *timestamp.Timestamp {
	if m != nil {
		return m.TransactionDate
	}
	return nil
}

func (m *OrderViewPrivate) GetUser() *OrderUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *OrderViewPrivate) GetBillingAddress() *OrderBillingAddress {
	if m != nil {
		return m.BillingAddress
	}
	return nil
}

func (m *OrderViewPrivate) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OrderViewPrivate) GetIsVatDeduction() bool {
	if m != nil {
		return m.IsVatDeduction
	}
	return false
}

func (m *OrderViewPrivate) GetPaymentGrossRevenueLocal() *OrderViewMoney {
	if m != nil {
		return m.PaymentGrossRevenueLocal
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentGrossRevenueOrigin() *OrderViewMoney {
	if m != nil {
		return m.PaymentGrossRevenueOrigin
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentGrossRevenue() *OrderViewMoney {
	if m != nil {
		return m.PaymentGrossRevenue
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentTaxFee() *OrderViewMoney {
	if m != nil {
		return m.PaymentTaxFee
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentTaxFeeLocal() *OrderViewMoney {
	if m != nil {
		return m.PaymentTaxFeeLocal
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentTaxFeeOrigin() *OrderViewMoney {
	if m != nil {
		return m.PaymentTaxFeeOrigin
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentTaxFeeCurrencyExchangeFee() *OrderViewMoney {
	if m != nil {
		return m.PaymentTaxFeeCurrencyExchangeFee
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentTaxFeeTotal() *OrderViewMoney {
	if m != nil {
		return m.PaymentTaxFeeTotal
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentGrossRevenueFx() *OrderViewMoney {
	if m != nil {
		return m.PaymentGrossRevenueFx
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentGrossRevenueFxTaxFee() *OrderViewMoney {
	if m != nil {
		return m.PaymentGrossRevenueFxTaxFee
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentGrossRevenueFxProfit() *OrderViewMoney {
	if m != nil {
		return m.PaymentGrossRevenueFxProfit
	}
	return nil
}

func (m *OrderViewPrivate) GetGrossRevenue() *OrderViewMoney {
	if m != nil {
		return m.GrossRevenue
	}
	return nil
}

func (m *OrderViewPrivate) GetTaxFee() *OrderViewMoney {
	if m != nil {
		return m.TaxFee
	}
	return nil
}

func (m *OrderViewPrivate) GetTaxFeeCurrencyExchangeFee() *OrderViewMoney {
	if m != nil {
		return m.TaxFeeCurrencyExchangeFee
	}
	return nil
}

func (m *OrderViewPrivate) GetTaxFeeTotal() *OrderViewMoney {
	if m != nil {
		return m.TaxFeeTotal
	}
	return nil
}

func (m *OrderViewPrivate) GetMethodFeeTotal() *OrderViewMoney {
	if m != nil {
		return m.MethodFeeTotal
	}
	return nil
}

func (m *OrderViewPrivate) GetMethodFeeTariff() *OrderViewMoney {
	if m != nil {
		return m.MethodFeeTariff
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperMethodFeeTariffSelfCost() *OrderViewMoney {
	if m != nil {
		return m.PaysuperMethodFeeTariffSelfCost
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperMethodFeeProfit() *OrderViewMoney {
	if m != nil {
		return m.PaysuperMethodFeeProfit
	}
	return nil
}

func (m *OrderViewPrivate) GetMethodFixedFeeTariff() *OrderViewMoney {
	if m != nil {
		return m.MethodFixedFeeTariff
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperMethodFixedFeeTariffFxProfit() *OrderViewMoney {
	if m != nil {
		return m.PaysuperMethodFixedFeeTariffFxProfit
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperMethodFixedFeeTariffSelfCost() *OrderViewMoney {
	if m != nil {
		return m.PaysuperMethodFixedFeeTariffSelfCost
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperMethodFixedFeeTariffTotalProfit() *OrderViewMoney {
	if m != nil {
		return m.PaysuperMethodFixedFeeTariffTotalProfit
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperFixedFee() *OrderViewMoney {
	if m != nil {
		return m.PaysuperFixedFee
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperFixedFeeFxProfit() *OrderViewMoney {
	if m != nil {
		return m.PaysuperFixedFeeFxProfit
	}
	return nil
}

func (m *OrderViewPrivate) GetFeesTotal() *OrderViewMoney {
	if m != nil {
		return m.FeesTotal
	}
	return nil
}

func (m *OrderViewPrivate) GetFeesTotalLocal() *OrderViewMoney {
	if m != nil {
		return m.FeesTotalLocal
	}
	return nil
}

func (m *OrderViewPrivate) GetNetRevenue() *OrderViewMoney {
	if m != nil {
		return m.NetRevenue
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperMethodTotalProfit() *OrderViewMoney {
	if m != nil {
		return m.PaysuperMethodTotalProfit
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperTotalProfit() *OrderViewMoney {
	if m != nil {
		return m.PaysuperTotalProfit
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentRefundGrossRevenueLocal() *OrderViewMoney {
	if m != nil {
		return m.PaymentRefundGrossRevenueLocal
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentRefundGrossRevenueOrigin() *OrderViewMoney {
	if m != nil {
		return m.PaymentRefundGrossRevenueOrigin
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentRefundGrossRevenue() *OrderViewMoney {
	if m != nil {
		return m.PaymentRefundGrossRevenue
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentRefundTaxFee() *OrderViewMoney {
	if m != nil {
		return m.PaymentRefundTaxFee
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentRefundTaxFeeLocal() *OrderViewMoney {
	if m != nil {
		return m.PaymentRefundTaxFeeLocal
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentRefundTaxFeeOrigin() *OrderViewMoney {
	if m != nil {
		return m.PaymentRefundTaxFeeOrigin
	}
	return nil
}

func (m *OrderViewPrivate) GetPaymentRefundFeeTariff() *OrderViewMoney {
	if m != nil {
		return m.PaymentRefundFeeTariff
	}
	return nil
}

func (m *OrderViewPrivate) GetMethodRefundFixedFeeTariff() *OrderViewMoney {
	if m != nil {
		return m.MethodRefundFixedFeeTariff
	}
	return nil
}

func (m *OrderViewPrivate) GetRefundGrossRevenue() *OrderViewMoney {
	if m != nil {
		return m.RefundGrossRevenue
	}
	return nil
}

func (m *OrderViewPrivate) GetRefundGrossRevenueFx() *OrderViewMoney {
	if m != nil {
		return m.RefundGrossRevenueFx
	}
	return nil
}

func (m *OrderViewPrivate) GetMethodRefundFeeTariff() *OrderViewMoney {
	if m != nil {
		return m.MethodRefundFeeTariff
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperMethodRefundFeeTariffProfit() *OrderViewMoney {
	if m != nil {
		return m.PaysuperMethodRefundFeeTariffProfit
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperMethodRefundFixedFeeTariffSelfCost() *OrderViewMoney {
	if m != nil {
		return m.PaysuperMethodRefundFixedFeeTariffSelfCost
	}
	return nil
}

func (m *OrderViewPrivate) GetMerchantRefundFixedFeeTariff() *OrderViewMoney {
	if m != nil {
		return m.MerchantRefundFixedFeeTariff
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperMethodRefundFixedFeeTariffProfit() *OrderViewMoney {
	if m != nil {
		return m.PaysuperMethodRefundFixedFeeTariffProfit
	}
	return nil
}

func (m *OrderViewPrivate) GetRefundTaxFee() *OrderViewMoney {
	if m != nil {
		return m.RefundTaxFee
	}
	return nil
}

func (m *OrderViewPrivate) GetRefundTaxFeeCurrencyExchangeFee() *OrderViewMoney {
	if m != nil {
		return m.RefundTaxFeeCurrencyExchangeFee
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperRefundTaxFeeCurrencyExchangeFee() *OrderViewMoney {
	if m != nil {
		return m.PaysuperRefundTaxFeeCurrencyExchangeFee
	}
	return nil
}

func (m *OrderViewPrivate) GetRefundTaxFeeTotal() *OrderViewMoney {
	if m != nil {
		return m.RefundTaxFeeTotal
	}
	return nil
}

func (m *OrderViewPrivate) GetRefundReverseRevenue() *OrderViewMoney {
	if m != nil {
		return m.RefundReverseRevenue
	}
	return nil
}

func (m *OrderViewPrivate) GetRefundFeesTotal() *OrderViewMoney {
	if m != nil {
		return m.RefundFeesTotal
	}
	return nil
}

func (m *OrderViewPrivate) GetRefundFeesTotalLocal() *OrderViewMoney {
	if m != nil {
		return m.RefundFeesTotalLocal
	}
	return nil
}

func (m *OrderViewPrivate) GetPaysuperRefundTotalProfit() *OrderViewMoney {
	if m != nil {
		return m.PaysuperRefundTotalProfit
	}
	return nil
}

type PriceGroupRecommendedPrice struct {
	// @inject_tag: json:"region"
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region"`
	// @inject_tag: json:"currency"
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency"`
	// @inject_tag: json:"amount"
	Amount               float64  `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PriceGroupRecommendedPrice) Reset()         { *m = PriceGroupRecommendedPrice{} }
func (m *PriceGroupRecommendedPrice) String() string { return proto.CompactTextString(m) }
func (*PriceGroupRecommendedPrice) ProtoMessage()    {}
func (*PriceGroupRecommendedPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{96}
}
func (m *PriceGroupRecommendedPrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceGroupRecommendedPrice.Unmarshal(m, b)
}
func (m *PriceGroupRecommendedPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceGroupRecommendedPrice.Marshal(b, m, deterministic)
}
func (dst *PriceGroupRecommendedPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceGroupRecommendedPrice.Merge(dst, src)
}
func (m *PriceGroupRecommendedPrice) XXX_Size() int {
	return xxx_messageInfo_PriceGroupRecommendedPrice.Size(m)
}
func (m *PriceGroupRecommendedPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceGroupRecommendedPrice.DiscardUnknown(m)
}

var xxx_messageInfo_PriceGroupRecommendedPrice proto.InternalMessageInfo

func (m *PriceGroupRecommendedPrice) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PriceGroupRecommendedPrice) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *PriceGroupRecommendedPrice) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type PriceTable struct {
	// @inject_tag: json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id" validate:"omitempty,hexadecimal,len=24"`
	// @inject_tag: json:"currencies"
	Currencies map[string]*PriceTableCurrency `protobuf:"bytes,2,rep,name=currencies,proto3" json:"currencies" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"from"
	From float64 `protobuf:"fixed64,3,opt,name=from,proto3" json:"from"`
	// @inject_tag: json:"to"
	To                   float64  `protobuf:"fixed64,4,opt,name=to,proto3" json:"to"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PriceTable) Reset()         { *m = PriceTable{} }
func (m *PriceTable) String() string { return proto.CompactTextString(m) }
func (*PriceTable) ProtoMessage()    {}
func (*PriceTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{97}
}
func (m *PriceTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceTable.Unmarshal(m, b)
}
func (m *PriceTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceTable.Marshal(b, m, deterministic)
}
func (dst *PriceTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceTable.Merge(dst, src)
}
func (m *PriceTable) XXX_Size() int {
	return xxx_messageInfo_PriceTable.Size(m)
}
func (m *PriceTable) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceTable.DiscardUnknown(m)
}

var xxx_messageInfo_PriceTable proto.InternalMessageInfo

func (m *PriceTable) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PriceTable) GetCurrencies() map[string]*PriceTableCurrency {
	if m != nil {
		return m.Currencies
	}
	return nil
}

func (m *PriceTable) GetFrom() float64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *PriceTable) GetTo() float64 {
	if m != nil {
		return m.To
	}
	return 0
}

type PriceTableCurrency struct {
	// @inject_tag: json:"from"
	From float64 `protobuf:"fixed64,1,opt,name=from,proto3" json:"from"`
	// @inject_tag: json:"to"
	To                   float64  `protobuf:"fixed64,2,opt,name=to,proto3" json:"to"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *PriceTableCurrency) Reset()         { *m = PriceTableCurrency{} }
func (m *PriceTableCurrency) String() string { return proto.CompactTextString(m) }
func (*PriceTableCurrency) ProtoMessage()    {}
func (*PriceTableCurrency) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{98}
}
func (m *PriceTableCurrency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceTableCurrency.Unmarshal(m, b)
}
func (m *PriceTableCurrency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceTableCurrency.Marshal(b, m, deterministic)
}
func (dst *PriceTableCurrency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceTableCurrency.Merge(dst, src)
}
func (m *PriceTableCurrency) XXX_Size() int {
	return xxx_messageInfo_PriceTableCurrency.Size(m)
}
func (m *PriceTableCurrency) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceTableCurrency.DiscardUnknown(m)
}

var xxx_messageInfo_PriceTableCurrency proto.InternalMessageInfo

func (m *PriceTableCurrency) GetFrom() float64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *PriceTableCurrency) GetTo() float64 {
	if m != nil {
		return m.To
	}
	return 0
}

type Id struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{99}
}
func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (dst *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(dst, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MerchantSignatureRequestCustomFields struct {
	// @inject_tag: json:"name" bson:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" bson:"name"`
	// @inject_tag: json:"value" bson:"value"
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value" bson:"value"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantSignatureRequestCustomFields) Reset()         { *m = MerchantSignatureRequestCustomFields{} }
func (m *MerchantSignatureRequestCustomFields) String() string { return proto.CompactTextString(m) }
func (*MerchantSignatureRequestCustomFields) ProtoMessage()    {}
func (*MerchantSignatureRequestCustomFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{100}
}
func (m *MerchantSignatureRequestCustomFields) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantSignatureRequestCustomFields.Unmarshal(m, b)
}
func (m *MerchantSignatureRequestCustomFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantSignatureRequestCustomFields.Marshal(b, m, deterministic)
}
func (dst *MerchantSignatureRequestCustomFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantSignatureRequestCustomFields.Merge(dst, src)
}
func (m *MerchantSignatureRequestCustomFields) XXX_Size() int {
	return xxx_messageInfo_MerchantSignatureRequestCustomFields.Size(m)
}
func (m *MerchantSignatureRequestCustomFields) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantSignatureRequestCustomFields.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantSignatureRequestCustomFields proto.InternalMessageInfo

func (m *MerchantSignatureRequestCustomFields) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantSignatureRequestCustomFields) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MerchantSignatureRequestSignatures struct {
	// @inject_tag: json:"signature_id" bson:"signature_id"
	SignatureId string `protobuf:"bytes,1,opt,name=signature_id,json=signatureId,proto3" json:"signature_id" bson:"signature_id"`
	// @inject_tag: json:"last_reminded_at" bson:"last_reminded_at"
	LastRemindedAt int32 `protobuf:"varint,2,opt,name=last_reminded_at,json=lastRemindedAt,proto3" json:"last_reminded_at" bson:"last_reminded_at"`
	// @inject_tag: json:"last_viewed_at" bson:"last_viewed_at"
	LastViewedAt int32 `protobuf:"varint,3,opt,name=last_viewed_at,json=lastViewedAt,proto3" json:"last_viewed_at" bson:"last_viewed_at"`
	// @inject_tag: json:"signed_at" bson:"signed_at"
	SignedAt int32 `protobuf:"varint,4,opt,name=signed_at,json=signedAt,proto3" json:"signed_at" bson:"signed_at"`
	// @inject_tag: json:"signer_email_address" bson:"signer_email_address"
	SignerEmailAddress string `protobuf:"bytes,5,opt,name=signer_email_address,json=signerEmailAddress,proto3" json:"signer_email_address" bson:"signer_email_address"`
	// @inject_tag: json:"signer_name" bson:"signer_name"
	SignerName string `protobuf:"bytes,6,opt,name=signer_name,json=signerName,proto3" json:"signer_name" bson:"signer_name"`
	// @inject_tag: json:"status_code" bson:"status_code"
	StatusCode string `protobuf:"bytes,7,opt,name=status_code,json=statusCode,proto3" json:"status_code" bson:"status_code"`
	// @inject_tag: json:"has_pin" bson:"has_pin"
	HasPin bool `protobuf:"varint,8,opt,name=has_pin,json=hasPin,proto3" json:"has_pin" bson:"has_pin"`
	// @inject_tag: json:"signer_role"
	SignerRole           string   `protobuf:"bytes,9,opt,name=signer_role,json=signerRole,proto3" json:"signer_role"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantSignatureRequestSignatures) Reset()         { *m = MerchantSignatureRequestSignatures{} }
func (m *MerchantSignatureRequestSignatures) String() string { return proto.CompactTextString(m) }
func (*MerchantSignatureRequestSignatures) ProtoMessage()    {}
func (*MerchantSignatureRequestSignatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{101}
}
func (m *MerchantSignatureRequestSignatures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantSignatureRequestSignatures.Unmarshal(m, b)
}
func (m *MerchantSignatureRequestSignatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantSignatureRequestSignatures.Marshal(b, m, deterministic)
}
func (dst *MerchantSignatureRequestSignatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantSignatureRequestSignatures.Merge(dst, src)
}
func (m *MerchantSignatureRequestSignatures) XXX_Size() int {
	return xxx_messageInfo_MerchantSignatureRequestSignatures.Size(m)
}
func (m *MerchantSignatureRequestSignatures) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantSignatureRequestSignatures.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantSignatureRequestSignatures proto.InternalMessageInfo

func (m *MerchantSignatureRequestSignatures) GetSignatureId() string {
	if m != nil {
		return m.SignatureId
	}
	return ""
}

func (m *MerchantSignatureRequestSignatures) GetLastRemindedAt() int32 {
	if m != nil {
		return m.LastRemindedAt
	}
	return 0
}

func (m *MerchantSignatureRequestSignatures) GetLastViewedAt() int32 {
	if m != nil {
		return m.LastViewedAt
	}
	return 0
}

func (m *MerchantSignatureRequestSignatures) GetSignedAt() int32 {
	if m != nil {
		return m.SignedAt
	}
	return 0
}

func (m *MerchantSignatureRequestSignatures) GetSignerEmailAddress() string {
	if m != nil {
		return m.SignerEmailAddress
	}
	return ""
}

func (m *MerchantSignatureRequestSignatures) GetSignerName() string {
	if m != nil {
		return m.SignerName
	}
	return ""
}

func (m *MerchantSignatureRequestSignatures) GetStatusCode() string {
	if m != nil {
		return m.StatusCode
	}
	return ""
}

func (m *MerchantSignatureRequestSignatures) GetHasPin() bool {
	if m != nil {
		return m.HasPin
	}
	return false
}

func (m *MerchantSignatureRequestSignatures) GetSignerRole() string {
	if m != nil {
		return m.SignerRole
	}
	return ""
}

type MerchantSignatureRequestResponseData struct {
	// @inject_tag: json:"api_id" bson:"api_id"
	ApiId string `protobuf:"bytes,1,opt,name=api_id,json=apiId,proto3" json:"api_id" bson:"api_id"`
	// @inject_tag: json:"name" bson:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" bson:"name"`
	// @inject_tag: json:"signature_id" bson:"signature_id"
	SignatureId string `protobuf:"bytes,3,opt,name=signature_id,json=signatureId,proto3" json:"signature_id" bson:"signature_id"`
	// @inject_tag: json:"value" bson:"value"
	Value bool `protobuf:"varint,4,opt,name=value,proto3" json:"value" bson:"value"`
	// @inject_tag: json:"type" bson:"type"
	Type                 string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type" bson:"type"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantSignatureRequestResponseData) Reset()         { *m = MerchantSignatureRequestResponseData{} }
func (m *MerchantSignatureRequestResponseData) String() string { return proto.CompactTextString(m) }
func (*MerchantSignatureRequestResponseData) ProtoMessage()    {}
func (*MerchantSignatureRequestResponseData) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{102}
}
func (m *MerchantSignatureRequestResponseData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantSignatureRequestResponseData.Unmarshal(m, b)
}
func (m *MerchantSignatureRequestResponseData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantSignatureRequestResponseData.Marshal(b, m, deterministic)
}
func (dst *MerchantSignatureRequestResponseData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantSignatureRequestResponseData.Merge(dst, src)
}
func (m *MerchantSignatureRequestResponseData) XXX_Size() int {
	return xxx_messageInfo_MerchantSignatureRequestResponseData.Size(m)
}
func (m *MerchantSignatureRequestResponseData) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantSignatureRequestResponseData.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantSignatureRequestResponseData proto.InternalMessageInfo

func (m *MerchantSignatureRequestResponseData) GetApiId() string {
	if m != nil {
		return m.ApiId
	}
	return ""
}

func (m *MerchantSignatureRequestResponseData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantSignatureRequestResponseData) GetSignatureId() string {
	if m != nil {
		return m.SignatureId
	}
	return ""
}

func (m *MerchantSignatureRequestResponseData) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

func (m *MerchantSignatureRequestResponseData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type MerchantSignatureRequest struct {
	// @inject_tag: json:"cc_email_addresses" bson:"cc_email_addresses"
	CcEmailAddresses []string `protobuf:"bytes,1,rep,name=cc_email_addresses,json=ccEmailAddresses,proto3" json:"cc_email_addresses" bson:"cc_email_addresses"`
	// @inject_tag: json:"details_url" bson:"details_url"
	DetailsUrl string `protobuf:"bytes,2,opt,name=details_url,json=detailsUrl,proto3" json:"details_url" bson:"details_url"`
	// @inject_tag: json:"has_error" bson:"has_error"
	HasError bool `protobuf:"varint,3,opt,name=has_error,json=hasError,proto3" json:"has_error" bson:"has_error"`
	// @inject_tag: json:"is_complete" bson:"is_complete"
	IsComplete bool `protobuf:"varint,4,opt,name=is_complete,json=isComplete,proto3" json:"is_complete" bson:"is_complete"`
	// @inject_tag: json:"is_declined" bson:"is_declined"
	IsDeclined bool `protobuf:"varint,5,opt,name=is_declined,json=isDeclined,proto3" json:"is_declined" bson:"is_declined"`
	// @inject_tag: json:"message" bson:"message"
	Message string `protobuf:"bytes,6,opt,name=message,proto3" json:"message" bson:"message"`
	// @inject_tag: json:"requester_email_address" bson:"requester_email_address"
	RequesterEmailAddress string `protobuf:"bytes,7,opt,name=requester_email_address,json=requesterEmailAddress,proto3" json:"requester_email_address" bson:"requester_email_address"`
	// @inject_tag: json:"response_data" bson:"response_data"
	ResponseData []*MerchantSignatureRequestResponseData `protobuf:"bytes,8,rep,name=response_data,json=responseData,proto3" json:"response_data" bson:"response_data"`
	// @inject_tag: json:"signature_request_id" bson:"signature_request_id"
	SignatureRequestId string `protobuf:"bytes,9,opt,name=signature_request_id,json=signatureRequestId,proto3" json:"signature_request_id" bson:"signature_request_id"`
	// @inject_tag: json:"signatures" bson:"signatures"
	Signatures []*MerchantSignatureRequestSignatures `protobuf:"bytes,10,rep,name=signatures,proto3" json:"signatures" bson:"signatures"`
	// @inject_tag: json:"signing_url" bson:"signing_url"
	SigningUrl string `protobuf:"bytes,11,opt,name=signing_url,json=signingUrl,proto3" json:"signing_url" bson:"signing_url"`
	// @inject_tag: json:"signing_redirect_url" bson:"signing_redirect_url"
	SigningRedirectUrl string `protobuf:"bytes,12,opt,name=signing_redirect_url,json=signingRedirectUrl,proto3" json:"signing_redirect_url" bson:"signing_redirect_url"`
	// @inject_tag: json:"subject" bson:"subject"
	Subject string `protobuf:"bytes,13,opt,name=subject,proto3" json:"subject" bson:"subject"`
	// @inject_tag: json:"title" bson:"title"
	Title string `protobuf:"bytes,14,opt,name=title,proto3" json:"title" bson:"title"`
	// @inject_tag: json:"title" bson:"custom_fields"
	CustomFields         []*MerchantSignatureRequestCustomFields `protobuf:"bytes,15,rep,name=custom_fields,json=customFields,proto3" json:"title" bson:"custom_fields"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_unrecognized     []byte                                  `json:"-" bson:"-" structure:"-" validate:"-"`
	XXX_sizecache        int32                                   `json:"-" bson:"-" structure:"-" validate:"-"`
}

func (m *MerchantSignatureRequest) Reset()         { *m = MerchantSignatureRequest{} }
func (m *MerchantSignatureRequest) String() string { return proto.CompactTextString(m) }
func (*MerchantSignatureRequest) ProtoMessage()    {}
func (*MerchantSignatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_43f00a4ad155485b, []int{103}
}
func (m *MerchantSignatureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantSignatureRequest.Unmarshal(m, b)
}
func (m *MerchantSignatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantSignatureRequest.Marshal(b, m, deterministic)
}
func (dst *MerchantSignatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantSignatureRequest.Merge(dst, src)
}
func (m *MerchantSignatureRequest) XXX_Size() int {
	return xxx_messageInfo_MerchantSignatureRequest.Size(m)
}
func (m *MerchantSignatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantSignatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantSignatureRequest proto.InternalMessageInfo

func (m *MerchantSignatureRequest) GetCcEmailAddresses() []string {
	if m != nil {
		return m.CcEmailAddresses
	}
	return nil
}

func (m *MerchantSignatureRequest) GetDetailsUrl() string {
	if m != nil {
		return m.DetailsUrl
	}
	return ""
}

func (m *MerchantSignatureRequest) GetHasError() bool {
	if m != nil {
		return m.HasError
	}
	return false
}

func (m *MerchantSignatureRequest) GetIsComplete() bool {
	if m != nil {
		return m.IsComplete
	}
	return false
}

func (m *MerchantSignatureRequest) GetIsDeclined() bool {
	if m != nil {
		return m.IsDeclined
	}
	return false
}

func (m *MerchantSignatureRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MerchantSignatureRequest) GetRequesterEmailAddress() string {
	if m != nil {
		return m.RequesterEmailAddress
	}
	return ""
}

func (m *MerchantSignatureRequest) GetResponseData() []*MerchantSignatureRequestResponseData {
	if m != nil {
		return m.ResponseData
	}
	return nil
}

func (m *MerchantSignatureRequest) GetSignatureRequestId() string {
	if m != nil {
		return m.SignatureRequestId
	}
	return ""
}

func (m *MerchantSignatureRequest) GetSignatures() []*MerchantSignatureRequestSignatures {
	if m != nil {
		return m.Signatures
	}
	return nil
}

func (m *MerchantSignatureRequest) GetSigningUrl() string {
	if m != nil {
		return m.SigningUrl
	}
	return ""
}

func (m *MerchantSignatureRequest) GetSigningRedirectUrl() string {
	if m != nil {
		return m.SigningRedirectUrl
	}
	return ""
}

func (m *MerchantSignatureRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *MerchantSignatureRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MerchantSignatureRequest) GetCustomFields() []*MerchantSignatureRequestCustomFields {
	if m != nil {
		return m.CustomFields
	}
	return nil
}

func init() {
	proto.RegisterType((*Name)(nil), "billing.Name")
	proto.RegisterType((*OrderCreateRequest)(nil), "billing.OrderCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.MetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.OtherEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.PrivateMetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.RawParamsEntry")
	proto.RegisterType((*Project)(nil), "billing.Project")
	proto.RegisterMapType((map[string]string)(nil), "billing.Project.NameEntry")
	proto.RegisterType((*ProjectOrder)(nil), "billing.ProjectOrder")
	proto.RegisterMapType((map[string]string)(nil), "billing.ProjectOrder.NameEntry")
	proto.RegisterType((*MerchantContact)(nil), "billing.MerchantContact")
	proto.RegisterType((*MerchantContactTechnical)(nil), "billing.MerchantContactTechnical")
	proto.RegisterType((*MerchantContactAuthorized)(nil), "billing.MerchantContactAuthorized")
	proto.RegisterType((*MerchantBanking)(nil), "billing.MerchantBanking")
	proto.RegisterType((*MerchantLastPayout)(nil), "billing.MerchantLastPayout")
	proto.RegisterType((*MerchantUser)(nil), "billing.MerchantUser")
	proto.RegisterType((*MerchantCompanyInfo)(nil), "billing.MerchantCompanyInfo")
	proto.RegisterType((*MerchantCompletedSteps)(nil), "billing.MerchantCompletedSteps")
	proto.RegisterType((*Merchant)(nil), "billing.Merchant")
	proto.RegisterMapType((map[string]*MerchantPaymentMethod)(nil), "billing.Merchant.PaymentMethodsEntry")
	proto.RegisterType((*SystemNotificationStatuses)(nil), "billing.SystemNotificationStatuses")
	proto.RegisterType((*Notification)(nil), "billing.Notification")
	proto.RegisterType((*OrderPlatformFee)(nil), "billing.OrderPlatformFee")
	proto.RegisterType((*OrderTax)(nil), "billing.OrderTax")
	proto.RegisterType((*OrderBillingAddress)(nil), "billing.OrderBillingAddress")
	proto.RegisterType((*OrderUser)(nil), "billing.OrderUser")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderUser.MetadataEntry")
	proto.RegisterType((*Order)(nil), "billing.Order")
	proto.RegisterMapType((map[string]bool)(nil), "billing.Order.IsNotificationsSentEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.MetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.PaymentMethodTxnParamsEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.PaymentRequisitesEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.PrivateMetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.ProjectParamsEntry")
	proto.RegisterType((*CountryRestriction)(nil), "billing.CountryRestriction")
	proto.RegisterType((*OrderItem)(nil), "billing.OrderItem")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderItem.MetadataEntry")
	proto.RegisterType((*OrderPaginate)(nil), "billing.OrderPaginate")
	proto.RegisterType((*PaymentMethodOrder)(nil), "billing.PaymentMethodOrder")
	proto.RegisterType((*PaymentMethodParams)(nil), "billing.PaymentMethodParams")
	proto.RegisterType((*PaymentSystem)(nil), "billing.PaymentSystem")
	proto.RegisterType((*PaymentMethodCard)(nil), "billing.PaymentMethodCard")
	proto.RegisterType((*PaymentMethodWallet)(nil), "billing.PaymentMethodWallet")
	proto.RegisterType((*PaymentMethodCrypto)(nil), "billing.PaymentMethodCrypto")
	proto.RegisterType((*ProjectPaymentMethod)(nil), "billing.ProjectPaymentMethod")
	proto.RegisterType((*PaymentMethod)(nil), "billing.PaymentMethod")
	proto.RegisterMapType((map[string]*PaymentMethodParams)(nil), "billing.PaymentMethod.ProductionSettingsEntry")
	proto.RegisterMapType((map[string]*PaymentMethodParams)(nil), "billing.PaymentMethod.TestSettingsEntry")
	proto.RegisterType((*Commission)(nil), "billing.Commission")
	proto.RegisterType((*CardExpire)(nil), "billing.CardExpire")
	proto.RegisterType((*SavedCard)(nil), "billing.SavedCard")
	proto.RegisterType((*PaymentFormPaymentMethod)(nil), "billing.PaymentFormPaymentMethod")
	proto.RegisterType((*MerchantPaymentMethodPerTransactionCommission)(nil), "billing.MerchantPaymentMethodPerTransactionCommission")
	proto.RegisterType((*MerchantPaymentMethodCommissions)(nil), "billing.MerchantPaymentMethodCommissions")
	proto.RegisterType((*MerchantPaymentMethodIntegration)(nil), "billing.MerchantPaymentMethodIntegration")
	proto.RegisterType((*MerchantPaymentMethodIdentification)(nil), "billing.MerchantPaymentMethodIdentification")
	proto.RegisterType((*MerchantPaymentMethod)(nil), "billing.MerchantPaymentMethod")
	proto.RegisterType((*RefundPayerData)(nil), "billing.RefundPayerData")
	proto.RegisterType((*RefundOrder)(nil), "billing.RefundOrder")
	proto.RegisterType((*Refund)(nil), "billing.Refund")
	proto.RegisterType((*MerchantPaymentMethodHistory)(nil), "billing.MerchantPaymentMethodHistory")
	proto.RegisterType((*CustomerIdentity)(nil), "billing.CustomerIdentity")
	proto.RegisterType((*CustomerIpHistory)(nil), "billing.CustomerIpHistory")
	proto.RegisterType((*CustomerAddressHistory)(nil), "billing.CustomerAddressHistory")
	proto.RegisterType((*CustomerStringValueHistory)(nil), "billing.CustomerStringValueHistory")
	proto.RegisterType((*Customer)(nil), "billing.Customer")
	proto.RegisterMapType((map[string]string)(nil), "billing.Customer.MetadataEntry")
	proto.RegisterType((*TokenUserEmailValue)(nil), "billing.TokenUserEmailValue")
	proto.RegisterType((*TokenUserPhoneValue)(nil), "billing.TokenUserPhoneValue")
	proto.RegisterType((*TokenUserIpValue)(nil), "billing.TokenUserIpValue")
	proto.RegisterType((*TokenUserLocaleValue)(nil), "billing.TokenUserLocaleValue")
	proto.RegisterType((*TokenUserValue)(nil), "billing.TokenUserValue")
	proto.RegisterType((*TokenUser)(nil), "billing.TokenUser")
	proto.RegisterMapType((map[string]string)(nil), "billing.TokenUser.MetadataEntry")
	proto.RegisterType((*TokenSettingsReturnUrl)(nil), "billing.TokenSettingsReturnUrl")
	proto.RegisterType((*TokenSettingsItem)(nil), "billing.TokenSettingsItem")
	proto.RegisterType((*TokenSettings)(nil), "billing.TokenSettings")
	proto.RegisterMapType((map[string]string)(nil), "billing.TokenSettings.MetadataEntry")
	proto.RegisterType((*OrderIssuer)(nil), "billing.OrderIssuer")
	proto.RegisterType((*OrderNotificationRefund)(nil), "billing.OrderNotificationRefund")
	proto.RegisterType((*GetCountryRequest)(nil), "billing.GetCountryRequest")
	proto.RegisterType((*CountryVatThreshold)(nil), "billing.CountryVatThreshold")
	proto.RegisterType((*Country)(nil), "billing.Country")
	proto.RegisterType((*CountriesList)(nil), "billing.CountriesList")
	proto.RegisterType((*GetPriceGroupRequest)(nil), "billing.GetPriceGroupRequest")
	proto.RegisterType((*PriceGroup)(nil), "billing.PriceGroup")
	proto.RegisterType((*ZipCodeState)(nil), "billing.ZipCodeState")
	proto.RegisterType((*ZipCode)(nil), "billing.ZipCode")
	proto.RegisterType((*PaymentChannelCostSystem)(nil), "billing.PaymentChannelCostSystem")
	proto.RegisterType((*PaymentChannelCostSystemRequest)(nil), "billing.PaymentChannelCostSystemRequest")
	proto.RegisterType((*PaymentChannelCostSystemList)(nil), "billing.PaymentChannelCostSystemList")
	proto.RegisterType((*PaymentChannelCostMerchant)(nil), "billing.PaymentChannelCostMerchant")
	proto.RegisterType((*PaymentChannelCostMerchantRequest)(nil), "billing.PaymentChannelCostMerchantRequest")
	proto.RegisterType((*PaymentChannelCostMerchantList)(nil), "billing.PaymentChannelCostMerchantList")
	proto.RegisterType((*PaymentChannelCostMerchantListRequest)(nil), "billing.PaymentChannelCostMerchantListRequest")
	proto.RegisterType((*MoneyBackCostSystem)(nil), "billing.MoneyBackCostSystem")
	proto.RegisterType((*MoneyBackCostSystemRequest)(nil), "billing.MoneyBackCostSystemRequest")
	proto.RegisterType((*MoneyBackCostSystemList)(nil), "billing.MoneyBackCostSystemList")
	proto.RegisterType((*MoneyBackCostMerchant)(nil), "billing.MoneyBackCostMerchant")
	proto.RegisterType((*MoneyBackCostMerchantRequest)(nil), "billing.MoneyBackCostMerchantRequest")
	proto.RegisterType((*PaymentCostDeleteRequest)(nil), "billing.PaymentCostDeleteRequest")
	proto.RegisterType((*MoneyBackCostMerchantList)(nil), "billing.MoneyBackCostMerchantList")
	proto.RegisterType((*MoneyBackCostMerchantListRequest)(nil), "billing.MoneyBackCostMerchantListRequest")
	proto.RegisterType((*PayoutCostSystem)(nil), "billing.PayoutCostSystem")
	proto.RegisterType((*AccountingEntrySource)(nil), "billing.AccountingEntrySource")
	proto.RegisterType((*AccountingEntry)(nil), "billing.AccountingEntry")
	proto.RegisterType((*RoyaltyReportDetails)(nil), "billing.RoyaltyReportDetails")
	proto.RegisterType((*RoyaltyReportCorrection)(nil), "billing.RoyaltyReportCorrection")
	proto.RegisterType((*RoyaltyReport)(nil), "billing.RoyaltyReport")
	proto.RegisterType((*RoyaltyReportChanges)(nil), "billing.RoyaltyReportChanges")
	proto.RegisterType((*VatTransaction)(nil), "billing.VatTransaction")
	proto.RegisterType((*VatReport)(nil), "billing.VatReport")
	proto.RegisterType((*AnnualTurnover)(nil), "billing.AnnualTurnover")
	proto.RegisterType((*OrderViewMoney)(nil), "billing.OrderViewMoney")
	proto.RegisterType((*OrderViewPublic)(nil), "billing.OrderViewPublic")
	proto.RegisterType((*OrderViewPrivate)(nil), "billing.OrderViewPrivate")
	proto.RegisterType((*PriceGroupRecommendedPrice)(nil), "billing.PriceGroupRecommendedPrice")
	proto.RegisterType((*PriceTable)(nil), "billing.PriceTable")
	proto.RegisterMapType((map[string]*PriceTableCurrency)(nil), "billing.PriceTable.CurrenciesEntry")
	proto.RegisterType((*PriceTableCurrency)(nil), "billing.PriceTableCurrency")
	proto.RegisterType((*Id)(nil), "billing.Id")
	proto.RegisterType((*MerchantSignatureRequestCustomFields)(nil), "billing.MerchantSignatureRequestCustomFields")
	proto.RegisterType((*MerchantSignatureRequestSignatures)(nil), "billing.MerchantSignatureRequestSignatures")
	proto.RegisterType((*MerchantSignatureRequestResponseData)(nil), "billing.MerchantSignatureRequestResponseData")
	proto.RegisterType((*MerchantSignatureRequest)(nil), "billing.MerchantSignatureRequest")
}

func init() { proto.RegisterFile("billing/billing.proto", fileDescriptor_billing_43f00a4ad155485b) }

var fileDescriptor_billing_43f00a4ad155485b = []byte{
	// 9589 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0x49, 0x6c, 0x24, 0xc7,
	0x96, 0x18, 0xaa, 0xc8, 0x22, 0xab, 0x5e, 0xb1, 0x16, 0x26, 0xb7, 0x22, 0x7b, 0x63, 0x57, 0xef,
	0x1b, 0x5b, 0xea, 0x6e, 0xb5, 0xf4, 0xd5, 0xd2, 0x48, 0x6c, 0x76, 0xb7, 0xc4, 0x2f, 0x75, 0x7f,
	0x3a, 0x49, 0xf5, 0x1f, 0x7d, 0xf9, 0xff, 0x44, 0xb2, 0x2a, 0x48, 0xe6, 0xef, 0xaa, 0xcc, 0xfc,
	0x19, 0x59, 0x6c, 0xf2, 0x1b, 0x30, 0x7c, 0x32, 0xec, 0x83, 0x2f, 0x1e, 0x8c, 0x2f, 0x36, 0x0c,
	0xcc, 0xc5, 0x47, 0x03, 0xc6, 0xf8, 0x30, 0x27, 0x0f, 0x0c, 0x2f, 0x80, 0x3d, 0x80, 0x0f, 0xde,
	0xe0, 0xab, 0x0d, 0x18, 0x86, 0x81, 0x39, 0xd8, 0x06, 0x7c, 0x37, 0xe2, 0xc5, 0x92, 0x91, 0x5b,
	0x2d, 0x6c, 0x7d, 0xc9, 0x03, 0xcc, 0x85, 0xac, 0x88, 0x78, 0xf1, 0x32, 0x32, 0xe2, 0xed, 0xf1,
	0x22, 0x12, 0x96, 0xf6, 0x9d, 0x5e, 0xcf, 0x71, 0x0f, 0xef, 0x8b, 0xff, 0x1b, 0x7e, 0xe0, 0x85,
	0x9e, 0x31, 0x2b, 0x8a, 0x6b, 0x97, 0x0e, 0x3d, 0xef, 0xb0, 0x47, 0xee, 0x63, 0xf5, 0xfe, 0xe0,
	0xe0, 0x7e, 0xe8, 0xf4, 0x09, 0x0d, 0xed, 0xbe, 0xcf, 0x21, 0xdb, 0xd7, 0x61, 0xfa, 0x95, 0xdd,
	0x27, 0x46, 0x1d, 0x8a, 0xc4, 0x6d, 0x15, 0xd6, 0x0b, 0x37, 0x2b, 0x66, 0x91, 0xb8, 0xac, 0x1c,
	0x0c, 0x5a, 0x45, 0x5e, 0x0e, 0x06, 0xed, 0xff, 0x05, 0x60, 0xfc, 0x2c, 0xe8, 0x92, 0x60, 0x2b,
	0x20, 0x76, 0x48, 0x4c, 0xf2, 0x9b, 0x01, 0xa1, 0xa1, 0x71, 0x01, 0xc0, 0x0f, 0xbc, 0x5f, 0x93,
	0x4e, 0x68, 0x39, 0x5d, 0xd1, 0xbd, 0x22, 0x6a, 0xb6, 0xbb, 0xc6, 0x79, 0xa8, 0x50, 0xe7, 0xd0,
	0xb5, 0xc3, 0x41, 0x40, 0x04, 0xb2, 0xa8, 0xc2, 0x58, 0x86, 0x19, 0xbb, 0xef, 0x0d, 0xdc, 0xb0,
	0x35, 0xb5, 0x5e, 0xb8, 0x59, 0x30, 0x45, 0xc9, 0x58, 0x83, 0x72, 0x67, 0x10, 0x04, 0xc4, 0xed,
	0x9c, 0xb6, 0xa6, 0xb1, 0x93, 0x2a, 0x1b, 0x2d, 0x98, 0xb5, 0x3b, 0x1d, 0xec, 0x54, 0xc2, 0x26,
	0x59, 0x34, 0x56, 0xa1, 0xec, 0xb1, 0x01, 0xb2, 0x81, 0xcc, 0xf0, 0x26, 0x2c, 0x6f, 0x77, 0x8d,
	0x75, 0xa8, 0x76, 0x09, 0xed, 0x04, 0x8e, 0x1f, 0x3a, 0x9e, 0xdb, 0x9a, 0xc5, 0x56, 0xbd, 0xca,
	0xb8, 0x06, 0x75, 0xdf, 0x3e, 0xed, 0x13, 0x37, 0xb4, 0xfa, 0x24, 0x3c, 0xf2, 0xba, 0xad, 0x32,
	0x02, 0xd5, 0x44, 0xed, 0x4b, 0xac, 0x64, 0xaf, 0x3b, 0x08, 0x7a, 0xd6, 0x31, 0x09, 0x9c, 0x83,
	0xd3, 0x56, 0x85, 0xbf, 0xd0, 0x20, 0xe8, 0xbd, 0xc6, 0x0a, 0xd9, 0xec, 0x7a, 0x21, 0x6b, 0x06,
	0xd5, 0xfc, 0x0a, 0x2b, 0x8c, 0x4b, 0x50, 0x65, 0xcd, 0x74, 0xd0, 0xe9, 0x10, 0x4a, 0x5b, 0x55,
	0x6c, 0x67, 0x3d, 0x76, 0x79, 0x0d, 0x7b, 0x05, 0x06, 0x70, 0x60, 0x3b, 0xbd, 0xd6, 0x1c, 0x7f,
	0x85, 0x41, 0xd0, 0x7b, 0x61, 0x3b, 0x3d, 0xd6, 0xd7, 0xb7, 0x4f, 0x49, 0x60, 0x91, 0x3e, 0x6b,
	0xad, 0xf1, 0xbe, 0x58, 0xf5, 0xbc, 0x1f, 0x03, 0xf0, 0x8f, 0x3c, 0x97, 0xb4, 0xea, 0x1a, 0xc0,
	0x0e, 0xab, 0x61, 0xb3, 0x1d, 0x90, 0x43, 0xf6, 0xfe, 0x0d, 0x6c, 0x13, 0x25, 0xf6, 0x50, 0xde,
	0xd1, 0xf1, 0x5b, 0x4d, 0xfe, 0x50, 0x2c, 0x6f, 0xfb, 0xc6, 0x27, 0x50, 0xf2, 0xc2, 0x23, 0x12,
	0xb4, 0xe6, 0xd7, 0xa7, 0x6e, 0x56, 0x1f, 0x5c, 0xdf, 0x90, 0x54, 0x96, 0xa6, 0x84, 0x8d, 0x9f,
	0x31, 0xc0, 0xe7, 0x6e, 0x18, 0x9c, 0x9a, 0xbc, 0x93, 0xb1, 0x0d, 0x10, 0xd8, 0x6f, 0x2d, 0xdf,
	0x0e, 0xec, 0x3e, 0x6d, 0x19, 0x88, 0xe2, 0xf6, 0x30, 0x14, 0xa6, 0xfd, 0x76, 0x07, 0x81, 0x39,
	0x9a, 0x4a, 0x20, 0xcb, 0x6c, 0x8c, 0x0c, 0xd5, 0xbe, 0xd7, 0x3d, 0x6d, 0x2d, 0xf0, 0x31, 0x06,
	0xf6, 0xdb, 0xa7, 0x5e, 0xf7, 0xd4, 0x58, 0x81, 0x59, 0x87, 0x5a, 0xbf, 0xa6, 0x9e, 0xdb, 0x5a,
	0x5c, 0x2f, 0xdc, 0x2c, 0x9b, 0x33, 0x0e, 0xfd, 0x29, 0xf5, 0x5c, 0x46, 0x45, 0x3d, 0xdb, 0x3d,
	0x1c, 0xd8, 0x87, 0xa4, 0xb5, 0xc4, 0xa9, 0x48, 0x96, 0x59, 0x9b, 0x1f, 0x78, 0xdd, 0x41, 0x27,
	0xa4, 0xad, 0xe5, 0xf5, 0x29, 0xd6, 0x26, 0xcb, 0xc6, 0x73, 0x28, 0xf7, 0x49, 0x68, 0x77, 0xed,
	0xd0, 0x6e, 0xad, 0xe0, 0xa0, 0x6f, 0x0d, 0x1b, 0xf4, 0x4b, 0x01, 0xcb, 0xc7, 0xac, 0xba, 0x1a,
	0xdf, 0x41, 0xd3, 0x0f, 0x9c, 0x63, 0x3b, 0x24, 0x96, 0x42, 0xd7, 0x42, 0x74, 0xef, 0x0d, 0x43,
	0xb7, 0xc3, 0xfb, 0xc4, 0xb1, 0x36, 0xfc, 0x78, 0x2d, 0x23, 0xd7, 0x80, 0x74, 0x88, 0xe3, 0x87,
	0x96, 0x3b, 0xe8, 0xef, 0x93, 0xa0, 0xb5, 0xca, 0xc9, 0x55, 0xd4, 0xbe, 0xc2, 0x4a, 0x46, 0x13,
	0x12, 0x6c, 0x10, 0xf4, 0x5a, 0x6b, 0x9c, 0x26, 0x44, 0xd5, 0x37, 0x41, 0x8f, 0x11, 0xac, 0x43,
	0xe9, 0x80, 0x04, 0xd8, 0x7e, 0x8e, 0x13, 0x2c, 0xaf, 0x61, 0xcd, 0x97, 0xa0, 0xea, 0x50, 0x8b,
	0xf4, 0xf7, 0x49, 0xb7, 0x4b, 0xba, 0xad, 0xf3, 0x38, 0xbf, 0xe0, 0xd0, 0xe7, 0xa2, 0xc6, 0x58,
	0x84, 0x52, 0xe8, 0xbd, 0x21, 0x6e, 0xeb, 0x02, 0x76, 0xe5, 0x05, 0xe3, 0x3a, 0x4c, 0x0f, 0x28,
	0x09, 0x5a, 0x17, 0xd7, 0x0b, 0x37, 0xab, 0x0f, 0x8c, 0xf8, 0xeb, 0x7e, 0x43, 0x49, 0x60, 0x62,
	0xbb, 0x71, 0x15, 0xea, 0x3e, 0xf5, 0x2d, 0xce, 0xb5, 0x83, 0x81, 0xd3, 0x6d, 0x5d, 0x42, 0x34,
	0x73, 0x3e, 0xf5, 0x39, 0xec, 0xc0, 0xe9, 0xae, 0x7d, 0x04, 0x10, 0xd1, 0x96, 0xd1, 0x84, 0xa9,
	0x37, 0xe4, 0x54, 0x48, 0x1a, 0xf6, 0x93, 0x8d, 0xe1, 0xd8, 0xee, 0x0d, 0xa4, 0x7c, 0xe1, 0x85,
	0x8f, 0x8b, 0x1f, 0x15, 0xd6, 0x3e, 0x81, 0x7a, 0x9c, 0xa4, 0x26, 0xea, 0xfd, 0x04, 0x6a, 0xb1,
	0x55, 0x98, 0xa8, 0xf3, 0x53, 0x58, 0xcc, 0x5a, 0xc9, 0x49, 0x70, 0xb4, 0xff, 0x0c, 0x60, 0x76,
	0x87, 0x8b, 0x52, 0x26, 0x8e, 0x95, 0x7c, 0x2d, 0x3a, 0x5d, 0xb6, 0x32, 0x7d, 0x12, 0x74, 0x8e,
	0x6c, 0x17, 0x05, 0x2f, 0xef, 0x0b, 0xb2, 0x6a, 0xbb, 0x6b, 0x6c, 0xc0, 0xb4, 0x6b, 0xf7, 0x49,
	0x6b, 0x0a, 0x49, 0x6e, 0x4d, 0xad, 0x81, 0x40, 0xb8, 0xc1, 0x84, 0x3e, 0x27, 0x2e, 0x84, 0x63,
	0xc3, 0x70, 0xfa, 0x8c, 0x55, 0xb8, 0xc0, 0xe5, 0x05, 0xe3, 0x0e, 0xcc, 0x77, 0xec, 0x5e, 0x6f,
	0xdf, 0xee, 0xbc, 0xb1, 0x94, 0x48, 0xe6, 0x72, 0xb7, 0x29, 0x1b, 0xb6, 0xa4, 0x68, 0xd6, 0x81,
	0x51, 0xb9, 0x74, 0xbc, 0x9e, 0x90, 0xc4, 0x0a, 0x78, 0x47, 0xd4, 0x1b, 0x3f, 0x81, 0xd5, 0x0e,
	0x12, 0xbe, 0x58, 0x7e, 0xbb, 0xd7, 0xf3, 0xde, 0x92, 0x2e, 0xa3, 0x43, 0xda, 0x9a, 0x45, 0x96,
	0x5c, 0xe6, 0x00, 0x48, 0x09, 0x9b, 0xbc, 0xf9, 0x9b, 0xa0, 0x47, 0x59, 0x57, 0x84, 0xb6, 0xba,
	0xa7, 0xae, 0xdd, 0x77, 0x3a, 0x42, 0xde, 0xf2, 0xae, 0x65, 0xa4, 0xd1, 0x65, 0x04, 0x78, 0xc6,
	0xdb, 0xb9, 0xf4, 0xc5, 0xae, 0x9f, 0xc2, 0xb9, 0x78, 0xd7, 0x80, 0x74, 0x9d, 0x80, 0x69, 0x2f,
	0xec, 0x5c, 0xc1, 0xce, 0x2d, 0xbd, 0xb3, 0x29, 0x00, 0xb0, 0xfb, 0x0d, 0x68, 0xf4, 0x9c, 0xbe,
	0x13, 0xd2, 0x68, 0x32, 0xb8, 0x90, 0xaf, 0xf3, 0x6a, 0x35, 0x15, 0x77, 0xc1, 0xe8, 0x3b, 0xae,
	0x25, 0x55, 0x8a, 0xd0, 0x72, 0x55, 0xd4, 0x72, 0xcd, 0xbe, 0xe3, 0xee, 0xf0, 0x86, 0x4d, 0xae,
	0xef, 0x18, 0xb4, 0x7d, 0x92, 0x84, 0x9e, 0x13, 0xd0, 0xf6, 0x49, 0x1c, 0xfa, 0x0a, 0xd4, 0xc4,
	0x0b, 0xa3, 0x2a, 0xa0, 0xad, 0x1a, 0xce, 0xd6, 0x1c, 0xaf, 0x44, 0x65, 0x40, 0x8d, 0xf7, 0x60,
	0xd1, 0xa1, 0x96, 0x94, 0x69, 0x56, 0xe7, 0x88, 0x74, 0xde, 0x78, 0x83, 0x10, 0xd5, 0x42, 0xd9,
	0x34, 0x1c, 0xba, 0x23, 0x9a, 0xb6, 0x44, 0x0b, 0x13, 0x05, 0x94, 0x74, 0x02, 0x12, 0x5a, 0x8c,
	0x40, 0x1b, 0x42, 0x57, 0x63, 0xcd, 0x57, 0xe4, 0xd4, 0xb8, 0x07, 0x86, 0x52, 0xdc, 0x56, 0x40,
	0x7e, 0x33, 0x70, 0x02, 0xd2, 0x45, 0x7d, 0x51, 0x36, 0xe7, 0x55, 0x8b, 0x29, 0x1a, 0x8c, 0xdb,
	0x30, 0x4f, 0x89, 0xdb, 0xb5, 0xf4, 0x91, 0xb6, 0xe6, 0x11, 0xba, 0xc1, 0x1a, 0x5e, 0x45, 0x83,
	0x65, 0xb0, 0x4c, 0xeb, 0xe1, 0x18, 0x2d, 0xa9, 0xdc, 0x0d, 0x1c, 0x40, 0x63, 0x10, 0xf4, 0x70,
	0x84, 0x9b, 0x42, 0xc9, 0x6f, 0xc0, 0x02, 0x83, 0xf5, 0x03, 0x8f, 0x29, 0x4c, 0x39, 0x65, 0x42,
	0x27, 0x30, 0x34, 0x3b, 0xbc, 0x45, 0x4c, 0x99, 0xc4, 0xad, 0x96, 0x19, 0x55, 0xeb, 0xa2, 0xc2,
	0x2d, 0x57, 0x17, 0x55, 0xec, 0x7b, 0xb0, 0x18, 0x83, 0x95, 0x7a, 0x9a, 0x2b, 0x0f, 0x43, 0x03,
	0x97, 0xfa, 0x7a, 0x19, 0x66, 0x68, 0x68, 0x87, 0x03, 0xa6, 0x44, 0x0a, 0x37, 0x4b, 0xa6, 0x28,
	0x19, 0x3f, 0x01, 0xe0, 0xb4, 0xdb, 0xb5, 0xec, 0xb0, 0xb5, 0x82, 0x62, 0x70, 0x6d, 0x83, 0x9b,
	0x62, 0x1b, 0xd2, 0x14, 0xdb, 0xd8, 0x93, 0xa6, 0x98, 0x59, 0x11, 0xd0, 0x9b, 0x21, 0xeb, 0x3a,
	0xf0, 0xbb, 0xb2, 0x6b, 0x6b, 0x74, 0x57, 0x01, 0xbd, 0x19, 0xa2, 0x0d, 0xa3, 0x16, 0x1c, 0x27,
	0x71, 0x15, 0x47, 0x55, 0x93, 0xb5, 0x5b, 0x38, 0x85, 0x8f, 0x60, 0x99, 0x4f, 0xb7, 0x1d, 0x1c,
	0x12, 0xce, 0xac, 0x62, 0x16, 0xb9, 0x7e, 0x58, 0xc4, 0x39, 0x97, 0x8d, 0x72, 0x22, 0xef, 0x82,
	0x81, 0xbd, 0x6c, 0xb7, 0x43, 0x7a, 0xaa, 0x07, 0xd7, 0x18, 0x4d, 0xd6, 0x03, 0x1b, 0x12, 0xd3,
	0x7e, 0x10, 0xd8, 0x83, 0xae, 0x02, 0x3e, 0xaf, 0xa6, 0xfd, 0x05, 0xab, 0x4f, 0x60, 0x0e, 0xc8,
	0xc1, 0xc0, 0x8d, 0x80, 0x2f, 0x28, 0xcc, 0x26, 0x36, 0x08, 0xe8, 0xb5, 0x0f, 0xa1, 0xa2, 0x44,
	0xd7, 0x44, 0xd2, 0xf4, 0x4f, 0x4a, 0x30, 0x27, 0x84, 0x1f, 0x4a, 0x94, 0xc9, 0x45, 0xea, 0xc3,
	0x98, 0x48, 0xbd, 0x94, 0x14, 0xa9, 0x88, 0x35, 0x25, 0x57, 0x13, 0x36, 0xdf, 0xf4, 0x50, 0x9b,
	0xaf, 0x14, 0xb7, 0xf9, 0x52, 0x9c, 0x3e, 0x93, 0xc1, 0xe9, 0x71, 0xbe, 0x9d, 0x4d, 0xf2, 0x6d,
	0x26, 0x23, 0x96, 0x27, 0x60, 0xc4, 0xca, 0x44, 0x8c, 0x08, 0x79, 0x8c, 0x98, 0xa9, 0x1c, 0xaa,
	0x39, 0xca, 0x21, 0x9f, 0x44, 0xe7, 0x26, 0x26, 0xd1, 0xda, 0x24, 0x24, 0x5a, 0x9f, 0x84, 0x44,
	0x1b, 0xd9, 0x24, 0xaa, 0x49, 0x85, 0xa6, 0x2e, 0x15, 0xce, 0x4e, 0xba, 0x7f, 0xaf, 0x00, 0x8d,
	0x97, 0x82, 0x0e, 0xb7, 0x3c, 0x37, 0xb4, 0x3b, 0xa1, 0xf1, 0x14, 0xc0, 0x1e, 0x84, 0x47, 0x5e,
	0xe0, 0xfc, 0x96, 0x70, 0x2a, 0xae, 0x3e, 0x68, 0x2b, 0x92, 0x4c, 0x40, 0x6f, 0x2a, 0x48, 0x53,
	0xeb, 0x65, 0x7c, 0x06, 0x95, 0x90, 0x74, 0x8e, 0x5c, 0xa7, 0x63, 0xf7, 0xf0, 0xa9, 0xd5, 0x07,
	0x97, 0xf3, 0x50, 0xec, 0x49, 0x40, 0x33, 0xea, 0xd3, 0xfe, 0x05, 0xb4, 0xf2, 0xc0, 0x0c, 0x43,
	0x70, 0x0b, 0x7f, 0x43, 0x65, 0x64, 0x70, 0x02, 0x14, 0xaf, 0x88, 0x05, 0x56, 0xcb, 0x7d, 0x96,
	0x29, 0x5e, 0x8b, 0x85, 0xf6, 0x5b, 0x58, 0xcd, 0x7d, 0x8b, 0x77, 0x45, 0x8e, 0xf6, 0xbf, 0x47,
	0x1d, 0xf4, 0x06, 0x85, 0x87, 0x29, 0xcb, 0xed, 0xff, 0xa1, 0xcd, 0xf6, 0x53, 0xdb, 0x7d, 0xe3,
	0xb8, 0x87, 0x31, 0x8f, 0xb4, 0x90, 0xf0, 0x48, 0xe5, 0x58, 0x8a, 0xda, 0x58, 0x98, 0x97, 0xda,
	0xed, 0x06, 0x8c, 0xe3, 0xa7, 0x84, 0x97, 0xca, 0x8b, 0x4c, 0x48, 0x0b, 0xce, 0x92, 0x96, 0x3b,
	0x7f, 0x7e, 0x4d, 0xd4, 0x0a, 0xcb, 0x7d, 0x11, 0x4a, 0xf4, 0xad, 0x73, 0x20, 0x9d, 0x5c, 0x5e,
	0x60, 0x68, 0xbb, 0x24, 0x14, 0xa2, 0x00, 0xd1, 0x8a, 0xa2, 0xf1, 0x10, 0x96, 0x3a, 0x5e, 0x10,
	0x10, 0xea, 0x7b, 0x6e, 0x17, 0x8d, 0x08, 0xc1, 0xbe, 0x5c, 0x20, 0x2c, 0xc6, 0x1a, 0x05, 0x0f,
	0xb7, 0xff, 0x2a, 0x18, 0xf2, 0x45, 0xbf, 0xb6, 0x69, 0xb8, 0x63, 0x9f, 0x32, 0x43, 0x60, 0x03,
	0xa6, 0x99, 0x46, 0x11, 0x34, 0x35, 0x4c, 0xf7, 0x20, 0x9c, 0xe6, 0xc5, 0x17, 0x75, 0x2f, 0xbe,
	0xfd, 0x08, 0xe6, 0x24, 0x76, 0x66, 0xf3, 0xa7, 0xe4, 0x6d, 0xe6, 0x7a, 0xb5, 0xff, 0x53, 0x11,
	0x16, 0xa2, 0x75, 0xef, 0xfb, 0xb6, 0x7b, 0xba, 0xed, 0x1e, 0x78, 0x99, 0x2b, 0x7e, 0x0b, 0x9a,
	0x76, 0x2f, 0x24, 0x81, 0x6b, 0x87, 0xce, 0x31, 0xb1, 0xb4, 0x55, 0x68, 0x68, 0xf5, 0xaf, 0xc4,
	0x82, 0xbc, 0x25, 0xfb, 0xd4, 0x09, 0x25, 0x21, 0xc8, 0x22, 0x6b, 0xc1, 0xd9, 0x08, 0x64, 0xac,
	0x41, 0x16, 0x71, 0x0d, 0x42, 0x36, 0x13, 0x72, 0x0d, 0x58, 0x81, 0x31, 0xee, 0x6f, 0x1d, 0x5f,
	0xcc, 0x3f, 0xfb, 0xc9, 0x86, 0xd6, 0x71, 0x42, 0x29, 0x7b, 0xf1, 0xb7, 0x4e, 0x00, 0xe5, 0x38,
	0x01, 0xdc, 0x03, 0x43, 0xfc, 0xb4, 0xec, 0x6e, 0x17, 0x49, 0xce, 0xee, 0x09, 0x29, 0x3b, 0x2f,
	0x5a, 0x36, 0x55, 0x83, 0x71, 0x1f, 0x16, 0x98, 0x9f, 0x4e, 0xc3, 0xc0, 0x66, 0x35, 0x92, 0x68,
	0xb8, 0x9c, 0x35, 0xf4, 0x26, 0x41, 0x39, 0x4b, 0x30, 0x13, 0xda, 0x27, 0x4c, 0x83, 0x55, 0x85,
	0x4f, 0x66, 0x9f, 0x6c, 0x77, 0xdb, 0x7f, 0xa3, 0x00, 0xcb, 0xfa, 0xbc, 0xf6, 0x48, 0x48, 0xba,
	0xbb, 0x21, 0xf1, 0x29, 0x9f, 0x01, 0x9c, 0x69, 0x9c, 0xdd, 0xb2, 0x29, 0x8b, 0x48, 0xf6, 0x9c,
	0xf7, 0x28, 0x4e, 0x6c, 0xd9, 0x54, 0x65, 0xd6, 0x6b, 0x9f, 0x73, 0x07, 0xce, 0x68, 0xd9, 0x94,
	0x45, 0x46, 0x10, 0xa1, 0x1d, 0x38, 0x07, 0x07, 0x38, 0xa1, 0x65, 0x53, 0x94, 0xda, 0x7f, 0x5c,
	0x87, 0xb2, 0x1c, 0x42, 0x8a, 0x1a, 0x6e, 0x09, 0x9f, 0x91, 0x8b, 0xa1, 0xa5, 0x94, 0x18, 0xd2,
	0xdc, 0xc6, 0xc7, 0xd1, 0x78, 0xa7, 0x10, 0xfa, 0x7c, 0x86, 0xd0, 0x52, 0x94, 0x13, 0xbd, 0xcd,
	0x23, 0xed, 0x6d, 0x1a, 0xd8, 0xb1, 0x95, 0x27, 0xed, 0xb4, 0xf7, 0x7c, 0x10, 0xbd, 0x67, 0x33,
	0xa7, 0x93, 0x90, 0x12, 0xb1, 0x19, 0x10, 0x1a, 0x60, 0x7e, 0x88, 0x5d, 0x68, 0x9c, 0xdd, 0x2e,
	0x5c, 0x98, 0xc4, 0x2e, 0x7c, 0x06, 0xcd, 0x03, 0x27, 0xa0, 0x61, 0xe4, 0x60, 0x84, 0x68, 0x02,
	0x0f, 0x47, 0x50, 0xc7, 0x3e, 0xd2, 0xf5, 0x08, 0x99, 0xb3, 0xee, 0x50, 0xeb, 0xd8, 0x0e, 0x2d,
	0xe2, 0xda, 0xfb, 0x3d, 0xd2, 0x45, 0xbb, 0xb8, 0x6c, 0xce, 0x39, 0xf4, 0xb5, 0x1d, 0x3e, 0xe7,
	0x75, 0xc6, 0xe7, 0x70, 0xc1, 0x61, 0xd6, 0x67, 0xbf, 0xef, 0x50, 0xca, 0xe8, 0x35, 0xf4, 0x2c,
	0xb6, 0x68, 0xaa, 0xd3, 0x32, 0x76, 0x5a, 0x75, 0xe8, 0x96, 0x82, 0xd9, 0xf3, 0xd8, 0xe2, 0x4a,
	0x0c, 0x8f, 0x60, 0xf9, 0xc8, 0xa6, 0x96, 0x32, 0xc5, 0xa2, 0xf8, 0xe1, 0x0a, 0x76, 0x5d, 0x3c,
	0xb2, 0xa9, 0x9c, 0xf8, 0x5d, 0x15, 0x4a, 0xbc, 0x0d, 0xf3, 0xac, 0x97, 0x4f, 0x7d, 0xad, 0x43,
	0x8b, 0x9b, 0x39, 0x47, 0x36, 0xdd, 0xa1, 0x7e, 0x04, 0xfb, 0x09, 0x54, 0x7b, 0x36, 0x9f, 0x0e,
	0xe6, 0x12, 0xad, 0xe2, 0x54, 0x9c, 0x4b, 0xad, 0x6a, 0x24, 0x12, 0x4d, 0xe8, 0x45, 0xe2, 0xf1,
	0x1c, 0x54, 0x1c, 0x8a, 0x0f, 0x21, 0x5d, 0xb4, 0x98, 0xcb, 0x66, 0xd9, 0xa1, 0xbb, 0x58, 0x36,
	0x5e, 0x41, 0x23, 0x1e, 0x46, 0xa4, 0xad, 0xf3, 0x68, 0x2d, 0x5e, 0x4b, 0xa1, 0xdf, 0xd8, 0xd1,
	0x23, 0x8b, 0x22, 0xe4, 0x55, 0x8f, 0x85, 0x1b, 0xb9, 0xb6, 0x38, 0x0c, 0x08, 0x41, 0x8c, 0xe1,
	0xa9, 0x4f, 0xd0, 0x2e, 0x2e, 0x99, 0x35, 0x55, 0xbb, 0x77, 0xea, 0x13, 0xe3, 0x03, 0x58, 0x89,
	0xc0, 0x28, 0xfb, 0x73, 0xec, 0xd8, 0x16, 0x0a, 0xd7, 0x8b, 0x7c, 0xd2, 0x54, 0xf3, 0x2e, 0x71,
	0xc3, 0xd7, 0x8e, 0xfd, 0x92, 0xe9, 0x46, 0xf4, 0x3b, 0x9d, 0x9e, 0x15, 0x06, 0x76, 0x87, 0xd1,
	0xad, 0xd5, 0x73, 0xdc, 0x37, 0x22, 0x06, 0xd3, 0x64, 0x2d, 0x7b, 0xa2, 0xe1, 0x6b, 0xc7, 0x7d,
	0x83, 0x96, 0xe4, 0x43, 0x2b, 0x7a, 0x0e, 0x8a, 0xdb, 0x75, 0x2e, 0x6e, 0xe9, 0xc3, 0x4d, 0x59,
	0x8f, 0xe2, 0xf6, 0x2e, 0x18, 0x7c, 0x76, 0xad, 0x8e, 0x47, 0x95, 0x47, 0x7b, 0x99, 0x7b, 0xb4,
	0xbc, 0x65, 0xcb, 0xa3, 0xd2, 0xa3, 0x7d, 0x0f, 0x16, 0x75, 0x68, 0xa5, 0x69, 0xdb, 0x5c, 0xc8,
	0x45, 0xf0, 0xca, 0xbf, 0xbe, 0x0d, 0xf3, 0xc2, 0xbf, 0x66, 0xbd, 0x04, 0xfa, 0x2b, 0x88, 0xbe,
	0xc1, 0xdd, 0x6b, 0x6f, 0x20, 0xb1, 0x7f, 0x0c, 0xab, 0x81, 0x87, 0x73, 0x6f, 0x05, 0x84, 0x92,
	0xe0, 0x98, 0x58, 0xe1, 0x51, 0x40, 0xe8, 0x91, 0xd7, 0xeb, 0xb6, 0xae, 0x62, 0x9f, 0x15, 0x01,
	0x60, 0xf2, 0xf6, 0x3d, 0xd9, 0xcc, 0x46, 0x96, 0xec, 0xdb, 0xb5, 0x4f, 0x69, 0xeb, 0x1a, 0xae,
	0x82, 0x11, 0xef, 0xf6, 0xcc, 0x3e, 0xa5, 0xc6, 0x11, 0xbc, 0x9f, 0xec, 0xa1, 0x99, 0xb1, 0x61,
	0x60, 0xbb, 0xd4, 0xee, 0x30, 0x71, 0x4d, 0xb5, 0x51, 0x5c, 0xc7, 0x51, 0xdc, 0x8b, 0xa3, 0x8b,
	0x0c, 0xdc, 0x3d, 0xad, 0x57, 0x34, 0xb6, 0xfb, 0xb0, 0xe8, 0x84, 0xa4, 0x6f, 0xb1, 0x89, 0xd0,
	0x67, 0xf9, 0x06, 0x22, 0x9b, 0x67, 0x6d, 0x2f, 0x1d, 0x57, 0x9b, 0xe6, 0x87, 0xb0, 0x1c, 0xef,
	0xa0, 0x26, 0xfa, 0x26, 0x4e, 0xf4, 0x82, 0xd6, 0x45, 0xcd, 0xf4, 0x2d, 0x68, 0x76, 0x88, 0x1b,
	0x06, 0xce, 0xc1, 0xe0, 0xd0, 0xb3, 0x78, 0xb0, 0xef, 0x16, 0x5f, 0xf4, 0xa8, 0x7e, 0x0f, 0xc3,
	0x7e, 0x91, 0xdc, 0xbf, 0xcd, 0x03, 0xcc, 0xbc, 0x64, 0xbc, 0x82, 0xf9, 0x78, 0xe8, 0x80, 0xd0,
	0xb0, 0x75, 0x27, 0xc7, 0xdc, 0xdc, 0xd5, 0x43, 0x09, 0x84, 0x86, 0x66, 0x93, 0x26, 0x6a, 0x98,
	0x06, 0xcd, 0x90, 0x0e, 0x77, 0xb9, 0x06, 0xed, 0xa7, 0x44, 0xc3, 0x15, 0xa8, 0xc5, 0xc5, 0xc2,
	0x3d, 0x15, 0x64, 0x8c, 0x80, 0x3e, 0x60, 0xba, 0x9e, 0xf8, 0xb4, 0xb5, 0x81, 0xe3, 0xba, 0x94,
	0xa9, 0x51, 0x22, 0x9d, 0x69, 0x72, 0xe8, 0x35, 0x1b, 0x16, 0x32, 0xd8, 0x38, 0xc3, 0xb8, 0x7f,
	0xa4, 0x1b, 0xf7, 0xd5, 0x07, 0x17, 0x53, 0xf8, 0x63, 0x68, 0x74, 0xe3, 0xff, 0x73, 0x58, 0xdb,
	0x3d, 0xa5, 0x21, 0xe9, 0xa3, 0xa7, 0xe6, 0x74, 0x50, 0xd7, 0xef, 0xa2, 0x3e, 0x21, 0x94, 0xd9,
	0x1e, 0x07, 0x81, 0xd7, 0xc7, 0x47, 0x95, 0x4c, 0xfc, 0xcd, 0x54, 0x6b, 0xe8, 0xe1, 0x83, 0x4a,
	0x66, 0x31, 0xf4, 0xda, 0xff, 0xb7, 0x08, 0x73, 0x7a, 0xe7, 0x2c, 0x4b, 0x2c, 0x74, 0xc2, 0x9e,
	0xf2, 0x3c, 0xb0, 0xc0, 0x14, 0x7c, 0x9f, 0x50, 0x6a, 0x1f, 0x2a, 0x93, 0x49, 0x14, 0x93, 0x9e,
	0xf2, 0x74, 0xca, 0x53, 0x5e, 0x81, 0x59, 0x14, 0xfa, 0x4e, 0x57, 0xd8, 0x4e, 0x33, 0xac, 0xb8,
	0xdd, 0x95, 0xc2, 0x13, 0xdf, 0x07, 0x4d, 0x28, 0x2e, 0x3c, 0xb1, 0x2c, 0x22, 0xf9, 0x01, 0xb1,
	0xbb, 0x68, 0x4a, 0x61, 0x24, 0xdf, 0x24, 0x36, 0xf3, 0x53, 0xca, 0x54, 0xbc, 0x30, 0x5a, 0x53,
	0xd5, 0x07, 0x57, 0xd4, 0xfc, 0xe5, 0xcf, 0x8d, 0xa9, 0x3a, 0x25, 0xf4, 0x6e, 0xe5, 0xec, 0x7a,
	0x17, 0x26, 0xd0, 0xbb, 0xed, 0x3e, 0x34, 0x31, 0x26, 0xb0, 0xd3, 0xb3, 0xc3, 0x03, 0x2f, 0xe8,
	0xbf, 0x20, 0xba, 0xb1, 0xcc, 0xa6, 0xbf, 0x98, 0xb9, 0xe5, 0x55, 0x4c, 0x38, 0x18, 0xd7, 0xa0,
	0x4e, 0x0e, 0x0e, 0x48, 0x07, 0x8d, 0xdc, 0xc0, 0x16, 0x26, 0x6c, 0xd1, 0xac, 0xa9, 0x5a, 0xd3,
	0x0e, 0x49, 0xfb, 0x00, 0xca, 0xf8, 0xb8, 0x3d, 0xfb, 0x84, 0x91, 0x05, 0x6a, 0x0b, 0x61, 0x2d,
	0xb3, 0xdf, 0xac, 0x0e, 0x3b, 0x73, 0x2b, 0x1d, 0x7f, 0x9f, 0x65, 0x07, 0xae, 0xfd, 0x5b, 0x58,
	0xc0, 0xe7, 0x3c, 0xe5, 0x2b, 0xb0, 0x29, 0xec, 0x5a, 0xcd, 0x8e, 0x2e, 0xc4, 0xed, 0x68, 0x69,
	0x1f, 0x17, 0x35, 0xfb, 0xf8, 0x12, 0x54, 0x7d, 0x8f, 0x86, 0x76, 0xcf, 0xea, 0x78, 0x5d, 0x49,
	0x60, 0xc0, 0xab, 0xb6, 0xbc, 0x2e, 0x89, 0x8c, 0xef, 0x69, 0xcd, 0xf8, 0x6e, 0xff, 0xe9, 0x34,
	0x54, 0xd4, 0x2e, 0x42, 0x8a, 0x8e, 0x97, 0x61, 0xc6, 0xdb, 0xff, 0x35, 0xe9, 0x84, 0xe2, 0x51,
	0xa2, 0xc4, 0x1e, 0x46, 0x4e, 0xd0, 0x1f, 0xe8, 0x31, 0x92, 0x14, 0x0f, 0x93, 0x55, 0xdb, 0x91,
	0x3b, 0x39, 0x9d, 0xe5, 0x4e, 0x96, 0x74, 0x77, 0x92, 0xad, 0x05, 0xea, 0x4c, 0xdc, 0x02, 0x74,
	0x48, 0x57, 0x50, 0x71, 0x0d, 0x6b, 0x5f, 0x8b, 0xca, 0xc8, 0xeb, 0x9c, 0xd5, 0xbd, 0xce, 0x6b,
	0x50, 0xc7, 0x1f, 0x51, 0x67, 0x1e, 0x88, 0xa9, 0x61, 0xad, 0xea, 0xcc, 0x5e, 0xcb, 0x17, 0x1e,
	0x41, 0xd1, 0xf1, 0xd9, 0x6b, 0xf5, 0xbc, 0x8e, 0xdd, 0x23, 0xc2, 0xea, 0x17, 0x25, 0x66, 0x07,
	0x4b, 0x1f, 0xa3, 0x9a, 0xb0, 0x83, 0x33, 0x16, 0x28, 0xf2, 0x40, 0x3e, 0xd1, 0x36, 0xb8, 0xe6,
	0xd0, 0x3a, 0x59, 0x4f, 0x6f, 0xd1, 0xe4, 0xee, 0x6b, 0x5d, 0x00, 0x08, 0x49, 0xe7, 0x28, 0xb6,
	0x0f, 0x89, 0x21, 0x01, 0x15, 0x43, 0x12, 0xa1, 0x26, 0x97, 0xbc, 0xb5, 0xc4, 0x86, 0x23, 0x8f,
	0x3a, 0x37, 0x78, 0xc3, 0x2b, 0xf2, 0xd6, 0xe4, 0x3b, 0x8f, 0x1f, 0xc0, 0x4a, 0x0a, 0x56, 0xe0,
	0xe5, 0xb1, 0x95, 0xc5, 0x44, 0x0f, 0x7c, 0xc4, 0x3b, 0x6d, 0xcc, 0xb4, 0xff, 0x51, 0x0b, 0x4a,
	0xd9, 0xf1, 0x3f, 0x03, 0xa6, 0x71, 0x0f, 0x4a, 0x90, 0x29, 0xfb, 0x6d, 0xac, 0x43, 0x55, 0x53,
	0xd9, 0x82, 0x72, 0xf4, 0x2a, 0x8d, 0xe6, 0xa6, 0x63, 0x34, 0x17, 0xb9, 0x00, 0x42, 0x02, 0x0a,
	0x17, 0x00, 0x83, 0xb4, 0x7c, 0x5b, 0x50, 0xb4, 0xcf, 0xc8, 0x20, 0x2d, 0xd6, 0x72, 0xe9, 0x35,
	0xc6, 0x8e, 0x75, 0x5c, 0xa6, 0x95, 0xcf, 0x2e, 0xd3, 0x2a, 0x93, 0xf8, 0x12, 0x4f, 0xa0, 0xca,
	0xe3, 0x6b, 0xe3, 0xca, 0x43, 0x90, 0xe0, 0x9b, 0x5c, 0xaa, 0x88, 0x12, 0x52, 0x2c, 0x73, 0x27,
	0x45, 0x99, 0xf9, 0xb9, 0xfc, 0x77, 0x8f, 0xfb, 0xb9, 0x01, 0xb1, 0xa9, 0xe7, 0x8a, 0x78, 0x9f,
	0xa1, 0x37, 0x99, 0xd8, 0xc2, 0x90, 0xf1, 0x78, 0x1c, 0xe9, 0x22, 0x15, 0x96, 0x4d, 0x55, 0x66,
	0xa3, 0x94, 0xbf, 0xd9, 0x28, 0xeb, 0xa3, 0x47, 0x29, 0xc1, 0x37, 0x71, 0x7f, 0x45, 0x6e, 0x9a,
	0xea, 0xb4, 0x38, 0x27, 0x2a, 0x39, 0x99, 0x6b, 0x40, 0x9c, 0xd1, 0x9b, 0x31, 0xa0, 0x1d, 0xc9,
	0xef, 0x89, 0x5d, 0xda, 0xf9, 0x31, 0x76, 0x69, 0x8d, 0xd4, 0x2e, 0xed, 0x1d, 0x98, 0x8f, 0xcc,
	0xee, 0x63, 0x12, 0x30, 0xa7, 0x49, 0x6c, 0x79, 0x34, 0x55, 0xc3, 0x6b, 0x5e, 0x8f, 0xf1, 0x05,
	0x05, 0x6c, 0x77, 0x3a, 0xc4, 0x0f, 0x49, 0x57, 0x6c, 0x8d, 0x47, 0x68, 0x36, 0x45, 0x03, 0x7b,
	0xb8, 0xe0, 0x41, 0xca, 0x24, 0x0c, 0xf7, 0xe9, 0x80, 0x57, 0xed, 0x32, 0x29, 0x13, 0x31, 0x34,
	0x03, 0x10, 0x53, 0xb2, 0xcc, 0x2d, 0xc0, 0x08, 0x8c, 0xcf, 0xca, 0x5d, 0x98, 0xe1, 0x9b, 0xc7,
	0x62, 0xcf, 0x63, 0x31, 0x2e, 0x57, 0xb6, 0xb1, 0xcd, 0x14, 0x30, 0xcc, 0xb8, 0x0e, 0x3d, 0xa6,
	0x02, 0x12, 0x1b, 0x5f, 0x2d, 0x54, 0x45, 0x06, 0xb6, 0xc5, 0xb7, 0xbe, 0x74, 0xb5, 0xb4, 0x9a,
	0xd0, 0x92, 0x72, 0xd3, 0x79, 0x6d, 0xc4, 0xa6, 0xf3, 0x73, 0x68, 0x88, 0x26, 0x4b, 0x4a, 0xcf,
	0x73, 0x63, 0x48, 0xcf, 0xfa, 0x7e, 0x5c, 0xdd, 0x5d, 0x81, 0xa9, 0xd0, 0x3e, 0xc1, 0x3d, 0x8d,
	0xea, 0x83, 0xf9, 0x78, 0xd7, 0x3d, 0xfb, 0xc4, 0x64, 0xad, 0xc6, 0xd3, 0x54, 0x56, 0xc9, 0x85,
	0x84, 0xb3, 0x19, 0x33, 0xfb, 0xb0, 0x73, 0x32, 0xe5, 0xe4, 0x26, 0x94, 0x98, 0x5d, 0x4e, 0x5b,
	0x17, 0x51, 0x54, 0x27, 0x5e, 0x6c, 0x3b, 0x24, 0x7d, 0x93, 0x03, 0x18, 0x1f, 0xc1, 0x0c, 0x27,
	0x63, 0x74, 0xe1, 0x52, 0x52, 0x5d, 0xb7, 0x91, 0x78, 0xc0, 0xda, 0x14, 0xf0, 0xc6, 0x47, 0x9a,
	0x46, 0x58, 0xc7, 0xc7, 0x24, 0x26, 0x23, 0x57, 0x1b, 0xbc, 0xca, 0xc8, 0x72, 0xb8, 0x8c, 0x18,
	0xae, 0x24, 0x30, 0x8c, 0x97, 0xd8, 0x70, 0x1f, 0x66, 0x45, 0xf6, 0x10, 0x7a, 0x7f, 0x7a, 0x24,
	0x48, 0xdf, 0x66, 0x31, 0x25, 0x94, 0x71, 0x93, 0x0d, 0x80, 0x27, 0x20, 0xa9, 0xec, 0x9f, 0x2b,
	0x7c, 0x4f, 0xd6, 0xd7, 0x3a, 0x6c, 0x77, 0x8d, 0x1b, 0xd0, 0x90, 0x90, 0x32, 0x38, 0x7a, 0x35,
	0x06, 0x28, 0xb7, 0x36, 0xbe, 0x81, 0x55, 0x09, 0x88, 0x71, 0x02, 0xe1, 0xb2, 0x70, 0x59, 0x72,
	0x6d, 0xa4, 0x2c, 0x59, 0x16, 0x9d, 0xbf, 0xb6, 0x69, 0x68, 0xca, 0xae, 0x9b, 0xa1, 0xf1, 0x25,
	0xc8, 0x07, 0xc9, 0x94, 0x98, 0xeb, 0x38, 0x51, 0x97, 0x53, 0x13, 0x85, 0x40, 0x7a, 0x26, 0x4c,
	0xcd, 0xd7, 0xeb, 0x8c, 0x5f, 0xc1, 0xc5, 0x38, 0x59, 0x89, 0x57, 0xef, 0xf4, 0x3c, 0xca, 0x47,
	0x79, 0x63, 0xe4, 0x28, 0xd7, 0xfc, 0x14, 0xe5, 0x6d, 0x61, 0xf7, 0xcd, 0xd0, 0xb8, 0x0e, 0x0d,
	0x91, 0x52, 0xa3, 0xdc, 0xb5, 0x9b, 0xdc, 0x50, 0xe1, 0xa9, 0x35, 0xd2, 0x11, 0xbb, 0x0c, 0x73,
	0x62, 0xf3, 0x9e, 0x33, 0xee, 0x2d, 0x64, 0xdc, 0x2a, 0xd6, 0x09, 0x8e, 0xfd, 0x0c, 0xce, 0x27,
	0x86, 0xca, 0x73, 0x8d, 0xe4, 0x0a, 0x70, 0x4f, 0x71, 0x35, 0x36, 0x98, 0x1d, 0x06, 0x21, 0x17,
	0x83, 0xc0, 0x6a, 0x02, 0x41, 0x78, 0xe2, 0xca, 0x09, 0xbc, 0x93, 0x95, 0x53, 0x14, 0xe7, 0xa9,
	0xbd, 0x13, 0x57, 0x9f, 0xc9, 0x65, 0x3f, 0xb3, 0xd1, 0xd8, 0xc3, 0x80, 0x05, 0x3e, 0x06, 0x37,
	0xb7, 0xa9, 0x13, 0x12, 0xda, 0xba, 0x9b, 0x88, 0xdd, 0xc4, 0xf0, 0x9b, 0x0a, 0x8e, 0xa3, 0x9e,
	0xf7, 0x93, 0xf5, 0xc6, 0x1e, 0xac, 0x92, 0x13, 0xdf, 0x09, 0x88, 0xc5, 0xf4, 0xa7, 0x15, 0x7a,
	0x16, 0xf3, 0x03, 0x2c, 0xc7, 0xf5, 0x07, 0x21, 0xba, 0xa1, 0xc3, 0xd7, 0x68, 0x89, 0x77, 0x7e,
	0x66, 0x87, 0x64, 0xcf, 0x7b, 0xe1, 0x05, 0xfd, 0x6d, 0xd6, 0xd1, 0x78, 0x02, 0x6b, 0xe8, 0x5d,
	0xc9, 0x30, 0x32, 0x63, 0x9c, 0x68, 0x4b, 0x7e, 0x03, 0x57, 0x6a, 0x85, 0x41, 0x08, 0x59, 0xf5,
	0xcc, 0x0e, 0x6d, 0xb5, 0x31, 0xaf, 0x67, 0x3e, 0xdd, 0x4f, 0x64, 0x3e, 0x7d, 0x07, 0x4b, 0x0e,
	0xe5, 0x3b, 0x85, 0x42, 0x4e, 0x50, 0x8c, 0x26, 0xb5, 0xde, 0xc3, 0x79, 0xb8, 0x91, 0x98, 0x87,
	0x6d, 0xaa, 0x8b, 0x14, 0xba, 0x4b, 0xdc, 0x90, 0xcf, 0xc4, 0x82, 0x93, 0x6e, 0x31, 0xbe, 0x86,
	0x05, 0xe1, 0x10, 0x58, 0x01, 0xa1, 0x61, 0xe0, 0x70, 0x93, 0xea, 0xfd, 0x84, 0x40, 0xdc, 0xe2,
	0x30, 0x66, 0x04, 0x62, 0x1a, 0x9d, 0x54, 0x1d, 0x23, 0x3d, 0x89, 0x0d, 0x1d, 0x88, 0x07, 0xdc,
	0x40, 0x12, 0x75, 0xe8, 0x41, 0x9c, 0x83, 0x8a, 0x6f, 0x07, 0x84, 0xfb, 0xa8, 0x0f, 0xc5, 0x26,
	0x0f, 0x56, 0x6c, 0x77, 0x8d, 0x17, 0x30, 0x2f, 0x1a, 0xb5, 0xa0, 0xe8, 0xa3, 0x91, 0x2b, 0xd2,
	0xe0, 0x9d, 0xa2, 0xa8, 0xa8, 0x74, 0xb4, 0x3e, 0xd0, 0x1c, 0xad, 0x9b, 0xd0, 0x14, 0x91, 0xd2,
	0x2e, 0x61, 0x13, 0xcb, 0x5e, 0xf3, 0x31, 0xae, 0x4a, 0x1d, 0x63, 0xa5, 0xcf, 0x64, 0xed, 0x8f,
	0x9e, 0x62, 0xb4, 0xf6, 0x39, 0x18, 0x69, 0x71, 0x33, 0x11, 0x86, 0x6d, 0x38, 0x37, 0x84, 0xdf,
	0x26, 0x42, 0xf5, 0x0c, 0x96, 0xb3, 0x59, 0x6b, 0x22, 0x2c, 0x2f, 0xa0, 0x95, 0x47, 0x98, 0xa3,
	0xf0, 0x94, 0x75, 0x47, 0xe1, 0x6f, 0x16, 0xc0, 0x48, 0x13, 0xa3, 0x71, 0x11, 0xaa, 0x0e, 0xf5,
	0x90, 0xe8, 0x2c, 0xfb, 0x81, 0xcc, 0x78, 0x75, 0xa8, 0xc7, 0x68, 0x6e, 0xf3, 0x81, 0x71, 0x0b,
	0x9a, 0x82, 0xa2, 0xa8, 0xcc, 0x69, 0x12, 0xb8, 0x65, 0x64, 0x98, 0x8a, 0x5c, 0x26, 0x66, 0x1e,
	0x76, 0x8e, 0x6c, 0xf7, 0x90, 0x28, 0x40, 0xbe, 0x91, 0x52, 0xe3, 0xb5, 0x02, 0xac, 0xfd, 0x6f,
	0xa7, 0x84, 0xcf, 0xcb, 0x74, 0xfd, 0xd8, 0x3e, 0x6f, 0x13, 0xa6, 0xe8, 0x9b, 0x81, 0xf0, 0x58,
	0xd8, 0xcf, 0x4c, 0x27, 0x37, 0xe1, 0x66, 0x94, 0xd2, 0x6e, 0x46, 0x14, 0x21, 0x98, 0xc9, 0x8d,
	0x10, 0xcc, 0x26, 0x4c, 0xb1, 0x65, 0x98, 0xc1, 0xf4, 0x31, 0xda, 0x2a, 0xa3, 0x84, 0x11, 0x25,
	0x36, 0x26, 0x66, 0xe0, 0x72, 0xcf, 0x96, 0xfd, 0x8c, 0xb9, 0xa2, 0x90, 0xe5, 0x8a, 0xb2, 0x77,
	0xce, 0x35, 0x3e, 0xe2, 0x2e, 0x50, 0xf5, 0xec, 0x2e, 0xd0, 0xdc, 0x04, 0x2e, 0xd0, 0xbb, 0xb9,
	0x9f, 0x5f, 0x41, 0x8d, 0xc7, 0x84, 0xec, 0x43, 0xc7, 0xb5, 0x43, 0x0c, 0x33, 0x74, 0x54, 0x3c,
	0xa8, 0x64, 0xf2, 0x82, 0x71, 0x55, 0x1a, 0x7d, 0x45, 0x9c, 0x94, 0x7a, 0x7c, 0x52, 0x84, 0xc1,
	0xd7, 0xfe, 0xc7, 0x53, 0x60, 0xa4, 0x0d, 0xc8, 0x2c, 0xc7, 0x36, 0xb5, 0x41, 0x3d, 0x32, 0x24,
	0xf2, 0x08, 0x66, 0x84, 0x92, 0x9d, 0x4e, 0x58, 0xc7, 0x3b, 0x71, 0x5d, 0xcd, 0x60, 0x4c, 0x01,
	0xcb, 0x9c, 0x05, 0x29, 0x4f, 0x79, 0x90, 0x2f, 0x0a, 0x01, 0x4a, 0xf2, 0xe7, 0x01, 0xbb, 0x6d,
	0x8c, 0x91, 0x1c, 0x06, 0xde, 0x40, 0x6e, 0xa5, 0xf2, 0x02, 0xc6, 0x7d, 0xec, 0x63, 0x22, 0x43,
	0x80, 0xbc, 0x60, 0x6c, 0xc0, 0x74, 0xc7, 0x0e, 0xba, 0xca, 0xcd, 0xcd, 0x1c, 0xcb, 0x96, 0x1d,
	0x74, 0x4d, 0x84, 0x63, 0xa3, 0x7f, 0x6b, 0xf7, 0x7a, 0x44, 0x7a, 0xb7, 0x39, 0xa3, 0xff, 0x39,
	0xc2, 0x98, 0x02, 0x96, 0xb9, 0x06, 0x9d, 0xe0, 0xd4, 0x0f, 0xbd, 0x78, 0x7a, 0x5f, 0x6e, 0xf7,
	0x2d, 0x04, 0x36, 0xeb, 0xbc, 0xd3, 0x96, 0x96, 0xa2, 0x7e, 0x64, 0xbb, 0xdd, 0x1e, 0x09, 0xc4,
	0x16, 0xac, 0x2c, 0xb6, 0xff, 0xa0, 0x90, 0x88, 0x17, 0x0b, 0xeb, 0x63, 0x58, 0x7a, 0xc1, 0x25,
	0xa8, 0x86, 0x24, 0xe8, 0x3b, 0x62, 0xa5, 0x44, 0x5a, 0x92, 0xac, 0xda, 0x46, 0x09, 0xc0, 0xd3,
	0x7d, 0xc4, 0x2a, 0x8a, 0x12, 0xb3, 0x77, 0x45, 0x62, 0x90, 0xcc, 0xaf, 0x11, 0x2b, 0x51, 0xe7,
	0xd5, 0x5b, 0xa2, 0xb6, 0xfd, 0x5f, 0x8a, 0x50, 0xdb, 0xd1, 0x17, 0x67, 0x2c, 0x0a, 0x6a, 0xc1,
	0xac, 0x10, 0x8f, 0x32, 0x3c, 0x2c, 0x8a, 0xcc, 0x95, 0x17, 0xe6, 0x1d, 0x73, 0xb2, 0x12, 0x71,
	0x44, 0x23, 0x6a, 0xd2, 0x13, 0x47, 0xb5, 0x0e, 0x3e, 0x09, 0x1c, 0x4f, 0x52, 0x4d, 0x33, 0x6a,
	0xd8, 0xc1, 0x7a, 0x11, 0x42, 0xb6, 0x31, 0xee, 0x19, 0x85, 0x90, 0x37, 0xb1, 0x9c, 0x90, 0x08,
	0xb3, 0x67, 0x97, 0x08, 0xe5, 0x49, 0x82, 0x22, 0xda, 0x82, 0x57, 0xe2, 0x0b, 0xfe, 0xbf, 0x0b,
	0x30, 0x9f, 0xa2, 0x51, 0xb6, 0x62, 0xb8, 0xb9, 0xfa, 0x58, 0x4c, 0xb1, 0x28, 0x31, 0xda, 0x67,
	0x0e, 0xc7, 0x23, 0x29, 0x36, 0xb0, 0xc0, 0xa0, 0xfb, 0x36, 0x7d, 0x43, 0x24, 0x97, 0x8a, 0x12,
	0x33, 0x81, 0xd0, 0x3e, 0x3c, 0xb5, 0xfa, 0x9e, 0x1b, 0x1e, 0x89, 0xf9, 0xad, 0xf2, 0xba, 0x97,
	0xac, 0x8a, 0x73, 0x39, 0x82, 0x9c, 0x12, 0x3b, 0x10, 0x53, 0x0a, 0xbc, 0xea, 0x5b, 0x62, 0x63,
	0x9a, 0xc9, 0x7e, 0x60, 0xbb, 0xf2, 0xc0, 0x04, 0x2f, 0x30, 0xad, 0x70, 0xe0, 0xb8, 0x87, 0x24,
	0xf0, 0x03, 0x47, 0xa5, 0x90, 0xe8, 0x55, 0x8c, 0x60, 0x29, 0xe9, 0x0c, 0x02, 0xf2, 0x50, 0xc6,
	0x30, 0x55, 0xb9, 0xfd, 0x3c, 0x41, 0xe3, 0x9c, 0xc9, 0xa2, 0x47, 0x15, 0xf4, 0x47, 0x69, 0xc7,
	0x39, 0x8a, 0xb1, 0xe3, 0x1c, 0x29, 0x34, 0x9c, 0xd9, 0x86, 0xa0, 0x11, 0xce, 0x7c, 0x31, 0x96,
	0x6e, 0xd1, 0xfe, 0xd7, 0x05, 0x66, 0x26, 0x09, 0x13, 0x47, 0xf7, 0xab, 0x93, 0x34, 0xbe, 0x06,
	0x65, 0xc9, 0x54, 0x32, 0x02, 0x2f, 0xcb, 0x68, 0x34, 0xdb, 0x94, 0xbe, 0xf5, 0x02, 0xb9, 0x08,
	0xaa, 0x1c, 0x4f, 0x6c, 0x93, 0x40, 0xd3, 0x89, 0xc4, 0x36, 0x09, 0x1c, 0xa7, 0xcf, 0xd2, 0x04,
	0xf4, 0xd9, 0xfe, 0x8f, 0x33, 0x8a, 0x4b, 0x73, 0xde, 0x20, 0x8b, 0x4b, 0x95, 0x90, 0x9d, 0xd2,
	0x85, 0x6c, 0x42, 0xfa, 0x97, 0x52, 0xd2, 0xff, 0x22, 0x80, 0xe0, 0x5b, 0x87, 0xc8, 0xb4, 0x43,
	0xad, 0x26, 0x27, 0xbf, 0x79, 0x76, 0xa2, 0xfc, 0xe6, 0x72, 0x4e, 0x7e, 0xb3, 0x34, 0xa9, 0x2b,
	0x9a, 0x49, 0xad, 0x65, 0x4d, 0x05, 0xe4, 0x90, 0x9c, 0xf8, 0x22, 0x14, 0x2e, 0xb3, 0xa6, 0x4c,
	0xac, 0x8c, 0xcb, 0x86, 0x6a, 0x42, 0x36, 0x64, 0xea, 0xa6, 0xb9, 0x6c, 0xdd, 0xf4, 0x12, 0x6a,
	0x21, 0xa1, 0xa1, 0x45, 0x49, 0xc8, 0x44, 0x0f, 0xcf, 0xb1, 0xae, 0x3e, 0xb8, 0x99, 0xad, 0x07,
	0x36, 0xf6, 0x08, 0x0d, 0x77, 0x05, 0x28, 0x37, 0x52, 0xe6, 0x42, 0xad, 0xca, 0xb0, 0x60, 0x41,
	0x38, 0x59, 0x8e, 0xe7, 0x46, 0x48, 0xeb, 0x88, 0x74, 0x23, 0x07, 0xe9, 0x8e, 0xea, 0x11, 0x47,
	0x6d, 0xf8, 0xa9, 0x86, 0x04, 0x5d, 0x35, 0xce, 0x2e, 0xf7, 0x9a, 0x93, 0x58, 0x42, 0xbf, 0x84,
	0xf9, 0xd4, 0x9b, 0x67, 0x58, 0x43, 0x0f, 0xe2, 0x7b, 0x9f, 0xc3, 0x2d, 0x09, 0xcd, 0x92, 0xef,
	0xc0, 0x4a, 0xce, 0x1c, 0x7c, 0x7f, 0x0f, 0x69, 0xff, 0xd3, 0x29, 0x80, 0x28, 0x15, 0x25, 0xc5,
	0x53, 0x1a, 0xd1, 0x88, 0xf0, 0x83, 0xd2, 0xc1, 0x8d, 0x58, 0x28, 0x61, 0xbb, 0x9b, 0x38, 0x0b,
	0x37, 0x95, 0x3c, 0x0b, 0xf7, 0x71, 0x2a, 0x92, 0x11, 0xa5, 0xc9, 0xa0, 0xc0, 0x28, 0x98, 0x2b,
	0x31, 0x94, 0xda, 0xb0, 0xae, 0xf1, 0x93, 0x32, 0x5a, 0x87, 0x12, 0x76, 0xa8, 0xf9, 0xd4, 0xd7,
	0xc0, 0x3e, 0x84, 0x16, 0x8f, 0xa8, 0xa6, 0x13, 0x70, 0x84, 0xf9, 0xbe, 0x84, 0xed, 0xc9, 0xdc,
	0x1b, 0x46, 0x04, 0x34, 0xb4, 0x83, 0x10, 0xe3, 0x14, 0xe3, 0xe8, 0x4d, 0x84, 0x7e, 0xc6, 0x0c,
	0xd8, 0x1f, 0x65, 0x1f, 0xa2, 0xfd, 0x18, 0x80, 0xa9, 0xd2, 0xe7, 0x18, 0x20, 0x61, 0x52, 0x8e,
	0xeb, 0x40, 0xa1, 0x14, 0xb0, 0xc0, 0x04, 0x09, 0xaa, 0x3d, 0x21, 0x0f, 0xd9, 0xef, 0xf6, 0x5f,
	0x83, 0xca, 0x2e, 0xb3, 0x28, 0x51, 0x0f, 0x27, 0x17, 0xbb, 0x09, 0x53, 0xbe, 0xed, 0x0a, 0x78,
	0xf6, 0x93, 0x09, 0x4a, 0x66, 0x4f, 0x5a, 0x47, 0x5e, 0xaf, 0x4b, 0x02, 0x69, 0x26, 0xb3, 0xaa,
	0x2f, 0xb1, 0xc6, 0xb8, 0x03, 0x33, 0x3c, 0x48, 0x23, 0xcc, 0xe4, 0x85, 0x28, 0x90, 0xa1, 0x86,
	0x67, 0x0a, 0x90, 0xf6, 0x9f, 0x17, 0xa0, 0x25, 0xc8, 0xf1, 0x85, 0x17, 0xf4, 0x27, 0x97, 0xe6,
	0x52, 0x34, 0x4e, 0x69, 0xa2, 0x51, 0x49, 0xf8, 0x69, 0x5d, 0xc2, 0xa7, 0x05, 0x66, 0x29, 0x4b,
	0x60, 0x5e, 0x87, 0xc6, 0x91, 0x4d, 0x2d, 0x34, 0xb2, 0x2d, 0xf6, 0x5a, 0x54, 0xee, 0x67, 0x1e,
	0xd9, 0x54, 0x4d, 0x14, 0x35, 0x1e, 0x42, 0x55, 0x87, 0x99, 0x4d, 0x84, 0xa2, 0x15, 0xa4, 0x09,
	0x54, 0x75, 0x6a, 0xff, 0x12, 0xee, 0x65, 0x66, 0x37, 0xec, 0x90, 0x40, 0xcb, 0x68, 0xd1, 0xc8,
	0xb7, 0x09, 0x53, 0x07, 0x84, 0x6f, 0x5a, 0x17, 0x4c, 0xf6, 0x73, 0xd8, 0xb6, 0x78, 0xfb, 0x0f,
	0x0b, 0xb0, 0x9e, 0x89, 0x3f, 0xc2, 0x48, 0x33, 0x50, 0x5a, 0xd0, 0xf0, 0x49, 0xa0, 0x67, 0xe2,
	0x08, 0x91, 0xf1, 0x78, 0x78, 0x4e, 0x46, 0xde, 0xa8, 0xcd, 0xba, 0x1f, 0x6b, 0x69, 0xff, 0xbb,
	0xbc, 0x71, 0x6d, 0xbb, 0x21, 0x39, 0xe4, 0xb9, 0x9a, 0x49, 0xab, 0xbe, 0x90, 0xb2, 0xea, 0xef,
	0xc0, 0xbc, 0x02, 0x50, 0x66, 0x05, 0x9f, 0x82, 0xa6, 0x6c, 0x50, 0x66, 0xc5, 0x27, 0xb0, 0xa6,
	0x80, 0xd3, 0xc6, 0x08, 0xa7, 0x96, 0x96, 0x84, 0xd8, 0x4a, 0x1a, 0x25, 0x17, 0x01, 0x1c, 0x31,
	0x34, 0xd2, 0x15, 0x39, 0x9b, 0x5a, 0x4d, 0x7b, 0x1b, 0xae, 0x64, 0xbf, 0x4f, 0x97, 0xb8, 0x43,
	0xb2, 0x4a, 0x32, 0x08, 0xb8, 0xfd, 0x47, 0x45, 0x58, 0xca, 0xc4, 0x65, 0xec, 0xa6, 0xb6, 0x4a,
	0x78, 0x6e, 0xe7, 0xdd, 0xe1, 0xab, 0x12, 0x1f, 0x43, 0x72, 0xef, 0x64, 0x1b, 0x20, 0x21, 0x63,
	0xf5, 0xc3, 0x9c, 0xa3, 0x88, 0xc7, 0xd4, 0x3a, 0x1b, 0x5f, 0x41, 0xd5, 0x89, 0xd6, 0x4f, 0x98,
	0x6e, 0x23, 0x70, 0x69, 0x0b, 0x6e, 0xea, 0xbd, 0x87, 0xfa, 0x30, 0xed, 0x5d, 0x68, 0xa8, 0xf3,
	0x04, 0x24, 0x78, 0x66, 0x87, 0xf6, 0x90, 0xdc, 0x0a, 0x91, 0x8d, 0x5c, 0x8c, 0xb2, 0x91, 0x55,
	0xe2, 0xc4, 0x94, 0x9e, 0x38, 0xf1, 0x3e, 0x54, 0x39, 0xd2, 0xb1, 0xf7, 0xbe, 0xdb, 0x7f, 0x30,
	0x0d, 0x33, 0xbc, 0x4f, 0x0a, 0xfc, 0x09, 0xd4, 0xbd, 0xc0, 0x39, 0x44, 0x7a, 0xc3, 0x68, 0xbf,
	0x60, 0xa1, 0x68, 0xbf, 0x4f, 0x7b, 0x98, 0x59, 0x93, 0xb0, 0xfc, 0xd9, 0x23, 0x43, 0x0f, 0x51,
	0xc8, 0x69, 0x3a, 0x16, 0x72, 0x3a, 0x0f, 0x5c, 0x77, 0x78, 0xc1, 0xb6, 0xb4, 0x59, 0xa3, 0x0a,
	0x7e, 0xbc, 0x19, 0xf7, 0x8c, 0x67, 0xe4, 0xf1, 0x66, 0xb9, 0x4f, 0x3c, 0x2c, 0x50, 0x25, 0x36,
	0xe1, 0xcb, 0x43, 0xf2, 0x74, 0x7f, 0xa0, 0x7c, 0x21, 0xe3, 0x43, 0xe0, 0xc7, 0xb5, 0x31, 0xa0,
	0x2f, 0xc2, 0x59, 0xad, 0xc4, 0x8c, 0x2a, 0x9a, 0x30, 0x2b, 0xbe, 0x22, 0x8f, 0x73, 0x50, 0xa1,
	0x76, 0x8f, 0x50, 0x2b, 0xb4, 0x4f, 0xd0, 0xa2, 0x2d, 0x9a, 0x65, 0xac, 0xd8, 0xb3, 0x4f, 0x8c,
	0x2b, 0x50, 0x73, 0xa8, 0x96, 0x83, 0x28, 0x36, 0xcb, 0xe7, 0x1c, 0x1a, 0x25, 0x18, 0x1a, 0x37,
	0xa1, 0x29, 0x5f, 0x58, 0xed, 0xa2, 0xf1, 0xb3, 0x30, 0x75, 0x51, 0x2f, 0x76, 0xd1, 0xda, 0xff,
	0xb3, 0x00, 0xe7, 0x33, 0x89, 0xfd, 0x4b, 0x87, 0x86, 0x5e, 0x70, 0x3a, 0xf9, 0xb1, 0xaa, 0x67,
	0x10, 0xe7, 0x5a, 0xc1, 0xf8, 0xa3, 0x52, 0xe4, 0x12, 0xac, 0x1e, 0x5f, 0xb2, 0xe9, 0x49, 0x96,
	0x2c, 0x2f, 0x5b, 0xad, 0xfd, 0x1f, 0x0a, 0xd0, 0xdc, 0x1a, 0xd0, 0xd0, 0xeb, 0xb3, 0x22, 0x13,
	0x34, 0x3c, 0x73, 0x49, 0x7f, 0x9f, 0x42, 0xea, 0x7d, 0xe2, 0x66, 0x60, 0x31, 0x69, 0x06, 0xe6,
	0xe8, 0x70, 0x6e, 0xbc, 0x4e, 0x6b, 0xf1, 0x42, 0x46, 0xb9, 0x2a, 0x51, 0xa8, 0xc4, 0x85, 0x84,
	0x2c, 0x27, 0x5e, 0x77, 0x66, 0x12, 0x47, 0xf2, 0x57, 0x30, 0xaf, 0x5e, 0xca, 0xd7, 0x57, 0xcd,
	0xc7, 0x97, 0x99, 0xc3, 0x9c, 0xa3, 0x38, 0xfe, 0xe2, 0x24, 0xf8, 0xff, 0xa4, 0x00, 0xcb, 0xf2,
	0x01, 0x62, 0x07, 0x4a, 0x3e, 0xe5, 0x87, 0xc8, 0x11, 0x7b, 0x17, 0x1f, 0xbb, 0x0f, 0x6b, 0x72,
	0xe4, 0xbb, 0x61, 0xe0, 0xb8, 0x87, 0xaf, 0xd9, 0x42, 0xc8, 0xd1, 0xab, 0x55, 0x2a, 0xe8, 0xab,
	0xf4, 0x0e, 0x33, 0xf5, 0x87, 0x15, 0x28, 0xcb, 0xe7, 0xa5, 0xf8, 0x26, 0x9e, 0x67, 0x55, 0x4c,
	0xe6, 0x59, 0x8d, 0x94, 0xa2, 0x2a, 0x7f, 0x6d, 0x7a, 0x78, 0xfe, 0x5a, 0x69, 0x68, 0xfe, 0xda,
	0xcc, 0xf0, 0xfc, 0xb5, 0xd9, 0xac, 0xfc, 0x35, 0xa9, 0xf8, 0xcb, 0x9a, 0xe5, 0x1a, 0xe5, 0xb4,
	0xcd, 0x0d, 0xcd, 0x69, 0xbb, 0x01, 0x0d, 0x9e, 0xb3, 0x62, 0xa9, 0xbb, 0x1b, 0x78, 0x0c, 0xb5,
	0xce, 0xab, 0xbf, 0x96, 0x37, 0x38, 0x5c, 0x00, 0xe0, 0x9b, 0xa0, 0x87, 0xd1, 0xb1, 0xc0, 0x0a,
	0x6e, 0x7a, 0xb2, 0x0a, 0x3d, 0x37, 0xae, 0x36, 0x49, 0x6e, 0xdc, 0x07, 0x50, 0x76, 0x04, 0xa7,
	0x0b, 0xf7, 0x7c, 0x35, 0xb2, 0xe8, 0x13, 0xa2, 0xc0, 0x54, 0xa0, 0x8c, 0x08, 0x1c, 0xdf, 0x3a,
	0xe2, 0x84, 0xd2, 0x6a, 0x24, 0xce, 0xdc, 0xa7, 0xd8, 0xcd, 0xac, 0x38, 0x8a, 0xf3, 0xbe, 0x84,
	0x86, 0xdc, 0xc8, 0x95, 0xfd, 0x9b, 0x89, 0x03, 0xa6, 0xd9, 0xdc, 0x64, 0xd6, 0xed, 0x38, 0x77,
	0xfd, 0x14, 0xea, 0x7c, 0x16, 0x15, 0xa2, 0xf9, 0x44, 0x26, 0x46, 0x3e, 0x71, 0x9b, 0x35, 0xde,
	0x55, 0xe2, 0xfa, 0x0e, 0x56, 0x12, 0xeb, 0xa0, 0x90, 0x1a, 0xe3, 0x23, 0x5d, 0x8a, 0x2f, 0x9a,
	0x44, 0xfe, 0x44, 0xdb, 0xf5, 0x59, 0xc8, 0x79, 0xd7, 0x31, 0x37, 0x7d, 0x16, 0xcf, 0xae, 0x9b,
	0x97, 0x26, 0xd1, 0xcd, 0x89, 0x34, 0xa9, 0xe5, 0xf1, 0xd2, 0xa4, 0x56, 0xb2, 0xd3, 0xa4, 0x32,
	0x73, 0x24, 0x5b, 0x13, 0xe7, 0x48, 0xae, 0xfe, 0xae, 0x72, 0x24, 0xbf, 0x80, 0x05, 0xcc, 0xe8,
	0xc7, 0x63, 0x39, 0x28, 0x17, 0x50, 0xd2, 0x65, 0xcb, 0x3f, 0x5d, 0x4b, 0x15, 0xe3, 0x5a, 0x2a,
	0x86, 0x08, 0x53, 0xe2, 0xce, 0x8a, 0xe8, 0x26, 0x34, 0x15, 0xa2, 0x6d, 0x7f, 0x08, 0x96, 0xf6,
	0x5d, 0x58, 0x54, 0x90, 0x5f, 0x23, 0x49, 0x0f, 0x83, 0xbe, 0x0e, 0x75, 0x05, 0x3d, 0x0c, 0xee,
	0xef, 0x4c, 0x43, 0x45, 0x01, 0xa6, 0x44, 0xf5, 0x03, 0xfd, 0x24, 0xa3, 0x2e, 0x6a, 0x32, 0x66,
	0x51, 0x0a, 0xe2, 0x07, 0x52, 0xc2, 0x4e, 0xe7, 0xf5, 0x89, 0x26, 0x4c, 0xca, 0xdf, 0x3b, 0x42,
	0xb0, 0x72, 0x75, 0xbf, 0x92, 0xee, 0xc2, 0xa1, 0xe5, 0xe1, 0x48, 0x26, 0x71, 0x79, 0x28, 0x67,
	0x35, 0x0d, 0x2a, 0x66, 0x11, 0x85, 0xf1, 0x07, 0x4a, 0x18, 0xf3, 0xf0, 0xcd, 0x85, 0x34, 0xb8,
	0x36, 0x95, 0x59, 0xf9, 0xc7, 0x95, 0xb3, 0xe6, 0x1f, 0x27, 0x37, 0x7d, 0xd5, 0x03, 0x87, 0xe5,
	0x1f, 0x6b, 0x82, 0xbf, 0x9a, 0x14, 0xfc, 0x19, 0x0a, 0x64, 0x2e, 0x4b, 0x81, 0xbc, 0x1b, 0x87,
	0xbc, 0x80, 0x65, 0x1c, 0xa9, 0x8c, 0x4a, 0x9a, 0x24, 0x1c, 0x04, 0xee, 0x37, 0x41, 0x8f, 0x99,
	0x38, 0xf2, 0xac, 0xbf, 0x30, 0x71, 0x44, 0x11, 0x8f, 0x6a, 0x44, 0xaa, 0x1c, 0x7f, 0xb7, 0xbf,
	0x85, 0xf9, 0x18, 0x1e, 0xdc, 0xe2, 0x17, 0x5b, 0xf7, 0x85, 0x68, 0xeb, 0x3e, 0xf2, 0x88, 0x4a,
	0x63, 0xa7, 0xe9, 0xff, 0xe9, 0x14, 0xd4, 0x62, 0xb8, 0x47, 0x19, 0xa6, 0xbf, 0x07, 0x10, 0xe0,
	0x6b, 0x60, 0x16, 0xea, 0x54, 0xe2, 0x1c, 0x4c, 0xf6, 0xeb, 0x9a, 0x95, 0x40, 0xbd, 0xf9, 0xb0,
	0x5b, 0xbb, 0xf2, 0x5e, 0x20, 0x7d, 0xed, 0xd6, 0x4c, 0xd6, 0xb5, 0x5b, 0xef, 0xc9, 0xed, 0xf0,
	0xd9, 0x84, 0x66, 0x4d, 0x4d, 0x9e, 0xcc, 0x85, 0x4c, 0x24, 0x36, 0x94, 0xd3, 0x89, 0x0d, 0x97,
	0x61, 0x4e, 0xdd, 0x96, 0xe1, 0x74, 0x19, 0x09, 0x4f, 0x31, 0x10, 0x59, 0xb7, 0xdd, 0xa5, 0xc6,
	0xe7, 0x29, 0x42, 0xbd, 0x9a, 0xfd, 0xe4, 0x3c, 0x62, 0x7d, 0x37, 0x22, 0x7b, 0x02, 0x55, 0x2d,
	0x6d, 0x56, 0x66, 0x4f, 0x14, 0xa2, 0xec, 0x89, 0x35, 0x28, 0xab, 0xbb, 0x99, 0x84, 0xc4, 0x94,
	0xe5, 0xf6, 0x3f, 0x2f, 0xc0, 0x4a, 0x4e, 0xda, 0x67, 0xe2, 0x10, 0x4a, 0x61, 0xac, 0x43, 0x28,
	0x91, 0x7b, 0x3d, 0x15, 0x73, 0xaf, 0x99, 0xe1, 0xce, 0xac, 0x73, 0x91, 0x55, 0xc2, 0x7e, 0x67,
	0xe4, 0x3d, 0x97, 0xc6, 0xc8, 0x7b, 0x9e, 0x49, 0xe6, 0x3d, 0xb7, 0x37, 0x60, 0xfe, 0x0b, 0x12,
	0xaa, 0x24, 0x1c, 0x9e, 0x74, 0xb8, 0x0a, 0x65, 0x99, 0x80, 0x23, 0x39, 0x4c, 0x64, 0xdf, 0xb4,
	0x3f, 0x83, 0x05, 0x01, 0xfc, 0xda, 0x0e, 0xa3, 0x83, 0x72, 0x32, 0x0e, 0xcc, 0x5f, 0x16, 0x7f,
	0xb3, 0x59, 0x7f, 0xeb, 0x05, 0xbd, 0xae, 0x38, 0x0d, 0xc3, 0x0b, 0xed, 0xff, 0x5c, 0x52, 0x9b,
	0xda, 0x29, 0x21, 0x9f, 0x48, 0xfc, 0x29, 0x26, 0x13, 0x7f, 0xa2, 0xeb, 0xd5, 0xa6, 0x62, 0xd7,
	0xab, 0x0d, 0x63, 0x8b, 0xac, 0x64, 0xa1, 0xd2, 0xb8, 0xc9, 0x42, 0x33, 0x19, 0xc9, 0x42, 0x6c,
	0x4e, 0xf5, 0x23, 0xba, 0xdc, 0x3e, 0x87, 0xe3, 0xe8, 0x80, 0xee, 0x65, 0x98, 0x63, 0x00, 0x6a,
	0x48, 0x82, 0x33, 0x8e, 0xed, 0xe8, 0xc8, 0xdf, 0x55, 0x3c, 0xa2, 0xd0, 0x21, 0x16, 0x86, 0x92,
	0x99, 0xac, 0xa8, 0x88, 0x13, 0x73, 0xac, 0xf6, 0x0b, 0x56, 0xb9, 0xdd, 0x35, 0x36, 0xa1, 0xc6,
	0x10, 0x45, 0x87, 0x18, 0x93, 0xa9, 0x12, 0x19, 0x4b, 0x61, 0xb2, 0x67, 0x47, 0x0b, 0x73, 0x13,
	0x9a, 0x0c, 0x05, 0xdf, 0xf0, 0x17, 0xbb, 0xd8, 0x55, 0x0c, 0xc4, 0xd4, 0x8f, 0xed, 0x90, 0xef,
	0xf7, 0xf3, 0x8d, 0xec, 0xdb, 0x30, 0xcf, 0xf3, 0xe9, 0xec, 0x6e, 0xcf, 0x71, 0xc5, 0x21, 0xcc,
	0x39, 0x04, 0x6d, 0x1c, 0xdb, 0xe1, 0x33, 0x51, 0x8f, 0x27, 0x30, 0xaf, 0x03, 0xab, 0xb2, 0x98,
	0xa9, 0x49, 0x70, 0xdf, 0x9b, 0xbb, 0x00, 0x25, 0x93, 0x8d, 0x77, 0x97, 0xd5, 0x7e, 0xcb, 0x2a,
	0x8d, 0x9f, 0xc0, 0xaa, 0x3e, 0x13, 0x78, 0xb2, 0x8a, 0x5a, 0xbe, 0xd7, 0x73, 0x3a, 0xa7, 0x22,
	0xf8, 0xb1, 0xac, 0x4d, 0x8b, 0xc9, 0x9a, 0x77, 0xb0, 0x35, 0xa7, 0x2b, 0xf5, 0x06, 0x41, 0x87,
	0x88, 0xe3, 0x02, 0xa9, 0xae, 0xbb, 0xd8, 0x9a, 0x30, 0x5f, 0x9b, 0x67, 0x37, 0x5f, 0xe7, 0x27,
	0xd9, 0x2e, 0xf9, 0x0c, 0x6a, 0x7c, 0x39, 0x1c, 0x42, 0xbf, 0x76, 0x68, 0x68, 0x6c, 0x40, 0xa5,
	0x23, 0x2b, 0x5a, 0x05, 0x94, 0x6d, 0xcd, 0x54, 0x0e, 0x66, 0x04, 0xd2, 0xbe, 0x0e, 0x8b, 0x5f,
	0x90, 0x70, 0x47, 0x11, 0x80, 0xe4, 0xc6, 0x04, 0x97, 0xb4, 0xff, 0x76, 0x11, 0x20, 0x82, 0xca,
	0xda, 0x64, 0x1f, 0x2e, 0x61, 0x32, 0x18, 0xe8, 0x1a, 0xd4, 0x1d, 0xf7, 0x40, 0x1e, 0x0b, 0x91,
	0xee, 0x7e, 0xc1, 0xac, 0xa9, 0x5a, 0x36, 0xbf, 0x0c, 0xf5, 0x41, 0x20, 0x02, 0xfa, 0x5c, 0xc9,
	0xa8, 0xf2, 0x3b, 0x44, 0x4b, 0x12, 0x93, 0x3e, 0x3b, 0xd9, 0x1e, 0xd5, 0xdc, 0x2f, 0x1c, 0x9f,
	0x89, 0x87, 0x5d, 0x0c, 0x4c, 0x48, 0x51, 0x59, 0xd0, 0x44, 0x65, 0x56, 0x90, 0xfc, 0x9f, 0x14,
	0x60, 0x56, 0x74, 0x94, 0xf1, 0xdd, 0x42, 0x14, 0xdf, 0xd5, 0x62, 0x28, 0xc5, 0xec, 0x18, 0xca,
	0x94, 0x16, 0x43, 0xb9, 0xa3, 0x87, 0x48, 0xf4, 0x6c, 0x7a, 0x7d, 0x64, 0xdf, 0x43, 0xe4, 0xe4,
	0xcf, 0x8b, 0x6a, 0x6b, 0x6b, 0xeb, 0xc8, 0x76, 0x5d, 0xd2, 0xdb, 0xf2, 0xe8, 0x24, 0xe9, 0x44,
	0x79, 0xab, 0x9f, 0x7f, 0x3d, 0x47, 0x0b, 0x66, 0x7d, 0x12, 0x74, 0x88, 0x32, 0x2a, 0x64, 0x91,
	0x19, 0x3a, 0x07, 0xce, 0x89, 0x15, 0xcb, 0x5b, 0xac, 0x1c, 0x38, 0x27, 0x22, 0xc1, 0x60, 0x03,
	0x16, 0xa2, 0x66, 0x2b, 0x11, 0x1c, 0x9e, 0x57, 0x70, 0x4a, 0x1e, 0xfe, 0x38, 0x27, 0xad, 0x62,
	0x7b, 0x04, 0x90, 0xd8, 0x23, 0x38, 0x84, 0x4b, 0x79, 0xb3, 0x2d, 0x39, 0x33, 0xeb, 0xc2, 0x94,
	0x68, 0x92, 0x8b, 0x79, 0x93, 0x3c, 0x15, 0x9b, 0xe4, 0xf6, 0xcf, 0xe1, 0x7c, 0xde, 0x83, 0x50,
	0x8e, 0x7c, 0x28, 0x2d, 0xb3, 0x42, 0xe2, 0x2c, 0x43, 0xee, 0xf0, 0x44, 0xee, 0xe2, 0xff, 0x99,
	0x86, 0xb5, 0x34, 0x4c, 0xee, 0xf5, 0x20, 0x23, 0xa3, 0xc8, 0x86, 0xba, 0x9c, 0x2b, 0x7a, 0xdd,
	0x1b, 0x78, 0x1b, 0x03, 0xde, 0x2b, 0x10, 0xd7, 0xc0, 0x75, 0x71, 0xa5, 0x80, 0x5c, 0xe1, 0x0b,
	0x00, 0x7d, 0xc7, 0xb5, 0x62, 0x26, 0x6a, 0xa5, 0xef, 0xb8, 0x82, 0x60, 0xa2, 0x69, 0x9b, 0xc9,
	0x9b, 0xb6, 0xd9, 0x38, 0x6d, 0x5e, 0x83, 0xba, 0x3c, 0xee, 0x20, 0x48, 0x94, 0x67, 0xbb, 0xd4,
	0xfa, 0x72, 0x2f, 0xb1, 0x23, 0xee, 0xa0, 0x12, 0x60, 0x1a, 0xbd, 0x56, 0xc4, 0x35, 0x06, 0xd8,
	0xf0, 0x42, 0x51, 0xed, 0x13, 0x58, 0x4b, 0xc1, 0x26, 0xaf, 0x21, 0x5c, 0x49, 0x74, 0xd2, 0x5f,
	0xd0, 0xa7, 0x6a, 0x2c, 0xfc, 0x1e, 0xc2, 0x8a, 0x4f, 0xe5, 0x38, 0xd6, 0x61, 0xce, 0xa7, 0x0c,
	0x2f, 0xe9, 0x5a, 0x07, 0x84, 0x88, 0xab, 0x07, 0xc1, 0xa7, 0x2f, 0x58, 0xd5, 0x0b, 0x42, 0x8c,
	0xf7, 0x61, 0x49, 0x87, 0x88, 0x1e, 0x5c, 0x13, 0x77, 0x34, 0x28, 0xd0, 0x1c, 0xb6, 0xa9, 0x9f,
	0x9d, 0x6d, 0x1a, 0x67, 0x66, 0x9b, 0x66, 0x82, 0x6d, 0xfe, 0xac, 0x00, 0x97, 0xf3, 0x89, 0x4e,
	0x72, 0xce, 0xc8, 0x08, 0x7f, 0x96, 0xfc, 0xca, 0xa0, 0xb5, 0xa9, 0x4c, 0x5a, 0xcb, 0xdb, 0xdd,
	0x8a, 0x88, 0xac, 0x94, 0x47, 0x64, 0x33, 0x71, 0xde, 0xfc, 0x0e, 0x2e, 0xe6, 0xbf, 0x0c, 0x72,
	0xe7, 0x4f, 0xe2, 0xdc, 0x79, 0x65, 0x08, 0x77, 0xaa, 0x49, 0x10, 0xfc, 0xf9, 0x25, 0x5c, 0x1b,
	0x8e, 0x7c, 0xdc, 0xd9, 0x6a, 0xff, 0x8b, 0x29, 0x58, 0x78, 0xe9, 0xb9, 0xe4, 0xf4, 0xa9, 0xdd,
	0x79, 0x33, 0xa1, 0x56, 0x18, 0x7b, 0x56, 0x2f, 0x41, 0x75, 0xe0, 0x76, 0x3d, 0x79, 0x6c, 0x54,
	0x5e, 0xb3, 0xe7, 0x76, 0x3d, 0x71, 0x5c, 0x74, 0xe2, 0xe9, 0x65, 0x94, 0xc4, 0xcc, 0x4c, 0x0b,
	0xef, 0x57, 0x98, 0x45, 0x0b, 0xb2, 0xcc, 0x2a, 0x5e, 0x04, 0x5e, 0x1f, 0x2f, 0x95, 0x90, 0xc9,
	0x64, 0xa1, 0x7d, 0x48, 0xc4, 0x06, 0xe2, 0x9c, 0x4c, 0x24, 0x63, 0x75, 0xba, 0x86, 0xaa, 0x0c,
	0xd3, 0x50, 0x90, 0xd4, 0x50, 0x3f, 0x4a, 0x62, 0x7b, 0x9c, 0x75, 0x6a, 0x09, 0xd6, 0xf9, 0xef,
	0x05, 0x58, 0xcb, 0x58, 0xc5, 0x61, 0xda, 0x26, 0x63, 0xf1, 0x8a, 0xe3, 0x2c, 0xde, 0xd4, 0x90,
	0xc5, 0x9b, 0xce, 0x5b, 0xbc, 0x52, 0xca, 0x16, 0x42, 0x1f, 0x81, 0x1f, 0xae, 0xc6, 0xdf, 0xe9,
	0x35, 0x9b, 0x4d, 0xaf, 0x59, 0xfb, 0x25, 0xac, 0x64, 0xbc, 0x26, 0x72, 0xd3, 0x83, 0x38, 0x37,
	0x69, 0xb7, 0x4e, 0x65, 0xcc, 0x8b, 0x60, 0xa3, 0x7f, 0x35, 0x0d, 0x4b, 0xb1, 0xe6, 0x1f, 0x49,
	0xc3, 0x25, 0xa6, 0xb8, 0x34, 0x64, 0x8a, 0xc7, 0xd5, 0x71, 0x31, 0xfe, 0x28, 0x8f, 0xe2, 0x8f,
	0xca, 0x70, 0xfe, 0x80, 0x61, 0xfc, 0x51, 0x1d, 0xd3, 0x82, 0x9b, 0xcb, 0xb3, 0xe0, 0xee, 0xc1,
	0x82, 0x43, 0x2d, 0xdf, 0x76, 0xba, 0xd6, 0xfe, 0xa9, 0xba, 0x5a, 0x4a, 0xd0, 0x78, 0xd3, 0xa1,
	0x3b, 0xb6, 0xd3, 0x7d, 0x7a, 0xaa, 0x96, 0xe6, 0xff, 0x43, 0xcd, 0xf5, 0xb7, 0x8a, 0x70, 0x3e,
	0x93, 0x8e, 0x7e, 0x18, 0xa5, 0xf5, 0x3b, 0x10, 0xaf, 0x92, 0x43, 0x67, 0x87, 0x71, 0x68, 0x86,
	0x54, 0x6d, 0xdf, 0x8e, 0x3c, 0x0d, 0x8f, 0x86, 0xcf, 0x48, 0x8f, 0x44, 0x9f, 0x23, 0x48, 0xba,
	0xa3, 0x7f, 0x05, 0x56, 0x33, 0x67, 0x0d, 0xf9, 0xf9, 0x51, 0x9c, 0x9f, 0x2f, 0x66, 0xf3, 0x73,
	0x52, 0x31, 0x6e, 0xc1, 0x7a, 0x2e, 0xca, 0xb1, 0x75, 0xe2, 0xbf, 0x2f, 0x42, 0x73, 0x47, 0x5d,
	0x6b, 0x95, 0xa3, 0x10, 0x1f, 0xc0, 0x92, 0xe3, 0x86, 0x81, 0xbd, 0x6f, 0xbb, 0x6f, 0x62, 0x37,
	0x3c, 0xf1, 0x98, 0xd5, 0x82, 0x6a, 0xd4, 0xee, 0x78, 0x7a, 0x0c, 0x2b, 0x89, 0x3e, 0x89, 0x95,
	0x5d, 0x8a, 0xf5, 0x52, 0x0b, 0xcc, 0x9f, 0x45, 0x82, 0xd4, 0xb3, 0xa6, 0xd5, 0xb3, 0x78, 0x63,
	0xea, 0x59, 0x7a, 0x9f, 0xc4, 0x15, 0xe1, 0x4b, 0xb1, 0x5e, 0xea, 0x59, 0xbf, 0xa3, 0x13, 0x1c,
	0xed, 0x27, 0xb0, 0xb4, 0xa9, 0x4e, 0x8b, 0x60, 0xb8, 0x55, 0xc4, 0x5c, 0x32, 0x2c, 0x0d, 0x4c,
	0xc1, 0x28, 0x46, 0x29, 0x18, 0xed, 0x7f, 0x36, 0x0d, 0x8d, 0x44, 0xef, 0xb1, 0xcf, 0xda, 0x65,
	0xa5, 0x74, 0x3c, 0x86, 0x19, 0x11, 0x0f, 0x9a, 0x4e, 0xa4, 0xb3, 0x64, 0x8e, 0xd1, 0x14, 0xd0,
	0x49, 0xd2, 0x29, 0xa5, 0xf8, 0xf8, 0x8c, 0x07, 0xf2, 0x04, 0xe7, 0x96, 0x63, 0xc1, 0xdb, 0x28,
	0xff, 0xa9, 0x12, 0xbb, 0xa4, 0x44, 0xe3, 0x5a, 0x88, 0x73, 0xed, 0x0d, 0x68, 0xa8, 0xcc, 0xaf,
	0x98, 0x74, 0x56, 0x09, 0x61, 0x82, 0x38, 0xee, 0xc0, 0xbc, 0x02, 0x4c, 0x08, 0xe8, 0xa6, 0x6c,
	0x50, 0x14, 0x71, 0x19, 0xe6, 0x70, 0x4f, 0x49, 0xa2, 0xac, 0xf1, 0x83, 0xe4, 0x58, 0xb7, 0xa9,
	0x76, 0x0a, 0x38, 0x88, 0x42, 0xc6, 0x43, 0x74, 0x7c, 0xdf, 0x3a, 0xc7, 0xe9, 0x98, 0x28, 0x11,
	0xfe, 0x53, 0x98, 0xb3, 0x8f, 0x6d, 0xa7, 0x67, 0xef, 0xf7, 0x88, 0xe5, 0xb9, 0x63, 0xc4, 0xe6,
	0xaa, 0x0a, 0xfe, 0x67, 0x78, 0x6d, 0xec, 0xa2, 0xe9, 0x9d, 0xda, 0xbd, 0xf0, 0xd4, 0x24, 0xbe,
	0x17, 0x84, 0xcf, 0xc4, 0xd5, 0xac, 0x97, 0x61, 0xee, 0x30, 0xf0, 0x28, 0xb5, 0x62, 0x31, 0xf7,
	0x2a, 0xd6, 0x89, 0x97, 0xbb, 0x07, 0x46, 0xec, 0x66, 0xb8, 0xe8, 0x40, 0x4c, 0xc9, 0x9c, 0xd7,
	0x5b, 0xf8, 0x0d, 0xde, 0x4c, 0x3b, 0x12, 0x62, 0xc5, 0x6e, 0x6e, 0xaa, 0x1c, 0x10, 0x22, 0xb0,
	0x5d, 0x00, 0x38, 0xb6, 0x13, 0x0c, 0x5c, 0x39, 0xb6, 0xb5, 0xfb, 0xe3, 0xe3, 0xf7, 0xe6, 0x71,
	0x7f, 0x77, 0xce, 0xd7, 0x2f, 0xcd, 0xd3, 0xa9, 0x69, 0x26, 0xb1, 0xb3, 0xb4, 0x0d, 0x2b, 0xb1,
	0x17, 0xdd, 0xf2, 0x82, 0x80, 0x74, 0x12, 0xa7, 0x45, 0x0b, 0x69, 0xe7, 0x06, 0x09, 0xb0, 0xa8,
	0x13, 0x60, 0xfb, 0x1f, 0x94, 0xa0, 0x16, 0xc3, 0x35, 0xb9, 0x59, 0x14, 0x5f, 0xf1, 0xa9, 0xb3,
	0x2b, 0xeb, 0xe9, 0x09, 0x95, 0xb5, 0x98, 0x44, 0xc5, 0xa4, 0x65, 0x5e, 0xb1, 0x8d, 0xd7, 0xcf,
	0x88, 0x46, 0x4c, 0xa7, 0x1f, 0x1d, 0x6f, 0x04, 0x0e, 0xfe, 0x4c, 0x5c, 0xc9, 0x25, 0x78, 0x72,
	0x36, 0xc6, 0x93, 0x0c, 0x29, 0x0f, 0x94, 0x2b, 0x83, 0x6b, 0x14, 0x52, 0x04, 0x47, 0x73, 0xec,
	0x43, 0xa8, 0x88, 0xce, 0xa1, 0x37, 0x46, 0x18, 0xaa, 0xcc, 0x81, 0xf7, 0x3c, 0xe3, 0x19, 0x34,
	0xc5, 0x76, 0xaa, 0xb8, 0xc8, 0x60, 0xac, 0xa4, 0x46, 0xb1, 0xd7, 0xca, 0xd3, 0xdf, 0xf9, 0xad,
	0x41, 0xf2, 0x26, 0x9a, 0xf1, 0x1c, 0x1a, 0x90, 0xe0, 0x98, 0x16, 0x39, 0xcb, 0xa9, 0x88, 0x0a,
	0x77, 0x26, 0xda, 0x9e, 0xce, 0xe2, 0x37, 0x53, 0x42, 0x1b, 0x9f, 0x03, 0x74, 0x14, 0x69, 0x8a,
	0x34, 0xa0, 0xf5, 0xec, 0xbe, 0x11, 0x09, 0x9b, 0x5a, 0x9f, 0xf6, 0xbf, 0x49, 0xf2, 0xf4, 0x16,
	0x6e, 0xb6, 0xd0, 0xac, 0x63, 0x22, 0x01, 0x87, 0xb3, 0x02, 0x04, 0xd4, 0x8e, 0x89, 0x04, 0x3a,
	0x02, 0x71, 0x5e, 0x93, 0x6b, 0x06, 0x79, 0x5e, 0x33, 0xd2, 0x52, 0x32, 0x8b, 0xbf, 0xc8, 0xaf,
	0x15, 0x3e, 0xb2, 0xe9, 0x91, 0xbc, 0x56, 0x98, 0xfd, 0x7e, 0x87, 0x50, 0x64, 0xfb, 0x8f, 0x66,
	0xa1, 0xfe, 0xda, 0x0e, 0xb5, 0x4c, 0xf5, 0xd4, 0x5b, 0xe8, 0x5f, 0x50, 0x2a, 0xc6, 0xbf, 0xa0,
	0x74, 0x0d, 0xea, 0x9a, 0x1c, 0x8a, 0x32, 0xce, 0x6a, 0x5a, 0xed, 0x76, 0xd7, 0xb8, 0x05, 0x4d,
	0x1d, 0x0c, 0xb5, 0x22, 0x7f, 0xa3, 0x86, 0x56, 0x8f, 0x77, 0x96, 0xc6, 0x65, 0x5e, 0x5c, 0x16,
	0xe9, 0x32, 0x4f, 0x08, 0xa4, 0xf7, 0x61, 0x51, 0x07, 0x4f, 0x08, 0xa7, 0x05, 0xad, 0x4d, 0x0f,
	0x7a, 0x69, 0x72, 0x70, 0x36, 0x29, 0x07, 0xc7, 0xd8, 0x09, 0xbb, 0x04, 0xd5, 0x03, 0x42, 0x68,
	0x3c, 0x32, 0xc7, 0x64, 0x2f, 0x8d, 0x64, 0x29, 0x02, 0x24, 0xe2, 0x70, 0x73, 0xac, 0x52, 0x61,
	0xf9, 0x08, 0x5a, 0x5c, 0x75, 0x65, 0xbc, 0x2f, 0x57, 0x9e, 0xcb, 0xd8, 0xbe, 0x97, 0x7a, 0xe9,
	0x9b, 0xd0, 0xe4, 0x3d, 0xb5, 0xf7, 0xe0, 0xb1, 0x39, 0xae, 0x0c, 0x5f, 0xab, 0x97, 0xb9, 0x0d,
	0xf3, 0x1c, 0x52, 0x1f, 0x2f, 0x57, 0xa3, 0x0d, 0x6c, 0x78, 0x11, 0x0d, 0x7a, 0x4c, 0x55, 0xfa,
	0x31, 0xac, 0xea, 0x4a, 0x99, 0x5a, 0xb6, 0xef, 0x07, 0xde, 0x89, 0xd3, 0x67, 0x32, 0xad, 0xc1,
	0x6f, 0x19, 0xd1, 0x34, 0x34, 0xdd, 0x8c, 0x9a, 0xd9, 0x2b, 0x27, 0x2e, 0x59, 0xb2, 0x3a, 0x81,
	0x13, 0x92, 0xc0, 0xb1, 0xc5, 0x4d, 0x59, 0xcb, 0xf1, 0xfb, 0x94, 0xb6, 0x44, 0x6b, 0xd6, 0xf5,
	0x4c, 0xf3, 0x67, 0xb8, 0x9e, 0x49, 0xcb, 0xe9, 0x35, 0x62, 0x37, 0x50, 0xa6, 0x33, 0x0e, 0x16,
	0xb2, 0x32, 0x0e, 0x2e, 0xc3, 0x9c, 0x43, 0xb5, 0xfb, 0x3b, 0xf8, 0xfd, 0x59, 0x55, 0x87, 0xaa,
	0xcb, 0x3b, 0x74, 0x23, 0x69, 0x29, 0x6e, 0x24, 0x7d, 0xc8, 0x3c, 0xe3, 0x90, 0x58, 0xa1, 0xd3,
	0xe7, 0xa9, 0x62, 0x23, 0xa4, 0x2d, 0x03, 0x66, 0xc5, 0xf6, 0x1f, 0xcf, 0x40, 0xe5, 0xb5, 0x1d,
	0xe6, 0xa8, 0xc2, 0xfc, 0x9d, 0x9f, 0x55, 0x28, 0x33, 0x0a, 0x51, 0x77, 0x43, 0x16, 0xcc, 0xd9,
	0x63, 0x3b, 0x94, 0xdb, 0x62, 0xb9, 0xdb, 0xcf, 0xd9, 0x66, 0x47, 0x29, 0xcf, 0xec, 0xb8, 0x02,
	0x35, 0x6e, 0xc8, 0x04, 0xe4, 0x98, 0xb8, 0x03, 0x22, 0x0c, 0x50, 0x6e, 0xdd, 0x98, 0xbc, 0x6e,
	0x14, 0xd3, 0x25, 0x38, 0xaa, 0x9c, 0xe2, 0xa8, 0x5b, 0xd0, 0x54, 0xb3, 0x9e, 0x88, 0x88, 0xab,
	0xfa, 0xc8, 0xc4, 0x8c, 0x64, 0x75, 0x3c, 0x96, 0xd6, 0x8c, 0x1a, 0xa2, 0x18, 0xbe, 0x50, 0xab,
	0xd5, 0x98, 0x5a, 0x7d, 0x0c, 0x2b, 0xf2, 0x22, 0x19, 0xdb, 0x75, 0x07, 0x8c, 0x4b, 0x07, 0x81,
	0xeb, 0x1d, 0x93, 0x40, 0x70, 0xda, 0x92, 0x68, 0xde, 0xc4, 0xd6, 0x3d, 0xd1, 0xc8, 0x1c, 0x26,
	0xcc, 0x19, 0x48, 0xf5, 0xe2, 0x4c, 0xb7, 0x80, 0x8d, 0x89, 0x3e, 0xf7, 0x61, 0x21, 0x8b, 0x97,
	0xc4, 0x37, 0x79, 0xec, 0x34, 0x1b, 0x49, 0x42, 0x42, 0x8d, 0xdf, 0x18, 0x8f, 0x90, 0x50, 0xdf,
	0x3f, 0x84, 0x59, 0x71, 0xe3, 0xd0, 0x18, 0x66, 0xec, 0x0c, 0xd2, 0x9f, 0x67, 0x7c, 0x8e, 0xac,
	0x61, 0x31, 0xdf, 0xa4, 0xc7, 0x2d, 0x97, 0xd1, 0x7b, 0xcc, 0xcc, 0x6a, 0xfc, 0x86, 0x75, 0xc8,
	0x38, 0x0b, 0xf8, 0x03, 0xdd, 0x6f, 0xde, 0x0e, 0xa0, 0x9e, 0x98, 0x68, 0x3d, 0xe3, 0xa3, 0x24,
	0x32, 0x3e, 0xf2, 0xb9, 0xe7, 0x2c, 0x97, 0xa0, 0x3e, 0x83, 0x3a, 0x8a, 0xa1, 0xd7, 0x0e, 0x79,
	0x8b, 0xe1, 0x80, 0xb3, 0x24, 0xd5, 0xb4, 0xff, 0xfe, 0x3c, 0x34, 0x14, 0x9a, 0x9d, 0xc1, 0x7e,
	0xcf, 0xe9, 0x8c, 0x75, 0x2d, 0x65, 0xde, 0xcd, 0x79, 0x53, 0x63, 0xdd, 0x9c, 0x97, 0x14, 0x03,
	0xda, 0x9d, 0x6b, 0xa5, 0xb1, 0xee, 0x5c, 0x7b, 0x87, 0xed, 0xf4, 0xc4, 0x85, 0x9a, 0xb3, 0xe9,
	0x0b, 0x35, 0x9f, 0x66, 0x7e, 0x89, 0x71, 0xb2, 0x3b, 0xf3, 0x92, 0xb7, 0x43, 0x55, 0xd2, 0xb7,
	0x43, 0x25, 0xfc, 0x0a, 0xc8, 0xf2, 0xb3, 0x45, 0x52, 0x64, 0x35, 0x96, 0xa1, 0x1e, 0x09, 0x92,
	0xb9, 0x98, 0x20, 0x79, 0x1e, 0x37, 0x7d, 0x90, 0x7f, 0x6a, 0xa3, 0x2f, 0x94, 0xd2, 0xfa, 0x20,
	0x0b, 0xc9, 0x6b, 0x0c, 0xeb, 0x93, 0x5f, 0x63, 0xd8, 0x38, 0x83, 0x9e, 0x94, 0xa1, 0x8b, 0xe6,
	0x88, 0xfb, 0xab, 0xe6, 0xb3, 0xee, 0xaf, 0x32, 0x3e, 0x49, 0x6a, 0x04, 0x23, 0x91, 0x99, 0x1a,
	0xe7, 0x91, 0x84, 0xaa, 0x78, 0x0f, 0x66, 0x43, 0xfb, 0x04, 0x37, 0x1c, 0x17, 0x86, 0xf7, 0x9b,
	0x09, 0xed, 0x93, 0x17, 0x84, 0x18, 0xdf, 0xc2, 0x05, 0xd1, 0x23, 0xca, 0xbd, 0x21, 0x27, 0x22,
	0x2f, 0x8a, 0xe1, 0x59, 0x1c, 0x8e, 0x67, 0x95, 0xe3, 0x91, 0x26, 0xce, 0x73, 0xd1, 0x95, 0xa1,
	0x7e, 0x02, 0x35, 0x89, 0x1a, 0xd9, 0x47, 0xa4, 0x87, 0xe7, 0xa2, 0xaa, 0x72, 0x54, 0x7b, 0x0c,
	0xd6, 0xd8, 0x84, 0xa6, 0xdc, 0x9b, 0x55, 0xfd, 0x97, 0x87, 0xf7, 0x17, 0xfb, 0xc3, 0x0a, 0xc5,
	0x56, 0xb4, 0x15, 0xcc, 0x50, 0xf0, 0x7b, 0xd4, 0x57, 0x86, 0xe3, 0x68, 0x44, 0x38, 0xe4, 0x4d,
	0xeb, 0x2b, 0xd1, 0x1e, 0x31, 0x89, 0xa1, 0x6a, 0x0d, 0x47, 0xb5, 0xa8, 0x76, 0x8e, 0x89, 0x86,
	0xef, 0x39, 0xde, 0x8a, 0x47, 0x07, 0x3e, 0x09, 0xb4, 0xdd, 0xe1, 0xd5, 0xe1, 0xa8, 0x9a, 0xb2,
	0x8b, 0xda, 0x3c, 0x7e, 0x8c, 0xf1, 0x0a, 0x2a, 0x26, 0x66, 0x6d, 0x78, 0xf7, 0x0a, 0x03, 0x55,
	0xd3, 0x1a, 0xf5, 0xb3, 0x90, 0xff, 0xc4, 0x5d, 0x9d, 0xf9, 0xd3, 0xaa, 0x7a, 0x63, 0xc6, 0xb2,
	0xf1, 0x11, 0x54, 0x5d, 0x12, 0x2a, 0xfa, 0x3c, 0x3f, 0xbc, 0x37, 0xb8, 0x24, 0x94, 0xd4, 0xb9,
	0x0d, 0x8b, 0xe2, 0x7b, 0x4f, 0x71, 0x12, 0xbf, 0x30, 0x1c, 0x85, 0xc1, 0x3b, 0x7d, 0xa1, 0x13,
	0xfa, 0x0e, 0xb4, 0xc4, 0xb2, 0x08, 0x8c, 0xda, 0xba, 0x5c, 0x1c, 0x8e, 0x6e, 0x89, 0x77, 0xe4,
	0x89, 0x9b, 0xd1, 0xc2, 0x58, 0xb0, 0xae, 0xa4, 0x97, 0xc4, 0x99, 0x5c, 0xf1, 0x4b, 0xc3, 0x31,
	0x9f, 0xef, 0xab, 0x1d, 0x04, 0xc4, 0x1d, 0x5f, 0xf9, 0x4f, 0xa1, 0x2e, 0xf0, 0x4a, 0x16, 0x5d,
	0x1f, 0xc1, 0xda, 0x1c, 0x7c, 0x8f, 0x33, 0xea, 0x01, 0x5c, 0x8d, 0x77, 0xcf, 0xe1, 0xd7, 0xcb,
	0xc3, 0x91, 0x5e, 0xd2, 0x91, 0x66, 0x71, 0xed, 0x5b, 0xb8, 0xa7, 0x08, 0x74, 0xac, 0x07, 0xb6,
	0x87, 0x3f, 0xf0, 0x86, 0xc4, 0x66, 0x8e, 0x78, 0xf0, 0x4b, 0x58, 0x16, 0xcf, 0x63, 0x74, 0x11,
	0x50, 0xa2, 0xe8, 0xe3, 0xca, 0x08, 0x46, 0xe3, 0xdd, 0x4c, 0xde, 0x4b, 0x52, 0xc8, 0x16, 0xcc,
	0x47, 0xa4, 0x21, 0x19, 0xe5, 0xea, 0x08, 0xee, 0x0f, 0x24, 0x51, 0x08, 0x76, 0x79, 0x05, 0x2b,
	0x29, 0x24, 0x82, 0x6b, 0xae, 0x8d, 0x35, 0xa8, 0x17, 0x31, 0xde, 0x69, 0xff, 0xdd, 0x5b, 0xe2,
	0x02, 0x7b, 0xb4, 0x4e, 0xf8, 0x55, 0x83, 0x7f, 0x69, 0x9e, 0xfc, 0xa5, 0x79, 0xf2, 0x17, 0xc6,
	0x3c, 0x79, 0x0d, 0xe7, 0xe4, 0x5a, 0xc5, 0x64, 0xb8, 0x60, 0x8a, 0x11, 0xc6, 0x4a, 0x4b, 0xf4,
	0xd5, 0x45, 0x39, 0x57, 0x2a, 0xbf, 0x1f, 0x5d, 0x6a, 0x1b, 0xc7, 0xcb, 0x37, 0x36, 0x46, 0x59,
	0x33, 0xab, 0x19, 0x88, 0x7f, 0x86, 0x3d, 0x8d, 0xaf, 0x60, 0x29, 0x13, 0xf3, 0x28, 0xc3, 0x66,
	0x21, 0x03, 0xa5, 0xf1, 0x59, 0xf4, 0x31, 0x22, 0x29, 0xc4, 0x47, 0x18, 0x35, 0x92, 0x4e, 0x85,
	0x14, 0xff, 0x69, 0x34, 0x1a, 0x29, 0x55, 0xf9, 0xcc, 0x8d, 0xb0, 0x6d, 0x8c, 0x18, 0x1a, 0x3e,
	0x67, 0x5f, 0xc3, 0x72, 0x12, 0x97, 0x98, 0xad, 0x95, 0xf1, 0x5e, 0x8d, 0x23, 0x13, 0xf3, 0x74,
	0x04, 0xd7, 0x92, 0xd8, 0xb2, 0xe5, 0xfd, 0x08, 0xb3, 0x67, 0x3d, 0x86, 0x3c, 0x4b, 0xd0, 0x67,
	0xcc, 0x01, 0x97, 0xce, 0xab, 0x93, 0xcc, 0x01, 0x17, 0xd0, 0x3b, 0xd0, 0xca, 0xa6, 0x9b, 0x83,
	0x93, 0x51, 0x56, 0xd1, 0x52, 0xc6, 0x02, 0xbf, 0x38, 0x31, 0x7e, 0x05, 0xeb, 0x79, 0x18, 0xd5,
	0x9a, 0x8f, 0xb0, 0x98, 0xce, 0x65, 0x62, 0x16, 0x14, 0xf0, 0x4b, 0xb8, 0x94, 0x8b, 0xdf, 0x0f,
	0xbc, 0x03, 0x27, 0x1c, 0x65, 0x52, 0x65, 0xa3, 0xdf, 0xc1, 0xbe, 0x69, 0xff, 0xe1, 0xc2, 0x19,
	0xfd, 0x87, 0x8b, 0xdf, 0x93, 0xff, 0x70, 0xe9, 0xfb, 0xf3, 0x1f, 0xd6, 0xdf, 0xd1, 0x7f, 0xb8,
	0xfc, 0x3d, 0xf8, 0x0f, 0xed, 0x09, 0xfd, 0x87, 0x03, 0xb8, 0xaa, 0xcc, 0xa9, 0x14, 0x36, 0x8b,
	0x92, 0xde, 0x01, 0xee, 0xf3, 0x8f, 0xb2, 0x71, 0x2e, 0x49, 0x24, 0x2f, 0xe3, 0xf8, 0x77, 0x49,
	0xef, 0x60, 0xcb, 0xa3, 0xa1, 0xb1, 0x07, 0x6b, 0x59, 0xcf, 0x11, 0x14, 0x35, 0xc2, 0xee, 0x59,
	0x49, 0x61, 0x17, 0xd4, 0x34, 0xc4, 0xfb, 0xb9, 0x76, 0x16, 0xef, 0xe7, 0x37, 0x70, 0x3b, 0x35,
	0xca, 0x04, 0x62, 0x8d, 0x0f, 0xae, 0x0f, 0x7f, 0xc4, 0xd5, 0xc4, 0xa8, 0x63, 0x8f, 0x52, 0x0c,
	0x31, 0xce, 0x23, 0xa3, 0x65, 0xb8, 0xf1, 0x0e, 0x8f, 0x54, 0x6b, 0xa1, 0x9b, 0xd0, 0x79, 0x8f,
	0x14, 0xd6, 0x1c, 0x7f, 0xd1, 0x9b, 0x63, 0x9a, 0xd0, 0x59, 0x4f, 0x45, 0x5a, 0x15, 0xef, 0x9a,
	0xed, 0x5c, 0xde, 0x9a, 0xd4, 0xb9, 0xfc, 0x39, 0x2a, 0xe3, 0x04, 0x1a, 0x6d, 0x5d, 0x6e, 0x8f,
	0xd6, 0xf2, 0x31, 0x84, 0x6a, 0x2d, 0xe2, 0x5e, 0xeb, 0x9d, 0x77, 0xf2, 0x5a, 0xef, 0xbe, 0x93,
	0xd7, 0x7a, 0x6f, 0x7c, 0xaf, 0xf5, 0xf7, 0xb5, 0xd9, 0x90, 0xf7, 0xe5, 0xeb, 0x8b, 0xb7, 0x31,
	0xda, 0x34, 0xd1, 0x16, 0x4f, 0x5f, 0x2e, 0x6e, 0x9a, 0x70, 0xcc, 0x31, 0x94, 0xf7, 0x47, 0xeb,
	0x6f, 0xec, 0xa5, 0x23, 0xeb, 0x40, 0x3b, 0xba, 0x6e, 0x3f, 0xed, 0x64, 0x8b, 0x59, 0x7b, 0x6f,
	0x38, 0xe6, 0x8b, 0xea, 0xc2, 0xfd, 0xa4, 0xc7, 0xcd, 0x67, 0x91, 0xc0, 0x95, 0xa1, 0x0f, 0x11,
	0xf6, 0xc7, 0xfb, 0xa3, 0x85, 0x59, 0xf6, 0x53, 0x84, 0x2d, 0xa2, 0x59, 0x83, 0x99, 0x01, 0x83,
	0x07, 0xe3, 0x59, 0x83, 0x69, 0xfc, 0xba, 0xcd, 0x94, 0x70, 0xc6, 0x1f, 0x8e, 0x67, 0x33, 0xe9,
	0x5e, 0xac, 0x60, 0x94, 0x0c, 0x6c, 0x62, 0xb6, 0x1f, 0x8d, 0x67, 0x0e, 0xeb, 0x38, 0xf9, 0x3c,
	0x7f, 0x0b, 0x17, 0x72, 0x10, 0x8b, 0x19, 0xfe, 0x60, 0x92, 0x19, 0x88, 0xd9, 0x79, 0x66, 0x74,
	0x67, 0x62, 0x3a, 0x74, 0xf2, 0x78, 0x38, 0xda, 0xe5, 0x18, 0xda, 0x48, 0xac, 0x7f, 0x07, 0x17,
	0x13, 0xd1, 0x98, 0xa4, 0xb6, 0xf8, 0x70, 0x38, 0xe2, 0xb5, 0x58, 0x4c, 0x26, 0xae, 0x33, 0xf2,
	0xa2, 0x46, 0x1f, 0x4d, 0x1e, 0x35, 0x8a, 0xdc, 0xf9, 0x94, 0xb1, 0xf8, 0x93, 0xb1, 0xdc, 0xf9,
	0x84, 0xad, 0x38, 0x2c, 0x0a, 0xf5, 0xf1, 0x99, 0xa2, 0x50, 0x2e, 0xdc, 0x4c, 0x0a, 0x9b, 0x14,
	0x6a, 0x29, 0x25, 0x9e, 0x0c, 0x7f, 0xc2, 0x95, 0xb8, 0xe0, 0x49, 0x3c, 0x49, 0x48, 0x8d, 0xbf,
	0x0e, 0xef, 0xe7, 0x3d, 0x2f, 0x5f, 0x49, 0x7e, 0x32, 0xfc, 0xc1, 0xb7, 0x33, 0x1f, 0x9c, 0xad,
	0x2a, 0xc7, 0x89, 0xba, 0x7d, 0xfa, 0x2e, 0x51, 0xb7, 0x53, 0xd8, 0x18, 0xf7, 0x05, 0xc5, 0xb4,
	0xfe, 0xde, 0xf0, 0xc7, 0xdd, 0x1c, 0xfd, 0x76, 0x62, 0x6e, 0xd3, 0x01, 0xbf, 0xcf, 0x7e, 0x17,
	0x01, 0xbf, 0xcf, 0x7f, 0xe8, 0x80, 0xdf, 0xe6, 0xf7, 0x14, 0xf0, 0xfb, 0x52, 0x31, 0x76, 0xdc,
	0xcc, 0x7f, 0x3a, 0x1c, 0xff, 0xbc, 0xfe, 0x42, 0xdc, 0x3e, 0xc8, 0x0f, 0x1d, 0x6e, 0x7d, 0x6f,
	0xa1, 0xc3, 0x67, 0xdf, 0x5f, 0xe8, 0xf0, 0xf9, 0x19, 0x42, 0x87, 0x31, 0x33, 0x44, 0x4e, 0x9b,
	0x6e, 0x33, 0xbc, 0x18, 0xd3, 0x0c, 0x11, 0xab, 0x12, 0x59, 0x0e, 0xed, 0x23, 0x58, 0xd3, 0x4f,
	0x21, 0x77, 0xbc, 0x7e, 0x9f, 0xb8, 0x5d, 0xd2, 0xc5, 0x4a, 0x2d, 0x0d, 0xbd, 0x90, 0x7b, 0x08,
	0xbf, 0x98, 0x7b, 0x37, 0x45, 0x6c, 0xfb, 0xb7, 0xfd, 0x5f, 0x0b, 0xe2, 0x28, 0xf3, 0x9e, 0xbd,
	0xdf, 0x4b, 0x07, 0x3e, 0xb7, 0x62, 0x57, 0x64, 0x17, 0x93, 0x07, 0xac, 0x54, 0xc7, 0x8d, 0x2d,
	0x05, 0xc5, 0x6f, 0x87, 0xd0, 0xef, 0xd1, 0x96, 0x9f, 0x6f, 0xe5, 0x4f, 0xd6, 0x3f, 0xdf, 0xca,
	0xd3, 0x36, 0x8b, 0xa1, 0xb7, 0xf6, 0x0b, 0x68, 0x24, 0x50, 0x64, 0xdc, 0x22, 0xf1, 0x7e, 0xfc,
	0xfa, 0xe3, 0x73, 0x19, 0x03, 0x51, 0xa7, 0xd1, 0xb5, 0x2b, 0x26, 0x3e, 0x02, 0x23, 0x0d, 0x10,
	0xfb, 0xa8, 0x6c, 0x21, 0xf5, 0x51, 0x59, 0x1c, 0x55, 0x7b, 0x11, 0x8a, 0xdb, 0xa9, 0x8b, 0x21,
	0xdb, 0x3b, 0x70, 0x35, 0xef, 0x43, 0xbe, 0xfc, 0x62, 0xa7, 0x17, 0x0e, 0xe9, 0x75, 0x69, 0xe6,
	0x71, 0xa1, 0xcc, 0x8b, 0x30, 0xda, 0xff, 0xad, 0x08, 0xed, 0x3c, 0x94, 0xaa, 0x8c, 0x49, 0xb6,
	0xd1, 0x37, 0x86, 0xd5, 0x90, 0xaa, 0xaa, 0x6e, 0x1b, 0x6f, 0x1b, 0x10, 0x9f, 0xf3, 0xea, 0x3b,
	0xf2, 0xcb, 0x80, 0x3c, 0xc5, 0xb6, 0xde, 0xc3, 0x4f, 0x75, 0xf1, 0x6a, 0xfe, 0xa9, 0x73, 0x84,
	0x3c, 0x76, 0xc8, 0xdb, 0x28, 0xad, 0xb4, 0x64, 0xce, 0xb1, 0xda, 0xd7, 0x58, 0xc9, 0x53, 0x40,
	0xf9, 0x57, 0xc0, 0x65, 0xf2, 0x68, 0xc9, 0x2c, 0xf3, 0x8a, 0x4d, 0xfc, 0xa4, 0x35, 0xfe, 0x0e,
	0xf8, 0x5d, 0x4d, 0x2a, 0x08, 0xca, 0x53, 0x45, 0x0d, 0xde, 0x86, 0xb7, 0x02, 0xc9, 0x50, 0xe7,
	0x25, 0xa8, 0x8a, 0x1e, 0xea, 0x8e, 0x9f, 0x8a, 0x09, 0xbc, 0xea, 0x95, 0xf8, 0x64, 0x07, 0x8f,
	0xe5, 0xf2, 0xa0, 0xf1, 0xac, 0x00, 0xc0, 0x2a, 0x8c, 0x19, 0xaf, 0xc0, 0x2c, 0x7e, 0x03, 0xdd,
	0x71, 0xc5, 0x9d, 0xfc, 0x33, 0x47, 0x36, 0xdd, 0x71, 0x5c, 0x0d, 0x75, 0xe0, 0xf5, 0x64, 0xb8,
	0x59, 0xa0, 0x36, 0xbd, 0x1e, 0x69, 0xff, 0xc3, 0x42, 0xfe, 0xba, 0x99, 0x84, 0xfa, 0x9e, 0x4b,
	0x09, 0xde, 0x34, 0xb9, 0x04, 0x33, 0xb6, 0xef, 0x44, 0x13, 0x5c, 0xb2, 0x7d, 0x27, 0xe7, 0x6c,
	0x49, 0x72, 0x45, 0xa6, 0xd2, 0x2b, 0x12, 0xbb, 0xf6, 0x50, 0x7e, 0x7c, 0x47, 0xc5, 0x7c, 0x4b,
	0x5a, 0x76, 0xfe, 0xbf, 0x2c, 0x41, 0x2b, 0x6f, 0x80, 0xc6, 0x5d, 0x30, 0x3a, 0x9d, 0xf8, 0x3c,
	0x8b, 0x4b, 0x0d, 0x2a, 0x66, 0xb3, 0xd3, 0xd1, 0x67, 0x99, 0xe0, 0x3c, 0x77, 0x79, 0xa6, 0x28,
	0xde, 0x3a, 0x22, 0x12, 0x8a, 0x45, 0xd5, 0x37, 0x41, 0x8f, 0xad, 0x2b, 0x9b, 0x46, 0x12, 0x04,
	0x5e, 0x20, 0xbe, 0xc8, 0x53, 0x3e, 0xb2, 0xe9, 0x73, 0x56, 0x66, 0xbd, 0xf9, 0xf7, 0xed, 0xf1,
	0x63, 0xd0, 0xea, 0xb2, 0x5c, 0x2a, 0x3f, 0x0f, 0x2d, 0x00, 0xba, 0xa4, 0xd3, 0x73, 0x5c, 0x75,
	0x9b, 0x07, 0x38, 0xf4, 0x99, 0xa8, 0xd1, 0x3f, 0xab, 0x3c, 0x13, 0xff, 0xac, 0xf2, 0x63, 0x26,
	0x84, 0xf9, 0xf7, 0xe2, 0x92, 0x64, 0xc3, 0x17, 0x7b, 0x49, 0x35, 0xc7, 0x28, 0xc7, 0x84, 0x5a,
	0x20, 0x16, 0x89, 0x5f, 0x1d, 0x5a, 0x46, 0x61, 0x74, 0x6f, 0xf4, 0xb7, 0xb5, 0xb5, 0xa5, 0x65,
	0xfa, 0x5c, 0x5b, 0x68, 0x41, 0xbf, 0xb1, 0x6f, 0x76, 0x47, 0x37, 0x81, 0x18, 0xc9, 0x6f, 0x72,
	0x6f, 0x77, 0x8d, 0xaf, 0x00, 0x54, 0x2d, 0x15, 0xd7, 0xe5, 0xdc, 0x19, 0x39, 0x84, 0x88, 0x85,
	0x4d, 0xad, 0xbb, 0xa4, 0x58, 0xc7, 0x3d, 0xc4, 0x45, 0xaa, 0x46, 0x14, 0xeb, 0xb8, 0x87, 0x6c,
	0x91, 0xc4, 0xf8, 0xf8, 0x67, 0xd6, 0xbb, 0x4e, 0x40, 0x3a, 0xfc, 0x12, 0x99, 0xb9, 0x68, 0x7c,
	0xf8, 0x25, 0x75, 0xde, 0xa4, 0x2e, 0x66, 0xe2, 0xa7, 0x37, 0x6a, 0xf2, 0x62, 0x26, 0x7e, 0x7c,
	0x43, 0x7d, 0xfe, 0xba, 0xae, 0x7f, 0xfe, 0xda, 0x84, 0x5a, 0x07, 0x45, 0x96, 0x75, 0x80, 0x32,
	0x4b, 0xdc, 0xea, 0x37, 0x7a, 0x56, 0x75, 0x41, 0x67, 0xce, 0x75, 0xb4, 0xd2, 0xd3, 0xcf, 0x7e,
	0xf1, 0xe9, 0xa1, 0x13, 0x1e, 0x0d, 0xf6, 0x37, 0x3a, 0x5e, 0xff, 0xbe, 0x54, 0x72, 0xea, 0xc7,
	0x3d, 0x81, 0xfa, 0x1e, 0x7e, 0xff, 0x3d, 0xb8, 0xef, 0xbf, 0x39, 0xbc, 0x8f, 0x9b, 0x32, 0xf7,
	0x45, 0xc3, 0xfe, 0x0c, 0x16, 0x1f, 0xfe, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8a, 0xe4, 0xda,
	0xcf, 0xf7, 0x95, 0x00, 0x00,
}
