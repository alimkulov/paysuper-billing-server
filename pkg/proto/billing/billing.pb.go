// Code generated by protoc-gen-go. DO NOT EDIT.
// source: billing/billing.proto

package billing

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Name struct {
	// @inject_tag: bson:"EN" json:"EN" structure:"EN"
	En string `protobuf:"bytes,1,opt,name=en,proto3" json:"en,omitempty"`
	// @inject_tag: bson:"RU" json:"RU" structure:"RU"
	Ru                   string   `protobuf:"bytes,2,opt,name=ru,proto3" json:"ru,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Name) Reset()         { *m = Name{} }
func (m *Name) String() string { return proto.CompactTextString(m) }
func (*Name) ProtoMessage()    {}
func (*Name) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{0}
}

func (m *Name) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Name.Unmarshal(m, b)
}
func (m *Name) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Name.Marshal(b, m, deterministic)
}
func (m *Name) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Name.Merge(m, src)
}
func (m *Name) XXX_Size() int {
	return xxx_messageInfo_Name.Size(m)
}
func (m *Name) XXX_DiscardUnknown() {
	xxx_messageInfo_Name.DiscardUnknown(m)
}

var xxx_messageInfo_Name proto.InternalMessageInfo

func (m *Name) GetEn() string {
	if m != nil {
		return m.En
	}
	return ""
}

func (m *Name) GetRu() string {
	if m != nil {
		return m.Ru
	}
	return ""
}

type OrderCreateRequest struct {
	// @inject_tag: query:"PO_PROJECT_ID" form:"PO_PROJECT_ID" json:"project" validate:"required,hexadecimal"
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// @inject_tag: query:"PO_SIGNATURE" form:"PO_SIGNATURE" validate:"omitempty,alphanum"
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// @inject_tag: query:"PO_AMOUNT" form:"PO_AMOUNT" json:"amount" validate:"required,numeric"
	Amount float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// @inject_tag: query:"PO_CURRENCY" form:"PO_CURRENCY" json:"currency" validate:"omitempty,alpha,len=3"
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	// @inject_tag: "PO_ACCOUNT" form:"PO_ACCOUNT" json:"account"`
	Account string `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	// @inject_tag: query:"PO_ORDER_ID" form:"PO_ORDER_ID" json:"order_id" validate:"omitempty,max=255"
	OrderId string `protobuf:"bytes,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// @inject_tag: query:"PO_DESCRIPTION" form:"PO_DESCRIPTION" json:"description" validate:"omitempty,max=255"
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// @inject_tag: query:"PO_PAYMENT_METHOD" form:"PO_PAYMENT_METHOD" json:"payment_method" validate:"omitempty,max=255"
	PaymentMethod string `protobuf:"bytes,8,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	// @inject_tag: query:"PO_URL_VERIFY" form:"PO_URL_VERIFY" json:"url_verify" validate:"omitempty,url"
	UrlVerify string `protobuf:"bytes,9,opt,name=url_verify,json=urlVerify,proto3" json:"url_verify,omitempty"`
	// @inject_tag: query:"PO_URL_NOTIFY" form:"PO_URL_NOTIFY" json:"url_notify" validate:"omitempty,url"
	UrlNotify string `protobuf:"bytes,10,opt,name=url_notify,json=urlNotify,proto3" json:"url_notify,omitempty"`
	// @inject_tag: query:"PO_URL_SUCCESS" form:"PO_URL_SUCCESS" json:"url_success" validate:"omitempty,url"
	UrlSuccess string `protobuf:"bytes,11,opt,name=url_success,json=urlSuccess,proto3" json:"url_success,omitempty"`
	// @inject_tag: query:"PO_URL_FAIL" form:"PO_URL_FAIL" json:"url_fail" validate:"omitempty,url"
	UrlFail string `protobuf:"bytes,12,opt,name=url_fail,json=urlFail,proto3" json:"url_fail,omitempty"`
	// @inject_tag: query:"PO_PAYER_EMAIL" form:"PO_PAYER_EMAIL" json:"payer_email" validate:"omitempty,email"
	PayerEmail string `protobuf:"bytes,13,opt,name=payer_email,json=payerEmail,proto3" json:"payer_email,omitempty"`
	// @inject_tag: query:"PO_PAYER_PHONE" form:"PO_PAYER_PHONE" json:"payer_phone" validate:"omitempty,max=255"
	PayerPhone string `protobuf:"bytes,14,opt,name=payer_phone,json=payerPhone,proto3" json:"payer_phone,omitempty"`
	// @inject_tag: query:"PO_REGION" form:"PO_REGION" json:"region" validate:"omitempty,alpha,len=2"
	Region  string            `protobuf:"bytes,15,opt,name=region,proto3" json:"region,omitempty"`
	PayerIp string            `protobuf:"bytes,16,opt,name=payer_ip,json=payerIp,proto3" json:"payer_ip,omitempty"`
	Other   map[string]string `protobuf:"bytes,17,rep,name=other,proto3" json:"other,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	RawParams map[string]string `protobuf:"bytes,18,rep,name=raw_params,json=rawParams,proto3" json:"raw_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	RawBody string `protobuf:"bytes,19,opt,name=raw_body,json=rawBody,proto3" json:"raw_body,omitempty"`
	// @inject_tag: json:"-"
	IsJson bool `protobuf:"varint,20,opt,name=is_json,json=isJson,proto3" json:"is_json,omitempty"`
	// @inject_tag: json:"-"
	Language string `protobuf:"bytes,21,opt,name=language,proto3" json:"language,omitempty"`
	// @inject_tag: json:"products" validate:"omitempty,gte=1,dive,hexadecimal,len=24"
	Products []string `protobuf:"bytes,22,rep,name=products,proto3" json:"products,omitempty"`
	// @inject_tag: json:"-"
	Metadata map[string]string `protobuf:"bytes,23,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	PrivateMetadata      map[string]string `protobuf:"bytes,24,rep,name=private_metadata,json=privateMetadata,proto3" json:"private_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Token                string            `protobuf:"bytes,25,opt,name=token,proto3" json:"token,omitempty"`
	User                 *OrderUser        `protobuf:"bytes,26,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OrderCreateRequest) Reset()         { *m = OrderCreateRequest{} }
func (m *OrderCreateRequest) String() string { return proto.CompactTextString(m) }
func (*OrderCreateRequest) ProtoMessage()    {}
func (*OrderCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{1}
}

func (m *OrderCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCreateRequest.Unmarshal(m, b)
}
func (m *OrderCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCreateRequest.Marshal(b, m, deterministic)
}
func (m *OrderCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCreateRequest.Merge(m, src)
}
func (m *OrderCreateRequest) XXX_Size() int {
	return xxx_messageInfo_OrderCreateRequest.Size(m)
}
func (m *OrderCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCreateRequest proto.InternalMessageInfo

func (m *OrderCreateRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *OrderCreateRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *OrderCreateRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderCreateRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderCreateRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *OrderCreateRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderCreateRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *OrderCreateRequest) GetPaymentMethod() string {
	if m != nil {
		return m.PaymentMethod
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlVerify() string {
	if m != nil {
		return m.UrlVerify
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlNotify() string {
	if m != nil {
		return m.UrlNotify
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlSuccess() string {
	if m != nil {
		return m.UrlSuccess
	}
	return ""
}

func (m *OrderCreateRequest) GetUrlFail() string {
	if m != nil {
		return m.UrlFail
	}
	return ""
}

func (m *OrderCreateRequest) GetPayerEmail() string {
	if m != nil {
		return m.PayerEmail
	}
	return ""
}

func (m *OrderCreateRequest) GetPayerPhone() string {
	if m != nil {
		return m.PayerPhone
	}
	return ""
}

func (m *OrderCreateRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *OrderCreateRequest) GetPayerIp() string {
	if m != nil {
		return m.PayerIp
	}
	return ""
}

func (m *OrderCreateRequest) GetOther() map[string]string {
	if m != nil {
		return m.Other
	}
	return nil
}

func (m *OrderCreateRequest) GetRawParams() map[string]string {
	if m != nil {
		return m.RawParams
	}
	return nil
}

func (m *OrderCreateRequest) GetRawBody() string {
	if m != nil {
		return m.RawBody
	}
	return ""
}

func (m *OrderCreateRequest) GetIsJson() bool {
	if m != nil {
		return m.IsJson
	}
	return false
}

func (m *OrderCreateRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *OrderCreateRequest) GetProducts() []string {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *OrderCreateRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *OrderCreateRequest) GetPrivateMetadata() map[string]string {
	if m != nil {
		return m.PrivateMetadata
	}
	return nil
}

func (m *OrderCreateRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *OrderCreateRequest) GetUser() *OrderUser {
	if m != nil {
		return m.User
	}
	return nil
}

type Project struct {
	// @inject_tag: json:"id" validate:"omitempty,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"merchant_id" validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	// @inject_tag: json:"name" validate:"required"
	Name map[string]string `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"image" validate:"omitempty,url"
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	//@inject_tag: json:"callback_currency" validate:"omitempty,len=3"
	CallbackCurrency string `protobuf:"bytes,5,opt,name=callback_currency,json=callbackCurrency,proto3" json:"callback_currency,omitempty"`
	//@inject_tag: json:"callback_protocol" validate:"omitempty,oneof=default empty"
	CallbackProtocol string `protobuf:"bytes,6,opt,name=callback_protocol,json=callbackProtocol,proto3" json:"callback_protocol,omitempty"`
	//@inject_tag: json:"create_order_allowed_urls" validate:"omitempty,dive,url"
	CreateOrderAllowedUrls []string `protobuf:"bytes,7,rep,name=create_order_allowed_urls,json=createOrderAllowedUrls,proto3" json:"create_order_allowed_urls,omitempty"`
	//@inject_tag: json:"allow_dynamic_notify_urls"
	AllowDynamicNotifyUrls bool `protobuf:"varint,8,opt,name=allow_dynamic_notify_urls,json=allowDynamicNotifyUrls,proto3" json:"allow_dynamic_notify_urls,omitempty"`
	//@inject_tag: json:"allow_dynamic_redirect_urls"
	AllowDynamicRedirectUrls bool `protobuf:"varint,9,opt,name=allow_dynamic_redirect_urls,json=allowDynamicRedirectUrls,proto3" json:"allow_dynamic_redirect_urls,omitempty"`
	//@inject_tag: json:"limits_currency" validate:"omitempty,len=3"
	LimitsCurrency string `protobuf:"bytes,10,opt,name=limits_currency,json=limitsCurrency,proto3" json:"limits_currency,omitempty"`
	// @inject_tag: json:"min_payment_amount" validate:"omitempty,numeric,gte=0"
	MinPaymentAmount float64 `protobuf:"fixed64,11,opt,name=min_payment_amount,json=minPaymentAmount,proto3" json:"min_payment_amount,omitempty"`
	// @inject_tag: json:"max_payment_amount" validate:"omitempty,numeric,gte=0"
	MaxPaymentAmount float64 `protobuf:"fixed64,12,opt,name=max_payment_amount,json=maxPaymentAmount,proto3" json:"max_payment_amount,omitempty"`
	// @inject_tag: json:"notify_emails" validate:"omitempty,dive,email"
	NotifyEmails []string `protobuf:"bytes,13,rep,name=notify_emails,json=notifyEmails,proto3" json:"notify_emails,omitempty"`
	// @inject_tag: json:"is_products_checkout"
	IsProductsCheckout bool `protobuf:"varint,14,opt,name=is_products_checkout,json=isProductsCheckout,proto3" json:"is_products_checkout,omitempty"`
	// @inject_tag: json:"secret_key" validate:"omitempty,max=255"
	SecretKey string `protobuf:"bytes,15,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	// @inject_tag: json:"signature_required"
	SignatureRequired bool `protobuf:"varint,16,opt,name=signature_required,json=signatureRequired,proto3" json:"signature_required,omitempty"`
	// @inject_tag: json:"send_notify_email"
	SendNotifyEmail bool `protobuf:"varint,17,opt,name=send_notify_email,json=sendNotifyEmail,proto3" json:"send_notify_email,omitempty"`
	// @inject_tag: json:"url_check_account" validate:"omitempty,url"
	UrlCheckAccount string `protobuf:"bytes,18,opt,name=url_check_account,json=urlCheckAccount,proto3" json:"url_check_account,omitempty"`
	// @inject_tag: json:"url_process_payment" validate:"omitempty,url"
	UrlProcessPayment string `protobuf:"bytes,19,opt,name=url_process_payment,json=urlProcessPayment,proto3" json:"url_process_payment,omitempty"`
	// @inject_tag: json:"url_redirect_fail" validate:"omitempty,url"
	UrlRedirectFail string `protobuf:"bytes,20,opt,name=url_redirect_fail,json=urlRedirectFail,proto3" json:"url_redirect_fail,omitempty"`
	// @inject_tag: json:"url_redirect_success" validate:"omitempty,url"
	UrlRedirectSuccess string `protobuf:"bytes,21,opt,name=url_redirect_success,json=urlRedirectSuccess,proto3" json:"url_redirect_success,omitempty"`
	// @inject_tag: json:"status" validate:"omitempty,numeric,oneof=0 1 2 3 4"
	Status int32 `protobuf:"varint,22,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,23,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: json:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,24,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// @inject_tag: json:"products_count"
	ProductsCount        int32    `protobuf:"varint,25,opt,name=products_count,json=productsCount,proto3" json:"products_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{2}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Project) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *Project) GetName() map[string]string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Project) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Project) GetCallbackCurrency() string {
	if m != nil {
		return m.CallbackCurrency
	}
	return ""
}

func (m *Project) GetCallbackProtocol() string {
	if m != nil {
		return m.CallbackProtocol
	}
	return ""
}

func (m *Project) GetCreateOrderAllowedUrls() []string {
	if m != nil {
		return m.CreateOrderAllowedUrls
	}
	return nil
}

func (m *Project) GetAllowDynamicNotifyUrls() bool {
	if m != nil {
		return m.AllowDynamicNotifyUrls
	}
	return false
}

func (m *Project) GetAllowDynamicRedirectUrls() bool {
	if m != nil {
		return m.AllowDynamicRedirectUrls
	}
	return false
}

func (m *Project) GetLimitsCurrency() string {
	if m != nil {
		return m.LimitsCurrency
	}
	return ""
}

func (m *Project) GetMinPaymentAmount() float64 {
	if m != nil {
		return m.MinPaymentAmount
	}
	return 0
}

func (m *Project) GetMaxPaymentAmount() float64 {
	if m != nil {
		return m.MaxPaymentAmount
	}
	return 0
}

func (m *Project) GetNotifyEmails() []string {
	if m != nil {
		return m.NotifyEmails
	}
	return nil
}

func (m *Project) GetIsProductsCheckout() bool {
	if m != nil {
		return m.IsProductsCheckout
	}
	return false
}

func (m *Project) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *Project) GetSignatureRequired() bool {
	if m != nil {
		return m.SignatureRequired
	}
	return false
}

func (m *Project) GetSendNotifyEmail() bool {
	if m != nil {
		return m.SendNotifyEmail
	}
	return false
}

func (m *Project) GetUrlCheckAccount() string {
	if m != nil {
		return m.UrlCheckAccount
	}
	return ""
}

func (m *Project) GetUrlProcessPayment() string {
	if m != nil {
		return m.UrlProcessPayment
	}
	return ""
}

func (m *Project) GetUrlRedirectFail() string {
	if m != nil {
		return m.UrlRedirectFail
	}
	return ""
}

func (m *Project) GetUrlRedirectSuccess() string {
	if m != nil {
		return m.UrlRedirectSuccess
	}
	return ""
}

func (m *Project) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Project) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Project) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Project) GetProductsCount() int32 {
	if m != nil {
		return m.ProductsCount
	}
	return 0
}

type ProjectOrder struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId           string            `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Name                 map[string]string `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UrlSuccess           string            `protobuf:"bytes,4,opt,name=url_success,json=urlSuccess,proto3" json:"url_success,omitempty"`
	UrlFail              string            `protobuf:"bytes,5,opt,name=url_fail,json=urlFail,proto3" json:"url_fail,omitempty"`
	NotifyEmails         []string          `protobuf:"bytes,6,rep,name=notify_emails,json=notifyEmails,proto3" json:"notify_emails,omitempty"`
	SecretKey            string            `protobuf:"bytes,7,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	SendNotifyEmail      bool              `protobuf:"varint,8,opt,name=send_notify_email,json=sendNotifyEmail,proto3" json:"send_notify_email,omitempty"`
	UrlCheckAccount      string            `protobuf:"bytes,9,opt,name=url_check_account,json=urlCheckAccount,proto3" json:"url_check_account,omitempty"`
	UrlProcessPayment    string            `protobuf:"bytes,10,opt,name=url_process_payment,json=urlProcessPayment,proto3" json:"url_process_payment,omitempty"`
	CallbackProtocol     string            `protobuf:"bytes,11,opt,name=callback_protocol,json=callbackProtocol,proto3" json:"callback_protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProjectOrder) Reset()         { *m = ProjectOrder{} }
func (m *ProjectOrder) String() string { return proto.CompactTextString(m) }
func (*ProjectOrder) ProtoMessage()    {}
func (*ProjectOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{3}
}

func (m *ProjectOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectOrder.Unmarshal(m, b)
}
func (m *ProjectOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectOrder.Marshal(b, m, deterministic)
}
func (m *ProjectOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectOrder.Merge(m, src)
}
func (m *ProjectOrder) XXX_Size() int {
	return xxx_messageInfo_ProjectOrder.Size(m)
}
func (m *ProjectOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectOrder proto.InternalMessageInfo

func (m *ProjectOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectOrder) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *ProjectOrder) GetName() map[string]string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ProjectOrder) GetUrlSuccess() string {
	if m != nil {
		return m.UrlSuccess
	}
	return ""
}

func (m *ProjectOrder) GetUrlFail() string {
	if m != nil {
		return m.UrlFail
	}
	return ""
}

func (m *ProjectOrder) GetNotifyEmails() []string {
	if m != nil {
		return m.NotifyEmails
	}
	return nil
}

func (m *ProjectOrder) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *ProjectOrder) GetSendNotifyEmail() bool {
	if m != nil {
		return m.SendNotifyEmail
	}
	return false
}

func (m *ProjectOrder) GetUrlCheckAccount() string {
	if m != nil {
		return m.UrlCheckAccount
	}
	return ""
}

func (m *ProjectOrder) GetUrlProcessPayment() string {
	if m != nil {
		return m.UrlProcessPayment
	}
	return ""
}

func (m *ProjectOrder) GetCallbackProtocol() string {
	if m != nil {
		return m.CallbackProtocol
	}
	return ""
}

type MerchantContact struct {
	// @inject_tag: validate:"required" json:"authorized"
	Authorized *MerchantContactAuthorized `protobuf:"bytes,1,opt,name=authorized,proto3" json:"authorized,omitempty"`
	// @inject_tag: validate:"required" json:"technical"
	Technical            *MerchantContactTechnical `protobuf:"bytes,2,opt,name=technical,proto3" json:"technical,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MerchantContact) Reset()         { *m = MerchantContact{} }
func (m *MerchantContact) String() string { return proto.CompactTextString(m) }
func (*MerchantContact) ProtoMessage()    {}
func (*MerchantContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{4}
}

func (m *MerchantContact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantContact.Unmarshal(m, b)
}
func (m *MerchantContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantContact.Marshal(b, m, deterministic)
}
func (m *MerchantContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantContact.Merge(m, src)
}
func (m *MerchantContact) XXX_Size() int {
	return xxx_messageInfo_MerchantContact.Size(m)
}
func (m *MerchantContact) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantContact.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantContact proto.InternalMessageInfo

func (m *MerchantContact) GetAuthorized() *MerchantContactAuthorized {
	if m != nil {
		return m.Authorized
	}
	return nil
}

func (m *MerchantContact) GetTechnical() *MerchantContactTechnical {
	if m != nil {
		return m.Technical
	}
	return nil
}

type MerchantContactTechnical struct {
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: validate:"omitempty,email" json:"email"
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// @inject_tag: validate:"omitempty,phone" json:"phone"
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantContactTechnical) Reset()         { *m = MerchantContactTechnical{} }
func (m *MerchantContactTechnical) String() string { return proto.CompactTextString(m) }
func (*MerchantContactTechnical) ProtoMessage()    {}
func (*MerchantContactTechnical) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{5}
}

func (m *MerchantContactTechnical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantContactTechnical.Unmarshal(m, b)
}
func (m *MerchantContactTechnical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantContactTechnical.Marshal(b, m, deterministic)
}
func (m *MerchantContactTechnical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantContactTechnical.Merge(m, src)
}
func (m *MerchantContactTechnical) XXX_Size() int {
	return xxx_messageInfo_MerchantContactTechnical.Size(m)
}
func (m *MerchantContactTechnical) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantContactTechnical.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantContactTechnical proto.InternalMessageInfo

func (m *MerchantContactTechnical) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantContactTechnical) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *MerchantContactTechnical) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type MerchantContactAuthorized struct {
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: validate:"omitempty,email" json:"email"
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// @inject_tag: validate:"omitempty,phone" json:"phone"
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	// @inject_tag: json:"position"
	Position             string   `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantContactAuthorized) Reset()         { *m = MerchantContactAuthorized{} }
func (m *MerchantContactAuthorized) String() string { return proto.CompactTextString(m) }
func (*MerchantContactAuthorized) ProtoMessage()    {}
func (*MerchantContactAuthorized) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{6}
}

func (m *MerchantContactAuthorized) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantContactAuthorized.Unmarshal(m, b)
}
func (m *MerchantContactAuthorized) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantContactAuthorized.Marshal(b, m, deterministic)
}
func (m *MerchantContactAuthorized) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantContactAuthorized.Merge(m, src)
}
func (m *MerchantContactAuthorized) XXX_Size() int {
	return xxx_messageInfo_MerchantContactAuthorized.Size(m)
}
func (m *MerchantContactAuthorized) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantContactAuthorized.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantContactAuthorized proto.InternalMessageInfo

func (m *MerchantContactAuthorized) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantContactAuthorized) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *MerchantContactAuthorized) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *MerchantContactAuthorized) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

type MerchantBanking struct {
	// @inject_tag: json:"currency"
	Currency *Currency `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"address"
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// @inject_tag: json:"account_number"
	AccountNumber string `protobuf:"bytes,4,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	// @inject_tag: json:"swift"
	Swift string `protobuf:"bytes,5,opt,name=swift,proto3" json:"swift,omitempty"`
	// @inject_tag: json:"details"
	Details              string   `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantBanking) Reset()         { *m = MerchantBanking{} }
func (m *MerchantBanking) String() string { return proto.CompactTextString(m) }
func (*MerchantBanking) ProtoMessage()    {}
func (*MerchantBanking) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{7}
}

func (m *MerchantBanking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantBanking.Unmarshal(m, b)
}
func (m *MerchantBanking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantBanking.Marshal(b, m, deterministic)
}
func (m *MerchantBanking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantBanking.Merge(m, src)
}
func (m *MerchantBanking) XXX_Size() int {
	return xxx_messageInfo_MerchantBanking.Size(m)
}
func (m *MerchantBanking) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantBanking.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantBanking proto.InternalMessageInfo

func (m *MerchantBanking) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *MerchantBanking) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerchantBanking) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MerchantBanking) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *MerchantBanking) GetSwift() string {
	if m != nil {
		return m.Swift
	}
	return ""
}

func (m *MerchantBanking) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

type MerchantLastPayout struct {
	// @inject_tag: json:"date"
	Date *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// @inject_tag: json:"amount"
	Amount               float64  `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantLastPayout) Reset()         { *m = MerchantLastPayout{} }
func (m *MerchantLastPayout) String() string { return proto.CompactTextString(m) }
func (*MerchantLastPayout) ProtoMessage()    {}
func (*MerchantLastPayout) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{8}
}

func (m *MerchantLastPayout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantLastPayout.Unmarshal(m, b)
}
func (m *MerchantLastPayout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantLastPayout.Marshal(b, m, deterministic)
}
func (m *MerchantLastPayout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantLastPayout.Merge(m, src)
}
func (m *MerchantLastPayout) XXX_Size() int {
	return xxx_messageInfo_MerchantLastPayout.Size(m)
}
func (m *MerchantLastPayout) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantLastPayout.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantLastPayout proto.InternalMessageInfo

func (m *MerchantLastPayout) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *MerchantLastPayout) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type MerchantUser struct {
	// @inject_tag: json:"id" validate:"required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"email" validate:"required,email"
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantUser) Reset()         { *m = MerchantUser{} }
func (m *MerchantUser) String() string { return proto.CompactTextString(m) }
func (*MerchantUser) ProtoMessage()    {}
func (*MerchantUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{9}
}

func (m *MerchantUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantUser.Unmarshal(m, b)
}
func (m *MerchantUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantUser.Marshal(b, m, deterministic)
}
func (m *MerchantUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantUser.Merge(m, src)
}
func (m *MerchantUser) XXX_Size() int {
	return xxx_messageInfo_MerchantUser.Size(m)
}
func (m *MerchantUser) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantUser.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantUser proto.InternalMessageInfo

func (m *MerchantUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MerchantUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type Merchant struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"user"
	User *MerchantUser `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"alternative_name"
	AlternativeName string `protobuf:"bytes,5,opt,name=alternative_name,json=alternativeName,proto3" json:"alternative_name,omitempty"`
	// @inject_tag: json:"website"
	Website string `protobuf:"bytes,6,opt,name=website,proto3" json:"website,omitempty"`
	// @inject_tag: json:"country"
	Country *Country `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	// @inject_tag: json:"state"
	State string `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	// @inject_tag: json:"zip"
	Zip string `protobuf:"bytes,9,opt,name=zip,proto3" json:"zip,omitempty"`
	// @inject_tag: json:"city"
	City string `protobuf:"bytes,10,opt,name=city,proto3" json:"city,omitempty"`
	// @inject_tag: json:"address"
	Address string `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`
	// @inject_tag: json:"address_additional"
	AddressAdditional string `protobuf:"bytes,12,opt,name=address_additional,json=addressAdditional,proto3" json:"address_additional,omitempty"`
	// @inject_tag: json:"registration_number"
	RegistrationNumber string `protobuf:"bytes,13,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	// @inject_tag: json:"tax_id"
	TaxId string `protobuf:"bytes,14,opt,name=tax_id,json=taxId,proto3" json:"tax_id,omitempty"`
	// @inject_tag: json:"contacts"
	Contacts *MerchantContact `protobuf:"bytes,15,opt,name=contacts,proto3" json:"contacts,omitempty"`
	// @inject_tag: json:"banking"
	Banking *MerchantBanking `protobuf:"bytes,16,opt,name=banking,proto3" json:"banking,omitempty"`
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,17,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: json:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// @inject_tag: json:"first_payment_at"
	FirstPaymentAt *timestamp.Timestamp `protobuf:"bytes,20,opt,name=first_payment_at,json=firstPaymentAt,proto3" json:"first_payment_at,omitempty"`
	// @inject_tag: json:"-"
	IsVatEnabled bool `protobuf:"varint,21,opt,name=is_vat_enabled,json=isVatEnabled,proto3" json:"is_vat_enabled,omitempty"`
	// @inject_tag: json:"-"
	IsCommissionToUserEnabled bool `protobuf:"varint,22,opt,name=is_commission_to_user_enabled,json=isCommissionToUserEnabled,proto3" json:"is_commission_to_user_enabled,omitempty"`
	// @inject_tag: json:"has_merchant_signature"
	HasMerchantSignature bool `protobuf:"varint,23,opt,name=has_merchant_signature,json=hasMerchantSignature,proto3" json:"has_merchant_signature,omitempty"`
	// @inject_tag: json:"has_psp_signature"
	HasPspSignature bool `protobuf:"varint,24,opt,name=has_psp_signature,json=hasPspSignature,proto3" json:"has_psp_signature,omitempty"`
	// @inject_tag: json:"last_payout"
	LastPayout *MerchantLastPayout `protobuf:"bytes,25,opt,name=last_payout,json=lastPayout,proto3" json:"last_payout,omitempty"`
	// @inject_tag: json:"is_signed"
	IsSigned bool `protobuf:"varint,26,opt,name=is_signed,json=isSigned,proto3" json:"is_signed,omitempty"`
	// @inject_tag: json:"payment_methods"
	PaymentMethods map[string]*MerchantPaymentMethod `protobuf:"bytes,28,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"agreement_type"
	AgreementType int32 `protobuf:"varint,29,opt,name=agreement_type,json=agreementType,proto3" json:"agreement_type,omitempty"`
	// @inject_tag: json:"agreement_sent_via_mail"
	AgreementSentViaMail bool `protobuf:"varint,30,opt,name=agreement_sent_via_mail,json=agreementSentViaMail,proto3" json:"agreement_sent_via_mail,omitempty"`
	// @inject_tag: json:"mail_tracking_link"
	MailTrackingLink string `protobuf:"bytes,31,opt,name=mail_tracking_link,json=mailTrackingLink,proto3" json:"mail_tracking_link,omitempty"`
	// @inject_tag: json:"-"
	S3AgreementName      string   `protobuf:"bytes,32,opt,name=s3_agreement_name,json=s3AgreementName,proto3" json:"s3_agreement_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Merchant) Reset()         { *m = Merchant{} }
func (m *Merchant) String() string { return proto.CompactTextString(m) }
func (*Merchant) ProtoMessage()    {}
func (*Merchant) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{10}
}

func (m *Merchant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Merchant.Unmarshal(m, b)
}
func (m *Merchant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Merchant.Marshal(b, m, deterministic)
}
func (m *Merchant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Merchant.Merge(m, src)
}
func (m *Merchant) XXX_Size() int {
	return xxx_messageInfo_Merchant.Size(m)
}
func (m *Merchant) XXX_DiscardUnknown() {
	xxx_messageInfo_Merchant.DiscardUnknown(m)
}

var xxx_messageInfo_Merchant proto.InternalMessageInfo

func (m *Merchant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Merchant) GetUser() *MerchantUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Merchant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Merchant) GetAlternativeName() string {
	if m != nil {
		return m.AlternativeName
	}
	return ""
}

func (m *Merchant) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Merchant) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *Merchant) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Merchant) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Merchant) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Merchant) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Merchant) GetAddressAdditional() string {
	if m != nil {
		return m.AddressAdditional
	}
	return ""
}

func (m *Merchant) GetRegistrationNumber() string {
	if m != nil {
		return m.RegistrationNumber
	}
	return ""
}

func (m *Merchant) GetTaxId() string {
	if m != nil {
		return m.TaxId
	}
	return ""
}

func (m *Merchant) GetContacts() *MerchantContact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *Merchant) GetBanking() *MerchantBanking {
	if m != nil {
		return m.Banking
	}
	return nil
}

func (m *Merchant) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Merchant) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Merchant) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Merchant) GetFirstPaymentAt() *timestamp.Timestamp {
	if m != nil {
		return m.FirstPaymentAt
	}
	return nil
}

func (m *Merchant) GetIsVatEnabled() bool {
	if m != nil {
		return m.IsVatEnabled
	}
	return false
}

func (m *Merchant) GetIsCommissionToUserEnabled() bool {
	if m != nil {
		return m.IsCommissionToUserEnabled
	}
	return false
}

func (m *Merchant) GetHasMerchantSignature() bool {
	if m != nil {
		return m.HasMerchantSignature
	}
	return false
}

func (m *Merchant) GetHasPspSignature() bool {
	if m != nil {
		return m.HasPspSignature
	}
	return false
}

func (m *Merchant) GetLastPayout() *MerchantLastPayout {
	if m != nil {
		return m.LastPayout
	}
	return nil
}

func (m *Merchant) GetIsSigned() bool {
	if m != nil {
		return m.IsSigned
	}
	return false
}

func (m *Merchant) GetPaymentMethods() map[string]*MerchantPaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

func (m *Merchant) GetAgreementType() int32 {
	if m != nil {
		return m.AgreementType
	}
	return 0
}

func (m *Merchant) GetAgreementSentViaMail() bool {
	if m != nil {
		return m.AgreementSentViaMail
	}
	return false
}

func (m *Merchant) GetMailTrackingLink() string {
	if m != nil {
		return m.MailTrackingLink
	}
	return ""
}

func (m *Merchant) GetS3AgreementName() string {
	if m != nil {
		return m.S3AgreementName
	}
	return ""
}

type SystemNotificationStatuses struct {
	From                 int32    `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   int32    `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemNotificationStatuses) Reset()         { *m = SystemNotificationStatuses{} }
func (m *SystemNotificationStatuses) String() string { return proto.CompactTextString(m) }
func (*SystemNotificationStatuses) ProtoMessage()    {}
func (*SystemNotificationStatuses) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{11}
}

func (m *SystemNotificationStatuses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemNotificationStatuses.Unmarshal(m, b)
}
func (m *SystemNotificationStatuses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemNotificationStatuses.Marshal(b, m, deterministic)
}
func (m *SystemNotificationStatuses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemNotificationStatuses.Merge(m, src)
}
func (m *SystemNotificationStatuses) XXX_Size() int {
	return xxx_messageInfo_SystemNotificationStatuses.Size(m)
}
func (m *SystemNotificationStatuses) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemNotificationStatuses.DiscardUnknown(m)
}

var xxx_messageInfo_SystemNotificationStatuses proto.InternalMessageInfo

func (m *SystemNotificationStatuses) GetFrom() int32 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *SystemNotificationStatuses) GetTo() int32 {
	if m != nil {
		return m.To
	}
	return 0
}

type Notification struct {
	Id                   string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string                      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Message              string                      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	MerchantId           string                      `protobuf:"bytes,4,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	UserId               string                      `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsSystem             bool                        `protobuf:"varint,6,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`
	IsRead               bool                        `protobuf:"varint,7,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	Statuses             *SystemNotificationStatuses `protobuf:"bytes,8,opt,name=statuses,proto3" json:"statuses,omitempty"`
	CreatedAt            *timestamp.Timestamp        `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp        `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{12}
}

func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (m *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(m, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

func (m *Notification) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Notification) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Notification) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Notification) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *Notification) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Notification) GetIsSystem() bool {
	if m != nil {
		return m.IsSystem
	}
	return false
}

func (m *Notification) GetIsRead() bool {
	if m != nil {
		return m.IsRead
	}
	return false
}

func (m *Notification) GetStatuses() *SystemNotificationStatuses {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func (m *Notification) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Notification) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type OrderPlatformFee struct {
	Amount               float32  `protobuf:"fixed32,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	EffectiveRate        float32  `protobuf:"fixed32,3,opt,name=effective_rate,json=effectiveRate,proto3" json:"effective_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderPlatformFee) Reset()         { *m = OrderPlatformFee{} }
func (m *OrderPlatformFee) String() string { return proto.CompactTextString(m) }
func (*OrderPlatformFee) ProtoMessage()    {}
func (*OrderPlatformFee) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{13}
}

func (m *OrderPlatformFee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderPlatformFee.Unmarshal(m, b)
}
func (m *OrderPlatformFee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderPlatformFee.Marshal(b, m, deterministic)
}
func (m *OrderPlatformFee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderPlatformFee.Merge(m, src)
}
func (m *OrderPlatformFee) XXX_Size() int {
	return xxx_messageInfo_OrderPlatformFee.Size(m)
}
func (m *OrderPlatformFee) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderPlatformFee.DiscardUnknown(m)
}

var xxx_messageInfo_OrderPlatformFee proto.InternalMessageInfo

func (m *OrderPlatformFee) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderPlatformFee) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderPlatformFee) GetEffectiveRate() float32 {
	if m != nil {
		return m.EffectiveRate
	}
	return 0
}

type OrderTax struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Rate                 float64  `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate,omitempty"`
	Amount               float64  `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderTax) Reset()         { *m = OrderTax{} }
func (m *OrderTax) String() string { return proto.CompactTextString(m) }
func (*OrderTax) ProtoMessage()    {}
func (*OrderTax) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{14}
}

func (m *OrderTax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderTax.Unmarshal(m, b)
}
func (m *OrderTax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderTax.Marshal(b, m, deterministic)
}
func (m *OrderTax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderTax.Merge(m, src)
}
func (m *OrderTax) XXX_Size() int {
	return xxx_messageInfo_OrderTax.Size(m)
}
func (m *OrderTax) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderTax.DiscardUnknown(m)
}

var xxx_messageInfo_OrderTax proto.InternalMessageInfo

func (m *OrderTax) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OrderTax) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *OrderTax) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderTax) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type OrderBillingAddress struct {
	// @inject_tag: validate:"omitempty,alpha,len=2"
	Country              string   `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	City                 string   `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	PostalCode           string   `protobuf:"bytes,3,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderBillingAddress) Reset()         { *m = OrderBillingAddress{} }
func (m *OrderBillingAddress) String() string { return proto.CompactTextString(m) }
func (*OrderBillingAddress) ProtoMessage()    {}
func (*OrderBillingAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{15}
}

func (m *OrderBillingAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderBillingAddress.Unmarshal(m, b)
}
func (m *OrderBillingAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderBillingAddress.Marshal(b, m, deterministic)
}
func (m *OrderBillingAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderBillingAddress.Merge(m, src)
}
func (m *OrderBillingAddress) XXX_Size() int {
	return xxx_messageInfo_OrderBillingAddress.Size(m)
}
func (m *OrderBillingAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderBillingAddress.DiscardUnknown(m)
}

var xxx_messageInfo_OrderBillingAddress proto.InternalMessageInfo

func (m *OrderBillingAddress) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *OrderBillingAddress) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *OrderBillingAddress) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *OrderBillingAddress) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type OrderUser struct {
	// @inject_tag: json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"object"
	Object string `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	// @inject_tag: json:"external_id"
	ExternalId string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"email" validate:"omitempty,email"
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// @inject_tag: json:"email_verified"
	EmailVerified bool `protobuf:"varint,6,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	// @inject_tag: json:"phone" validate:"omitempty,phone"
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	// @inject_tag: json:"phone_verified"
	PhoneVerified bool `protobuf:"varint,8,opt,name=phone_verified,json=phoneVerified,proto3" json:"phone_verified,omitempty"`
	// @inject_tag: json:"ip" validate:"omitempty,ip"
	Ip string `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip,omitempty"`
	// @inject_tag: json:"locale" validate:"omitempty,alpha,len=2"
	Locale string `protobuf:"bytes,10,opt,name=locale,proto3" json:"locale,omitempty"`
	// @inject_tag: json:"address"
	Address *OrderBillingAddress `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	TechEmail            string   `protobuf:"bytes,13,opt,name=tech_email,json=techEmail,proto3" json:"tech_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderUser) Reset()         { *m = OrderUser{} }
func (m *OrderUser) String() string { return proto.CompactTextString(m) }
func (*OrderUser) ProtoMessage()    {}
func (*OrderUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{16}
}

func (m *OrderUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderUser.Unmarshal(m, b)
}
func (m *OrderUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderUser.Marshal(b, m, deterministic)
}
func (m *OrderUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderUser.Merge(m, src)
}
func (m *OrderUser) XXX_Size() int {
	return xxx_messageInfo_OrderUser.Size(m)
}
func (m *OrderUser) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderUser.DiscardUnknown(m)
}

var xxx_messageInfo_OrderUser proto.InternalMessageInfo

func (m *OrderUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderUser) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *OrderUser) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *OrderUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrderUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *OrderUser) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *OrderUser) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *OrderUser) GetPhoneVerified() bool {
	if m != nil {
		return m.PhoneVerified
	}
	return false
}

func (m *OrderUser) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *OrderUser) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *OrderUser) GetAddress() *OrderBillingAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *OrderUser) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *OrderUser) GetTechEmail() string {
	if m != nil {
		return m.TechEmail
	}
	return ""
}

type Order struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: bson:"project" structure:"project"
	Project *ProjectOrder `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// @inject_tag: bson:"project_order_id" structure:"project_order_id"
	ProjectOrderId string `protobuf:"bytes,3,opt,name=project_order_id,json=projectOrderId,proto3" json:"project_order_id,omitempty"`
	// @inject_tag: bson:"project_account" structure:"project_account"
	ProjectAccount string `protobuf:"bytes,4,opt,name=project_account,json=projectAccount,proto3" json:"project_account,omitempty"`
	// @inject_tag: bson:"description" structure:"description"
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// @inject_tag: bson:"project_income_amount" structure:"project_income_amount"
	ProjectIncomeAmount float64 `protobuf:"fixed64,6,opt,name=project_income_amount,json=projectIncomeAmount,proto3" json:"project_income_amount,omitempty"`
	// @inject_tag: bson:"project_income_currency" structure:"project_income_currency"
	ProjectIncomeCurrency *Currency `protobuf:"bytes,7,opt,name=project_income_currency,json=projectIncomeCurrency,proto3" json:"project_income_currency,omitempty"`
	// @inject_tag: bson:"project_outcome_amount" structure:"project_outcome_amount"
	ProjectOutcomeAmount float64 `protobuf:"fixed64,8,opt,name=project_outcome_amount,json=projectOutcomeAmount,proto3" json:"project_outcome_amount,omitempty"`
	// @inject_tag: bson:"project_outcome_currency" structure:"project_outcome_currency"
	ProjectOutcomeCurrency *Currency `protobuf:"bytes,9,opt,name=project_outcome_currency,json=projectOutcomeCurrency,proto3" json:"project_outcome_currency,omitempty"`
	// @inject_tag: bson:"project_last_requested_at" structure:"project_last_requested_at,timestamp"
	ProjectLastRequestedAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=project_last_requested_at,json=projectLastRequestedAt,proto3" json:"project_last_requested_at,omitempty"`
	// @inject_tag: bson:"project_params" structure:"project_params"
	ProjectParams map[string]string `protobuf:"bytes,11,rep,name=project_params,json=projectParams,proto3" json:"project_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: bson:"payment_method" structure:"payment_method"
	PaymentMethod *PaymentMethodOrder `protobuf:"bytes,13,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	// @inject_tag: bson:"pm_order_id" structure:"pm_order_id"
	PaymentMethodOrderId string `protobuf:"bytes,14,opt,name=payment_method_order_id,json=paymentMethodOrderId,proto3" json:"payment_method_order_id,omitempty"`
	// @inject_tag: bson:"pm_outcome_amount" structure:"pm_outcome_amount"
	PaymentMethodOutcomeAmount float64 `protobuf:"fixed64,15,opt,name=payment_method_outcome_amount,json=paymentMethodOutcomeAmount,proto3" json:"payment_method_outcome_amount,omitempty"`
	// @inject_tag: bson:"pm_outcome_currency" structure:"pm_outcome_currency"
	PaymentMethodOutcomeCurrency *Currency `protobuf:"bytes,16,opt,name=payment_method_outcome_currency,json=paymentMethodOutcomeCurrency,proto3" json:"payment_method_outcome_currency,omitempty"`
	// @inject_tag: bson:"pm_income_amount" structure:"pm_income_amount"
	PaymentMethodIncomeAmount float64 `protobuf:"fixed64,17,opt,name=payment_method_income_amount,json=paymentMethodIncomeAmount,proto3" json:"payment_method_income_amount,omitempty"`
	// @inject_tag: bson:"pm_income_currency" structure:"pm_income_currency"
	PaymentMethodIncomeCurrency *Currency `protobuf:"bytes,18,opt,name=payment_method_income_currency,json=paymentMethodIncomeCurrency,proto3" json:"payment_method_income_currency,omitempty"`
	// @inject_tag: bson:"pm_order_close_date" structure:"pm_order_close_date,timestamp"
	PaymentMethodOrderClosedAt *timestamp.Timestamp `protobuf:"bytes,19,opt,name=payment_method_order_closed_at,json=paymentMethodOrderClosedAt,proto3" json:"payment_method_order_closed_at,omitempty"`
	// @inject_tag: bson:"status" structure:"status"
	Status int32 `protobuf:"varint,20,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: bson:"created_at" structure:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: bson:"updated_at" structure:"updated_at,timestamp"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// @inject_tag: bson:"created_by_json" structure:"created_by_json"
	IsJsonRequest bool `protobuf:"varint,23,opt,name=is_json_request,json=isJsonRequest,proto3" json:"is_json_request,omitempty"`
	// @inject_tag: bson:"amount_psp_ac" structure:"amount_psp_ac"
	AmountInPspAccountingCurrency float64 `protobuf:"fixed64,24,opt,name=amount_in_psp_accounting_currency,json=amountInPspAccountingCurrency,proto3" json:"amount_in_psp_accounting_currency,omitempty"`
	// @inject_tag: bson:"amount_in_merchant_ac" structure:"amount_in_merchant_ac"
	AmountInMerchantAccountingCurrency float64 `protobuf:"fixed64,25,opt,name=amount_in_merchant_accounting_currency,json=amountInMerchantAccountingCurrency,proto3" json:"amount_in_merchant_accounting_currency,omitempty"`
	// @inject_tag: bson:"amount_out_merchant_ac" structure:"amount_out_merchant_ac"
	AmountOutMerchantAccountingCurrency float64 `protobuf:"fixed64,26,opt,name=amount_out_merchant_accounting_currency,json=amountOutMerchantAccountingCurrency,proto3" json:"amount_out_merchant_accounting_currency,omitempty"`
	// @inject_tag: bson:"amount_ps_ac" structure:"amount_ps_ac"
	AmountInPaymentSystemAccountingCurrency float64 `protobuf:"fixed64,27,opt,name=amount_in_payment_system_accounting_currency,json=amountInPaymentSystemAccountingCurrency,proto3" json:"amount_in_payment_system_accounting_currency,omitempty"`
	// @inject_tag: bson:"pm_account" structure:"pm_account"
	PaymentMethodPayerAccount string `protobuf:"bytes,28,opt,name=payment_method_payer_account,json=paymentMethodPayerAccount,proto3" json:"payment_method_payer_account,omitempty"`
	// @inject_tag: bson:"pm_txn_params" structure:"pm_txn_params"
	PaymentMethodTxnParams map[string]string `protobuf:"bytes,29,rep,name=payment_method_txn_params,json=paymentMethodTxnParams,proto3" json:"payment_method_txn_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: bson:"payment_requisites" json:"-" structure:"payment_requisites"
	PaymentRequisites map[string]string `protobuf:"bytes,31,rep,name=payment_requisites,json=paymentRequisites,proto3" json:"payment_requisites,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: bson:"psp_fee_amount" structure:"psp_fee_amount"
	PspFeeAmount *OrderFeePsp `protobuf:"bytes,32,opt,name=psp_fee_amount,json=pspFeeAmount,proto3" json:"psp_fee_amount,omitempty"`
	// @inject_tag: bson:"project_fee_amount" structure:"project_fee_amount"
	ProjectFeeAmount *OrderFee `protobuf:"bytes,33,opt,name=project_fee_amount,json=projectFeeAmount,proto3" json:"project_fee_amount,omitempty"`
	// @inject_tag: bson:"to_payer_fee_amount" structure:"to_payer_fee_amount"
	ToPayerFeeAmount *OrderFee `protobuf:"bytes,34,opt,name=to_payer_fee_amount,json=toPayerFeeAmount,proto3" json:"to_payer_fee_amount,omitempty"`
	// @inject_tag: bson:"ps_fee_amount" structure:"ps_fee_amount"
	PaymentSystemFeeAmount *OrderFeePaymentSystem `protobuf:"bytes,36,opt,name=payment_system_fee_amount,json=paymentSystemFeeAmount,proto3" json:"payment_system_fee_amount,omitempty"`
	Tax                    *OrderTax              `protobuf:"bytes,37,opt,name=tax,proto3" json:"tax,omitempty"`
	// @inject_tag: json:"-"
	Uuid string `protobuf:"bytes,38,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// @inject_tag: json:"-"
	ExpireDateToFormInput *timestamp.Timestamp `protobuf:"bytes,39,opt,name=expire_date_to_form_input,json=expireDateToFormInput,proto3" json:"expire_date_to_form_input,omitempty"`
	TotalPaymentAmount    float64              `protobuf:"fixed64,43,opt,name=total_payment_amount,json=totalPaymentAmount,proto3" json:"total_payment_amount,omitempty"`
	BillingAddress        *OrderBillingAddress `protobuf:"bytes,44,opt,name=billing_address,json=billingAddress,proto3" json:"billing_address,omitempty"`
	User                  *OrderUser           `protobuf:"bytes,45,opt,name=user,proto3" json:"user,omitempty"`
	// @inject_tag: json:"-"
	UserAddressDataRequired bool `protobuf:"varint,46,opt,name=user_address_data_required,json=userAddressDataRequired,proto3" json:"user_address_data_required,omitempty"`
	// @inject_tag: json:"-" validate:"omitempty,gte=1,dive,hexadecimal,len=24"
	Products []string `protobuf:"bytes,47,rep,name=products,proto3" json:"products,omitempty"`
	// @inject_tag: json:"items" validate="omitempty,gte=1,dive"
	Items []*OrderItem `protobuf:"bytes,48,rep,name=items,proto3" json:"items,omitempty"`
	// @inject_tag: validate:"required,numeric,gt=0" json:"amount"
	Amount float64 `protobuf:"fixed64,49,opt,name=amount,proto3" json:"amount,omitempty"`
	//@inject_tag: validate:"required,alpha,len=3" json:"currency"
	Currency string `protobuf:"bytes,50,opt,name=currency,proto3" json:"currency,omitempty"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,51,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	PrivateMetadata      map[string]string `protobuf:"bytes,52,rep,name=private_metadata,json=privateMetadata,proto3" json:"private_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{17}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetProject() *ProjectOrder {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *Order) GetProjectOrderId() string {
	if m != nil {
		return m.ProjectOrderId
	}
	return ""
}

func (m *Order) GetProjectAccount() string {
	if m != nil {
		return m.ProjectAccount
	}
	return ""
}

func (m *Order) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Order) GetProjectIncomeAmount() float64 {
	if m != nil {
		return m.ProjectIncomeAmount
	}
	return 0
}

func (m *Order) GetProjectIncomeCurrency() *Currency {
	if m != nil {
		return m.ProjectIncomeCurrency
	}
	return nil
}

func (m *Order) GetProjectOutcomeAmount() float64 {
	if m != nil {
		return m.ProjectOutcomeAmount
	}
	return 0
}

func (m *Order) GetProjectOutcomeCurrency() *Currency {
	if m != nil {
		return m.ProjectOutcomeCurrency
	}
	return nil
}

func (m *Order) GetProjectLastRequestedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ProjectLastRequestedAt
	}
	return nil
}

func (m *Order) GetProjectParams() map[string]string {
	if m != nil {
		return m.ProjectParams
	}
	return nil
}

func (m *Order) GetPaymentMethod() *PaymentMethodOrder {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *Order) GetPaymentMethodOrderId() string {
	if m != nil {
		return m.PaymentMethodOrderId
	}
	return ""
}

func (m *Order) GetPaymentMethodOutcomeAmount() float64 {
	if m != nil {
		return m.PaymentMethodOutcomeAmount
	}
	return 0
}

func (m *Order) GetPaymentMethodOutcomeCurrency() *Currency {
	if m != nil {
		return m.PaymentMethodOutcomeCurrency
	}
	return nil
}

func (m *Order) GetPaymentMethodIncomeAmount() float64 {
	if m != nil {
		return m.PaymentMethodIncomeAmount
	}
	return 0
}

func (m *Order) GetPaymentMethodIncomeCurrency() *Currency {
	if m != nil {
		return m.PaymentMethodIncomeCurrency
	}
	return nil
}

func (m *Order) GetPaymentMethodOrderClosedAt() *timestamp.Timestamp {
	if m != nil {
		return m.PaymentMethodOrderClosedAt
	}
	return nil
}

func (m *Order) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Order) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Order) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Order) GetIsJsonRequest() bool {
	if m != nil {
		return m.IsJsonRequest
	}
	return false
}

func (m *Order) GetAmountInPspAccountingCurrency() float64 {
	if m != nil {
		return m.AmountInPspAccountingCurrency
	}
	return 0
}

func (m *Order) GetAmountInMerchantAccountingCurrency() float64 {
	if m != nil {
		return m.AmountInMerchantAccountingCurrency
	}
	return 0
}

func (m *Order) GetAmountOutMerchantAccountingCurrency() float64 {
	if m != nil {
		return m.AmountOutMerchantAccountingCurrency
	}
	return 0
}

func (m *Order) GetAmountInPaymentSystemAccountingCurrency() float64 {
	if m != nil {
		return m.AmountInPaymentSystemAccountingCurrency
	}
	return 0
}

func (m *Order) GetPaymentMethodPayerAccount() string {
	if m != nil {
		return m.PaymentMethodPayerAccount
	}
	return ""
}

func (m *Order) GetPaymentMethodTxnParams() map[string]string {
	if m != nil {
		return m.PaymentMethodTxnParams
	}
	return nil
}

func (m *Order) GetPaymentRequisites() map[string]string {
	if m != nil {
		return m.PaymentRequisites
	}
	return nil
}

func (m *Order) GetPspFeeAmount() *OrderFeePsp {
	if m != nil {
		return m.PspFeeAmount
	}
	return nil
}

func (m *Order) GetProjectFeeAmount() *OrderFee {
	if m != nil {
		return m.ProjectFeeAmount
	}
	return nil
}

func (m *Order) GetToPayerFeeAmount() *OrderFee {
	if m != nil {
		return m.ToPayerFeeAmount
	}
	return nil
}

func (m *Order) GetPaymentSystemFeeAmount() *OrderFeePaymentSystem {
	if m != nil {
		return m.PaymentSystemFeeAmount
	}
	return nil
}

func (m *Order) GetTax() *OrderTax {
	if m != nil {
		return m.Tax
	}
	return nil
}

func (m *Order) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Order) GetExpireDateToFormInput() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireDateToFormInput
	}
	return nil
}

func (m *Order) GetTotalPaymentAmount() float64 {
	if m != nil {
		return m.TotalPaymentAmount
	}
	return 0
}

func (m *Order) GetBillingAddress() *OrderBillingAddress {
	if m != nil {
		return m.BillingAddress
	}
	return nil
}

func (m *Order) GetUser() *OrderUser {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Order) GetUserAddressDataRequired() bool {
	if m != nil {
		return m.UserAddressDataRequired
	}
	return false
}

func (m *Order) GetProducts() []string {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *Order) GetItems() []*OrderItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Order) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Order) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Order) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Order) GetPrivateMetadata() map[string]string {
	if m != nil {
		return m.PrivateMetadata
	}
	return nil
}

type OrderItem struct {
	//@inject_tag: validate:"required,hexadecimal,len=24" json:"id" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//@inject_tag: validate:"required" json:"object"
	Object string `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	//@inject_tag: validate:"required" json:"sku" bson:"sku"
	Sku string `protobuf:"bytes,3,opt,name=sku,proto3" json:"sku,omitempty"`
	//@inject_tag: validate:"required" json:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	//@inject_tag: validate:"required" json:"description"
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// @inject_tag: validate:"required,numeric,gt=0" json:"amount"
	Amount float64 `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`
	//@inject_tag: validate:"required,alpha,len=3" json:"currency"
	Currency string `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	//@inject_tag: validate:"dive,omitempty,uri" json:"images"
	Images []string `protobuf:"bytes,8,rep,name=images,proto3" json:"images,omitempty"`
	//@inject_tag: validate:"omitempty,url" json:"url"
	Url string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	//@inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//@inject_tag: json:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	//@inject_tag: json:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OrderItem) Reset()         { *m = OrderItem{} }
func (m *OrderItem) String() string { return proto.CompactTextString(m) }
func (*OrderItem) ProtoMessage()    {}
func (*OrderItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{18}
}

func (m *OrderItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderItem.Unmarshal(m, b)
}
func (m *OrderItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderItem.Marshal(b, m, deterministic)
}
func (m *OrderItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderItem.Merge(m, src)
}
func (m *OrderItem) XXX_Size() int {
	return xxx_messageInfo_OrderItem.Size(m)
}
func (m *OrderItem) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderItem.DiscardUnknown(m)
}

var xxx_messageInfo_OrderItem proto.InternalMessageInfo

func (m *OrderItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderItem) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *OrderItem) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *OrderItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrderItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *OrderItem) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderItem) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *OrderItem) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *OrderItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *OrderItem) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *OrderItem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *OrderItem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type OrderPaginate struct {
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// @inject_tag: json:"items"
	Items                []*OrderSimple `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OrderPaginate) Reset()         { *m = OrderPaginate{} }
func (m *OrderPaginate) String() string { return proto.CompactTextString(m) }
func (*OrderPaginate) ProtoMessage()    {}
func (*OrderPaginate) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{19}
}

func (m *OrderPaginate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderPaginate.Unmarshal(m, b)
}
func (m *OrderPaginate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderPaginate.Marshal(b, m, deterministic)
}
func (m *OrderPaginate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderPaginate.Merge(m, src)
}
func (m *OrderPaginate) XXX_Size() int {
	return xxx_messageInfo_OrderPaginate.Size(m)
}
func (m *OrderPaginate) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderPaginate.DiscardUnknown(m)
}

var xxx_messageInfo_OrderPaginate proto.InternalMessageInfo

func (m *OrderPaginate) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *OrderPaginate) GetItems() []*OrderSimple {
	if m != nil {
		return m.Items
	}
	return nil
}

type OrderSimple struct {
	// @inject_tag: json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"project"
	Project *SimpleItem `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// @inject_tag: json:"account"
	Account string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	// @inject_tag: json:"order_id"
	ProjectOrderId string `protobuf:"bytes,4,opt,name=project_order_id,json=projectOrderId,proto3" json:"project_order_id,omitempty"`
	// @inject_tag: json:"payer_data"
	PayerData *PayerData `protobuf:"bytes,5,opt,name=payer_data,json=payerData,proto3" json:"payer_data,omitempty"`
	// @inject_tag: json:"payment_requisites"
	PaymentRequisites map[string]string `protobuf:"bytes,6,rep,name=payment_requisites,json=paymentRequisites,proto3" json:"payment_requisites,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"payment_method"
	PaymentMethod *SimpleItem `protobuf:"bytes,7,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	// @inject_tag: json:"project_amount_income"
	ProjectAmountIncome *OrderSimpleAmountObject `protobuf:"bytes,8,opt,name=project_amount_income,json=projectAmountIncome,proto3" json:"project_amount_income,omitempty"`
	// @inject_tag: json:"project_amount_outcome"
	ProjectAmountOutcome *OrderSimpleAmountObject `protobuf:"bytes,9,opt,name=project_amount_outcome,json=projectAmountOutcome,proto3" json:"project_amount_outcome,omitempty"`
	// @inject_tag: json:"payment_method_amount_income"
	PaymentMethodAmountIncome *OrderSimpleAmountObject `protobuf:"bytes,10,opt,name=payment_method_amount_income,json=paymentMethodAmountIncome,proto3" json:"payment_method_amount_income,omitempty"`
	// @inject_tag: json:"status"
	Status *Status `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"created_at"
	CreatedAt int64 `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: json:"confirmed_at"
	ConfirmedAt int64 `protobuf:"varint,14,opt,name=confirmed_at,json=confirmedAt,proto3" json:"confirmed_at,omitempty"`
	// @inject_tag: json:"closed_at"
	ClosedAt int64 `protobuf:"varint,15,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	// @inject_tag: json:"psp_fee"
	PspFeeAmount *OrderFeePsp `protobuf:"bytes,16,opt,name=psp_fee_amount,json=pspFeeAmount,proto3" json:"psp_fee_amount,omitempty"`
	// @inject_tag: json:"ps_fee_amount"
	PaymentSystemFeeAmount *OrderFeePaymentSystem `protobuf:"bytes,17,opt,name=payment_system_fee_amount,json=paymentSystemFeeAmount,proto3" json:"payment_system_fee_amount,omitempty"`
	// @inject_tag: json:"project_fee_amount"
	ProjectFeeAmount *OrderFee `protobuf:"bytes,18,opt,name=project_fee_amount,json=projectFeeAmount,proto3" json:"project_fee_amount,omitempty"`
	// @inject_tag: json:"to_payer_fee_amount"
	ToPayerFeeAmount *OrderFee `protobuf:"bytes,19,opt,name=to_payer_fee_amount,json=toPayerFeeAmount,proto3" json:"to_payer_fee_amount,omitempty"`
	// @inject_tag: json:"vat_amount"
	VatAmount            float64  `protobuf:"fixed64,20,opt,name=vat_amount,json=vatAmount,proto3" json:"vat_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderSimple) Reset()         { *m = OrderSimple{} }
func (m *OrderSimple) String() string { return proto.CompactTextString(m) }
func (*OrderSimple) ProtoMessage()    {}
func (*OrderSimple) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{20}
}

func (m *OrderSimple) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderSimple.Unmarshal(m, b)
}
func (m *OrderSimple) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderSimple.Marshal(b, m, deterministic)
}
func (m *OrderSimple) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderSimple.Merge(m, src)
}
func (m *OrderSimple) XXX_Size() int {
	return xxx_messageInfo_OrderSimple.Size(m)
}
func (m *OrderSimple) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderSimple.DiscardUnknown(m)
}

var xxx_messageInfo_OrderSimple proto.InternalMessageInfo

func (m *OrderSimple) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderSimple) GetProject() *SimpleItem {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *OrderSimple) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *OrderSimple) GetProjectOrderId() string {
	if m != nil {
		return m.ProjectOrderId
	}
	return ""
}

func (m *OrderSimple) GetPayerData() *PayerData {
	if m != nil {
		return m.PayerData
	}
	return nil
}

func (m *OrderSimple) GetPaymentRequisites() map[string]string {
	if m != nil {
		return m.PaymentRequisites
	}
	return nil
}

func (m *OrderSimple) GetPaymentMethod() *SimpleItem {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *OrderSimple) GetProjectAmountIncome() *OrderSimpleAmountObject {
	if m != nil {
		return m.ProjectAmountIncome
	}
	return nil
}

func (m *OrderSimple) GetProjectAmountOutcome() *OrderSimpleAmountObject {
	if m != nil {
		return m.ProjectAmountOutcome
	}
	return nil
}

func (m *OrderSimple) GetPaymentMethodAmountIncome() *OrderSimpleAmountObject {
	if m != nil {
		return m.PaymentMethodAmountIncome
	}
	return nil
}

func (m *OrderSimple) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *OrderSimple) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *OrderSimple) GetConfirmedAt() int64 {
	if m != nil {
		return m.ConfirmedAt
	}
	return 0
}

func (m *OrderSimple) GetClosedAt() int64 {
	if m != nil {
		return m.ClosedAt
	}
	return 0
}

func (m *OrderSimple) GetPspFeeAmount() *OrderFeePsp {
	if m != nil {
		return m.PspFeeAmount
	}
	return nil
}

func (m *OrderSimple) GetPaymentSystemFeeAmount() *OrderFeePaymentSystem {
	if m != nil {
		return m.PaymentSystemFeeAmount
	}
	return nil
}

func (m *OrderSimple) GetProjectFeeAmount() *OrderFee {
	if m != nil {
		return m.ProjectFeeAmount
	}
	return nil
}

func (m *OrderSimple) GetToPayerFeeAmount() *OrderFee {
	if m != nil {
		return m.ToPayerFeeAmount
	}
	return nil
}

func (m *OrderSimple) GetVatAmount() float64 {
	if m != nil {
		return m.VatAmount
	}
	return 0
}

type SimpleItem struct {
	// @inject_tag: json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"name"
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleItem) Reset()         { *m = SimpleItem{} }
func (m *SimpleItem) String() string { return proto.CompactTextString(m) }
func (*SimpleItem) ProtoMessage()    {}
func (*SimpleItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{21}
}

func (m *SimpleItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleItem.Unmarshal(m, b)
}
func (m *SimpleItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleItem.Marshal(b, m, deterministic)
}
func (m *SimpleItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleItem.Merge(m, src)
}
func (m *SimpleItem) XXX_Size() int {
	return xxx_messageInfo_SimpleItem.Size(m)
}
func (m *SimpleItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleItem.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleItem proto.InternalMessageInfo

func (m *SimpleItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SimpleItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OrderSimpleAmountObject struct {
	// @inject_tag: json:"amount"
	Amount float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// @inject_tag: json:"currency"
	Currency             *SimpleCurrency `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OrderSimpleAmountObject) Reset()         { *m = OrderSimpleAmountObject{} }
func (m *OrderSimpleAmountObject) String() string { return proto.CompactTextString(m) }
func (*OrderSimpleAmountObject) ProtoMessage()    {}
func (*OrderSimpleAmountObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{22}
}

func (m *OrderSimpleAmountObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderSimpleAmountObject.Unmarshal(m, b)
}
func (m *OrderSimpleAmountObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderSimpleAmountObject.Marshal(b, m, deterministic)
}
func (m *OrderSimpleAmountObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderSimpleAmountObject.Merge(m, src)
}
func (m *OrderSimpleAmountObject) XXX_Size() int {
	return xxx_messageInfo_OrderSimpleAmountObject.Size(m)
}
func (m *OrderSimpleAmountObject) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderSimpleAmountObject.DiscardUnknown(m)
}

var xxx_messageInfo_OrderSimpleAmountObject proto.InternalMessageInfo

func (m *OrderSimpleAmountObject) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderSimpleAmountObject) GetCurrency() *SimpleCurrency {
	if m != nil {
		return m.Currency
	}
	return nil
}

type SimpleCurrency struct {
	// @inject_tag: json:"code_int"
	CodeInt int32 `protobuf:"varint,1,opt,name=code_int,json=codeInt,proto3" json:"code_int,omitempty"`
	// @inject_tag: json:"code_a3"
	CodeA3 string `protobuf:"bytes,2,opt,name=code_a3,json=codeA3,proto3" json:"code_a3,omitempty"`
	// @inject_tag: json:"name"
	Name                 *Name    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleCurrency) Reset()         { *m = SimpleCurrency{} }
func (m *SimpleCurrency) String() string { return proto.CompactTextString(m) }
func (*SimpleCurrency) ProtoMessage()    {}
func (*SimpleCurrency) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{23}
}

func (m *SimpleCurrency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleCurrency.Unmarshal(m, b)
}
func (m *SimpleCurrency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleCurrency.Marshal(b, m, deterministic)
}
func (m *SimpleCurrency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleCurrency.Merge(m, src)
}
func (m *SimpleCurrency) XXX_Size() int {
	return xxx_messageInfo_SimpleCurrency.Size(m)
}
func (m *SimpleCurrency) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleCurrency.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleCurrency proto.InternalMessageInfo

func (m *SimpleCurrency) GetCodeInt() int32 {
	if m != nil {
		return m.CodeInt
	}
	return 0
}

func (m *SimpleCurrency) GetCodeA3() string {
	if m != nil {
		return m.CodeA3
	}
	return ""
}

func (m *SimpleCurrency) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

type Status struct {
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: json:"description"
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{24}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Status) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Status) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Currency struct {
	// @inject_tag: bson:"code_int"
	CodeInt int32 `protobuf:"varint,1,opt,name=code_int,json=codeInt,proto3" json:"code_int,omitempty"`
	// @inject_tag: bson:"code_a3"
	CodeA3 string `protobuf:"bytes,2,opt,name=code_a3,json=codeA3,proto3" json:"code_a3,omitempty"`
	// @inject_tag: bson:"name"
	Name *Name `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Currency) Reset()         { *m = Currency{} }
func (m *Currency) String() string { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()    {}
func (*Currency) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{25}
}

func (m *Currency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Currency.Unmarshal(m, b)
}
func (m *Currency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Currency.Marshal(b, m, deterministic)
}
func (m *Currency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Currency.Merge(m, src)
}
func (m *Currency) XXX_Size() int {
	return xxx_messageInfo_Currency.Size(m)
}
func (m *Currency) XXX_DiscardUnknown() {
	xxx_messageInfo_Currency.DiscardUnknown(m)
}

var xxx_messageInfo_Currency proto.InternalMessageInfo

func (m *Currency) GetCodeInt() int32 {
	if m != nil {
		return m.CodeInt
	}
	return 0
}

func (m *Currency) GetCodeA3() string {
	if m != nil {
		return m.CodeA3
	}
	return ""
}

func (m *Currency) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Currency) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Currency) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Currency) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type PayerData struct {
	// @inject_tag: bson:"ip" structure:"ip"
	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	// @inject_tag: bson:"country_code_a2" structure:"country_code_a2"
	Country string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	// @inject_tag: bson:"country_name" structure:"country_name"
	CountryName *Name `protobuf:"bytes,3,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	// @inject_tag: bson:"city" structure:"city"
	City     *Name  `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Zip      string `protobuf:"bytes,5,opt,name=zip,proto3" json:"zip,omitempty"`
	State    string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Language string `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	// @inject_tag: bson:"timezone" structure:"timezone"
	Timezone string `protobuf:"bytes,9,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// @inject_tag: bson:"phone" structure:"phone"
	Phone string `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty"`
	// @inject_tag: bson:"email" structure:"email"
	Email                string   `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PayerData) Reset()         { *m = PayerData{} }
func (m *PayerData) String() string { return proto.CompactTextString(m) }
func (*PayerData) ProtoMessage()    {}
func (*PayerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{26}
}

func (m *PayerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayerData.Unmarshal(m, b)
}
func (m *PayerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayerData.Marshal(b, m, deterministic)
}
func (m *PayerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayerData.Merge(m, src)
}
func (m *PayerData) XXX_Size() int {
	return xxx_messageInfo_PayerData.Size(m)
}
func (m *PayerData) XXX_DiscardUnknown() {
	xxx_messageInfo_PayerData.DiscardUnknown(m)
}

var xxx_messageInfo_PayerData proto.InternalMessageInfo

func (m *PayerData) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *PayerData) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *PayerData) GetCountryName() *Name {
	if m != nil {
		return m.CountryName
	}
	return nil
}

func (m *PayerData) GetCity() *Name {
	if m != nil {
		return m.City
	}
	return nil
}

func (m *PayerData) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *PayerData) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *PayerData) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *PayerData) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *PayerData) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *PayerData) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type PaymentMethodOrder struct {
	// @inject_tag: bson:"_id" structure:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: bson:"name" structure:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: bson:"params" structure:"params"
	Params *PaymentMethodParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	// @inject_tag: bson:"payment_system" structure:"payment_system"
	PaymentSystem *PaymentSystem `protobuf:"bytes,4,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	// @inject_tag: bson:"group_alias" structure:"group_alias"
	Group                string   `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentMethodOrder) Reset()         { *m = PaymentMethodOrder{} }
func (m *PaymentMethodOrder) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodOrder) ProtoMessage()    {}
func (*PaymentMethodOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{27}
}

func (m *PaymentMethodOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodOrder.Unmarshal(m, b)
}
func (m *PaymentMethodOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodOrder.Marshal(b, m, deterministic)
}
func (m *PaymentMethodOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodOrder.Merge(m, src)
}
func (m *PaymentMethodOrder) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodOrder.Size(m)
}
func (m *PaymentMethodOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodOrder.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodOrder proto.InternalMessageInfo

func (m *PaymentMethodOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentMethodOrder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentMethodOrder) GetParams() *PaymentMethodParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PaymentMethodOrder) GetPaymentSystem() *PaymentSystem {
	if m != nil {
		return m.PaymentSystem
	}
	return nil
}

func (m *PaymentMethodOrder) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

type PaymentMethodParams struct {
	// @inject_tag: bson:"handler" structure:"handler"
	Handler string `protobuf:"bytes,1,opt,name=handler,proto3" json:"handler,omitempty"`
	// @inject_tag: bson:"terminal" structure:"terminal"
	Terminal string `protobuf:"bytes,2,opt,name=terminal,proto3" json:"terminal,omitempty"`
	// @inject_tag: bson:"password"
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// @inject_tag: bson:"callback_password"
	CallbackPassword string `protobuf:"bytes,5,opt,name=callback_password,json=callbackPassword,proto3" json:"callback_password,omitempty"`
	// @inject_tag: bson:"external_id" structure:"external_id"
	ExternalId string `protobuf:"bytes,6,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	// @inject_tag: bson:"other" structure:"other"
	Other                map[string]string `protobuf:"bytes,7,rep,name=other,proto3" json:"other,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PaymentMethodParams) Reset()         { *m = PaymentMethodParams{} }
func (m *PaymentMethodParams) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodParams) ProtoMessage()    {}
func (*PaymentMethodParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{28}
}

func (m *PaymentMethodParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodParams.Unmarshal(m, b)
}
func (m *PaymentMethodParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodParams.Marshal(b, m, deterministic)
}
func (m *PaymentMethodParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodParams.Merge(m, src)
}
func (m *PaymentMethodParams) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodParams.Size(m)
}
func (m *PaymentMethodParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodParams.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodParams proto.InternalMessageInfo

func (m *PaymentMethodParams) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

func (m *PaymentMethodParams) GetTerminal() string {
	if m != nil {
		return m.Terminal
	}
	return ""
}

func (m *PaymentMethodParams) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *PaymentMethodParams) GetCallbackPassword() string {
	if m != nil {
		return m.CallbackPassword
	}
	return ""
}

func (m *PaymentMethodParams) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *PaymentMethodParams) GetOther() map[string]string {
	if m != nil {
		return m.Other
	}
	return nil
}

type PaymentSystem struct {
	// @inject_tag: bson:"_id" structure:"_id,bsonobjectid"
	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: bson:"country" structure:"country"
	Country *Country `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty"`
	// @inject_tag: bson:"accounting_currency" structure:"accounting_currency"
	AccountingCurrency *Currency `protobuf:"bytes,4,opt,name=accounting_currency,json=accountingCurrency,proto3" json:"accounting_currency,omitempty"`
	// @inject_tag: bson:"accounting_period" structure:"accounting_period"
	AccountingPeriod string `protobuf:"bytes,5,opt,name=accounting_period,json=accountingPeriod,proto3" json:"accounting_period,omitempty"`
	// @inject_tag: bson:"is_active" structure:"is_active"
	IsActive bool `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// @inject_tag: bson:"created_at" structure:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: bson:"updated_at" structure:"updated_at,timestamp"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PaymentSystem) Reset()         { *m = PaymentSystem{} }
func (m *PaymentSystem) String() string { return proto.CompactTextString(m) }
func (*PaymentSystem) ProtoMessage()    {}
func (*PaymentSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{29}
}

func (m *PaymentSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentSystem.Unmarshal(m, b)
}
func (m *PaymentSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentSystem.Marshal(b, m, deterministic)
}
func (m *PaymentSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentSystem.Merge(m, src)
}
func (m *PaymentSystem) XXX_Size() int {
	return xxx_messageInfo_PaymentSystem.Size(m)
}
func (m *PaymentSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentSystem.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentSystem proto.InternalMessageInfo

func (m *PaymentSystem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentSystem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentSystem) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *PaymentSystem) GetAccountingCurrency() *Currency {
	if m != nil {
		return m.AccountingCurrency
	}
	return nil
}

func (m *PaymentSystem) GetAccountingPeriod() string {
	if m != nil {
		return m.AccountingPeriod
	}
	return ""
}

func (m *PaymentSystem) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *PaymentSystem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PaymentSystem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type FixedPackage struct {
	// @inject_tag: bson:"id" structure:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: bson:"name" structure:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: bson:"currency"
	Currency *Currency `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	// @inject_tag: bson:"price" structure:"price"
	Price float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	// @inject_tag: bson:"is_active" structure:"is_active"
	IsActive             bool     `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FixedPackage) Reset()         { *m = FixedPackage{} }
func (m *FixedPackage) String() string { return proto.CompactTextString(m) }
func (*FixedPackage) ProtoMessage()    {}
func (*FixedPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{30}
}

func (m *FixedPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixedPackage.Unmarshal(m, b)
}
func (m *FixedPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixedPackage.Marshal(b, m, deterministic)
}
func (m *FixedPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixedPackage.Merge(m, src)
}
func (m *FixedPackage) XXX_Size() int {
	return xxx_messageInfo_FixedPackage.Size(m)
}
func (m *FixedPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_FixedPackage.DiscardUnknown(m)
}

var xxx_messageInfo_FixedPackage proto.InternalMessageInfo

func (m *FixedPackage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FixedPackage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FixedPackage) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *FixedPackage) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *FixedPackage) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type FixedPackages struct {
	FixedPackage         []*FixedPackage `protobuf:"bytes,1,rep,name=fixed_package,json=fixedPackage,proto3" json:"fixed_package,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FixedPackages) Reset()         { *m = FixedPackages{} }
func (m *FixedPackages) String() string { return proto.CompactTextString(m) }
func (*FixedPackages) ProtoMessage()    {}
func (*FixedPackages) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{31}
}

func (m *FixedPackages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixedPackages.Unmarshal(m, b)
}
func (m *FixedPackages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixedPackages.Marshal(b, m, deterministic)
}
func (m *FixedPackages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixedPackages.Merge(m, src)
}
func (m *FixedPackages) XXX_Size() int {
	return xxx_messageInfo_FixedPackages.Size(m)
}
func (m *FixedPackages) XXX_DiscardUnknown() {
	xxx_messageInfo_FixedPackages.DiscardUnknown(m)
}

var xxx_messageInfo_FixedPackages proto.InternalMessageInfo

func (m *FixedPackages) GetFixedPackage() []*FixedPackage {
	if m != nil {
		return m.FixedPackage
	}
	return nil
}

type OrderFee struct {
	// @inject_tag: bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"
	AmountPaymentMethodCurrency float64 `protobuf:"fixed64,1,opt,name=AmountPaymentMethodCurrency,proto3" json:"AmountPaymentMethodCurrency,omitempty"`
	// @inject_tag: bson:"amount_merchant_currency" structure:"amount_merchant_currency"
	AmountMerchantCurrency float64  `protobuf:"fixed64,2,opt,name=AmountMerchantCurrency,proto3" json:"AmountMerchantCurrency,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *OrderFee) Reset()         { *m = OrderFee{} }
func (m *OrderFee) String() string { return proto.CompactTextString(m) }
func (*OrderFee) ProtoMessage()    {}
func (*OrderFee) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{32}
}

func (m *OrderFee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderFee.Unmarshal(m, b)
}
func (m *OrderFee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderFee.Marshal(b, m, deterministic)
}
func (m *OrderFee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderFee.Merge(m, src)
}
func (m *OrderFee) XXX_Size() int {
	return xxx_messageInfo_OrderFee.Size(m)
}
func (m *OrderFee) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderFee.DiscardUnknown(m)
}

var xxx_messageInfo_OrderFee proto.InternalMessageInfo

func (m *OrderFee) GetAmountPaymentMethodCurrency() float64 {
	if m != nil {
		return m.AmountPaymentMethodCurrency
	}
	return 0
}

func (m *OrderFee) GetAmountMerchantCurrency() float64 {
	if m != nil {
		return m.AmountMerchantCurrency
	}
	return 0
}

type OrderFeePsp struct {
	// @inject_tag: bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"
	AmountPaymentMethodCurrency float64 `protobuf:"fixed64,1,opt,name=AmountPaymentMethodCurrency,proto3" json:"AmountPaymentMethodCurrency,omitempty"`
	// @inject_tag: bson:"amount_merchant_currency" structure:"amount_merchant_currency"
	AmountMerchantCurrency float64 `protobuf:"fixed64,2,opt,name=AmountMerchantCurrency,proto3" json:"AmountMerchantCurrency,omitempty"`
	// @inject_tag: bson:"amount_psp_currency" structure:"amount_psp_currency"
	AmountPspCurrency    float64  `protobuf:"fixed64,3,opt,name=AmountPspCurrency,proto3" json:"AmountPspCurrency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderFeePsp) Reset()         { *m = OrderFeePsp{} }
func (m *OrderFeePsp) String() string { return proto.CompactTextString(m) }
func (*OrderFeePsp) ProtoMessage()    {}
func (*OrderFeePsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{33}
}

func (m *OrderFeePsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderFeePsp.Unmarshal(m, b)
}
func (m *OrderFeePsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderFeePsp.Marshal(b, m, deterministic)
}
func (m *OrderFeePsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderFeePsp.Merge(m, src)
}
func (m *OrderFeePsp) XXX_Size() int {
	return xxx_messageInfo_OrderFeePsp.Size(m)
}
func (m *OrderFeePsp) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderFeePsp.DiscardUnknown(m)
}

var xxx_messageInfo_OrderFeePsp proto.InternalMessageInfo

func (m *OrderFeePsp) GetAmountPaymentMethodCurrency() float64 {
	if m != nil {
		return m.AmountPaymentMethodCurrency
	}
	return 0
}

func (m *OrderFeePsp) GetAmountMerchantCurrency() float64 {
	if m != nil {
		return m.AmountMerchantCurrency
	}
	return 0
}

func (m *OrderFeePsp) GetAmountPspCurrency() float64 {
	if m != nil {
		return m.AmountPspCurrency
	}
	return 0
}

// Contain information about payment system commission in other currencies
type OrderFeePaymentSystem struct {
	// @inject_tag: bson:"amount_payment_method_currency" structure:"amount_payment_method_currency"
	AmountPaymentMethodCurrency float64 `protobuf:"fixed64,1,opt,name=AmountPaymentMethodCurrency,proto3" json:"AmountPaymentMethodCurrency,omitempty"`
	// @inject_tag: bson:"amount_merchant_currency" structure:"amount_merchant_currency"
	AmountMerchantCurrency float64 `protobuf:"fixed64,2,opt,name=AmountMerchantCurrency,proto3" json:"AmountMerchantCurrency,omitempty"`
	// @inject_tag: bson:"amount_payment_system_currency" structure:"amount_payment_system_currency"
	AmountPaymentSystemCurrency float64  `protobuf:"fixed64,3,opt,name=AmountPaymentSystemCurrency,proto3" json:"AmountPaymentSystemCurrency,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *OrderFeePaymentSystem) Reset()         { *m = OrderFeePaymentSystem{} }
func (m *OrderFeePaymentSystem) String() string { return proto.CompactTextString(m) }
func (*OrderFeePaymentSystem) ProtoMessage()    {}
func (*OrderFeePaymentSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{34}
}

func (m *OrderFeePaymentSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderFeePaymentSystem.Unmarshal(m, b)
}
func (m *OrderFeePaymentSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderFeePaymentSystem.Marshal(b, m, deterministic)
}
func (m *OrderFeePaymentSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderFeePaymentSystem.Merge(m, src)
}
func (m *OrderFeePaymentSystem) XXX_Size() int {
	return xxx_messageInfo_OrderFeePaymentSystem.Size(m)
}
func (m *OrderFeePaymentSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderFeePaymentSystem.DiscardUnknown(m)
}

var xxx_messageInfo_OrderFeePaymentSystem proto.InternalMessageInfo

func (m *OrderFeePaymentSystem) GetAmountPaymentMethodCurrency() float64 {
	if m != nil {
		return m.AmountPaymentMethodCurrency
	}
	return 0
}

func (m *OrderFeePaymentSystem) GetAmountMerchantCurrency() float64 {
	if m != nil {
		return m.AmountMerchantCurrency
	}
	return 0
}

func (m *OrderFeePaymentSystem) GetAmountPaymentSystemCurrency() float64 {
	if m != nil {
		return m.AmountPaymentSystemCurrency
	}
	return 0
}

type ProjectPaymentMethod struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: bson:"terminal"
	Terminal string `protobuf:"bytes,2,opt,name=terminal,proto3" json:"terminal,omitempty"`
	// @inject_tag: bson:"password"
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// @inject_tag: bson:"callback_password"
	CallbackPassword string `protobuf:"bytes,4,opt,name=callback_password,json=callbackPassword,proto3" json:"callback_password,omitempty"`
	// @inject_tag: bson:"created_at"
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ProjectPaymentMethod) Reset()         { *m = ProjectPaymentMethod{} }
func (m *ProjectPaymentMethod) String() string { return proto.CompactTextString(m) }
func (*ProjectPaymentMethod) ProtoMessage()    {}
func (*ProjectPaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{35}
}

func (m *ProjectPaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectPaymentMethod.Unmarshal(m, b)
}
func (m *ProjectPaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectPaymentMethod.Marshal(b, m, deterministic)
}
func (m *ProjectPaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectPaymentMethod.Merge(m, src)
}
func (m *ProjectPaymentMethod) XXX_Size() int {
	return xxx_messageInfo_ProjectPaymentMethod.Size(m)
}
func (m *ProjectPaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectPaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectPaymentMethod proto.InternalMessageInfo

func (m *ProjectPaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectPaymentMethod) GetTerminal() string {
	if m != nil {
		return m.Terminal
	}
	return ""
}

func (m *ProjectPaymentMethod) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ProjectPaymentMethod) GetCallbackPassword() string {
	if m != nil {
		return m.CallbackPassword
	}
	return ""
}

func (m *ProjectPaymentMethod) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type CurrencyRate struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: bson:"currency_from"
	CurrencyFrom int32 `protobuf:"varint,2,opt,name=currency_from,json=currencyFrom,proto3" json:"currency_from,omitempty"`
	// @inject_tag: bson:"currency_to"
	CurrencyTo int32 `protobuf:"varint,3,opt,name=currency_to,json=currencyTo,proto3" json:"currency_to,omitempty"`
	// @inject_tag: bson:"rate"
	Rate float64 `protobuf:"fixed64,4,opt,name=rate,proto3" json:"rate,omitempty"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// @inject_tag: bson:"date"
	Date *timestamp.Timestamp `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	// @inject_tag: bson:"created_at"
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CurrencyRate) Reset()         { *m = CurrencyRate{} }
func (m *CurrencyRate) String() string { return proto.CompactTextString(m) }
func (*CurrencyRate) ProtoMessage()    {}
func (*CurrencyRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{36}
}

func (m *CurrencyRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrencyRate.Unmarshal(m, b)
}
func (m *CurrencyRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrencyRate.Marshal(b, m, deterministic)
}
func (m *CurrencyRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrencyRate.Merge(m, src)
}
func (m *CurrencyRate) XXX_Size() int {
	return xxx_messageInfo_CurrencyRate.Size(m)
}
func (m *CurrencyRate) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrencyRate.DiscardUnknown(m)
}

var xxx_messageInfo_CurrencyRate proto.InternalMessageInfo

func (m *CurrencyRate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CurrencyRate) GetCurrencyFrom() int32 {
	if m != nil {
		return m.CurrencyFrom
	}
	return 0
}

func (m *CurrencyRate) GetCurrencyTo() int32 {
	if m != nil {
		return m.CurrencyTo
	}
	return 0
}

func (m *CurrencyRate) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *CurrencyRate) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *CurrencyRate) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *CurrencyRate) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type PaymentMethod struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: bson:"group_alias"
	Group string `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	// @inject_tag: bson:"currency"
	Currency *Currency `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	// @inject_tag: bson:"currencies"
	Currencies []int32 `protobuf:"varint,5,rep,packed,name=currencies,proto3" json:"currencies,omitempty"`
	// @inject_tag: bson:"min_payment_amount"
	MinPaymentAmount float64 `protobuf:"fixed64,6,opt,name=min_payment_amount,json=minPaymentAmount,proto3" json:"min_payment_amount,omitempty"`
	// @inject_tag: bson:"max_payment_amount"
	MaxPaymentAmount float64 `protobuf:"fixed64,7,opt,name=max_payment_amount,json=maxPaymentAmount,proto3" json:"max_payment_amount,omitempty"`
	// @inject_tag: bson:"params"
	Params *PaymentMethodParams `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty"`
	// @inject_tag: bson:"icon"
	Icon string `protobuf:"bytes,9,opt,name=Icon,proto3" json:"Icon,omitempty"`
	// @inject_tag: bson:"payment_system"
	PaymentSystem *PaymentSystem `protobuf:"bytes,10,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty"`
	// @inject_tag: bson:"type"
	Type string `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: bson:"account_regexp"
	AccountRegexp string `protobuf:"bytes,12,opt,name=account_regexp,json=accountRegexp,proto3" json:"account_regexp,omitempty"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,13,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PaymentMethod) Reset()         { *m = PaymentMethod{} }
func (m *PaymentMethod) String() string { return proto.CompactTextString(m) }
func (*PaymentMethod) ProtoMessage()    {}
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{37}
}

func (m *PaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethod.Unmarshal(m, b)
}
func (m *PaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethod.Marshal(b, m, deterministic)
}
func (m *PaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethod.Merge(m, src)
}
func (m *PaymentMethod) XXX_Size() int {
	return xxx_messageInfo_PaymentMethod.Size(m)
}
func (m *PaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethod proto.InternalMessageInfo

func (m *PaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentMethod) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *PaymentMethod) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *PaymentMethod) GetCurrencies() []int32 {
	if m != nil {
		return m.Currencies
	}
	return nil
}

func (m *PaymentMethod) GetMinPaymentAmount() float64 {
	if m != nil {
		return m.MinPaymentAmount
	}
	return 0
}

func (m *PaymentMethod) GetMaxPaymentAmount() float64 {
	if m != nil {
		return m.MaxPaymentAmount
	}
	return 0
}

func (m *PaymentMethod) GetParams() *PaymentMethodParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PaymentMethod) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *PaymentMethod) GetPaymentSystem() *PaymentSystem {
	if m != nil {
		return m.PaymentSystem
	}
	return nil
}

func (m *PaymentMethod) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PaymentMethod) GetAccountRegexp() string {
	if m != nil {
		return m.AccountRegexp
	}
	return ""
}

func (m *PaymentMethod) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *PaymentMethod) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PaymentMethod) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Country struct {
	// @inject_tag: bson:"code_int" json:"code_int"
	CodeInt int32 `protobuf:"varint,1,opt,name=code_int,json=codeInt,proto3" json:"code_int,omitempty"`
	// @inject_tag: bson:"code_a2" json:"code_a2"
	CodeA2 string `protobuf:"bytes,2,opt,name=code_a2,json=codeA2,proto3" json:"code_a2,omitempty"`
	// @inject_tag: bson:"code_a3" json:"code_a3"
	CodeA3 string `protobuf:"bytes,3,opt,name=code_a3,json=codeA3,proto3" json:"code_a3,omitempty"`
	// @inject_tag: bson:"name" json:"name"
	Name *Name `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// @inject_tag: bson:"is_active" json:"is_active"
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Country) Reset()         { *m = Country{} }
func (m *Country) String() string { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()    {}
func (*Country) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{38}
}

func (m *Country) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Country.Unmarshal(m, b)
}
func (m *Country) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Country.Marshal(b, m, deterministic)
}
func (m *Country) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Country.Merge(m, src)
}
func (m *Country) XXX_Size() int {
	return xxx_messageInfo_Country.Size(m)
}
func (m *Country) XXX_DiscardUnknown() {
	xxx_messageInfo_Country.DiscardUnknown(m)
}

var xxx_messageInfo_Country proto.InternalMessageInfo

func (m *Country) GetCodeInt() int32 {
	if m != nil {
		return m.CodeInt
	}
	return 0
}

func (m *Country) GetCodeA2() string {
	if m != nil {
		return m.CodeA2
	}
	return ""
}

func (m *Country) GetCodeA3() string {
	if m != nil {
		return m.CodeA3
	}
	return ""
}

func (m *Country) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Country) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Country) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Country) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Vat struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: bson:"country"
	Country *Country `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	// @inject_tag: bson:"subdivision_code"
	Subdivision string `protobuf:"bytes,3,opt,name=subdivision,proto3" json:"subdivision,omitempty"`
	// @inject_tag: bson:"vat"
	Vat float64 `protobuf:"fixed64,4,opt,name=vat,proto3" json:"vat,omitempty"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Vat) Reset()         { *m = Vat{} }
func (m *Vat) String() string { return proto.CompactTextString(m) }
func (*Vat) ProtoMessage()    {}
func (*Vat) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{39}
}

func (m *Vat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vat.Unmarshal(m, b)
}
func (m *Vat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vat.Marshal(b, m, deterministic)
}
func (m *Vat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vat.Merge(m, src)
}
func (m *Vat) XXX_Size() int {
	return xxx_messageInfo_Vat.Size(m)
}
func (m *Vat) XXX_DiscardUnknown() {
	xxx_messageInfo_Vat.DiscardUnknown(m)
}

var xxx_messageInfo_Vat proto.InternalMessageInfo

func (m *Vat) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Vat) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *Vat) GetSubdivision() string {
	if m != nil {
		return m.Subdivision
	}
	return ""
}

func (m *Vat) GetVat() float64 {
	if m != nil {
		return m.Vat
	}
	return 0
}

func (m *Vat) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Vat) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Vat) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Commission struct {
	// @inject_tag: bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: bson:"pm_id"
	PaymentMethodId string `protobuf:"bytes,2,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	// @inject_tag: bson:"project_id"
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// @inject_tag: bson:"pm_commission"
	PaymentMethodCommission float64 `protobuf:"fixed64,4,opt,name=payment_method_commission,json=paymentMethodCommission,proto3" json:"payment_method_commission,omitempty"`
	// @inject_tag: bson:"psp_commission"
	PspCommission float64 `protobuf:"fixed64,5,opt,name=psp_commission,json=pspCommission,proto3" json:"psp_commission,omitempty"`
	// @inject_tag: bson:"total_commission_to_user"
	TotalCommissionToUser float64 `protobuf:"fixed64,6,opt,name=total_commission_to_user,json=totalCommissionToUser,proto3" json:"total_commission_to_user,omitempty"`
	// @inject_tag: bson:"start_date"
	StartDate *timestamp.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Commission) Reset()         { *m = Commission{} }
func (m *Commission) String() string { return proto.CompactTextString(m) }
func (*Commission) ProtoMessage()    {}
func (*Commission) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{40}
}

func (m *Commission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commission.Unmarshal(m, b)
}
func (m *Commission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commission.Marshal(b, m, deterministic)
}
func (m *Commission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commission.Merge(m, src)
}
func (m *Commission) XXX_Size() int {
	return xxx_messageInfo_Commission.Size(m)
}
func (m *Commission) XXX_DiscardUnknown() {
	xxx_messageInfo_Commission.DiscardUnknown(m)
}

var xxx_messageInfo_Commission proto.InternalMessageInfo

func (m *Commission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Commission) GetPaymentMethodId() string {
	if m != nil {
		return m.PaymentMethodId
	}
	return ""
}

func (m *Commission) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *Commission) GetPaymentMethodCommission() float64 {
	if m != nil {
		return m.PaymentMethodCommission
	}
	return 0
}

func (m *Commission) GetPspCommission() float64 {
	if m != nil {
		return m.PspCommission
	}
	return 0
}

func (m *Commission) GetTotalCommissionToUser() float64 {
	if m != nil {
		return m.TotalCommissionToUser
	}
	return 0
}

func (m *Commission) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *Commission) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Commission) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CardExpire struct {
	// @inject_tag: bson:"month"
	Month string `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	// @inject_tag: bson:"year"
	Year                 string   `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardExpire) Reset()         { *m = CardExpire{} }
func (m *CardExpire) String() string { return proto.CompactTextString(m) }
func (*CardExpire) ProtoMessage()    {}
func (*CardExpire) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{41}
}

func (m *CardExpire) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardExpire.Unmarshal(m, b)
}
func (m *CardExpire) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardExpire.Marshal(b, m, deterministic)
}
func (m *CardExpire) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardExpire.Merge(m, src)
}
func (m *CardExpire) XXX_Size() int {
	return xxx_messageInfo_CardExpire.Size(m)
}
func (m *CardExpire) XXX_DiscardUnknown() {
	xxx_messageInfo_CardExpire.DiscardUnknown(m)
}

var xxx_messageInfo_CardExpire proto.InternalMessageInfo

func (m *CardExpire) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *CardExpire) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

type SavedCard struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pan                  string      `protobuf:"bytes,2,opt,name=pan,proto3" json:"pan,omitempty"`
	Expire               *CardExpire `protobuf:"bytes,3,opt,name=expire,proto3" json:"expire,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SavedCard) Reset()         { *m = SavedCard{} }
func (m *SavedCard) String() string { return proto.CompactTextString(m) }
func (*SavedCard) ProtoMessage()    {}
func (*SavedCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{42}
}

func (m *SavedCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavedCard.Unmarshal(m, b)
}
func (m *SavedCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavedCard.Marshal(b, m, deterministic)
}
func (m *SavedCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavedCard.Merge(m, src)
}
func (m *SavedCard) XXX_Size() int {
	return xxx_messageInfo_SavedCard.Size(m)
}
func (m *SavedCard) XXX_DiscardUnknown() {
	xxx_messageInfo_SavedCard.DiscardUnknown(m)
}

var xxx_messageInfo_SavedCard proto.InternalMessageInfo

func (m *SavedCard) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SavedCard) GetPan() string {
	if m != nil {
		return m.Pan
	}
	return ""
}

func (m *SavedCard) GetExpire() *CardExpire {
	if m != nil {
		return m.Expire
	}
	return nil
}

type PaymentFormPaymentMethod struct {
	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// @inject_tag: json:"group_alias"
	Group         string `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	AccountRegexp string `protobuf:"bytes,6,opt,name=account_regexp,json=accountRegexp,proto3" json:"account_regexp,omitempty"`
	// @inject_tag: json:"has_saved_cards"
	HasSavedCards bool `protobuf:"varint,12,opt,name=has_saved_cards,json=hasSavedCards,proto3" json:"has_saved_cards,omitempty"`
	// @inject_tag: json:"saved_cards,omitempty"
	SavedCards           []*SavedCard `protobuf:"bytes,13,rep,name=saved_cards,json=savedCards,proto3" json:"saved_cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PaymentFormPaymentMethod) Reset()         { *m = PaymentFormPaymentMethod{} }
func (m *PaymentFormPaymentMethod) String() string { return proto.CompactTextString(m) }
func (*PaymentFormPaymentMethod) ProtoMessage()    {}
func (*PaymentFormPaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{43}
}

func (m *PaymentFormPaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentFormPaymentMethod.Unmarshal(m, b)
}
func (m *PaymentFormPaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentFormPaymentMethod.Marshal(b, m, deterministic)
}
func (m *PaymentFormPaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentFormPaymentMethod.Merge(m, src)
}
func (m *PaymentFormPaymentMethod) XXX_Size() int {
	return xxx_messageInfo_PaymentFormPaymentMethod.Size(m)
}
func (m *PaymentFormPaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentFormPaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentFormPaymentMethod proto.InternalMessageInfo

func (m *PaymentFormPaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetAccountRegexp() string {
	if m != nil {
		return m.AccountRegexp
	}
	return ""
}

func (m *PaymentFormPaymentMethod) GetHasSavedCards() bool {
	if m != nil {
		return m.HasSavedCards
	}
	return false
}

func (m *PaymentFormPaymentMethod) GetSavedCards() []*SavedCard {
	if m != nil {
		return m.SavedCards
	}
	return nil
}

type MerchantPaymentMethodPerTransactionCommission struct {
	// @inject_tag: validate:"omitempty,numeric,gte=0" json:"fee"
	Fee float64 `protobuf:"fixed64,1,opt,name=fee,proto3" json:"fee,omitempty"`
	// @inject_tag: json:"currency"
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantPaymentMethodPerTransactionCommission) Reset() {
	*m = MerchantPaymentMethodPerTransactionCommission{}
}
func (m *MerchantPaymentMethodPerTransactionCommission) String() string {
	return proto.CompactTextString(m)
}
func (*MerchantPaymentMethodPerTransactionCommission) ProtoMessage() {}
func (*MerchantPaymentMethodPerTransactionCommission) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{44}
}

func (m *MerchantPaymentMethodPerTransactionCommission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Marshal(b, m, deterministic)
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Merge(m, src)
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.Size(m)
}
func (m *MerchantPaymentMethodPerTransactionCommission) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodPerTransactionCommission proto.InternalMessageInfo

func (m *MerchantPaymentMethodPerTransactionCommission) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *MerchantPaymentMethodPerTransactionCommission) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type MerchantPaymentMethodCommissions struct {
	// @inject_tag: validate:"omitempty,numeric,gte=0,lte=100" json:"fee"
	Fee float64 `protobuf:"fixed64,1,opt,name=fee,proto3" json:"fee,omitempty"`
	// @inject_tag: validate:"required" json:"per_transaction"
	PerTransaction       *MerchantPaymentMethodPerTransactionCommission `protobuf:"bytes,2,opt,name=per_transaction,json=perTransaction,proto3" json:"per_transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *MerchantPaymentMethodCommissions) Reset()         { *m = MerchantPaymentMethodCommissions{} }
func (m *MerchantPaymentMethodCommissions) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodCommissions) ProtoMessage()    {}
func (*MerchantPaymentMethodCommissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{45}
}

func (m *MerchantPaymentMethodCommissions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodCommissions.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodCommissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodCommissions.Marshal(b, m, deterministic)
}
func (m *MerchantPaymentMethodCommissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodCommissions.Merge(m, src)
}
func (m *MerchantPaymentMethodCommissions) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodCommissions.Size(m)
}
func (m *MerchantPaymentMethodCommissions) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodCommissions.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodCommissions proto.InternalMessageInfo

func (m *MerchantPaymentMethodCommissions) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *MerchantPaymentMethodCommissions) GetPerTransaction() *MerchantPaymentMethodPerTransactionCommission {
	if m != nil {
		return m.PerTransaction
	}
	return nil
}

type MerchantPaymentMethodIntegration struct {
	// @inject_tag: json:"terminal_id"
	TerminalId string `protobuf:"bytes,1,opt,name=terminal_id,json=terminalId,proto3" json:"terminal_id,omitempty"`
	// @inject_tag: json:"terminal_password"
	TerminalPassword string `protobuf:"bytes,2,opt,name=terminal_password,json=terminalPassword,proto3" json:"terminal_password,omitempty"`
	// @inject_tag: json:"terminal_callback_password"
	TerminalCallbackPassword string `protobuf:"bytes,3,opt,name=terminal_callback_password,json=terminalCallbackPassword,proto3" json:"terminal_callback_password,omitempty"`
	// @inject_tag: json:"integrated"
	Integrated           bool     `protobuf:"varint,4,opt,name=integrated,proto3" json:"integrated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantPaymentMethodIntegration) Reset()         { *m = MerchantPaymentMethodIntegration{} }
func (m *MerchantPaymentMethodIntegration) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodIntegration) ProtoMessage()    {}
func (*MerchantPaymentMethodIntegration) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{46}
}

func (m *MerchantPaymentMethodIntegration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodIntegration.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodIntegration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodIntegration.Marshal(b, m, deterministic)
}
func (m *MerchantPaymentMethodIntegration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodIntegration.Merge(m, src)
}
func (m *MerchantPaymentMethodIntegration) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodIntegration.Size(m)
}
func (m *MerchantPaymentMethodIntegration) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodIntegration.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodIntegration proto.InternalMessageInfo

func (m *MerchantPaymentMethodIntegration) GetTerminalId() string {
	if m != nil {
		return m.TerminalId
	}
	return ""
}

func (m *MerchantPaymentMethodIntegration) GetTerminalPassword() string {
	if m != nil {
		return m.TerminalPassword
	}
	return ""
}

func (m *MerchantPaymentMethodIntegration) GetTerminalCallbackPassword() string {
	if m != nil {
		return m.TerminalCallbackPassword
	}
	return ""
}

func (m *MerchantPaymentMethodIntegration) GetIntegrated() bool {
	if m != nil {
		return m.Integrated
	}
	return false
}

type MerchantPaymentMethodIdentification struct {
	// @inject_tag: validate:"required,hexadecimal,len=24" json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: validate:"required" json:"name"
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantPaymentMethodIdentification) Reset()         { *m = MerchantPaymentMethodIdentification{} }
func (m *MerchantPaymentMethodIdentification) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodIdentification) ProtoMessage()    {}
func (*MerchantPaymentMethodIdentification) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{47}
}

func (m *MerchantPaymentMethodIdentification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodIdentification.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodIdentification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodIdentification.Marshal(b, m, deterministic)
}
func (m *MerchantPaymentMethodIdentification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodIdentification.Merge(m, src)
}
func (m *MerchantPaymentMethodIdentification) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodIdentification.Size(m)
}
func (m *MerchantPaymentMethodIdentification) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodIdentification.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodIdentification proto.InternalMessageInfo

func (m *MerchantPaymentMethodIdentification) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MerchantPaymentMethodIdentification) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MerchantPaymentMethod struct {
	PaymentMethod        *MerchantPaymentMethodIdentification `protobuf:"bytes,3,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	Commission           *MerchantPaymentMethodCommissions    `protobuf:"bytes,4,opt,name=commission,proto3" json:"commission,omitempty"`
	Integration          *MerchantPaymentMethodIntegration    `protobuf:"bytes,5,opt,name=integration,proto3" json:"integration,omitempty"`
	IsActive             bool                                 `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *MerchantPaymentMethod) Reset()         { *m = MerchantPaymentMethod{} }
func (m *MerchantPaymentMethod) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethod) ProtoMessage()    {}
func (*MerchantPaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{48}
}

func (m *MerchantPaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethod.Unmarshal(m, b)
}
func (m *MerchantPaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethod.Marshal(b, m, deterministic)
}
func (m *MerchantPaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethod.Merge(m, src)
}
func (m *MerchantPaymentMethod) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethod.Size(m)
}
func (m *MerchantPaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethod proto.InternalMessageInfo

func (m *MerchantPaymentMethod) GetPaymentMethod() *MerchantPaymentMethodIdentification {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *MerchantPaymentMethod) GetCommission() *MerchantPaymentMethodCommissions {
	if m != nil {
		return m.Commission
	}
	return nil
}

func (m *MerchantPaymentMethod) GetIntegration() *MerchantPaymentMethodIntegration {
	if m != nil {
		return m.Integration
	}
	return nil
}

func (m *MerchantPaymentMethod) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type RefundPayerData struct {
	Country              string   `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	Zip                  string   `protobuf:"bytes,2,opt,name=zip,proto3" json:"zip,omitempty"`
	State                string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundPayerData) Reset()         { *m = RefundPayerData{} }
func (m *RefundPayerData) String() string { return proto.CompactTextString(m) }
func (*RefundPayerData) ProtoMessage()    {}
func (*RefundPayerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{49}
}

func (m *RefundPayerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundPayerData.Unmarshal(m, b)
}
func (m *RefundPayerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundPayerData.Marshal(b, m, deterministic)
}
func (m *RefundPayerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundPayerData.Merge(m, src)
}
func (m *RefundPayerData) XXX_Size() int {
	return xxx_messageInfo_RefundPayerData.Size(m)
}
func (m *RefundPayerData) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundPayerData.DiscardUnknown(m)
}

var xxx_messageInfo_RefundPayerData proto.InternalMessageInfo

func (m *RefundPayerData) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *RefundPayerData) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *RefundPayerData) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type RefundOrder struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundOrder) Reset()         { *m = RefundOrder{} }
func (m *RefundOrder) String() string { return proto.CompactTextString(m) }
func (*RefundOrder) ProtoMessage()    {}
func (*RefundOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{50}
}

func (m *RefundOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundOrder.Unmarshal(m, b)
}
func (m *RefundOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundOrder.Marshal(b, m, deterministic)
}
func (m *RefundOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundOrder.Merge(m, src)
}
func (m *RefundOrder) XXX_Size() int {
	return xxx_messageInfo_RefundOrder.Size(m)
}
func (m *RefundOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundOrder.DiscardUnknown(m)
}

var xxx_messageInfo_RefundOrder proto.InternalMessageInfo

func (m *RefundOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RefundOrder) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type Refund struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Order                *RefundOrder         `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	ExternalId           string               `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Amount               float64              `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatorId            string               `protobuf:"bytes,5,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	Reason               string               `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Currency             *Currency            `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	Status               int32                `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PayerData            *RefundPayerData     `protobuf:"bytes,11,opt,name=payer_data,json=payerData,proto3" json:"payer_data,omitempty"`
	SalesTax             float32              `protobuf:"fixed32,12,opt,name=sales_tax,json=salesTax,proto3" json:"sales_tax,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Refund) Reset()         { *m = Refund{} }
func (m *Refund) String() string { return proto.CompactTextString(m) }
func (*Refund) ProtoMessage()    {}
func (*Refund) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{51}
}

func (m *Refund) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Refund.Unmarshal(m, b)
}
func (m *Refund) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Refund.Marshal(b, m, deterministic)
}
func (m *Refund) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Refund.Merge(m, src)
}
func (m *Refund) XXX_Size() int {
	return xxx_messageInfo_Refund.Size(m)
}
func (m *Refund) XXX_DiscardUnknown() {
	xxx_messageInfo_Refund.DiscardUnknown(m)
}

var xxx_messageInfo_Refund proto.InternalMessageInfo

func (m *Refund) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Refund) GetOrder() *RefundOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *Refund) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Refund) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Refund) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

func (m *Refund) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Refund) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *Refund) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Refund) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Refund) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Refund) GetPayerData() *RefundPayerData {
	if m != nil {
		return m.PayerData
	}
	return nil
}

func (m *Refund) GetSalesTax() float32 {
	if m != nil {
		return m.SalesTax
	}
	return 0
}

type SystemFee struct {
	// @inject_tag: json:"percent" validate:"numeric,gte=0,lte=100"
	Percent float64 `protobuf:"fixed64,1,opt,name=percent,proto3" json:"percent,omitempty"`
	// @inject_tag: json:"percent_currency" validate:"omitempty,alpha,len=3"
	PercentCurrency string `protobuf:"bytes,2,opt,name=percent_currency,json=percentCurrency,proto3" json:"percent_currency,omitempty"`
	// @inject_tag: json:"fix_amount" validate:"numeric,gte=0"
	FixAmount float64 `protobuf:"fixed64,3,opt,name=fix_amount,json=fixAmount,proto3" json:"fix_amount,omitempty"`
	// @inject_tag: json:"fix_currency" validate:"required,alpha,len=3"
	FixCurrency          string   `protobuf:"bytes,4,opt,name=fix_currency,json=fixCurrency,proto3" json:"fix_currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemFee) Reset()         { *m = SystemFee{} }
func (m *SystemFee) String() string { return proto.CompactTextString(m) }
func (*SystemFee) ProtoMessage()    {}
func (*SystemFee) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{52}
}

func (m *SystemFee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemFee.Unmarshal(m, b)
}
func (m *SystemFee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemFee.Marshal(b, m, deterministic)
}
func (m *SystemFee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemFee.Merge(m, src)
}
func (m *SystemFee) XXX_Size() int {
	return xxx_messageInfo_SystemFee.Size(m)
}
func (m *SystemFee) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemFee.DiscardUnknown(m)
}

var xxx_messageInfo_SystemFee proto.InternalMessageInfo

func (m *SystemFee) GetPercent() float64 {
	if m != nil {
		return m.Percent
	}
	return 0
}

func (m *SystemFee) GetPercentCurrency() string {
	if m != nil {
		return m.PercentCurrency
	}
	return ""
}

func (m *SystemFee) GetFixAmount() float64 {
	if m != nil {
		return m.FixAmount
	}
	return 0
}

func (m *SystemFee) GetFixCurrency() string {
	if m != nil {
		return m.FixCurrency
	}
	return ""
}

type MinAmount struct {
	// @inject_tag: json:"amount" validate:"required,numeric,gte=0"
	Amount float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// @inject_tag: json:"currency" validate:"required,alpha,len=3"
	Currency             string   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MinAmount) Reset()         { *m = MinAmount{} }
func (m *MinAmount) String() string { return proto.CompactTextString(m) }
func (*MinAmount) ProtoMessage()    {}
func (*MinAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{53}
}

func (m *MinAmount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinAmount.Unmarshal(m, b)
}
func (m *MinAmount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinAmount.Marshal(b, m, deterministic)
}
func (m *MinAmount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinAmount.Merge(m, src)
}
func (m *MinAmount) XXX_Size() int {
	return xxx_messageInfo_MinAmount.Size(m)
}
func (m *MinAmount) XXX_DiscardUnknown() {
	xxx_messageInfo_MinAmount.DiscardUnknown(m)
}

var xxx_messageInfo_MinAmount proto.InternalMessageInfo

func (m *MinAmount) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *MinAmount) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type FeeSet struct {
	// @inject_tag: json:"min_amounts" validate:"required,gt=0,dive,keys,alpha,len=3,endkeys,gte=0"
	MinAmounts map[string]float64 `protobuf:"bytes,5,rep,name=min_amounts,json=minAmounts,proto3" json:"min_amounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	// @inject_tag: json:"transaction_cost" validate:"required,dive"
	TransactionCost *SystemFee `protobuf:"bytes,6,opt,name=transaction_cost,json=transactionCost,proto3" json:"transaction_cost,omitempty"`
	// @inject_tag: json:"authorization_fee" validate:"required,dive"
	AuthorizationFee     *SystemFee `protobuf:"bytes,7,opt,name=authorization_fee,json=authorizationFee,proto3" json:"authorization_fee,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FeeSet) Reset()         { *m = FeeSet{} }
func (m *FeeSet) String() string { return proto.CompactTextString(m) }
func (*FeeSet) ProtoMessage()    {}
func (*FeeSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{54}
}

func (m *FeeSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeeSet.Unmarshal(m, b)
}
func (m *FeeSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeeSet.Marshal(b, m, deterministic)
}
func (m *FeeSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeeSet.Merge(m, src)
}
func (m *FeeSet) XXX_Size() int {
	return xxx_messageInfo_FeeSet.Size(m)
}
func (m *FeeSet) XXX_DiscardUnknown() {
	xxx_messageInfo_FeeSet.DiscardUnknown(m)
}

var xxx_messageInfo_FeeSet proto.InternalMessageInfo

func (m *FeeSet) GetMinAmounts() map[string]float64 {
	if m != nil {
		return m.MinAmounts
	}
	return nil
}

func (m *FeeSet) GetTransactionCost() *SystemFee {
	if m != nil {
		return m.TransactionCost
	}
	return nil
}

func (m *FeeSet) GetAuthorizationFee() *SystemFee {
	if m != nil {
		return m.AuthorizationFee
	}
	return nil
}

type SystemFees struct {
	// @inject_tag: json:"id" bson:"_id" validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: json:"method_id" validate:"required,hexadecimal,len=24"
	MethodId string `protobuf:"bytes,2,opt,name=method_id,json=methodId,proto3" json:"method_id,omitempty"`
	// @inject_tag: json:"region" validate:"omitempty,alpha,len=2"
	Region string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	// @inject_tag: json:"card_brand" validate:"omitempty,alpha"
	CardBrand string `protobuf:"bytes,4,opt,name=card_brand,json=cardBrand,proto3" json:"card_brand,omitempty"`
	// @inject_tag: json:"fees" validate:"required,gte=1"
	Fees []*FeeSet `protobuf:"bytes,5,rep,name=fees,proto3" json:"fees,omitempty"`
	// @inject_tag: json:"user_id" validate:"required,hexadecimal,len=24"
	UserId string `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// @inject_tag: json:"created_at" validate:"required"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: json:"is_active" validate:"required"
	IsActive             bool     `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemFees) Reset()         { *m = SystemFees{} }
func (m *SystemFees) String() string { return proto.CompactTextString(m) }
func (*SystemFees) ProtoMessage()    {}
func (*SystemFees) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{55}
}

func (m *SystemFees) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemFees.Unmarshal(m, b)
}
func (m *SystemFees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemFees.Marshal(b, m, deterministic)
}
func (m *SystemFees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemFees.Merge(m, src)
}
func (m *SystemFees) XXX_Size() int {
	return xxx_messageInfo_SystemFees.Size(m)
}
func (m *SystemFees) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemFees.DiscardUnknown(m)
}

var xxx_messageInfo_SystemFees proto.InternalMessageInfo

func (m *SystemFees) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SystemFees) GetMethodId() string {
	if m != nil {
		return m.MethodId
	}
	return ""
}

func (m *SystemFees) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *SystemFees) GetCardBrand() string {
	if m != nil {
		return m.CardBrand
	}
	return ""
}

func (m *SystemFees) GetFees() []*FeeSet {
	if m != nil {
		return m.Fees
	}
	return nil
}

func (m *SystemFees) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SystemFees) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *SystemFees) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type SystemFeesList struct {
	// @inject_tag: json:"system_fees"
	SystemFees           []*SystemFees `protobuf:"bytes,1,rep,name=system_fees,json=systemFees,proto3" json:"system_fees,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SystemFeesList) Reset()         { *m = SystemFeesList{} }
func (m *SystemFeesList) String() string { return proto.CompactTextString(m) }
func (*SystemFeesList) ProtoMessage()    {}
func (*SystemFeesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{56}
}

func (m *SystemFeesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemFeesList.Unmarshal(m, b)
}
func (m *SystemFeesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemFeesList.Marshal(b, m, deterministic)
}
func (m *SystemFeesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemFeesList.Merge(m, src)
}
func (m *SystemFeesList) XXX_Size() int {
	return xxx_messageInfo_SystemFeesList.Size(m)
}
func (m *SystemFeesList) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemFeesList.DiscardUnknown(m)
}

var xxx_messageInfo_SystemFeesList proto.InternalMessageInfo

func (m *SystemFeesList) GetSystemFees() []*SystemFees {
	if m != nil {
		return m.SystemFees
	}
	return nil
}

type AddSystemFeesRequest struct {
	// @inject_tag: json:"method_id" validate:"required,hexadecimal,len=24"
	MethodId string `protobuf:"bytes,1,opt,name=method_id,json=methodId,proto3" json:"method_id,omitempty"`
	// @inject_tag: json:"region" validate:"omitempty,alpha,len=2"
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	// @inject_tag: json:"card_brand" validate:"omitempty,alpha"
	CardBrand string `protobuf:"bytes,3,opt,name=card_brand,json=cardBrand,proto3" json:"card_brand,omitempty"`
	// @inject_tag: json:"fees" validate:"required,gte=1,dive"
	Fees []*FeeSet `protobuf:"bytes,5,rep,name=fees,proto3" json:"fees,omitempty"`
	// @inject_tag: json:"user_id" validate:"required,hexadecimal,len=24"
	UserId               string   `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSystemFeesRequest) Reset()         { *m = AddSystemFeesRequest{} }
func (m *AddSystemFeesRequest) String() string { return proto.CompactTextString(m) }
func (*AddSystemFeesRequest) ProtoMessage()    {}
func (*AddSystemFeesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{57}
}

func (m *AddSystemFeesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSystemFeesRequest.Unmarshal(m, b)
}
func (m *AddSystemFeesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSystemFeesRequest.Marshal(b, m, deterministic)
}
func (m *AddSystemFeesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSystemFeesRequest.Merge(m, src)
}
func (m *AddSystemFeesRequest) XXX_Size() int {
	return xxx_messageInfo_AddSystemFeesRequest.Size(m)
}
func (m *AddSystemFeesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSystemFeesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddSystemFeesRequest proto.InternalMessageInfo

func (m *AddSystemFeesRequest) GetMethodId() string {
	if m != nil {
		return m.MethodId
	}
	return ""
}

func (m *AddSystemFeesRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *AddSystemFeesRequest) GetCardBrand() string {
	if m != nil {
		return m.CardBrand
	}
	return ""
}

func (m *AddSystemFeesRequest) GetFees() []*FeeSet {
	if m != nil {
		return m.Fees
	}
	return nil
}

func (m *AddSystemFeesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetSystemFeesRequest struct {
	// @inject_tag: json:"method_id" validate:"required,hexadecimal,len=24"
	MethodId string `protobuf:"bytes,1,opt,name=method_id,json=methodId,proto3" json:"method_id,omitempty"`
	// @inject_tag: json:"region" validate:"omitempty,alpha,len=2"
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	// @inject_tag: json:"card_brand" validate:"omitempty,alpha"
	CardBrand string `protobuf:"bytes,3,opt,name=card_brand,json=cardBrand,proto3" json:"card_brand,omitempty"`
	// @inject_tag: json:"amount" validate:"required,numeric,gte=0"
	Amount float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// @inject_tag: json:"currency" validate:"required,alpha,len=3"
	Currency             string   `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSystemFeesRequest) Reset()         { *m = GetSystemFeesRequest{} }
func (m *GetSystemFeesRequest) String() string { return proto.CompactTextString(m) }
func (*GetSystemFeesRequest) ProtoMessage()    {}
func (*GetSystemFeesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{58}
}

func (m *GetSystemFeesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSystemFeesRequest.Unmarshal(m, b)
}
func (m *GetSystemFeesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSystemFeesRequest.Marshal(b, m, deterministic)
}
func (m *GetSystemFeesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSystemFeesRequest.Merge(m, src)
}
func (m *GetSystemFeesRequest) XXX_Size() int {
	return xxx_messageInfo_GetSystemFeesRequest.Size(m)
}
func (m *GetSystemFeesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSystemFeesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSystemFeesRequest proto.InternalMessageInfo

func (m *GetSystemFeesRequest) GetMethodId() string {
	if m != nil {
		return m.MethodId
	}
	return ""
}

func (m *GetSystemFeesRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *GetSystemFeesRequest) GetCardBrand() string {
	if m != nil {
		return m.CardBrand
	}
	return ""
}

func (m *GetSystemFeesRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *GetSystemFeesRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type CalculatedFeeItem struct {
	// @inject_tag: json:"fee_amount" validate:"required,numeric,gte=0"
	FeeAmount float64 `protobuf:"fixed64,1,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty"`
	// @inject_tag: json:"fee_currency" validate:"required,alpha,len=3"
	FeeCurrency string `protobuf:"bytes,2,opt,name=fee_currency,json=feeCurrency,proto3" json:"fee_currency,omitempty"`
	// @inject_tag: json:"fee_name"
	FeeName              string   `protobuf:"bytes,3,opt,name=fee_name,json=feeName,proto3" json:"fee_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculatedFeeItem) Reset()         { *m = CalculatedFeeItem{} }
func (m *CalculatedFeeItem) String() string { return proto.CompactTextString(m) }
func (*CalculatedFeeItem) ProtoMessage()    {}
func (*CalculatedFeeItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{59}
}

func (m *CalculatedFeeItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculatedFeeItem.Unmarshal(m, b)
}
func (m *CalculatedFeeItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculatedFeeItem.Marshal(b, m, deterministic)
}
func (m *CalculatedFeeItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculatedFeeItem.Merge(m, src)
}
func (m *CalculatedFeeItem) XXX_Size() int {
	return xxx_messageInfo_CalculatedFeeItem.Size(m)
}
func (m *CalculatedFeeItem) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculatedFeeItem.DiscardUnknown(m)
}

var xxx_messageInfo_CalculatedFeeItem proto.InternalMessageInfo

func (m *CalculatedFeeItem) GetFeeAmount() float64 {
	if m != nil {
		return m.FeeAmount
	}
	return 0
}

func (m *CalculatedFeeItem) GetFeeCurrency() string {
	if m != nil {
		return m.FeeCurrency
	}
	return ""
}

func (m *CalculatedFeeItem) GetFeeName() string {
	if m != nil {
		return m.FeeName
	}
	return ""
}

type MerchantPaymentMethodHistory struct {
	// @inject_tag: validate:"required,hexadecimal,len=24"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	MerchantId string `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	// @inject_tag: validate:"required"
	PaymentMethod *MerchantPaymentMethod `protobuf:"bytes,3,opt,name=paymentMethod,proto3" json:"paymentMethod,omitempty"`
	// @inject_tag: json:"created_at" validate:"required"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: validate:"required,hexadecimal,len=24"
	UserId               string   `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantPaymentMethodHistory) Reset()         { *m = MerchantPaymentMethodHistory{} }
func (m *MerchantPaymentMethodHistory) String() string { return proto.CompactTextString(m) }
func (*MerchantPaymentMethodHistory) ProtoMessage()    {}
func (*MerchantPaymentMethodHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{60}
}

func (m *MerchantPaymentMethodHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantPaymentMethodHistory.Unmarshal(m, b)
}
func (m *MerchantPaymentMethodHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantPaymentMethodHistory.Marshal(b, m, deterministic)
}
func (m *MerchantPaymentMethodHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantPaymentMethodHistory.Merge(m, src)
}
func (m *MerchantPaymentMethodHistory) XXX_Size() int {
	return xxx_messageInfo_MerchantPaymentMethodHistory.Size(m)
}
func (m *MerchantPaymentMethodHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantPaymentMethodHistory.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantPaymentMethodHistory proto.InternalMessageInfo

func (m *MerchantPaymentMethodHistory) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MerchantPaymentMethodHistory) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *MerchantPaymentMethodHistory) GetPaymentMethod() *MerchantPaymentMethod {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *MerchantPaymentMethodHistory) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *MerchantPaymentMethodHistory) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type CustomerIdentity struct {
	MerchantId           string               `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	ProjectId            string               `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Type                 string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Value                string               `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Verified             bool                 `protobuf:"varint,5,opt,name=verified,proto3" json:"verified,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CustomerIdentity) Reset()         { *m = CustomerIdentity{} }
func (m *CustomerIdentity) String() string { return proto.CompactTextString(m) }
func (*CustomerIdentity) ProtoMessage()    {}
func (*CustomerIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{61}
}

func (m *CustomerIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerIdentity.Unmarshal(m, b)
}
func (m *CustomerIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerIdentity.Marshal(b, m, deterministic)
}
func (m *CustomerIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerIdentity.Merge(m, src)
}
func (m *CustomerIdentity) XXX_Size() int {
	return xxx_messageInfo_CustomerIdentity.Size(m)
}
func (m *CustomerIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerIdentity proto.InternalMessageInfo

func (m *CustomerIdentity) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *CustomerIdentity) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *CustomerIdentity) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CustomerIdentity) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CustomerIdentity) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *CustomerIdentity) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type CustomerIpHistory struct {
	Ip                   []byte               `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CustomerIpHistory) Reset()         { *m = CustomerIpHistory{} }
func (m *CustomerIpHistory) String() string { return proto.CompactTextString(m) }
func (*CustomerIpHistory) ProtoMessage()    {}
func (*CustomerIpHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{62}
}

func (m *CustomerIpHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerIpHistory.Unmarshal(m, b)
}
func (m *CustomerIpHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerIpHistory.Marshal(b, m, deterministic)
}
func (m *CustomerIpHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerIpHistory.Merge(m, src)
}
func (m *CustomerIpHistory) XXX_Size() int {
	return xxx_messageInfo_CustomerIpHistory.Size(m)
}
func (m *CustomerIpHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerIpHistory.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerIpHistory proto.InternalMessageInfo

func (m *CustomerIpHistory) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *CustomerIpHistory) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type CustomerAddressHistory struct {
	Country              string               `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	City                 string               `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	PostalCode           string               `protobuf:"bytes,3,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	State                string               `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CustomerAddressHistory) Reset()         { *m = CustomerAddressHistory{} }
func (m *CustomerAddressHistory) String() string { return proto.CompactTextString(m) }
func (*CustomerAddressHistory) ProtoMessage()    {}
func (*CustomerAddressHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{63}
}

func (m *CustomerAddressHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerAddressHistory.Unmarshal(m, b)
}
func (m *CustomerAddressHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerAddressHistory.Marshal(b, m, deterministic)
}
func (m *CustomerAddressHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerAddressHistory.Merge(m, src)
}
func (m *CustomerAddressHistory) XXX_Size() int {
	return xxx_messageInfo_CustomerAddressHistory.Size(m)
}
func (m *CustomerAddressHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerAddressHistory.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerAddressHistory proto.InternalMessageInfo

func (m *CustomerAddressHistory) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *CustomerAddressHistory) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *CustomerAddressHistory) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *CustomerAddressHistory) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *CustomerAddressHistory) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type CustomerStringValueHistory struct {
	Value                string               `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CustomerStringValueHistory) Reset()         { *m = CustomerStringValueHistory{} }
func (m *CustomerStringValueHistory) String() string { return proto.CompactTextString(m) }
func (*CustomerStringValueHistory) ProtoMessage()    {}
func (*CustomerStringValueHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{64}
}

func (m *CustomerStringValueHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerStringValueHistory.Unmarshal(m, b)
}
func (m *CustomerStringValueHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerStringValueHistory.Marshal(b, m, deterministic)
}
func (m *CustomerStringValueHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerStringValueHistory.Merge(m, src)
}
func (m *CustomerStringValueHistory) XXX_Size() int {
	return xxx_messageInfo_CustomerStringValueHistory.Size(m)
}
func (m *CustomerStringValueHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerStringValueHistory.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerStringValueHistory proto.InternalMessageInfo

func (m *CustomerStringValueHistory) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CustomerStringValueHistory) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type Customer struct {
	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TechEmail      string `protobuf:"bytes,2,opt,name=tech_email,json=techEmail,proto3" json:"tech_email,omitempty"`
	ExternalId     string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Email          string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	EmailVerified  bool   `protobuf:"varint,5,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Phone          string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	PhoneVerified  bool   `protobuf:"varint,7,opt,name=phone_verified,json=phoneVerified,proto3" json:"phone_verified,omitempty"`
	Name           string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Ip             []byte `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip,omitempty"`
	Locale         string `protobuf:"bytes,10,opt,name=locale,proto3" json:"locale,omitempty"`
	AcceptLanguage string `protobuf:"bytes,11,opt,name=accept_language,json=acceptLanguage,proto3" json:"accept_language,omitempty"`
	// @inject_tag: json:"-"
	UserAgent string               `protobuf:"bytes,12,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Address   *OrderBillingAddress `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	Identity  []*CustomerIdentity  `protobuf:"bytes,14,rep,name=identity,proto3" json:"identity,omitempty"`
	// @inject_tag: json:"-"
	IpHistory []*CustomerIpHistory `protobuf:"bytes,15,rep,name=ip_history,json=ipHistory,proto3" json:"ip_history,omitempty"`
	// @inject_tag: json:"-"
	AddressHistory []*CustomerAddressHistory `protobuf:"bytes,16,rep,name=address_history,json=addressHistory,proto3" json:"address_history,omitempty"`
	// @inject_tag: json:"-"
	LocaleHistory []*CustomerStringValueHistory `protobuf:"bytes,17,rep,name=locale_history,json=localeHistory,proto3" json:"locale_history,omitempty"`
	// @inject_tag: json:"-"
	AcceptLanguageHistory []*CustomerStringValueHistory `protobuf:"bytes,18,rep,name=accept_language_history,json=acceptLanguageHistory,proto3" json:"accept_language_history,omitempty"`
	// @inject_tag: json:"metadata"
	Metadata map[string]string `protobuf:"bytes,19,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"-"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: json:"-"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{65}
}

func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (m *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(m, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Customer) GetTechEmail() string {
	if m != nil {
		return m.TechEmail
	}
	return ""
}

func (m *Customer) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *Customer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Customer) GetPhoneVerified() bool {
	if m != nil {
		return m.PhoneVerified
	}
	return false
}

func (m *Customer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Customer) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *Customer) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *Customer) GetAcceptLanguage() string {
	if m != nil {
		return m.AcceptLanguage
	}
	return ""
}

func (m *Customer) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *Customer) GetAddress() *OrderBillingAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Customer) GetIdentity() []*CustomerIdentity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *Customer) GetIpHistory() []*CustomerIpHistory {
	if m != nil {
		return m.IpHistory
	}
	return nil
}

func (m *Customer) GetAddressHistory() []*CustomerAddressHistory {
	if m != nil {
		return m.AddressHistory
	}
	return nil
}

func (m *Customer) GetLocaleHistory() []*CustomerStringValueHistory {
	if m != nil {
		return m.LocaleHistory
	}
	return nil
}

func (m *Customer) GetAcceptLanguageHistory() []*CustomerStringValueHistory {
	if m != nil {
		return m.AcceptLanguageHistory
	}
	return nil
}

func (m *Customer) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Customer) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Customer) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type TokenUserEmailValue struct {
	//@inject_tag: validate:"omitempty,email"
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Verified             bool     `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenUserEmailValue) Reset()         { *m = TokenUserEmailValue{} }
func (m *TokenUserEmailValue) String() string { return proto.CompactTextString(m) }
func (*TokenUserEmailValue) ProtoMessage()    {}
func (*TokenUserEmailValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{66}
}

func (m *TokenUserEmailValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUserEmailValue.Unmarshal(m, b)
}
func (m *TokenUserEmailValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUserEmailValue.Marshal(b, m, deterministic)
}
func (m *TokenUserEmailValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUserEmailValue.Merge(m, src)
}
func (m *TokenUserEmailValue) XXX_Size() int {
	return xxx_messageInfo_TokenUserEmailValue.Size(m)
}
func (m *TokenUserEmailValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUserEmailValue.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUserEmailValue proto.InternalMessageInfo

func (m *TokenUserEmailValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TokenUserEmailValue) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

type TokenUserPhoneValue struct {
	//@inject_tag: validate:"omitempty,phone"
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Verified             bool     `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenUserPhoneValue) Reset()         { *m = TokenUserPhoneValue{} }
func (m *TokenUserPhoneValue) String() string { return proto.CompactTextString(m) }
func (*TokenUserPhoneValue) ProtoMessage()    {}
func (*TokenUserPhoneValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{67}
}

func (m *TokenUserPhoneValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUserPhoneValue.Unmarshal(m, b)
}
func (m *TokenUserPhoneValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUserPhoneValue.Marshal(b, m, deterministic)
}
func (m *TokenUserPhoneValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUserPhoneValue.Merge(m, src)
}
func (m *TokenUserPhoneValue) XXX_Size() int {
	return xxx_messageInfo_TokenUserPhoneValue.Size(m)
}
func (m *TokenUserPhoneValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUserPhoneValue.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUserPhoneValue proto.InternalMessageInfo

func (m *TokenUserPhoneValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TokenUserPhoneValue) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

type TokenUserIpValue struct {
	//@inject_tag: validate:"omitempty,ip"
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenUserIpValue) Reset()         { *m = TokenUserIpValue{} }
func (m *TokenUserIpValue) String() string { return proto.CompactTextString(m) }
func (*TokenUserIpValue) ProtoMessage()    {}
func (*TokenUserIpValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{68}
}

func (m *TokenUserIpValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUserIpValue.Unmarshal(m, b)
}
func (m *TokenUserIpValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUserIpValue.Marshal(b, m, deterministic)
}
func (m *TokenUserIpValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUserIpValue.Merge(m, src)
}
func (m *TokenUserIpValue) XXX_Size() int {
	return xxx_messageInfo_TokenUserIpValue.Size(m)
}
func (m *TokenUserIpValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUserIpValue.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUserIpValue proto.InternalMessageInfo

func (m *TokenUserIpValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TokenUserLocaleValue struct {
	//@inject_tag: validate:"omitempty,alpha,len=2"
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenUserLocaleValue) Reset()         { *m = TokenUserLocaleValue{} }
func (m *TokenUserLocaleValue) String() string { return proto.CompactTextString(m) }
func (*TokenUserLocaleValue) ProtoMessage()    {}
func (*TokenUserLocaleValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{69}
}

func (m *TokenUserLocaleValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUserLocaleValue.Unmarshal(m, b)
}
func (m *TokenUserLocaleValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUserLocaleValue.Marshal(b, m, deterministic)
}
func (m *TokenUserLocaleValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUserLocaleValue.Merge(m, src)
}
func (m *TokenUserLocaleValue) XXX_Size() int {
	return xxx_messageInfo_TokenUserLocaleValue.Size(m)
}
func (m *TokenUserLocaleValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUserLocaleValue.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUserLocaleValue proto.InternalMessageInfo

func (m *TokenUserLocaleValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TokenUserValue struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenUserValue) Reset()         { *m = TokenUserValue{} }
func (m *TokenUserValue) String() string { return proto.CompactTextString(m) }
func (*TokenUserValue) ProtoMessage()    {}
func (*TokenUserValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{70}
}

func (m *TokenUserValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUserValue.Unmarshal(m, b)
}
func (m *TokenUserValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUserValue.Marshal(b, m, deterministic)
}
func (m *TokenUserValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUserValue.Merge(m, src)
}
func (m *TokenUserValue) XXX_Size() int {
	return xxx_messageInfo_TokenUserValue.Size(m)
}
func (m *TokenUserValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUserValue.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUserValue proto.InternalMessageInfo

func (m *TokenUserValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type TokenUser struct {
	Id       string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email    *TokenUserEmailValue  `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone    *TokenUserPhoneValue  `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Name     *TokenUserValue       `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Ip       *TokenUserIpValue     `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
	Locale   *TokenUserLocaleValue `protobuf:"bytes,8,opt,name=locale,proto3" json:"locale,omitempty"`
	Address  *OrderBillingAddress  `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	Metadata map[string]string     `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//@inject_tag: json:"-"
	UserAgent string `protobuf:"bytes,11,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	//@inject_tag: json:"-"
	AcceptLanguage       string   `protobuf:"bytes,12,opt,name=accept_language,json=acceptLanguage,proto3" json:"accept_language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenUser) Reset()         { *m = TokenUser{} }
func (m *TokenUser) String() string { return proto.CompactTextString(m) }
func (*TokenUser) ProtoMessage()    {}
func (*TokenUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{71}
}

func (m *TokenUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenUser.Unmarshal(m, b)
}
func (m *TokenUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenUser.Marshal(b, m, deterministic)
}
func (m *TokenUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenUser.Merge(m, src)
}
func (m *TokenUser) XXX_Size() int {
	return xxx_messageInfo_TokenUser.Size(m)
}
func (m *TokenUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenUser.DiscardUnknown(m)
}

var xxx_messageInfo_TokenUser proto.InternalMessageInfo

func (m *TokenUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TokenUser) GetEmail() *TokenUserEmailValue {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *TokenUser) GetPhone() *TokenUserPhoneValue {
	if m != nil {
		return m.Phone
	}
	return nil
}

func (m *TokenUser) GetName() *TokenUserValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *TokenUser) GetIp() *TokenUserIpValue {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *TokenUser) GetLocale() *TokenUserLocaleValue {
	if m != nil {
		return m.Locale
	}
	return nil
}

func (m *TokenUser) GetAddress() *OrderBillingAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *TokenUser) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *TokenUser) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *TokenUser) GetAcceptLanguage() string {
	if m != nil {
		return m.AcceptLanguage
	}
	return ""
}

type TokenSettingsReturnUrl struct {
	//@inject_tag: validate:"omitempty,url"
	Success string `protobuf:"bytes,1,opt,name=success,proto3" json:"success,omitempty"`
	//@inject_tag: validate:"omitempty,url"
	Fail                 string   `protobuf:"bytes,2,opt,name=fail,proto3" json:"fail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenSettingsReturnUrl) Reset()         { *m = TokenSettingsReturnUrl{} }
func (m *TokenSettingsReturnUrl) String() string { return proto.CompactTextString(m) }
func (*TokenSettingsReturnUrl) ProtoMessage()    {}
func (*TokenSettingsReturnUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{72}
}

func (m *TokenSettingsReturnUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenSettingsReturnUrl.Unmarshal(m, b)
}
func (m *TokenSettingsReturnUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenSettingsReturnUrl.Marshal(b, m, deterministic)
}
func (m *TokenSettingsReturnUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenSettingsReturnUrl.Merge(m, src)
}
func (m *TokenSettingsReturnUrl) XXX_Size() int {
	return xxx_messageInfo_TokenSettingsReturnUrl.Size(m)
}
func (m *TokenSettingsReturnUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenSettingsReturnUrl.DiscardUnknown(m)
}

var xxx_messageInfo_TokenSettingsReturnUrl proto.InternalMessageInfo

func (m *TokenSettingsReturnUrl) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

func (m *TokenSettingsReturnUrl) GetFail() string {
	if m != nil {
		return m.Fail
	}
	return ""
}

type TokenSettingsItem struct {
	//@inject_tag: validate:"required"
	Sku string `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty"`
	//@inject_tag: validate:"required,numeric,gt=0"
	Amount float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	//@inject_tag: validate:"required,alpha,len=3"
	Currency             string   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenSettingsItem) Reset()         { *m = TokenSettingsItem{} }
func (m *TokenSettingsItem) String() string { return proto.CompactTextString(m) }
func (*TokenSettingsItem) ProtoMessage()    {}
func (*TokenSettingsItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{73}
}

func (m *TokenSettingsItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenSettingsItem.Unmarshal(m, b)
}
func (m *TokenSettingsItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenSettingsItem.Marshal(b, m, deterministic)
}
func (m *TokenSettingsItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenSettingsItem.Merge(m, src)
}
func (m *TokenSettingsItem) XXX_Size() int {
	return xxx_messageInfo_TokenSettingsItem.Size(m)
}
func (m *TokenSettingsItem) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenSettingsItem.DiscardUnknown(m)
}

var xxx_messageInfo_TokenSettingsItem proto.InternalMessageInfo

func (m *TokenSettingsItem) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *TokenSettingsItem) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TokenSettingsItem) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type TokenSettings struct {
	//@inject_tag: json:"project_id" validate:"required,hexadecimal,len=24"
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	//@inject_tag: json:"return_url"
	ReturnUrl *TokenSettingsReturnUrl `protobuf:"bytes,3,opt,name=return_url,json=returnUrl,proto3" json:"return_url,omitempty"`
	//@inject_tag: json:"currency" validate:"omitempty,alpha,len=3"
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	//@inject_tag: json:"amount" validate:"omitempty,numeric,gt=0"
	Amount float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	//@inject_tag: json:"payment_method"
	PaymentMethod string `protobuf:"bytes,6,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	//@inject_tag: json:"items"
	Items []*TokenSettingsItem `protobuf:"bytes,7,rep,name=items,proto3" json:"items,omitempty"`
	//@inject_tag: json:"description"
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	//@inject_tag: json:"products_ids"
	ProductsIds []string `protobuf:"bytes,9,rep,name=products_ids,json=productsIds,proto3" json:"products_ids,omitempty"`
	//@inject_tag: json:"metadata"
	Metadata             map[string]string `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TokenSettings) Reset()         { *m = TokenSettings{} }
func (m *TokenSettings) String() string { return proto.CompactTextString(m) }
func (*TokenSettings) ProtoMessage()    {}
func (*TokenSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{74}
}

func (m *TokenSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenSettings.Unmarshal(m, b)
}
func (m *TokenSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenSettings.Marshal(b, m, deterministic)
}
func (m *TokenSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenSettings.Merge(m, src)
}
func (m *TokenSettings) XXX_Size() int {
	return xxx_messageInfo_TokenSettings.Size(m)
}
func (m *TokenSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TokenSettings proto.InternalMessageInfo

func (m *TokenSettings) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *TokenSettings) GetReturnUrl() *TokenSettingsReturnUrl {
	if m != nil {
		return m.ReturnUrl
	}
	return nil
}

func (m *TokenSettings) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TokenSettings) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TokenSettings) GetPaymentMethod() string {
	if m != nil {
		return m.PaymentMethod
	}
	return ""
}

func (m *TokenSettings) GetItems() []*TokenSettingsItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *TokenSettings) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TokenSettings) GetProductsIds() []string {
	if m != nil {
		return m.ProductsIds
	}
	return nil
}

func (m *TokenSettings) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type RevenueDynamicPoint struct {
	//@inject_tag: json:"date"
	Date *RevenueDynamicPointDate `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	//@inject_tag: json:"amount"
	Amount               float64  `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevenueDynamicPoint) Reset()         { *m = RevenueDynamicPoint{} }
func (m *RevenueDynamicPoint) String() string { return proto.CompactTextString(m) }
func (*RevenueDynamicPoint) ProtoMessage()    {}
func (*RevenueDynamicPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{75}
}

func (m *RevenueDynamicPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevenueDynamicPoint.Unmarshal(m, b)
}
func (m *RevenueDynamicPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevenueDynamicPoint.Marshal(b, m, deterministic)
}
func (m *RevenueDynamicPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevenueDynamicPoint.Merge(m, src)
}
func (m *RevenueDynamicPoint) XXX_Size() int {
	return xxx_messageInfo_RevenueDynamicPoint.Size(m)
}
func (m *RevenueDynamicPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_RevenueDynamicPoint.DiscardUnknown(m)
}

var xxx_messageInfo_RevenueDynamicPoint proto.InternalMessageInfo

func (m *RevenueDynamicPoint) GetDate() *RevenueDynamicPointDate {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *RevenueDynamicPoint) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type RevenueDynamicMainData struct {
	//@inject_tag: json:"count"
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	//@inject_tag: json:"total"
	Total float64 `protobuf:"fixed64,2,opt,name=total,proto3" json:"total,omitempty"`
	//@inject_tag: json:"avg"
	Avg                  float64  `protobuf:"fixed64,3,opt,name=avg,proto3" json:"avg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevenueDynamicMainData) Reset()         { *m = RevenueDynamicMainData{} }
func (m *RevenueDynamicMainData) String() string { return proto.CompactTextString(m) }
func (*RevenueDynamicMainData) ProtoMessage()    {}
func (*RevenueDynamicMainData) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{76}
}

func (m *RevenueDynamicMainData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevenueDynamicMainData.Unmarshal(m, b)
}
func (m *RevenueDynamicMainData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevenueDynamicMainData.Marshal(b, m, deterministic)
}
func (m *RevenueDynamicMainData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevenueDynamicMainData.Merge(m, src)
}
func (m *RevenueDynamicMainData) XXX_Size() int {
	return xxx_messageInfo_RevenueDynamicMainData.Size(m)
}
func (m *RevenueDynamicMainData) XXX_DiscardUnknown() {
	xxx_messageInfo_RevenueDynamicMainData.DiscardUnknown(m)
}

var xxx_messageInfo_RevenueDynamicMainData proto.InternalMessageInfo

func (m *RevenueDynamicMainData) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *RevenueDynamicMainData) GetTotal() float64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *RevenueDynamicMainData) GetAvg() float64 {
	if m != nil {
		return m.Avg
	}
	return 0
}

type RevenueDynamicPointDate struct {
	//@inject_tag: json:"year"
	Year int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	//@inject_tag: json:"month,omitempty"
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	//@inject_tag: json:"week,omitempty"
	Week int32 `protobuf:"varint,3,opt,name=week,proto3" json:"week,omitempty"`
	//@inject_tag: json:"day,omitempty"
	Day int32 `protobuf:"varint,4,opt,name=day,proto3" json:"day,omitempty"`
	//@inject_tag: json:"hour,omitempty"
	Hour                 int32    `protobuf:"varint,5,opt,name=hour,proto3" json:"hour,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevenueDynamicPointDate) Reset()         { *m = RevenueDynamicPointDate{} }
func (m *RevenueDynamicPointDate) String() string { return proto.CompactTextString(m) }
func (*RevenueDynamicPointDate) ProtoMessage()    {}
func (*RevenueDynamicPointDate) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{77}
}

func (m *RevenueDynamicPointDate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RevenueDynamicPointDate.Unmarshal(m, b)
}
func (m *RevenueDynamicPointDate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RevenueDynamicPointDate.Marshal(b, m, deterministic)
}
func (m *RevenueDynamicPointDate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevenueDynamicPointDate.Merge(m, src)
}
func (m *RevenueDynamicPointDate) XXX_Size() int {
	return xxx_messageInfo_RevenueDynamicPointDate.Size(m)
}
func (m *RevenueDynamicPointDate) XXX_DiscardUnknown() {
	xxx_messageInfo_RevenueDynamicPointDate.DiscardUnknown(m)
}

var xxx_messageInfo_RevenueDynamicPointDate proto.InternalMessageInfo

func (m *RevenueDynamicPointDate) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *RevenueDynamicPointDate) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *RevenueDynamicPointDate) GetWeek() int32 {
	if m != nil {
		return m.Week
	}
	return 0
}

func (m *RevenueDynamicPointDate) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *RevenueDynamicPointDate) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

// Contain information about accounting payment to merchant by accounting period
type AccountingPayment struct {
	//@inject_tag: json:"success_with_commissions"
	SuccessWithCommissions float64 `protobuf:"fixed64,1,opt,name=SuccessWithCommissions,proto3" json:"SuccessWithCommissions,omitempty"`
	//@inject_tag: json:"success_without_commissions"
	SuccessWithoutCommissions float64 `protobuf:"fixed64,2,opt,name=SuccessWithoutCommissions,proto3" json:"SuccessWithoutCommissions,omitempty"`
	//@inject_tag: json:"total_refund"
	TotalRefund float64 `protobuf:"fixed64,3,opt,name=TotalRefund,proto3" json:"TotalRefund,omitempty"`
	//@inject_tag: json:"total_chargeback"
	TotalChargeback float64 `protobuf:"fixed64,4,opt,name=TotalChargeback,proto3" json:"TotalChargeback,omitempty"`
	//@inject_tag: json:"total_commission"
	TotalCommission      float64  `protobuf:"fixed64,5,opt,name=TotalCommission,proto3" json:"TotalCommission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountingPayment) Reset()         { *m = AccountingPayment{} }
func (m *AccountingPayment) String() string { return proto.CompactTextString(m) }
func (*AccountingPayment) ProtoMessage()    {}
func (*AccountingPayment) Descriptor() ([]byte, []int) {
	return fileDescriptor_76f8da37d8b92239, []int{78}
}

func (m *AccountingPayment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountingPayment.Unmarshal(m, b)
}
func (m *AccountingPayment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountingPayment.Marshal(b, m, deterministic)
}
func (m *AccountingPayment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountingPayment.Merge(m, src)
}
func (m *AccountingPayment) XXX_Size() int {
	return xxx_messageInfo_AccountingPayment.Size(m)
}
func (m *AccountingPayment) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountingPayment.DiscardUnknown(m)
}

var xxx_messageInfo_AccountingPayment proto.InternalMessageInfo

func (m *AccountingPayment) GetSuccessWithCommissions() float64 {
	if m != nil {
		return m.SuccessWithCommissions
	}
	return 0
}

func (m *AccountingPayment) GetSuccessWithoutCommissions() float64 {
	if m != nil {
		return m.SuccessWithoutCommissions
	}
	return 0
}

func (m *AccountingPayment) GetTotalRefund() float64 {
	if m != nil {
		return m.TotalRefund
	}
	return 0
}

func (m *AccountingPayment) GetTotalChargeback() float64 {
	if m != nil {
		return m.TotalChargeback
	}
	return 0
}

func (m *AccountingPayment) GetTotalCommission() float64 {
	if m != nil {
		return m.TotalCommission
	}
	return 0
}

func init() {
	proto.RegisterType((*Name)(nil), "billing.Name")
	proto.RegisterType((*OrderCreateRequest)(nil), "billing.OrderCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.MetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.OtherEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.PrivateMetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderCreateRequest.RawParamsEntry")
	proto.RegisterType((*Project)(nil), "billing.Project")
	proto.RegisterMapType((map[string]string)(nil), "billing.Project.NameEntry")
	proto.RegisterType((*ProjectOrder)(nil), "billing.ProjectOrder")
	proto.RegisterMapType((map[string]string)(nil), "billing.ProjectOrder.NameEntry")
	proto.RegisterType((*MerchantContact)(nil), "billing.MerchantContact")
	proto.RegisterType((*MerchantContactTechnical)(nil), "billing.MerchantContactTechnical")
	proto.RegisterType((*MerchantContactAuthorized)(nil), "billing.MerchantContactAuthorized")
	proto.RegisterType((*MerchantBanking)(nil), "billing.MerchantBanking")
	proto.RegisterType((*MerchantLastPayout)(nil), "billing.MerchantLastPayout")
	proto.RegisterType((*MerchantUser)(nil), "billing.MerchantUser")
	proto.RegisterType((*Merchant)(nil), "billing.Merchant")
	proto.RegisterMapType((map[string]*MerchantPaymentMethod)(nil), "billing.Merchant.PaymentMethodsEntry")
	proto.RegisterType((*SystemNotificationStatuses)(nil), "billing.SystemNotificationStatuses")
	proto.RegisterType((*Notification)(nil), "billing.Notification")
	proto.RegisterType((*OrderPlatformFee)(nil), "billing.OrderPlatformFee")
	proto.RegisterType((*OrderTax)(nil), "billing.OrderTax")
	proto.RegisterType((*OrderBillingAddress)(nil), "billing.OrderBillingAddress")
	proto.RegisterType((*OrderUser)(nil), "billing.OrderUser")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderUser.MetadataEntry")
	proto.RegisterType((*Order)(nil), "billing.Order")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.MetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.PaymentMethodTxnParamsEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.PaymentRequisitesEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.PrivateMetadataEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.ProjectParamsEntry")
	proto.RegisterType((*OrderItem)(nil), "billing.OrderItem")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderItem.MetadataEntry")
	proto.RegisterType((*OrderPaginate)(nil), "billing.OrderPaginate")
	proto.RegisterType((*OrderSimple)(nil), "billing.OrderSimple")
	proto.RegisterMapType((map[string]string)(nil), "billing.OrderSimple.PaymentRequisitesEntry")
	proto.RegisterType((*SimpleItem)(nil), "billing.SimpleItem")
	proto.RegisterType((*OrderSimpleAmountObject)(nil), "billing.OrderSimpleAmountObject")
	proto.RegisterType((*SimpleCurrency)(nil), "billing.SimpleCurrency")
	proto.RegisterType((*Status)(nil), "billing.Status")
	proto.RegisterType((*Currency)(nil), "billing.Currency")
	proto.RegisterType((*PayerData)(nil), "billing.PayerData")
	proto.RegisterType((*PaymentMethodOrder)(nil), "billing.PaymentMethodOrder")
	proto.RegisterType((*PaymentMethodParams)(nil), "billing.PaymentMethodParams")
	proto.RegisterMapType((map[string]string)(nil), "billing.PaymentMethodParams.OtherEntry")
	proto.RegisterType((*PaymentSystem)(nil), "billing.PaymentSystem")
	proto.RegisterType((*FixedPackage)(nil), "billing.FixedPackage")
	proto.RegisterType((*FixedPackages)(nil), "billing.FixedPackages")
	proto.RegisterType((*OrderFee)(nil), "billing.OrderFee")
	proto.RegisterType((*OrderFeePsp)(nil), "billing.OrderFeePsp")
	proto.RegisterType((*OrderFeePaymentSystem)(nil), "billing.OrderFeePaymentSystem")
	proto.RegisterType((*ProjectPaymentMethod)(nil), "billing.ProjectPaymentMethod")
	proto.RegisterType((*CurrencyRate)(nil), "billing.CurrencyRate")
	proto.RegisterType((*PaymentMethod)(nil), "billing.PaymentMethod")
	proto.RegisterType((*Country)(nil), "billing.Country")
	proto.RegisterType((*Vat)(nil), "billing.Vat")
	proto.RegisterType((*Commission)(nil), "billing.Commission")
	proto.RegisterType((*CardExpire)(nil), "billing.CardExpire")
	proto.RegisterType((*SavedCard)(nil), "billing.SavedCard")
	proto.RegisterType((*PaymentFormPaymentMethod)(nil), "billing.PaymentFormPaymentMethod")
	proto.RegisterType((*MerchantPaymentMethodPerTransactionCommission)(nil), "billing.MerchantPaymentMethodPerTransactionCommission")
	proto.RegisterType((*MerchantPaymentMethodCommissions)(nil), "billing.MerchantPaymentMethodCommissions")
	proto.RegisterType((*MerchantPaymentMethodIntegration)(nil), "billing.MerchantPaymentMethodIntegration")
	proto.RegisterType((*MerchantPaymentMethodIdentification)(nil), "billing.MerchantPaymentMethodIdentification")
	proto.RegisterType((*MerchantPaymentMethod)(nil), "billing.MerchantPaymentMethod")
	proto.RegisterType((*RefundPayerData)(nil), "billing.RefundPayerData")
	proto.RegisterType((*RefundOrder)(nil), "billing.RefundOrder")
	proto.RegisterType((*Refund)(nil), "billing.Refund")
	proto.RegisterType((*SystemFee)(nil), "billing.SystemFee")
	proto.RegisterType((*MinAmount)(nil), "billing.MinAmount")
	proto.RegisterType((*FeeSet)(nil), "billing.FeeSet")
	proto.RegisterMapType((map[string]float64)(nil), "billing.FeeSet.MinAmountsEntry")
	proto.RegisterType((*SystemFees)(nil), "billing.SystemFees")
	proto.RegisterType((*SystemFeesList)(nil), "billing.SystemFeesList")
	proto.RegisterType((*AddSystemFeesRequest)(nil), "billing.AddSystemFeesRequest")
	proto.RegisterType((*GetSystemFeesRequest)(nil), "billing.GetSystemFeesRequest")
	proto.RegisterType((*CalculatedFeeItem)(nil), "billing.CalculatedFeeItem")
	proto.RegisterType((*MerchantPaymentMethodHistory)(nil), "billing.MerchantPaymentMethodHistory")
	proto.RegisterType((*CustomerIdentity)(nil), "billing.CustomerIdentity")
	proto.RegisterType((*CustomerIpHistory)(nil), "billing.CustomerIpHistory")
	proto.RegisterType((*CustomerAddressHistory)(nil), "billing.CustomerAddressHistory")
	proto.RegisterType((*CustomerStringValueHistory)(nil), "billing.CustomerStringValueHistory")
	proto.RegisterType((*Customer)(nil), "billing.Customer")
	proto.RegisterMapType((map[string]string)(nil), "billing.Customer.MetadataEntry")
	proto.RegisterType((*TokenUserEmailValue)(nil), "billing.TokenUserEmailValue")
	proto.RegisterType((*TokenUserPhoneValue)(nil), "billing.TokenUserPhoneValue")
	proto.RegisterType((*TokenUserIpValue)(nil), "billing.TokenUserIpValue")
	proto.RegisterType((*TokenUserLocaleValue)(nil), "billing.TokenUserLocaleValue")
	proto.RegisterType((*TokenUserValue)(nil), "billing.TokenUserValue")
	proto.RegisterType((*TokenUser)(nil), "billing.TokenUser")
	proto.RegisterMapType((map[string]string)(nil), "billing.TokenUser.MetadataEntry")
	proto.RegisterType((*TokenSettingsReturnUrl)(nil), "billing.TokenSettingsReturnUrl")
	proto.RegisterType((*TokenSettingsItem)(nil), "billing.TokenSettingsItem")
	proto.RegisterType((*TokenSettings)(nil), "billing.TokenSettings")
	proto.RegisterMapType((map[string]string)(nil), "billing.TokenSettings.MetadataEntry")
	proto.RegisterType((*RevenueDynamicPoint)(nil), "billing.RevenueDynamicPoint")
	proto.RegisterType((*RevenueDynamicMainData)(nil), "billing.RevenueDynamicMainData")
	proto.RegisterType((*RevenueDynamicPointDate)(nil), "billing.RevenueDynamicPointDate")
	proto.RegisterType((*AccountingPayment)(nil), "billing.AccountingPayment")
}

func init() { proto.RegisterFile("billing/billing.proto", fileDescriptor_76f8da37d8b92239) }

var fileDescriptor_76f8da37d8b92239 = []byte{
	// 6072 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x7c, 0x4d, 0x6c, 0x1c, 0x47,
	0x76, 0x30, 0xe6, 0x87, 0xf3, 0xf3, 0x86, 0xc3, 0x21, 0x9b, 0x14, 0xd9, 0xa4, 0x24, 0x8b, 0x1a,
	0xad, 0x25, 0x59, 0xb6, 0x28, 0x2d, 0x25, 0x7b, 0x7f, 0x6c, 0x7f, 0x16, 0x45, 0x99, 0x6b, 0xae,
	0x6d, 0x99, 0x5f, 0x93, 0x56, 0xb2, 0xde, 0xec, 0x36, 0x8a, 0xd3, 0x45, 0xb2, 0x97, 0x33, 0xdd,
	0xbd, 0xdd, 0x3d, 0x14, 0x69, 0x20, 0x40, 0x0e, 0x41, 0x90, 0x00, 0xd9, 0x4b, 0x90, 0xec, 0x31,
	0x40, 0x6e, 0x39, 0xe5, 0x94, 0x00, 0xb9, 0x05, 0x48, 0x90, 0x3d, 0x24, 0x40, 0x2e, 0x7b, 0xc8,
	0x25, 0xa7, 0x04, 0x7b, 0xc8, 0x39, 0xc9, 0x39, 0x41, 0xbd, 0xfa, 0xe9, 0xea, 0x9f, 0x19, 0x72,
	0x28, 0xc3, 0x8b, 0xe4, 0x42, 0x76, 0x55, 0xbd, 0x7a, 0x5d, 0xf5, 0xea, 0xd5, 0xfb, 0xef, 0x81,
	0x2b, 0xfb, 0x6e, 0xbf, 0xef, 0x7a, 0x87, 0x0f, 0xc4, 0xff, 0xb5, 0x20, 0xf4, 0x63, 0xdf, 0xa8,
	0x8b, 0xe6, 0xca, 0x8d, 0x43, 0xdf, 0x3f, 0xec, 0xd3, 0x07, 0xd8, 0xbd, 0x3f, 0x3c, 0x78, 0x10,
	0xbb, 0x03, 0x1a, 0xc5, 0x64, 0x10, 0x70, 0xc8, 0xee, 0x6d, 0xa8, 0x3e, 0x27, 0x03, 0x6a, 0xcc,
	0x40, 0x99, 0x7a, 0x66, 0x69, 0xb5, 0x74, 0xb7, 0x69, 0x95, 0xa9, 0xc7, 0xda, 0xe1, 0xd0, 0x2c,
	0xf3, 0x76, 0x38, 0xec, 0xfe, 0x6d, 0x13, 0x8c, 0xcf, 0x42, 0x87, 0x86, 0x9b, 0x21, 0x25, 0x31,
	0xb5, 0xe8, 0x4f, 0x87, 0x34, 0x8a, 0x8d, 0xeb, 0x00, 0x41, 0xe8, 0xff, 0x84, 0xf6, 0x62, 0xdb,
	0x75, 0xc4, 0xf4, 0xa6, 0xe8, 0xd9, 0x76, 0x8c, 0x6b, 0xd0, 0x8c, 0xdc, 0x43, 0x8f, 0xc4, 0xc3,
	0x90, 0x0a, 0x64, 0x49, 0x87, 0xb1, 0x08, 0x35, 0x32, 0xf0, 0x87, 0x5e, 0x6c, 0x56, 0x56, 0x4b,
	0x77, 0x4b, 0x96, 0x68, 0x19, 0x2b, 0xd0, 0xe8, 0x0d, 0xc3, 0x90, 0x7a, 0xbd, 0x33, 0xb3, 0x8a,
	0x93, 0x54, 0xdb, 0x30, 0xa1, 0x4e, 0x7a, 0x3d, 0x9c, 0x34, 0x85, 0x43, 0xb2, 0x69, 0x2c, 0x43,
	0xc3, 0x67, 0x0b, 0x64, 0x0b, 0xa9, 0xf1, 0x21, 0x6c, 0x6f, 0x3b, 0xc6, 0x2a, 0xb4, 0x1c, 0x1a,
	0xf5, 0x42, 0x37, 0x88, 0x5d, 0xdf, 0x33, 0xeb, 0x38, 0xaa, 0x77, 0x19, 0xaf, 0xc3, 0x4c, 0x40,
	0xce, 0x06, 0xd4, 0x8b, 0xed, 0x01, 0x8d, 0x8f, 0x7c, 0xc7, 0x6c, 0x20, 0x50, 0x5b, 0xf4, 0x7e,
	0x8a, 0x9d, 0x6c, 0xbb, 0xc3, 0xb0, 0x6f, 0x9f, 0xd0, 0xd0, 0x3d, 0x38, 0x33, 0x9b, 0x7c, 0x43,
	0xc3, 0xb0, 0xff, 0x02, 0x3b, 0xe4, 0xb0, 0xe7, 0xc7, 0x6c, 0x18, 0xd4, 0xf0, 0x73, 0xec, 0x30,
	0x6e, 0x40, 0x8b, 0x0d, 0x47, 0xc3, 0x5e, 0x8f, 0x46, 0x91, 0xd9, 0xc2, 0x71, 0x36, 0x63, 0x97,
	0xf7, 0xb0, 0x2d, 0x30, 0x80, 0x03, 0xe2, 0xf6, 0xcd, 0x69, 0xbe, 0x85, 0x61, 0xd8, 0xdf, 0x22,
	0x6e, 0x9f, 0xcd, 0x0d, 0xc8, 0x19, 0x0d, 0x6d, 0x3a, 0x60, 0xa3, 0x6d, 0x3e, 0x17, 0xbb, 0x3e,
	0x1c, 0xa4, 0x00, 0x82, 0x23, 0xdf, 0xa3, 0xe6, 0x8c, 0x06, 0xb0, 0xc3, 0x7a, 0x18, 0xb5, 0x43,
	0x7a, 0xc8, 0xf6, 0xdf, 0xc1, 0x31, 0xd1, 0x62, 0x2f, 0xe5, 0x13, 0xdd, 0xc0, 0x9c, 0xe5, 0x2f,
	0xc5, 0xf6, 0x76, 0x60, 0xbc, 0x07, 0x53, 0x7e, 0x7c, 0x44, 0x43, 0x73, 0x6e, 0xb5, 0x72, 0xb7,
	0xb5, 0x7e, 0x7b, 0x4d, 0x72, 0x59, 0x9e, 0x13, 0xd6, 0x3e, 0x63, 0x80, 0x1f, 0x7a, 0x71, 0x78,
	0x66, 0xf1, 0x49, 0xc6, 0x36, 0x40, 0x48, 0x5e, 0xda, 0x01, 0x09, 0xc9, 0x20, 0x32, 0x0d, 0x44,
	0x71, 0x6f, 0x1c, 0x0a, 0x8b, 0xbc, 0xdc, 0x41, 0x60, 0x8e, 0xa6, 0x19, 0xca, 0x36, 0x5b, 0x23,
	0x43, 0xb5, 0xef, 0x3b, 0x67, 0xe6, 0x3c, 0x5f, 0x63, 0x48, 0x5e, 0x3e, 0xf5, 0x9d, 0x33, 0x63,
	0x09, 0xea, 0x6e, 0x64, 0xff, 0x24, 0xf2, 0x3d, 0x73, 0x61, 0xb5, 0x74, 0xb7, 0x61, 0xd5, 0xdc,
	0xe8, 0xfb, 0x91, 0xef, 0x31, 0x2e, 0xea, 0x13, 0xef, 0x70, 0x48, 0x0e, 0xa9, 0x79, 0x85, 0x73,
	0x91, 0x6c, 0xb3, 0xb1, 0x20, 0xf4, 0x9d, 0x61, 0x2f, 0x8e, 0xcc, 0xc5, 0xd5, 0x0a, 0x1b, 0x93,
	0x6d, 0xe3, 0x43, 0x68, 0x0c, 0x68, 0x4c, 0x1c, 0x12, 0x13, 0x73, 0x09, 0x17, 0xfd, 0xc6, 0xb8,
	0x45, 0x7f, 0x2a, 0x60, 0xf9, 0x9a, 0xd5, 0x54, 0xe3, 0x87, 0x30, 0x1b, 0x84, 0xee, 0x09, 0x89,
	0xa9, 0xad, 0xd0, 0x99, 0x88, 0xee, 0xe1, 0x38, 0x74, 0x3b, 0x7c, 0x4e, 0x1a, 0x6b, 0x27, 0x48,
	0xf7, 0x1a, 0x0b, 0x30, 0x15, 0xfb, 0xc7, 0xd4, 0x33, 0x97, 0x71, 0x63, 0xbc, 0x61, 0xdc, 0x86,
	0xea, 0x30, 0xa2, 0xa1, 0xb9, 0xb2, 0x5a, 0xba, 0xdb, 0x5a, 0x37, 0xd2, 0xaf, 0xf9, 0x3c, 0xa2,
	0xa1, 0x85, 0xe3, 0x2b, 0xdf, 0x06, 0x48, 0x4e, 0xcb, 0x98, 0x85, 0xca, 0x31, 0x3d, 0x13, 0x77,
	0x97, 0x3d, 0x32, 0xec, 0x27, 0xa4, 0x3f, 0x94, 0x37, 0x96, 0x37, 0xbe, 0x5b, 0xfe, 0x76, 0x69,
	0xe5, 0x3d, 0x98, 0x49, 0x1f, 0xd2, 0x44, 0xb3, 0xdf, 0x85, 0x76, 0x6a, 0x5f, 0x13, 0x4d, 0x7e,
	0x0a, 0x0b, 0x45, 0xb4, 0x99, 0x04, 0x47, 0xf7, 0x67, 0x4d, 0xa8, 0xef, 0x70, 0xe1, 0xc4, 0x04,
	0x9c, 0x92, 0x58, 0x65, 0xd7, 0x61, 0xf7, 0x67, 0x40, 0xc3, 0xde, 0x11, 0xf1, 0x50, 0x94, 0xf1,
	0xb9, 0x20, 0xbb, 0xb6, 0x1d, 0x63, 0x0d, 0xaa, 0x1e, 0x19, 0x50, 0xb3, 0x82, 0x87, 0xb8, 0xa2,
	0xa8, 0x2b, 0x10, 0xae, 0x31, 0x31, 0xca, 0x8f, 0x0b, 0xe1, 0xd8, 0x32, 0xdc, 0x01, 0x63, 0x3e,
	0x2e, 0xc2, 0x78, 0xc3, 0x78, 0x13, 0xe6, 0x7a, 0xa4, 0xdf, 0xdf, 0x27, 0xbd, 0x63, 0x5b, 0x09,
	0x39, 0x2e, 0xc9, 0x66, 0xe5, 0xc0, 0xa6, 0x14, 0x76, 0x3a, 0x30, 0x8a, 0xeb, 0x9e, 0xdf, 0x17,
	0xb2, 0x4d, 0x01, 0xef, 0x88, 0x7e, 0xe3, 0x3b, 0xb0, 0xdc, 0x43, 0x56, 0xb2, 0xb9, 0x18, 0x24,
	0xfd, 0xbe, 0xff, 0x92, 0x3a, 0xf6, 0x30, 0xec, 0x47, 0x66, 0x1d, 0x99, 0x7c, 0x91, 0x03, 0x20,
	0x3f, 0x6c, 0xf0, 0xe1, 0xcf, 0xc3, 0x7e, 0xc4, 0xa6, 0x22, 0xb4, 0xed, 0x9c, 0x79, 0x64, 0xe0,
	0xf6, 0x84, 0x04, 0xe3, 0x53, 0x1b, 0x78, 0xab, 0x16, 0x11, 0xe0, 0x19, 0x1f, 0xe7, 0xf2, 0x0c,
	0xa7, 0xbe, 0x0f, 0x57, 0xd3, 0x53, 0x43, 0xea, 0xb8, 0x21, 0xd3, 0x07, 0x38, 0xb9, 0x89, 0x93,
	0x4d, 0x7d, 0xb2, 0x25, 0x00, 0x70, 0xfa, 0x1d, 0xe8, 0xf4, 0xdd, 0x81, 0x1b, 0x47, 0x09, 0x31,
	0xb8, 0xd8, 0x9c, 0xe1, 0xdd, 0x8a, 0x14, 0x6f, 0x81, 0x31, 0x70, 0x3d, 0x5b, 0x0a, 0x69, 0xa1,
	0x37, 0x5a, 0xa8, 0x37, 0x66, 0x07, 0xae, 0xb7, 0xc3, 0x07, 0x36, 0xb8, 0x06, 0x61, 0xd0, 0xe4,
	0x34, 0x0b, 0x3d, 0x2d, 0xa0, 0xc9, 0x69, 0x1a, 0xfa, 0x16, 0xb4, 0xc5, 0x86, 0x51, 0xb8, 0x46,
	0x66, 0x1b, 0xa9, 0x35, 0xcd, 0x3b, 0x51, 0xbc, 0x46, 0xc6, 0x43, 0x58, 0x70, 0x23, 0x5b, 0x4a,
	0x09, 0xbb, 0x77, 0x44, 0x7b, 0xc7, 0xfe, 0x30, 0x46, 0x41, 0xdb, 0xb0, 0x0c, 0x37, 0xda, 0x11,
	0x43, 0x9b, 0x62, 0x84, 0x69, 0x83, 0x88, 0xf6, 0x42, 0x1a, 0xdb, 0x8c, 0x41, 0x3b, 0x42, 0xfb,
	0x61, 0xcf, 0xc7, 0xf4, 0xcc, 0xb8, 0x0f, 0x86, 0x52, 0x85, 0x76, 0x48, 0x7f, 0x3a, 0x74, 0x43,
	0xea, 0xa0, 0x04, 0x6e, 0x58, 0x73, 0x6a, 0xc4, 0x12, 0x03, 0xc6, 0x3d, 0x98, 0x8b, 0xa8, 0xe7,
	0xd8, 0xfa, 0x4a, 0xcd, 0x39, 0x84, 0xee, 0xb0, 0x81, 0xe7, 0xc9, 0x62, 0x19, 0x2c, 0xd3, 0x23,
	0xb8, 0x46, 0x5b, 0xaa, 0x4b, 0x03, 0x17, 0xd0, 0x19, 0x86, 0x7d, 0x5c, 0xe1, 0x86, 0x50, 0x9b,
	0x6b, 0x30, 0xcf, 0x60, 0x83, 0xd0, 0x67, 0x2a, 0x48, 0x92, 0x4c, 0x48, 0x59, 0x86, 0x66, 0x87,
	0x8f, 0x08, 0x92, 0x49, 0xdc, 0xea, 0x98, 0x51, 0x59, 0x2d, 0x28, 0xdc, 0xf2, 0x74, 0x51, 0x69,
	0x3d, 0x84, 0x85, 0x14, 0xac, 0xd4, 0x7c, 0x5c, 0x1c, 0x1b, 0x1a, 0xb8, 0xd4, 0x80, 0x8b, 0x50,
	0x8b, 0x62, 0x12, 0x0f, 0x99, 0x58, 0x2e, 0xdd, 0x9d, 0xb2, 0x44, 0xcb, 0xf8, 0x0e, 0x00, 0xe7,
	0x5d, 0xc7, 0x26, 0xb1, 0xb9, 0x84, 0x02, 0x6e, 0x65, 0x8d, 0x1b, 0x37, 0x6b, 0xd2, 0xb8, 0x59,
	0xdb, 0x93, 0xc6, 0x8d, 0xd5, 0x14, 0xd0, 0x1b, 0x31, 0x9b, 0x3a, 0x0c, 0x1c, 0x39, 0xd5, 0x3c,
	0x7f, 0xaa, 0x80, 0xde, 0x88, 0xd1, 0x2a, 0x50, 0x07, 0x8e, 0x44, 0x5c, 0xc6, 0x55, 0xb5, 0x65,
	0xef, 0x26, 0xeb, 0x5c, 0xf9, 0x16, 0x34, 0xd5, 0xe5, 0x9f, 0x48, 0x1e, 0xfd, 0x6b, 0x05, 0xa6,
	0x85, 0xf8, 0xc0, 0x3b, 0x39, 0xb9, 0x50, 0x7a, 0x94, 0x12, 0x4a, 0x37, 0xb2, 0x42, 0x09, 0xb1,
	0xe6, 0x24, 0x53, 0xc6, 0x0e, 0xa9, 0x8e, 0xb5, 0x43, 0xa6, 0xd2, 0x76, 0x48, 0xee, 0xae, 0xd4,
	0x0a, 0xee, 0x4a, 0x9a, 0xf3, 0xeb, 0x59, 0xce, 0x2f, 0x64, 0xe5, 0xc6, 0x04, 0xac, 0xdc, 0x9c,
	0x88, 0x95, 0x61, 0x14, 0x2b, 0x17, 0x8a, 0xd7, 0x56, 0xb1, 0x78, 0xbd, 0xfc, 0x21, 0xff, 0xbc,
	0x04, 0x9d, 0x4f, 0xc5, 0x89, 0x6d, 0xfa, 0x5e, 0x4c, 0x7a, 0xb1, 0xf1, 0x14, 0x80, 0x0c, 0xe3,
	0x23, 0x3f, 0x74, 0xbf, 0xa4, 0xfc, 0xbc, 0x5b, 0xeb, 0x5d, 0x75, 0x78, 0x19, 0xe8, 0x0d, 0x05,
	0x69, 0x69, 0xb3, 0x8c, 0x0f, 0xa0, 0x19, 0xd3, 0xde, 0x91, 0xe7, 0xf6, 0x48, 0x1f, 0xdf, 0xda,
	0x5a, 0xbf, 0x39, 0x0a, 0xc5, 0x9e, 0x04, 0xb4, 0x92, 0x39, 0xdd, 0x2f, 0xc0, 0x1c, 0x05, 0x66,
	0x18, 0x82, 0xaf, 0xf8, 0x0e, 0x95, 0x42, 0xe3, 0x47, 0x25, 0xb6, 0x88, 0x0d, 0xd6, 0xcb, 0x2d,
	0xce, 0x0a, 0xef, 0xc5, 0x46, 0xf7, 0x25, 0x2c, 0x8f, 0xdc, 0xc5, 0xab, 0x22, 0x47, 0xeb, 0xcd,
	0x8f, 0x5c, 0xb4, 0xe5, 0x85, 0x7f, 0x20, 0xdb, 0xdd, 0xbf, 0xd7, 0xa8, 0xfd, 0x94, 0x78, 0xc7,
	0xae, 0x77, 0x68, 0xdc, 0xd7, 0xfc, 0x09, 0x4e, 0xeb, 0x39, 0x45, 0x28, 0xa9, 0x60, 0x34, 0x17,
	0x43, 0x2e, 0xaf, 0xac, 0x2d, 0x8f, 0xb9, 0x1d, 0x8e, 0x13, 0xb2, 0xeb, 0x52, 0x11, 0x6e, 0x07,
	0x6f, 0x32, 0x19, 0x21, 0xd8, 0xd2, 0xf6, 0x86, 0x83, 0x7d, 0x1a, 0x8a, 0x25, 0xb5, 0x45, 0xef,
	0x73, 0xec, 0x64, 0x3b, 0x89, 0x5e, 0xba, 0x07, 0xd2, 0x6b, 0xe1, 0x0d, 0x86, 0xd6, 0xa1, 0xb1,
	0xb8, 0x47, 0x88, 0x56, 0x34, 0xbb, 0xbf, 0x05, 0x86, 0xdc, 0xc6, 0x27, 0x24, 0x8a, 0x77, 0xc8,
	0x19, 0x53, 0x29, 0x6b, 0x50, 0x65, 0xb2, 0x49, 0xec, 0x62, 0x9c, 0x14, 0x43, 0x38, 0xcd, 0xc3,
	0x2a, 0xeb, 0x1e, 0x56, 0xf7, 0x31, 0x4c, 0x4b, 0xec, 0xcc, 0x2e, 0xcc, 0xc9, 0x9d, 0xc2, 0xd3,
	0xe8, 0xfe, 0x0a, 0xa0, 0x21, 0xa7, 0xe5, 0xa6, 0xbc, 0x21, 0x8c, 0x4f, 0xce, 0x89, 0x57, 0x72,
	0x9c, 0x98, 0xd8, 0x9f, 0x8a, 0xc0, 0x55, 0x8d, 0xc0, 0x6f, 0xc0, 0x2c, 0xe9, 0xc7, 0x34, 0xf4,
	0x48, 0xec, 0x9e, 0x50, 0x1b, 0xc7, 0x39, 0xa9, 0x3a, 0x5a, 0xff, 0x73, 0x71, 0x16, 0x2f, 0xe9,
	0x7e, 0xe4, 0xc6, 0x54, 0x12, 0x4d, 0x34, 0x8d, 0x7b, 0x50, 0x47, 0x9a, 0x87, 0x5c, 0xe8, 0xb4,
	0xd6, 0x67, 0x93, 0x73, 0xe6, 0xfd, 0x96, 0x04, 0xc0, 0x03, 0x89, 0x19, 0x2d, 0x1b, 0xe2, 0x40,
	0x58, 0x83, 0x5d, 0xec, 0x2f, 0xdd, 0x40, 0x08, 0x18, 0xf6, 0xc8, 0x16, 0xdb, 0x73, 0x63, 0x69,
	0x96, 0xe0, 0xb3, 0xce, 0x0d, 0xad, 0x34, 0x37, 0xdc, 0x07, 0x43, 0x3c, 0xda, 0xc4, 0x71, 0x90,
	0x25, 0x89, 0xf4, 0xe5, 0xe6, 0xc4, 0xc8, 0x86, 0x1a, 0x30, 0x1e, 0xc0, 0x3c, 0xf3, 0xc2, 0xa2,
	0x38, 0x24, 0xac, 0x47, 0x72, 0x10, 0xf7, 0xee, 0x0c, 0x7d, 0x48, 0xb0, 0xd1, 0x15, 0xa8, 0xc5,
	0xe4, 0x94, 0xe9, 0x82, 0x19, 0x61, 0xf9, 0x93, 0xd3, 0x6d, 0xc7, 0x78, 0x0c, 0x8d, 0x1e, 0xbf,
	0x66, 0x11, 0x1a, 0x1a, 0xad, 0x75, 0x73, 0x94, 0x28, 0xb0, 0x14, 0xa4, 0xb1, 0x0e, 0xf5, 0x7d,
	0x7e, 0x45, 0xd0, 0xec, 0x28, 0x9a, 0x24, 0xae, 0x90, 0x25, 0x01, 0x35, 0x05, 0x3d, 0x37, 0x46,
	0x41, 0x1b, 0x97, 0x57, 0xd0, 0xf3, 0x93, 0x28, 0xe8, 0x67, 0x30, 0x7b, 0xe0, 0x86, 0x51, 0x9c,
	0x58, 0x7a, 0x31, 0xda, 0x22, 0xe3, 0x11, 0xcc, 0xe0, 0x1c, 0x69, 0x03, 0xc6, 0xc6, 0x37, 0x60,
	0xc6, 0x8d, 0xec, 0x13, 0x12, 0xdb, 0xd4, 0x23, 0xfb, 0x7d, 0xea, 0xa0, 0x81, 0xd2, 0xb0, 0xa6,
	0xdd, 0xe8, 0x05, 0x89, 0x3f, 0xe4, 0x7d, 0xc6, 0x13, 0xb8, 0xee, 0x32, 0x33, 0x60, 0x30, 0x70,
	0xa3, 0x88, 0x1d, 0x56, 0xec, 0xdb, 0x8c, 0x9d, 0xd5, 0xa4, 0x45, 0x9c, 0xb4, 0xec, 0x46, 0x9b,
	0x0a, 0x66, 0xcf, 0x67, 0x6c, 0x2f, 0x31, 0x3c, 0x86, 0xc5, 0x23, 0x12, 0xd9, 0x4a, 0xa3, 0x27,
	0xa1, 0x91, 0x25, 0x9c, 0xba, 0x70, 0x44, 0x22, 0x49, 0xf8, 0x5d, 0x15, 0x25, 0xb9, 0x07, 0x73,
	0x6c, 0x56, 0x10, 0x05, 0xda, 0x04, 0x93, 0x6b, 0xcb, 0x23, 0x12, 0xed, 0x44, 0x41, 0x02, 0xfb,
	0x1e, 0xb4, 0xfa, 0x84, 0x93, 0x83, 0xd9, 0xa6, 0xcb, 0x48, 0x8a, 0xab, 0xb9, 0x53, 0x4d, 0x24,
	0x8a, 0x05, 0xfd, 0x44, 0xba, 0x5c, 0x85, 0xa6, 0x1b, 0xe1, 0x4b, 0xa8, 0x83, 0x4e, 0x64, 0xc3,
	0x6a, 0xb8, 0xd1, 0x2e, 0xb6, 0x8d, 0xe7, 0xd0, 0x49, 0x47, 0x48, 0x22, 0xf3, 0x1a, 0x1a, 0x1d,
	0xaf, 0xe7, 0xd0, 0xaf, 0xed, 0xe8, 0x41, 0x13, 0xe1, 0xcd, 0xcf, 0xa4, 0x22, 0x29, 0x5c, 0x6e,
	0x1e, 0x86, 0x94, 0x22, 0xc6, 0xf8, 0x2c, 0xa0, 0xe6, 0x75, 0x6e, 0x5b, 0xa9, 0xde, 0xbd, 0xb3,
	0x80, 0x1a, 0x6f, 0xc3, 0x52, 0x02, 0x16, 0xb1, 0x3f, 0x27, 0x2e, 0xb1, 0x51, 0x36, 0xbd, 0xc6,
	0x89, 0xa6, 0x86, 0x77, 0xa9, 0x17, 0xbf, 0x70, 0xc9, 0xa7, 0x4c, 0x71, 0xa0, 0x03, 0xe0, 0xf6,
	0xed, 0x38, 0x24, 0x3d, 0xc6, 0xb7, 0x76, 0xdf, 0xf5, 0x8e, 0xcd, 0x1b, 0x5c, 0xb7, 0xb3, 0x91,
	0x3d, 0x31, 0xf0, 0x89, 0xeb, 0x1d, 0xa3, 0x41, 0xf2, 0xc8, 0x4e, 0xde, 0x83, 0xd2, 0x67, 0x95,
	0x4b, 0x9f, 0xe8, 0xd1, 0x86, 0xec, 0x67, 0xd2, 0x67, 0x85, 0xc0, 0x7c, 0xc1, 0xf6, 0x0a, 0x2c,
	0x82, 0xc7, 0xba, 0x45, 0xd0, 0x5a, 0x7f, 0x2d, 0x47, 0xa6, 0x14, 0x1a, 0xdd, 0x62, 0x78, 0x02,
	0x2b, 0xbb, 0x67, 0x51, 0x4c, 0x07, 0x68, 0x08, 0xb9, 0x3d, 0x14, 0x00, 0xbb, 0x78, 0xcf, 0x68,
	0xc4, 0x04, 0xd2, 0x41, 0xe8, 0x0f, 0xf0, 0x55, 0x53, 0x16, 0x3e, 0x33, 0x61, 0x1c, 0xfb, 0xf8,
	0xa2, 0x29, 0xab, 0x1c, 0xfb, 0xdd, 0xff, 0x2a, 0xc3, 0xb4, 0x3e, 0xb9, 0x48, 0xc0, 0xc7, 0x6e,
	0xdc, 0x57, 0xe6, 0x0a, 0x36, 0x98, 0x5c, 0x1b, 0xd0, 0x28, 0x62, 0x4e, 0xab, 0xd0, 0x72, 0xa2,
	0x99, 0x35, 0x44, 0xab, 0x39, 0x43, 0x74, 0x09, 0xea, 0x78, 0x19, 0x5c, 0x47, 0x88, 0xed, 0x1a,
	0x6b, 0x6e, 0x3b, 0x92, 0xa9, 0x70, 0x3f, 0x28, 0xaf, 0x39, 0x53, 0x61, 0x5b, 0x04, 0x6f, 0x42,
	0x4a, 0x1c, 0x14, 0xd8, 0x18, 0xbc, 0xb1, 0x28, 0x61, 0xc6, 0x4d, 0x23, 0x12, 0x1b, 0x46, 0x01,
	0xdd, 0x5a, 0xbf, 0xa5, 0xe8, 0x37, 0x9a, 0x36, 0x96, 0x9a, 0x94, 0x91, 0x47, 0xcd, 0xcb, 0xcb,
	0x23, 0x98, 0x40, 0x1e, 0x75, 0x07, 0x30, 0x8b, 0x26, 0xf7, 0x4e, 0x9f, 0xc4, 0x07, 0x7e, 0x38,
	0xd8, 0xa2, 0xba, 0x0e, 0x66, 0xe4, 0x2f, 0x17, 0x46, 0x39, 0xcb, 0x99, 0x28, 0xe7, 0xeb, 0x30,
	0x43, 0x0f, 0x0e, 0x68, 0x0f, 0x75, 0x61, 0xc8, 0xb4, 0x54, 0x05, 0xe7, 0xb6, 0x55, 0xaf, 0x45,
	0x62, 0xda, 0x3d, 0x80, 0x06, 0xbe, 0x6e, 0x8f, 0x9c, 0x32, 0xb6, 0xc0, 0x5b, 0x24, 0x8c, 0x2a,
	0xf6, 0xcc, 0xfa, 0x70, 0x32, 0x57, 0xfe, 0xf8, 0x7c, 0x99, 0xa0, 0x6b, 0xf7, 0x4b, 0x98, 0xc7,
	0xf7, 0x3c, 0xe5, 0x27, 0xb0, 0x21, 0x94, 0x9d, 0x99, 0xa8, 0x5b, 0xfe, 0x56, 0xa5, 0x5c, 0xa5,
	0xd2, 0x2c, 0x6b, 0x4a, 0xf3, 0x06, 0xb4, 0x02, 0x3f, 0x8a, 0x49, 0xdf, 0xee, 0xf9, 0x8e, 0x64,
	0x30, 0xe0, 0x5d, 0x9b, 0xbe, 0x43, 0x13, 0x8d, 0x5c, 0xd5, 0x34, 0x72, 0xf7, 0x5f, 0x2a, 0xd0,
	0x54, 0x01, 0xac, 0x1c, 0x1f, 0x2f, 0x42, 0xcd, 0xdf, 0x67, 0x9e, 0x8e, 0x78, 0x95, 0x68, 0xb1,
	0x97, 0xd1, 0x53, 0x34, 0x1b, 0xfa, 0x8c, 0x25, 0xc5, 0xcb, 0x64, 0xd7, 0xb6, 0x53, 0x68, 0x83,
	0x28, 0xab, 0x67, 0x4a, 0xb7, 0x41, 0xd9, 0x59, 0xa0, 0x2c, 0xc1, 0xa8, 0xaf, 0x4b, 0x1d, 0xc1,
	0xc5, 0x6d, 0xec, 0x7d, 0x21, 0x3a, 0x13, 0x53, 0xb5, 0xae, 0x9b, 0xaa, 0xcc, 0x83, 0x64, 0x0f,
	0xc9, 0x64, 0xee, 0xe7, 0xb4, 0xb1, 0x57, 0x4d, 0x66, 0xdb, 0x92, 0x56, 0x47, 0xd9, 0x0d, 0xd8,
	0xb6, 0xfa, 0x7e, 0x8f, 0xf4, 0xa9, 0x30, 0x3b, 0x44, 0xcb, 0x78, 0x27, 0x6d, 0x78, 0xb4, 0xd6,
	0xaf, 0xa5, 0x83, 0x7c, 0xe9, 0x03, 0x4a, 0xcc, 0x92, 0xf7, 0xb4, 0x98, 0xe6, 0x34, 0x4a, 0xed,
	0xd5, 0x7c, 0x74, 0x70, 0x64, 0x28, 0xf3, 0x3a, 0x00, 0xf3, 0x1a, 0x52, 0xa1, 0x67, 0xf4, 0x23,
	0xd0, 0x45, 0x7b, 0xa5, 0xb0, 0x5e, 0xf7, 0x9f, 0x4d, 0x98, 0x2a, 0xf6, 0x7d, 0x1f, 0x40, 0x5d,
	0x24, 0x12, 0x72, 0x36, 0xa5, 0xee, 0xdd, 0x5a, 0x12, 0xca, 0xb8, 0x0b, 0xb3, 0x32, 0x17, 0xa1,
	0x12, 0x01, 0xfc, 0xe0, 0x67, 0x02, 0x6d, 0xc2, 0xb6, 0x63, 0xdc, 0x81, 0x8e, 0x84, 0x94, 0x2e,
	0x65, 0x35, 0x05, 0x28, 0x3d, 0xca, 0x4c, 0xe2, 0x60, 0x2a, 0x9f, 0x38, 0x58, 0x87, 0x2b, 0x2a,
	0x01, 0xe2, 0xf5, 0xfc, 0x01, 0x95, 0xc1, 0xa6, 0x1a, 0xde, 0xae, 0x79, 0x99, 0x0b, 0xc1, 0x31,
	0x11, 0x6f, 0xda, 0x86, 0xa5, 0xcc, 0x1c, 0x75, 0xf3, 0xea, 0xa3, 0xdc, 0x93, 0x2b, 0x29, 0x44,
	0x2a, 0x2c, 0xf6, 0x18, 0x16, 0xd5, 0x9e, 0x87, 0xb1, 0xfe, 0xfe, 0x06, 0xbe, 0x7f, 0x41, 0xee,
	0x9c, 0x0f, 0x8a, 0x05, 0x7c, 0x0c, 0x66, 0x76, 0x96, 0x5a, 0x41, 0x73, 0xd4, 0x0a, 0x16, 0xd3,
	0xa8, 0xd4, 0x12, 0x3e, 0x87, 0x65, 0x89, 0x0c, 0x6d, 0x8f, 0x90, 0x47, 0xb2, 0x2f, 0x2a, 0x3d,
	0x25, 0x5a, 0x66, 0x93, 0x58, 0x72, 0xea, 0x46, 0x6c, 0x7c, 0x04, 0xf2, 0x30, 0x64, 0x06, 0xa1,
	0x85, 0x8c, 0x7b, 0x33, 0xcd, 0xb8, 0x92, 0x17, 0xf4, 0xc4, 0x41, 0x3b, 0xd0, 0xfb, 0x8c, 0xa7,
	0xb9, 0xdc, 0x4e, 0x3b, 0x63, 0x17, 0xa5, 0x34, 0x31, 0xe7, 0xaa, 0x4c, 0xe2, 0xe7, 0x6d, 0x58,
	0x4a, 0xe3, 0x48, 0x58, 0x8c, 0x1b, 0xe2, 0x0b, 0x41, 0x0e, 0xc7, 0xb6, 0x63, 0x6c, 0xc0, 0xf5,
	0xec, 0xb4, 0xf4, 0x29, 0x75, 0xf0, 0x94, 0x56, 0xd2, 0x93, 0x53, 0x67, 0xf5, 0x9b, 0x70, 0x63,
	0x04, 0x0a, 0x75, 0x64, 0xb3, 0xa3, 0x8e, 0xec, 0x5a, 0x11, 0x5e, 0x75, 0x70, 0x1f, 0xc0, 0xb5,
	0x0c, 0xe6, 0x34, 0x07, 0xcf, 0xe1, 0xda, 0x96, 0x53, 0x38, 0x52, 0x7c, 0xfc, 0x02, 0x5e, 0x2b,
	0x46, 0xa0, 0x56, 0x66, 0x8c, 0x5a, 0xd9, 0xd5, 0x02, 0xac, 0x6a, 0x61, 0x3f, 0xce, 0xe1, 0xe5,
	0xc4, 0xee, 0xf5, 0xfd, 0xe8, 0xa2, 0x4e, 0xc2, 0x4a, 0xfe, 0x3c, 0x36, 0x71, 0xfa, 0x46, 0xac,
	0xf9, 0x30, 0x0b, 0x63, 0x7c, 0x98, 0x2b, 0x97, 0xb7, 0x19, 0x16, 0x27, 0xf1, 0x61, 0x6e, 0x43,
	0x47, 0x24, 0xb0, 0xe4, 0xd5, 0x11, 0xee, 0x40, 0x9b, 0x27, 0xb2, 0x64, 0xaa, 0xf5, 0x23, 0xb8,
	0xc9, 0x0f, 0xc6, 0x76, 0x3d, 0xf4, 0x06, 0x84, 0xe8, 0x62, 0xd6, 0xad, 0x22, 0xb8, 0x89, 0x67,
	0x76, 0x9d, 0x03, 0x6e, 0x7b, 0x3b, 0x51, 0xb0, 0xa1, 0xa0, 0x14, 0x7d, 0x2d, 0xb8, 0x9d, 0x60,
	0x52, 0x66, 0x5d, 0x11, 0xba, 0x65, 0x44, 0xd7, 0x95, 0xe8, 0xa4, 0xe5, 0x5a, 0x80, 0x73, 0x0f,
	0xee, 0x08, 0x9c, 0xfe, 0x30, 0x1e, 0x8f, 0x74, 0x05, 0x91, 0xde, 0xe2, 0xe0, 0x9f, 0x0d, 0xe3,
	0x31, 0x58, 0x7f, 0x04, 0x6f, 0x69, 0x7b, 0x16, 0x3c, 0xc1, 0x6d, 0xc9, 0x42, 0xd4, 0x57, 0x11,
	0xf5, 0x1d, 0xb5, 0x7d, 0x3e, 0x83, 0x1b, 0x8c, 0x05, 0xe8, 0xf3, 0x37, 0x80, 0x67, 0x42, 0xa5,
	0x52, 0xb8, 0x86, 0x57, 0x3b, 0x7d, 0x03, 0x76, 0x18, 0x84, 0xd4, 0x0f, 0x14, 0x96, 0x33, 0x08,
	0xe2, 0x53, 0x4f, 0xca, 0xab, 0xeb, 0x45, 0x19, 0xcf, 0xb4, 0xac, 0xd9, 0x3b, 0xf5, 0x74, 0xc1,
	0xb5, 0x18, 0x14, 0x0e, 0x1a, 0x7b, 0x60, 0xc8, 0xd7, 0x60, 0xa2, 0x20, 0x72, 0x63, 0x1a, 0x99,
	0x37, 0x32, 0xee, 0x57, 0x0a, 0xbf, 0xa5, 0xe0, 0x38, 0xea, 0xb9, 0x20, 0xdb, 0x6f, 0x7c, 0x17,
	0x66, 0x18, 0x1b, 0x1d, 0x50, 0x75, 0xe3, 0x57, 0x91, 0x6f, 0x17, 0xd2, 0x18, 0xb7, 0x28, 0xdd,
	0x89, 0x02, 0x6b, 0x3a, 0x88, 0x82, 0x2d, 0x2a, 0xaf, 0xfe, 0x07, 0x60, 0x48, 0xe9, 0xac, 0xcd,
	0xbf, 0x99, 0xb9, 0xee, 0x72, 0xbe, 0x25, 0x15, 0x73, 0x82, 0xe0, 0x09, 0xcc, 0xc7, 0xbe, 0x20,
	0xb7, 0x86, 0xa1, 0x3b, 0x12, 0x43, 0xec, 0x23, 0xe5, 0x13, 0x0c, 0x3f, 0x48, 0x68, 0x2f, 0x38,
	0x42, 0xc3, 0xf3, 0x8d, 0x8c, 0xcf, 0xa5, 0x76, 0xa2, 0x73, 0x84, 0xa2, 0x37, 0x6f, 0x26, 0xa8,
	0x6f, 0x41, 0x25, 0x26, 0xa7, 0xe6, 0xeb, 0x45, 0x8b, 0xd9, 0x23, 0xa7, 0x16, 0x1b, 0x65, 0x16,
	0xe4, 0x70, 0xe8, 0x3a, 0xe6, 0x6d, 0x6e, 0x41, 0xb2, 0x67, 0x63, 0x0f, 0x96, 0xe9, 0x69, 0xe0,
	0x86, 0xd4, 0x66, 0xb7, 0xdb, 0x8e, 0x7d, 0x9b, 0x79, 0x01, 0xb6, 0xeb, 0x05, 0xc3, 0xd8, 0xbc,
	0x73, 0xae, 0x54, 0xb8, 0xc2, 0x27, 0x3f, 0x23, 0x31, 0xdd, 0xf3, 0xb7, 0xfc, 0x70, 0xb0, 0xcd,
	0x26, 0x1a, 0x0f, 0x61, 0x21, 0xf6, 0x99, 0xe1, 0x9c, 0xc9, 0x67, 0xbd, 0x89, 0xdc, 0x6e, 0xe0,
	0x58, 0x3a, 0xa3, 0xf5, 0x21, 0x74, 0xc4, 0xa2, 0x6d, 0x69, 0x2f, 0xbe, 0x75, 0x01, 0x7b, 0x71,
	0x66, 0x3f, 0x6d, 0xe0, 0xcb, 0x84, 0xf2, 0xfd, 0xf1, 0x09, 0x65, 0xe3, 0x5d, 0x58, 0x41, 0xe7,
	0x4f, 0x86, 0xbe, 0x98, 0x29, 0x98, 0xa4, 0xb4, 0xd6, 0x50, 0x9a, 0x2d, 0x31, 0x08, 0x81, 0xf8,
	0x19, 0x89, 0x89, 0x4a, 0x6c, 0xe9, 0xb9, 0xf8, 0x07, 0x99, 0x5c, 0xfc, 0x5d, 0x98, 0x72, 0x63,
	0x3a, 0x88, 0xcc, 0x87, 0xc8, 0xeb, 0x99, 0x15, 0x6c, 0xb3, 0x33, 0xe4, 0x00, 0x9a, 0x5b, 0xf3,
	0xcd, 0x91, 0x6e, 0xcd, 0x7a, 0xc6, 0xcb, 0xfa, 0xb6, 0x66, 0x15, 0x3f, 0xc2, 0x17, 0x64, 0xc8,
	0x33, 0xd2, 0x22, 0x7e, 0x5e, 0x90, 0xdc, 0x7f, 0x8c, 0x18, 0x6e, 0xe5, 0xcc, 0x93, 0x0b, 0xe4,
	0xf3, 0x57, 0x9e, 0x80, 0x91, 0xb7, 0x63, 0x26, 0x4a, 0x8f, 0x6f, 0xc3, 0xd5, 0x31, 0x92, 0x65,
	0x22, 0x54, 0xcf, 0x60, 0xb1, 0x58, 0x88, 0xfc, 0xef, 0x4a, 0xf6, 0xff, 0x83, 0x74, 0x1c, 0x19,
	0x9b, 0x5c, 0xd8, 0x71, 0x9c, 0x85, 0x4a, 0x74, 0x3c, 0x14, 0x7e, 0x03, 0x7b, 0x2c, 0xf4, 0x14,
	0xcf, 0xf7, 0x0b, 0x12, 0x7e, 0xac, 0x8d, 0xe4, 0xc7, 0x7a, 0x86, 0x1f, 0x17, 0xa1, 0x86, 0x45,
	0x02, 0x91, 0xd9, 0xc0, 0x7b, 0x20, 0x5a, 0x6c, 0x4d, 0xc3, 0xb0, 0x2f, 0x83, 0xd2, 0xc3, 0xb0,
	0x9f, 0xf2, 0xe7, 0xa0, 0xc8, 0x9f, 0x63, 0x7b, 0x1e, 0xc9, 0xbd, 0x69, 0x3b, 0xa7, 0x75, 0x79,
	0x3b, 0x67, 0x7a, 0x02, 0x3b, 0xe7, 0xd5, 0xdc, 0xc4, 0xff, 0x0f, 0x6d, 0x1e, 0x58, 0x21, 0x87,
	0xae, 0x47, 0x62, 0xf4, 0xd5, 0x7b, 0x2a, 0xa8, 0x32, 0x65, 0xf1, 0x86, 0x71, 0x4f, 0xca, 0x8b,
	0x32, 0x12, 0x25, 0xa3, 0xc9, 0x76, 0xdd, 0x41, 0xd0, 0xa7, 0x42, 0x62, 0x74, 0xff, 0xa3, 0x01,
	0x2d, 0xad, 0x3b, 0xc7, 0x21, 0xf7, 0xb3, 0xfe, 0xe7, 0x7c, 0x12, 0x81, 0xc2, 0x19, 0x28, 0x7e,
	0x94, 0xf7, 0xa9, 0x15, 0xa6, 0x55, 0xd2, 0x85, 0x69, 0x45, 0x7e, 0x69, 0xb5, 0xd0, 0x2f, 0xfd,
	0x26, 0xf0, 0x82, 0x2d, 0x14, 0xa0, 0xc8, 0x55, 0xba, 0xcc, 0x43, 0xfd, 0x87, 0xa2, 0xb3, 0x19,
	0xc8, 0x47, 0xe3, 0x8b, 0x42, 0xd3, 0xa0, 0x86, 0xdb, 0x7f, 0xb3, 0x68, 0xfb, 0x13, 0x1a, 0x08,
	0x69, 0xc7, 0xa9, 0x3e, 0x9a, 0x10, 0x19, 0x87, 0x69, 0x2f, 0xf1, 0x8b, 0x95, 0x05, 0xc7, 0x8c,
	0x7c, 0x11, 0xcd, 0x5b, 0x2d, 0x5a, 0x1a, 0x57, 0x5e, 0x9f, 0xe1, 0x45, 0x54, 0x9e, 0xf3, 0x86,
	0xb0, 0xe5, 0xd8, 0x64, 0xe3, 0x45, 0xe2, 0xee, 0x26, 0xd6, 0x26, 0xa2, 0x6d, 0x5e, 0x10, 0xed,
	0x42, 0x0a, 0xad, 0x70, 0x89, 0x0c, 0x92, 0x33, 0x04, 0xd3, 0x8b, 0x86, 0x0b, 0x62, 0x4f, 0x9b,
	0x8a, 0xa9, 0xa5, 0xdf, 0x51, 0x4e, 0x07, 0xbf, 0x35, 0x9d, 0x84, 0x88, 0xd8, 0xad, 0xbc, 0x90,
	0xeb, 0xa9, 0xdb, 0xc9, 0x5c, 0xd5, 0x8a, 0x7e, 0x03, 0x6f, 0xc2, 0x74, 0xcf, 0xf7, 0x0e, 0xdc,
	0x70, 0xc0, 0x01, 0x66, 0x10, 0xa0, 0xa5, 0xfa, 0x36, 0x30, 0x8e, 0x9f, 0xb8, 0x4a, 0x1d, 0x1c,
	0x6f, 0xf4, 0xa4, 0xf3, 0x93, 0xb7, 0xfa, 0x66, 0x2f, 0x6c, 0xf5, 0x8d, 0x35, 0xb9, 0xe6, 0x5e,
	0xc9, 0xe4, 0x2a, 0x36, 0x28, 0x8d, 0x57, 0x36, 0x28, 0xe7, 0x2f, 0x6e, 0x50, 0x5e, 0x07, 0x38,
	0x21, 0xca, 0xb8, 0x5a, 0x40, 0xb1, 0xdd, 0x3c, 0x21, 0x82, 0x55, 0xbe, 0x1a, 0xb5, 0xd8, 0x7d,
	0x08, 0x90, 0x5c, 0x9a, 0x9c, 0xcc, 0x29, 0x48, 0x3d, 0x77, 0x0f, 0x60, 0x69, 0x04, 0xbb, 0x65,
	0x42, 0xcb, 0x89, 0x92, 0x79, 0x94, 0x09, 0x2d, 0xb7, 0xd6, 0x97, 0x32, 0x57, 0x36, 0x9f, 0xf6,
	0xee, 0x1e, 0xc2, 0x4c, 0x7a, 0xcc, 0x58, 0x86, 0x46, 0xcf, 0x77, 0xa8, 0xed, 0x2a, 0x31, 0x5b,
	0x67, 0xed, 0x6d, 0x2f, 0x36, 0x96, 0x00, 0x1f, 0x6d, 0xf2, 0x48, 0xea, 0x4f, 0xd6, 0xdc, 0x78,
	0x64, 0xdc, 0x54, 0x05, 0x29, 0xec, 0xb5, 0x6d, 0xf5, 0xda, 0xe7, 0x64, 0x40, 0xc5, 0x86, 0x5e,
	0x40, 0x8d, 0xb3, 0xbc, 0xe6, 0x88, 0x97, 0x52, 0x8e, 0x78, 0x51, 0x06, 0x3e, 0xa3, 0x72, 0x2b,
	0x39, 0x95, 0xdb, 0xfd, 0xcf, 0x12, 0x34, 0xbe, 0x92, 0xb5, 0x57, 0x47, 0xae, 0x5d, 0x64, 0x33,
	0x08, 0x86, 0xe0, 0x51, 0x40, 0x63, 0x36, 0x63, 0x03, 0xdb, 0x19, 0xbd, 0x5a, 0xbb, 0xbc, 0x5e,
	0xad, 0x4f, 0x92, 0x73, 0xf8, 0x79, 0x19, 0x9a, 0x4a, 0x35, 0x88, 0x48, 0x72, 0x49, 0x45, 0x92,
	0xb5, 0x18, 0x7d, 0x39, 0x1d, 0xa3, 0x7f, 0xc8, 0x04, 0x09, 0x3e, 0xda, 0xa3, 0x4f, 0xac, 0x25,
	0x40, 0x30, 0xf1, 0x7e, 0x53, 0x44, 0xf5, 0x8b, 0xe9, 0x83, 0x41, 0x7e, 0x91, 0x3f, 0x9f, 0x4a,
	0xf2, 0xe7, 0x2a, 0xaa, 0x5f, 0xd3, 0xf3, 0xec, 0x7a, 0x71, 0x6e, 0x3d, 0x5f, 0x9c, 0x1b, 0xbb,
	0x03, 0xfa, 0xa5, 0xef, 0x51, 0x61, 0xf3, 0xa8, 0x76, 0x12, 0x65, 0x07, 0x3d, 0xca, 0xae, 0x02,
	0xf7, 0x2d, 0xbd, 0x5c, 0xe1, 0xef, 0x4a, 0x60, 0xe4, 0x23, 0x7b, 0x17, 0xb9, 0x73, 0xc6, 0x63,
	0xa8, 0x09, 0x27, 0xbe, 0x92, 0x71, 0x9b, 0x76, 0xd2, 0xb1, 0x00, 0x06, 0x63, 0x09, 0x58, 0xe3,
	0xfd, 0x44, 0x5f, 0x8a, 0x7c, 0x17, 0xa7, 0xd4, 0x62, 0x76, 0xb6, 0x90, 0x85, 0xed, 0x94, 0x2c,
	0x64, 0xbb, 0x38, 0x0c, 0xfd, 0xa1, 0xa4, 0x1e, 0x6f, 0x74, 0xff, 0xa2, 0x9c, 0x49, 0x38, 0x8a,
	0x98, 0x80, 0x09, 0xf5, 0x23, 0xe2, 0x39, 0x7d, 0x1a, 0xca, 0xe4, 0x8b, 0x68, 0x22, 0xfd, 0x68,
	0x38, 0x70, 0x3d, 0x22, 0xeb, 0x37, 0x54, 0x1b, 0x9d, 0x2d, 0x12, 0x45, 0x2f, 0xfd, 0x50, 0xc6,
	0xc6, 0x55, 0x3b, 0x5d, 0x0e, 0x25, 0x81, 0x32, 0xa5, 0xa9, 0x3b, 0x12, 0x38, 0x93, 0x60, 0xa9,
	0xe5, 0x12, 0x2c, 0xef, 0xcb, 0xda, 0xf1, 0x3a, 0xda, 0x22, 0x77, 0xc6, 0x51, 0x30, 0x5f, 0x3c,
	0x7e, 0xf9, 0x1a, 0xe5, 0xee, 0xbf, 0x95, 0xa1, 0x9d, 0xa2, 0xf3, 0x85, 0x4e, 0xfc, 0x1e, 0xd4,
	0x45, 0x89, 0x88, 0x38, 0xf2, 0x82, 0xd2, 0x11, 0xf1, 0x60, 0x3c, 0x85, 0xf9, 0xa2, 0xe0, 0x53,
	0x75, 0x54, 0xb0, 0xd3, 0x20, 0xf9, 0xd0, 0xd3, 0x9b, 0x30, 0xa7, 0xe1, 0x08, 0x68, 0xe8, 0xfa,
	0x8a, 0xd8, 0xc9, 0xc0, 0x0e, 0xf6, 0xa7, 0xa5, 0x4e, 0x6d, 0xac, 0xd4, 0xa9, 0x5f, 0x5e, 0xea,
	0x34, 0x26, 0x91, 0x3a, 0x7f, 0x5c, 0x82, 0xe9, 0x2d, 0xf7, 0x94, 0x3a, 0x3b, 0xa4, 0x77, 0xcc,
	0x6e, 0xed, 0x45, 0x88, 0xac, 0x17, 0x62, 0x55, 0xce, 0x2f, 0xc4, 0x62, 0x97, 0x3d, 0x74, 0x7b,
	0x5c, 0x20, 0x97, 0x2c, 0xde, 0x18, 0x2b, 0x82, 0xbb, 0x1f, 0x43, 0x5b, 0x5f, 0x15, 0xb3, 0x61,
	0xdb, 0x07, 0xac, 0xc3, 0x0e, 0x78, 0x8f, 0x59, 0x42, 0x76, 0x4c, 0x72, 0x49, 0x3a, 0xb8, 0x35,
	0x7d, 0xa0, 0xb5, 0xba, 0xbf, 0x5b, 0x12, 0xf9, 0xd5, 0x2d, 0x4a, 0x8d, 0x27, 0x70, 0x95, 0xeb,
	0xde, 0x14, 0xff, 0x6e, 0xea, 0x75, 0x65, 0x25, 0x6b, 0x1c, 0x88, 0xf1, 0x0e, 0x2c, 0xf2, 0x61,
	0x55, 0x91, 0xa3, 0xeb, 0xe8, 0x92, 0x35, 0x62, 0xb4, 0xfb, 0x57, 0x25, 0xe1, 0xa8, 0x70, 0x9b,
	0xec, 0xd7, 0xb7, 0x12, 0xe3, 0x2d, 0x98, 0x13, 0x68, 0xa3, 0x60, 0x53, 0x3f, 0xc8, 0x92, 0x95,
	0x1f, 0xe8, 0xfe, 0xb2, 0x04, 0x57, 0x0a, 0x8d, 0xc0, 0x5f, 0xe3, 0x0e, 0xb2, 0x6f, 0xe6, 0x0b,
	0xca, 0xec, 0x65, 0x1c, 0x48, 0xf7, 0x17, 0x25, 0x58, 0x50, 0xb1, 0x1a, 0xdd, 0xe3, 0xc9, 0x5e,
	0x80, 0xaf, 0x54, 0x0c, 0x57, 0x47, 0x88, 0xe1, 0xf4, 0xe5, 0x9f, 0x9a, 0xe0, 0xf2, 0x77, 0x7f,
	0xa7, 0x0c, 0xd3, 0xea, 0xd2, 0x31, 0x9d, 0x9c, 0xdd, 0xc0, 0x2d, 0x68, 0xcb, 0xab, 0x68, 0x63,
	0xc5, 0x09, 0xaf, 0x2f, 0x99, 0x96, 0x9d, 0x5b, 0xa1, 0x3f, 0x60, 0x7a, 0x40, 0x01, 0xc5, 0x3e,
	0x6e, 0x66, 0xca, 0x02, 0xd9, 0xb5, 0xe7, 0xab, 0x1a, 0x84, 0xaa, 0x56, 0x83, 0x30, 0xd6, 0x8a,
	0x92, 0x35, 0x8e, 0xb5, 0x0b, 0xd6, 0x38, 0x5e, 0x5e, 0xfe, 0x75, 0xff, 0xb1, 0xaa, 0x54, 0xc5,
	0x88, 0x43, 0x2c, 0x92, 0x62, 0x4a, 0x4f, 0x57, 0x34, 0x3d, 0x9d, 0x92, 0x6d, 0xd5, 0xf3, 0x65,
	0xdb, 0x6b, 0x20, 0x89, 0xe4, 0xd2, 0xc8, 0x9c, 0x5a, 0xad, 0x68, 0x64, 0x73, 0x69, 0x34, 0xe2,
	0x7b, 0x87, 0xda, 0x44, 0xdf, 0x3b, 0xd4, 0x47, 0x7c, 0xef, 0x90, 0x58, 0x37, 0x8d, 0x09, 0xac,
	0x1b, 0x03, 0xaa, 0xdb, 0x3d, 0xdf, 0x13, 0x26, 0x19, 0x3e, 0x17, 0x58, 0x3c, 0x30, 0x89, 0xc5,
	0x23, 0x6b, 0x56, 0x5a, 0x5a, 0xcd, 0x8a, 0x56, 0x4f, 0x1b, 0xd2, 0x43, 0x7a, 0x1a, 0x88, 0xea,
	0x49, 0x59, 0x4f, 0x6b, 0x61, 0x67, 0x9a, 0x85, 0xda, 0x63, 0x55, 0xe2, 0xcc, 0xe5, 0x55, 0x62,
	0x67, 0x12, 0x95, 0xf8, 0x87, 0x65, 0x65, 0x43, 0x5c, 0xc8, 0xfd, 0x58, 0x4f, 0xb9, 0x1f, 0xeb,
	0xba, 0x5f, 0x52, 0xf9, 0x3f, 0xe0, 0x97, 0xfc, 0x7e, 0x19, 0x2a, 0x2f, 0x48, 0xbe, 0x50, 0xf8,
	0x5e, 0xda, 0x23, 0x19, 0x5b, 0xa4, 0xbb, 0x0a, 0xad, 0x68, 0xb8, 0xef, 0xb8, 0x27, 0x6e, 0xa4,
	0x39, 0x7d, 0x5a, 0x17, 0xb3, 0x0c, 0x4f, 0x48, 0x2c, 0xa4, 0x0b, 0x7b, 0x9c, 0x84, 0x14, 0x8d,
	0xcb, 0x93, 0xa2, 0x39, 0x09, 0x29, 0xfe, 0xb2, 0x02, 0x90, 0x14, 0x85, 0x16, 0x50, 0x64, 0x2e,
	0x9b, 0x47, 0x97, 0xdf, 0x7a, 0x74, 0xd2, 0x79, 0x72, 0x27, 0xf3, 0xc1, 0x6d, 0x25, 0xfb, 0xc1,
	0xed, 0x77, 0x73, 0x09, 0xc9, 0xa4, 0x60, 0x55, 0x10, 0x69, 0x29, 0x85, 0x52, 0x5b, 0xd6, 0xeb,
	0x3c, 0x32, 0xa4, 0x4d, 0x98, 0xc2, 0x09, 0xed, 0x20, 0x0a, 0x34, 0xb0, 0x6f, 0x81, 0xc9, 0xb3,
	0x51, 0xf9, 0x52, 0x58, 0x21, 0x9f, 0xae, 0xe0, 0x78, 0xb6, 0x0a, 0x96, 0x11, 0x30, 0x8a, 0x49,
	0x18, 0x63, 0x6e, 0xec, 0x22, 0xbc, 0x84, 0xd0, 0xcf, 0xf2, 0x32, 0xfe, 0xeb, 0x3a, 0xb6, 0x77,
	0x00, 0x36, 0x49, 0xe8, 0x7c, 0x88, 0x49, 0x39, 0x26, 0xf6, 0x07, 0xbe, 0x17, 0x1f, 0x89, 0x83,
	0xe3, 0x0d, 0x26, 0xc2, 0xce, 0x28, 0x09, 0xa5, 0x82, 0x60, 0xcf, 0xdd, 0x2f, 0xa0, 0xb9, 0x4b,
	0x4e, 0xa8, 0xc3, 0x26, 0xe7, 0x0e, 0x7b, 0x16, 0x2a, 0x01, 0xf1, 0x04, 0x3c, 0x7b, 0x34, 0xde,
	0x84, 0x1a, 0xcf, 0xfb, 0x09, 0x9b, 0x38, 0x09, 0xaf, 0x26, 0x6f, 0xb7, 0x04, 0x08, 0xd3, 0xda,
	0xa6, 0x90, 0xa9, 0x5b, 0x7e, 0x38, 0x98, 0x5c, 0x7b, 0x19, 0x50, 0x75, 0x7b, 0xea, 0x2e, 0xe1,
	0xb3, 0x92, 0xc3, 0x55, 0x4d, 0x0e, 0x17, 0x7a, 0xa3, 0x05, 0xd2, 0xb9, 0x56, 0x24, 0x9d, 0x6f,
	0x43, 0xe7, 0x88, 0x44, 0x76, 0xc4, 0xa8, 0x60, 0xf7, 0x48, 0xe8, 0xf0, 0xa8, 0x67, 0xc3, 0x6a,
	0x1f, 0x91, 0x48, 0xd1, 0x26, 0x32, 0x1e, 0x41, 0x4b, 0x87, 0x69, 0x67, 0xb2, 0x7c, 0x0a, 0xd2,
	0x82, 0x48, 0x4d, 0xea, 0xfe, 0x08, 0xee, 0x17, 0x96, 0xd0, 0xee, 0xd0, 0x70, 0x2f, 0x24, 0x5e,
	0xc4, 0xae, 0xbe, 0xef, 0x69, 0x1c, 0x3b, 0x0b, 0x95, 0x03, 0x4a, 0x85, 0x59, 0xc9, 0x1e, 0xc7,
	0xd5, 0x5e, 0x76, 0xff, 0xa4, 0x04, 0xab, 0x85, 0xf8, 0x13, 0x8c, 0x51, 0x01, 0x4a, 0x1b, 0x3a,
	0x01, 0x0d, 0xed, 0x38, 0x59, 0x81, 0x10, 0x6f, 0xef, 0x8c, 0x2f, 0xfc, 0x1d, 0xb5, 0x6a, 0x6b,
	0x26, 0x48, 0x8d, 0x74, 0xff, 0x69, 0xd4, 0xba, 0xb6, 0xbd, 0x98, 0x1e, 0xf2, 0xaf, 0x04, 0x98,
	0x39, 0x26, 0x8d, 0xcc, 0xe4, 0x83, 0x7c, 0x90, 0x5d, 0xdb, 0x68, 0x5d, 0x2a, 0x00, 0x65, 0x5d,
	0x72, 0x12, 0xcc, 0xca, 0x01, 0x65, 0x5d, 0xbe, 0x07, 0x2b, 0x0a, 0x38, 0x6f, 0x93, 0x72, 0x0e,
	0x32, 0x25, 0xc4, 0x66, 0xd6, 0x36, 0x7d, 0x0d, 0xc0, 0x15, 0x4b, 0xa3, 0xdc, 0x82, 0x6d, 0x58,
	0x5a, 0x4f, 0x77, 0x1b, 0x6e, 0x15, 0xef, 0xc7, 0xa1, 0xde, 0x98, 0xd2, 0xe5, 0xa2, 0x18, 0xe9,
	0x9f, 0x95, 0xe1, 0x4a, 0x21, 0x2e, 0x63, 0x37, 0x97, 0xc3, 0xe0, 0x97, 0xec, 0xad, 0xf1, 0xa7,
	0x92, 0x5e, 0x43, 0x36, 0xb9, 0xb1, 0x0d, 0x90, 0x11, 0xab, 0xfa, 0x47, 0xe2, 0xe7, 0x31, 0x8f,
	0xa5, 0x4d, 0x36, 0x3e, 0x86, 0x96, 0x9b, 0x9c, 0x9f, 0xb0, 0xe0, 0xcf, 0xc1, 0xa5, 0x1d, 0xb8,
	0xa5, 0xcf, 0x1e, 0x1b, 0x27, 0xe8, 0xee, 0x42, 0xc7, 0xa2, 0x07, 0x43, 0xcf, 0x49, 0x82, 0x85,
	0xa3, 0x0b, 0x78, 0x45, 0x1c, 0xaf, 0x5c, 0x10, 0xc7, 0xab, 0xe8, 0xd5, 0xb9, 0xdf, 0x84, 0x16,
	0x47, 0x3a, 0x32, 0xb6, 0x86, 0x35, 0x12, 0xe5, 0xa4, 0x46, 0xa2, 0xfb, 0x8b, 0x0a, 0xd4, 0xf8,
	0x9c, 0x02, 0x45, 0x38, 0x85, 0x19, 0x32, 0x71, 0x73, 0x92, 0x94, 0x84, 0xf6, 0x0e, 0x8b, 0x83,
	0x9c, 0x5f, 0xe1, 0x9b, 0x04, 0xc7, 0xab, 0xa9, 0xe0, 0xf8, 0x35, 0xe0, 0xda, 0xc1, 0x0f, 0xb7,
	0x65, 0xc4, 0x25, 0xe9, 0xe0, 0xbf, 0x92, 0x40, 0x22, 0xdf, 0x13, 0x82, 0x4d, 0xb4, 0x52, 0xe6,
	0x7d, 0xfd, 0x7c, 0xf3, 0x3e, 0x89, 0x6c, 0x37, 0xc6, 0x94, 0x98, 0x7d, 0x4d, 0x65, 0xe9, 0xc6,
	0xb7, 0x52, 0x79, 0xc5, 0x56, 0xe6, 0x5b, 0x9f, 0x0c, 0x57, 0xe8, 0xd9, 0xc5, 0xab, 0xd0, 0x8c,
	0x48, 0x9f, 0x46, 0x76, 0x4c, 0x4e, 0x51, 0x82, 0x97, 0xad, 0x06, 0x76, 0xec, 0x91, 0xd3, 0xee,
	0x1f, 0x95, 0xa0, 0xa9, 0xd2, 0x38, 0x8c, 0x97, 0x02, 0x1a, 0xf6, 0xa8, 0x4a, 0x46, 0xc8, 0xa6,
	0xf1, 0x06, 0xcc, 0x8a, 0x47, 0x3b, 0x23, 0x74, 0x3b, 0xa2, 0x5f, 0xb9, 0xe7, 0xd7, 0x01, 0x0e,
	0xdc, 0x53, 0x3b, 0x55, 0xa0, 0xde, 0x3c, 0x70, 0x4f, 0x85, 0xe3, 0x72, 0x13, 0xa6, 0xd9, 0x70,
	0xa6, 0x4e, 0xbd, 0x75, 0xe0, 0x9e, 0x2a, 0xf7, 0xfc, 0x03, 0x68, 0x7e, 0xea, 0x7a, 0x02, 0xfe,
	0x32, 0xb5, 0xee, 0x7f, 0x50, 0x86, 0xda, 0x16, 0xa5, 0xbb, 0x34, 0x36, 0x9e, 0x40, 0x8b, 0xf9,
	0x60, 0x7c, 0x12, 0x77, 0xd2, 0xf4, 0x6f, 0x6c, 0x39, 0xd4, 0x9a, 0x7a, 0x9d, 0x48, 0xa4, 0xc2,
	0x40, 0x75, 0x18, 0xef, 0xc3, 0xac, 0xa6, 0x10, 0xec, 0x9e, 0x1f, 0x49, 0xfb, 0xdb, 0xc8, 0x7c,
	0xce, 0xb0, 0x45, 0xa9, 0xd5, 0x89, 0x75, 0x45, 0x10, 0xc5, 0xc6, 0x07, 0x30, 0x27, 0x3f, 0xf8,
	0xe4, 0xdf, 0x87, 0x31, 0x9d, 0x53, 0x1f, 0x39, 0x7f, 0x36, 0x05, 0xbc, 0x45, 0xe9, 0xca, 0xfb,
	0xd0, 0xc9, 0x2c, 0xef, 0xbc, 0x50, 0x6a, 0x49, 0x0f, 0xa5, 0xfe, 0x5e, 0x19, 0x40, 0xa1, 0x8f,
	0x72, 0xd7, 0xf5, 0x2a, 0x34, 0xb3, 0xf6, 0x6a, 0x63, 0x20, 0x0d, 0xd5, 0xe4, 0xe7, 0x46, 0x2a,
	0xa9, 0x9f, 0x1b, 0xb9, 0x0e, 0xc0, 0x94, 0xbd, 0xbd, 0x1f, 0x12, 0x4f, 0xc6, 0x35, 0x9a, 0xac,
	0xe7, 0x29, 0xeb, 0x30, 0x6e, 0x41, 0xf5, 0x80, 0x52, 0x49, 0xec, 0x4e, 0x86, 0xd8, 0x16, 0x0e,
	0xea, 0x1f, 0x9b, 0xd4, 0x52, 0x1f, 0x9b, 0xbc, 0x42, 0x2c, 0x34, 0x25, 0x3b, 0x1b, 0x19, 0xd9,
	0xb9, 0x05, 0x33, 0x09, 0x1d, 0x3e, 0x71, 0x23, 0xe6, 0x43, 0xb7, 0x92, 0x14, 0x68, 0x24, 0xa2,
	0x8a, 0xf3, 0xf9, 0x43, 0x89, 0x2c, 0x88, 0xd4, 0x73, 0xf7, 0xcf, 0x4b, 0xb0, 0xb0, 0xe1, 0x38,
	0xda, 0xa8, 0x28, 0xee, 0x4c, 0x91, 0xb2, 0x34, 0x92, 0x94, 0xe5, 0x31, 0xa4, 0xac, 0x7c, 0xa5,
	0xa4, 0xec, 0xfe, 0x69, 0x09, 0x16, 0xbe, 0x47, 0xe3, 0xaf, 0x67, 0xa9, 0xa3, 0x64, 0xb5, 0x7e,
	0x51, 0xa7, 0x32, 0x17, 0x35, 0x80, 0xb9, 0x4d, 0xd2, 0xef, 0x0d, 0xfb, 0xec, 0x00, 0xb7, 0x28,
	0x4f, 0xa8, 0x32, 0x01, 0x92, 0x24, 0x7f, 0x4b, 0x42, 0x80, 0xa8, 0x14, 0x2f, 0x13, 0x20, 0x94,
	0x66, 0xc5, 0x50, 0xeb, 0x80, 0xa6, 0x92, 0x9e, 0x0c, 0x44, 0xa5, 0xc4, 0x9a, 0x56, 0xfd, 0x80,
	0xe2, 0x87, 0xa7, 0xdd, 0x7f, 0x2f, 0xc1, 0xb5, 0x42, 0x85, 0xfc, 0x91, 0x1b, 0xc5, 0x7e, 0x78,
	0x36, 0xf9, 0xe7, 0xfb, 0xcf, 0x20, 0x6d, 0x59, 0x08, 0xe3, 0xe4, 0xbc, 0x6f, 0xc5, 0x32, 0xe6,
	0x48, 0x9a, 0xeb, 0xab, 0x93, 0x70, 0xfd, 0xa8, 0xcf, 0xb6, 0xba, 0xbf, 0x2c, 0xc1, 0xec, 0xe6,
	0x30, 0x8a, 0xfd, 0x01, 0x6b, 0x32, 0x63, 0x88, 0x7f, 0xc2, 0xa3, 0xef, 0xa7, 0x94, 0xdb, 0x4f,
	0xda, 0x3b, 0x2d, 0x67, 0xbd, 0x53, 0xe9, 0x67, 0x54, 0xd2, 0x7e, 0x06, 0x97, 0x3e, 0x55, 0x2d,
	0x91, 0xc3, 0x0e, 0x5e, 0x7d, 0x31, 0x23, 0x7c, 0x78, 0xd9, 0x7e, 0x85, 0x70, 0x46, 0xf7, 0xc7,
	0x30, 0xa7, 0x36, 0x15, 0xe8, 0xa7, 0xc6, 0x53, 0xa6, 0xd3, 0x98, 0x32, 0x4d, 0xe3, 0x2f, 0x4f,
	0x82, 0xff, 0xaf, 0x4b, 0xb0, 0x28, 0x5f, 0x20, 0x6a, 0x1d, 0xe5, 0x5b, 0xbe, 0x8e, 0x8f, 0xa5,
	0x5e, 0x25, 0x1c, 0x3c, 0x80, 0x15, 0xb9, 0xf2, 0xdd, 0x38, 0x74, 0xbd, 0xc3, 0x17, 0xec, 0x20,
	0xe4, 0xea, 0xd5, 0x29, 0x95, 0xf4, 0x53, 0x7a, 0x05, 0x4a, 0xfd, 0xaa, 0x0e, 0x0d, 0xf9, 0xbe,
	0xdc, 0xbd, 0x49, 0x7f, 0x70, 0x54, 0xce, 0x7c, 0x70, 0x74, 0xbe, 0xe9, 0xa7, 0xf2, 0xc1, 0xd5,
	0xf1, 0x1f, 0x72, 0x4d, 0x8d, 0xfd, 0x90, 0xab, 0x36, 0xfe, 0x43, 0xae, 0x7a, 0xd1, 0x87, 0x5c,
	0xd2, 0x39, 0x69, 0x68, 0x1e, 0x77, 0xf2, 0x71, 0xd7, 0xf4, 0xd8, 0x8f, 0xbb, 0xee, 0x40, 0x87,
	0xf4, 0x7a, 0x34, 0x88, 0x6d, 0x95, 0x1a, 0xe7, 0x81, 0xd1, 0x19, 0xde, 0xfd, 0x89, 0x4c, 0x90,
	0x5f, 0x07, 0xe0, 0xe5, 0xb6, 0x87, 0x54, 0xfc, 0xaa, 0x4d, 0xd3, 0x6a, 0x62, 0x79, 0x2d, 0xeb,
	0xd0, 0x3f, 0x12, 0x6b, 0x4f, 0xf2, 0x91, 0xd8, 0xdb, 0xd0, 0x70, 0xc5, 0x4d, 0x37, 0x67, 0x50,
	0x67, 0x2c, 0x6b, 0x26, 0x6e, 0x5a, 0x14, 0x58, 0x0a, 0x94, 0x31, 0x81, 0x1b, 0xd8, 0x47, 0x9c,
	0x51, 0xcc, 0x4e, 0xe6, 0xd7, 0x91, 0x72, 0xd7, 0xcd, 0x6a, 0xba, 0xea, 0xe6, 0x7d, 0x04, 0x1d,
	0x59, 0x32, 0x2c, 0xe7, 0xcf, 0x66, 0x8c, 0xac, 0xe2, 0xdb, 0x64, 0xcd, 0x90, 0xf4, 0xed, 0xfa,
	0x3e, 0xcc, 0x70, 0x2a, 0x2a, 0x44, 0x73, 0x99, 0x72, 0xdc, 0xd1, 0xcc, 0x6d, 0xb5, 0xf9, 0x54,
	0x89, 0xeb, 0x87, 0xb0, 0x94, 0x39, 0x07, 0x85, 0xd4, 0xb8, 0x38, 0xd2, 0x2b, 0xe9, 0x43, 0x93,
	0xc8, 0xdf, 0xd5, 0x2a, 0x37, 0xe7, 0x47, 0xec, 0xf5, 0x82, 0x85, 0x9b, 0x0b, 0x97, 0xf7, 0x1e,
	0xae, 0x7c, 0x6d, 0x85, 0x9b, 0xdf, 0x83, 0xf9, 0x3d, 0xff, 0x98, 0x7a, 0xf8, 0x1d, 0x3c, 0xde,
	0x33, 0x94, 0x1c, 0xc5, 0xf2, 0x44, 0x97, 0xfa, 0xe5, 0xb4, 0xd4, 0x4f, 0x21, 0xc2, 0x1f, 0xb4,
	0xbb, 0x2c, 0xa2, 0xbb, 0x30, 0xab, 0x10, 0x6d, 0x07, 0x63, 0xb0, 0x74, 0xdf, 0x82, 0x05, 0x05,
	0xf9, 0x09, 0xb2, 0xc8, 0x38, 0xe8, 0xdb, 0x30, 0xa3, 0xa0, 0xc7, 0xc1, 0xfd, 0xac, 0x0a, 0x4d,
	0x05, 0x98, 0x13, 0x7d, 0xeb, 0xfa, 0x2f, 0x6f, 0xe8, 0x57, 0xb7, 0x80, 0x8a, 0x52, 0xb0, 0xad,
	0x4b, 0x89, 0x55, 0x1d, 0x35, 0x27, 0x21, 0x98, 0x94, 0x67, 0x6f, 0x0a, 0x41, 0x55, 0xcb, 0x94,
	0x87, 0xa5, 0xb7, 0xa0, 0x7e, 0x9c, 0x83, 0x49, 0x30, 0x6e, 0x4e, 0x2f, 0xe7, 0x41, 0x05, 0x15,
	0x51, 0xb8, 0xbd, 0xad, 0x84, 0x1b, 0x8f, 0xd2, 0x5e, 0xcf, 0x83, 0x6b, 0xa4, 0x2c, 0xfa, 0xb0,
	0xb5, 0x79, 0xd9, 0x0f, 0x5b, 0xb3, 0x85, 0xd0, 0xea, 0x85, 0xe3, 0x3e, 0x6c, 0xd5, 0x04, 0x69,
	0x2b, 0x2b, 0x48, 0x0b, 0x04, 0xf2, 0x74, 0x91, 0x40, 0x7e, 0xb5, 0x1b, 0xb2, 0x05, 0x8b, 0xb8,
	0xd2, 0x5d, 0x1a, 0xc7, 0xae, 0x77, 0x18, 0x59, 0x34, 0x1e, 0x86, 0xde, 0xe7, 0x61, 0x9f, 0x99,
	0x0c, 0xf2, 0x37, 0x9a, 0x84, 0xc9, 0x20, 0x9a, 0xf8, 0x1b, 0x00, 0x89, 0x6a, 0xc4, 0xe7, 0xee,
	0x0f, 0x60, 0x2e, 0x85, 0x07, 0xed, 0x61, 0x51, 0xce, 0x5e, 0x4a, 0xca, 0xd9, 0x13, 0x53, 0x7b,
	0xea, 0xc2, 0x3e, 0xf1, 0xdf, 0x54, 0xa0, 0x9d, 0xc2, 0x7d, 0x9e, 0xa1, 0xf7, 0xff, 0x00, 0x42,
	0xdc, 0x86, 0x3d, 0x0c, 0xfb, 0xc2, 0xa8, 0xbd, 0x91, 0x3e, 0x98, 0xdc, 0x76, 0xad, 0x66, 0xa8,
	0x76, 0x3e, 0xee, 0x17, 0x40, 0x47, 0x6d, 0x20, 0xff, 0x13, 0x9e, 0xb5, 0xa2, 0x9f, 0xf0, 0x7c,
	0x28, 0x4b, 0xc4, 0xeb, 0x19, 0x4d, 0x95, 0x23, 0x9e, 0xfc, 0xb4, 0x24, 0x53, 0x79, 0xd8, 0xc8,
	0x17, 0xfb, 0xdf, 0x84, 0x69, 0xf5, 0x3b, 0x61, 0xae, 0xc3, 0x58, 0xb8, 0xc2, 0x40, 0x64, 0xdf,
	0xb6, 0x13, 0x19, 0x4f, 0x72, 0x8c, 0xfa, 0x8d, 0xe2, 0x37, 0x8f, 0x62, 0xd6, 0x57, 0x63, 0xb2,
	0x1e, 0xcc, 0x5b, 0xf4, 0x84, 0x7a, 0x43, 0x2a, 0x7e, 0x85, 0x6f, 0xc7, 0x77, 0x31, 0x13, 0xac,
	0xff, 0x9e, 0xd0, 0xaa, 0x16, 0x12, 0xca, 0xc1, 0x3e, 0x23, 0x31, 0x3d, 0xe7, 0x57, 0x85, 0x5e,
	0xc0, 0x62, 0x7a, 0xe2, 0xa7, 0xc4, 0xf5, 0x9e, 0x89, 0xdf, 0xab, 0x2c, 0xa8, 0xd6, 0xc7, 0x5f,
	0xb1, 0x8c, 0x45, 0x79, 0x44, 0xc9, 0xe2, 0x0d, 0xb6, 0x2d, 0x72, 0x72, 0x28, 0x22, 0x36, 0xec,
	0xb1, 0xfb, 0xdb, 0xb0, 0x34, 0x62, 0x41, 0x2a, 0xfd, 0x22, 0x7e, 0x0c, 0x83, 0x3d, 0x27, 0x89,
	0x1a, 0x5e, 0xaf, 0x90, 0x24, 0x6a, 0x5e, 0x52, 0x7a, 0x2c, 0x2a, 0x14, 0xf0, 0x99, 0xbd, 0xca,
	0x21, 0x9c, 0xc3, 0xa6, 0x2c, 0xf6, 0xc8, 0xa0, 0x8e, 0xfc, 0x61, 0x88, 0xac, 0x35, 0x65, 0xe1,
	0x73, 0xf7, 0xbf, 0x4b, 0x30, 0x97, 0x7c, 0x3c, 0x28, 0x7f, 0x3c, 0xec, 0x1d, 0x58, 0x14, 0x3f,
	0x97, 0xf6, 0x1b, 0x6e, 0x7c, 0xa4, 0x85, 0x77, 0x85, 0xd7, 0x39, 0x62, 0xd4, 0x78, 0x0f, 0x96,
	0xb5, 0x11, 0x7f, 0x18, 0xeb, 0x53, 0x39, 0x21, 0x46, 0x03, 0x30, 0x5e, 0xdc, 0x63, 0x54, 0xe2,
	0x31, 0x3b, 0x41, 0x24, 0xbd, 0xcb, 0xb8, 0x0b, 0x1d, 0x6c, 0x6e, 0x1e, 0x91, 0xf0, 0x90, 0xee,
	0x93, 0xde, 0xb1, 0xf0, 0xa9, 0xb3, 0xdd, 0x09, 0x64, 0x36, 0xe1, 0x97, 0xed, 0x7e, 0xfa, 0xc1,
	0x17, 0xef, 0x1f, 0xba, 0xf1, 0xd1, 0x70, 0x7f, 0xad, 0xe7, 0x0f, 0x1e, 0x04, 0xe4, 0x2c, 0x1a,
	0x06, 0x34, 0x54, 0x0f, 0xf7, 0x05, 0xdb, 0xdc, 0x8f, 0x68, 0x78, 0xc2, 0xfa, 0x8f, 0x0f, 0xf9,
	0x0f, 0x0e, 0xcb, 0x5f, 0x25, 0xde, 0xaf, 0x61, 0xf3, 0xd1, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xf4, 0x55, 0x8b, 0x73, 0xaf, 0x58, 0x00, 0x00,
}
