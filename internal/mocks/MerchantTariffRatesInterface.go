// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import billingpb "github.com/paysuper/paysuper-proto/go/billingpb"
import context "context"
import mock "github.com/stretchr/testify/mock"

// MerchantTariffRatesInterface is an autogenerated mock type for the MerchantTariffRatesInterface type
type MerchantTariffRatesInterface struct {
	mock.Mock
}

// GetBy provides a mock function with given fields: ctx, in
func (_m *MerchantTariffRatesInterface) GetBy(ctx context.Context, in *billingpb.GetMerchantTariffRatesRequest) (*billingpb.GetMerchantTariffRatesResponseItems, error) {
	ret := _m.Called(ctx, in)

	var r0 *billingpb.GetMerchantTariffRatesResponseItems
	if rf, ok := ret.Get(0).(func(context.Context, *billingpb.GetMerchantTariffRatesRequest) *billingpb.GetMerchantTariffRatesResponseItems); ok {
		r0 = rf(ctx, in)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*billingpb.GetMerchantTariffRatesResponseItems)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *billingpb.GetMerchantTariffRatesRequest) error); ok {
		r1 = rf(ctx, in)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCacheKeyForGetBy provides a mock function with given fields: _a0
func (_m *MerchantTariffRatesInterface) GetCacheKeyForGetBy(_a0 *billingpb.GetMerchantTariffRatesRequest) (string, error) {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(*billingpb.GetMerchantTariffRatesRequest) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*billingpb.GetMerchantTariffRatesRequest) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPaymentTariffsBy provides a mock function with given fields: _a0, _a1
func (_m *MerchantTariffRatesInterface) GetPaymentTariffsBy(_a0 context.Context, _a1 *billingpb.GetMerchantTariffRatesRequest) ([]*billingpb.MerchantTariffRatesPayment, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []*billingpb.MerchantTariffRatesPayment
	if rf, ok := ret.Get(0).(func(context.Context, *billingpb.GetMerchantTariffRatesRequest) []*billingpb.MerchantTariffRatesPayment); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*billingpb.MerchantTariffRatesPayment)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *billingpb.GetMerchantTariffRatesRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTariffsSettings provides a mock function with given fields: ctx, in
func (_m *MerchantTariffRatesInterface) GetTariffsSettings(ctx context.Context, in *billingpb.GetMerchantTariffRatesRequest) (*billingpb.MerchantTariffRatesSettings, error) {
	ret := _m.Called(ctx, in)

	var r0 *billingpb.MerchantTariffRatesSettings
	if rf, ok := ret.Get(0).(func(context.Context, *billingpb.GetMerchantTariffRatesRequest) *billingpb.MerchantTariffRatesSettings); ok {
		r0 = rf(ctx, in)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*billingpb.MerchantTariffRatesSettings)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *billingpb.GetMerchantTariffRatesRequest) error); ok {
		r1 = rf(ctx, in)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
