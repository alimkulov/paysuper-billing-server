// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import billing "github.com/paysuper/paysuper-billing-server/pkg/proto/billing"
import mock "github.com/stretchr/testify/mock"

// PriceTableServiceInterface is an autogenerated mock type for the PriceTableServiceInterface type
type PriceTableServiceInterface struct {
	mock.Mock
}

// GetByAmount provides a mock function with given fields: _a0
func (_m *PriceTableServiceInterface) GetByAmount(_a0 float64) (*billing.PriceTable, error) {
	ret := _m.Called(_a0)

	var r0 *billing.PriceTable
	if rf, ok := ret.Get(0).(func(float64) *billing.PriceTable); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*billing.PriceTable)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(float64) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLatest provides a mock function with given fields:
func (_m *PriceTableServiceInterface) GetLatest() (*billing.PriceTable, error) {
	ret := _m.Called()

	var r0 *billing.PriceTable
	if rf, ok := ret.Get(0).(func() *billing.PriceTable); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*billing.PriceTable)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Insert provides a mock function with given fields: _a0
func (_m *PriceTableServiceInterface) Insert(_a0 *billing.PriceTable) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*billing.PriceTable) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// InterpolateByAmount provides a mock function with given fields: _a0, _a1
func (_m *PriceTableServiceInterface) InterpolateByAmount(_a0 *billing.PriceTable, _a1 float64) *billing.PriceTable {
	ret := _m.Called(_a0, _a1)

	var r0 *billing.PriceTable
	if rf, ok := ret.Get(0).(func(*billing.PriceTable, float64) *billing.PriceTable); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*billing.PriceTable)
		}
	}

	return r0
}
